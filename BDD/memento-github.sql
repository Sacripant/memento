# ************************************************************
# Sequel Pro SQL dump
# Version 4541
#
# http://www.sequelpro.com/
# https://github.com/sequelpro/sequelpro
#
# Hôte: Localhost (MySQL 5.5.42)
# Base de données: memento-github
# Temps de génération: 2017-02-17 17:00:35 +0100
# ************************************************************


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


# Affichage de la table adi_notes
# ------------------------------------------------------------

CREATE TABLE `adi_notes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(64) NOT NULL DEFAULT '',
  `type` varchar(8) NOT NULL DEFAULT '',
  `user` varchar(64) DEFAULT '',
  `privs` varchar(22) NOT NULL DEFAULT '1,2,3,4,5,6',
  `visible` tinyint(1) NOT NULL DEFAULT '0',
  `last_mod` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `last_mod_user` varchar(64) NOT NULL DEFAULT '',
  `note` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

LOCK TABLES `adi_notes` WRITE;
/*!40000 ALTER TABLE `adi_notes` DISABLE KEYS */;

INSERT INTO `adi_notes` (`id`, `name`, `type`, `user`, `privs`, `visible`, `last_mod`, `last_mod_user`, `note`)
VALUES
	(1,'content','tab','','1,2,3,4,5,6',0,'0000-00-00 00:00:00','',''),
	(2,'article','embed','','1,2,3,4,5,6',1,'2016-04-29 15:23:06','admin','h3. Num-date_Devis\r\n\r\nGénération de la date et du numéro du Devis (ce champ est généré/modifié automatiquement lorsqu\'une modification est apportée depuis l\'onglet finance du projet).\r\nFormat BDD (%F %R)\r\nYYYY-MM-DD HH:MM\r\n\r\nh3. Répartition\r\n\r\n1-[date de paiement ou mot clé]-[pourcentage]-[date de facture]-[date paiement]\r\n\r\nex :\r\n\r\nbc. 1-acompte-30%-2013/08/01-2013/08/23,\r\n2-livraison-50%-2013/10/01-,\r\n3-garantie-20%-2013/11/10-\r\n\r\nh4. Mot clé\r\n\r\nLes mots clés correspondent aux _snippets text_ correspondants. \r\nMots clé disponibles :\r\n\r\n* acompte\r\n* livraison\r\n* garantie');

/*!40000 ALTER TABLE `adi_notes` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table bot_wtc
# ------------------------------------------------------------

CREATE TABLE `bot_wtc` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `item` varchar(255) NOT NULL,
  `position` varchar(255) NOT NULL,
  `destination` varchar(255) NOT NULL,
  `sections` varchar(255) NOT NULL,
  `class` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

LOCK TABLES `bot_wtc` WRITE;
/*!40000 ALTER TABLE `bot_wtc` DISABLE KEYS */;

INSERT INTO `bot_wtc` (`id`, `item`, `position`, `destination`, `sections`, `class`)
VALUES
	(22,'$(\"p:has(*[name=\'custom_7\'])\")','','','default|printfacture|todo','repartition'),
	(23,'$(\"p:has(*[name=\'custom_5\'])\")','','','default|printfacture|todo',''),
	(21,'$(\"p:has(*[name=\'custom_8\'])\")','','','default|printfacture|todo','taxe'),
	(20,'$(\"p:has(*[name=\'custom_2\'])\")','','','','etat'),
	(19,'$(\"p:has(*[name=\'custom_4\'])\")','','','default|printfacture|projet',''),
	(18,'$(\"p:has(*[name=\'custom_3\'])\")','','','default|printfacture|projet',''),
	(17,'$(\"p:has(*[name=\'custom_1\'])\")','','','default|printfacture|projet',''),
	(15,'$(\"#custom_field_group\")','insertAfter','$(\".body\")','',''),
	(16,'$(\".section\")','insertBefore','$(\".title\")','',''),
	(24,'$(\"p:has(*[name=\'custom_6\'])\")','','','default|printfacture|todo',''),
	(25,'$(\"#write-sort\")','','','default|printfacture|projet',''),
	(26,'$(\"#comments_group\")','','','default|printfacture|todo',''),
	(27,'$(\"p:has(*[name=\'custom_9\'])\")','','','default|printfacture|projet','parent'),
	(28,'$(\"p:has(*[name=\'custom_11\'])\")','','','','total_HT disabled');

/*!40000 ALTER TABLE `bot_wtc` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table custom_fields
# ------------------------------------------------------------

CREATE TABLE `custom_fields` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL DEFAULT '',
  `value` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  KEY `name` (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

LOCK TABLES `custom_fields` WRITE;
/*!40000 ALTER TABLE `custom_fields` DISABLE KEYS */;

INSERT INTO `custom_fields` (`id`, `name`, `value`)
VALUES
	(1,'custom_1_set','mes_projets.php'),
	(25,'custom_2_set','Terminé'),
	(24,'custom_2_set','En pause'),
	(23,'custom_2_set','En cours'),
	(22,'custom_2_set','Programmé'),
	(13,'custom_6_set','€'),
	(14,'custom_6_set','Fcfa'),
	(21,'custom_2_set','Non programmé'),
	(26,'custom_2_set','Rejeté'),
	(38,'custom_8_set','5.5'),
	(37,'custom_8_set','off'),
	(39,'custom_8_set','{19.6}');

/*!40000 ALTER TABLE `custom_fields` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table mck_snippet
# ------------------------------------------------------------

CREATE TABLE `mck_snippet` (
  `snipID` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `snipTitle` varchar(255) CHARACTER SET utf8 NOT NULL,
  `snipBody` mediumtext CHARACTER SET utf8 NOT NULL,
  `snipBody_html` mediumtext CHARACTER SET utf8 NOT NULL,
  `snipTextile` int(2) NOT NULL DEFAULT '1',
  `snipLastMod` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `snipStatus` int(2) NOT NULL DEFAULT '1',
  `snipAuthorID` varchar(64) CHARACTER SET utf8 NOT NULL,
  `snipLang` varchar(16) CHARACTER SET utf8 NOT NULL,
  PRIMARY KEY (`snipID`),
  FULLTEXT KEY `searching` (`snipBody`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_esperanto_ci;

LOCK TABLES `mck_snippet` WRITE;
/*!40000 ALTER TABLE `mck_snippet` DISABLE KEYS */;

INSERT INTO `mck_snippet` (`snipID`, `snipTitle`, `snipBody`, `snipBody_html`, `snipTextile`, `snipLastMod`, `snipStatus`, `snipAuthorID`, `snipLang`)
VALUES
	(1,'acompte','Acompte de \r\n<strong>\r\n   <txp:variable name=\"pourcentage-acompte\" />\r\n</strong>\r\n à la signature du devis.','Acompte de \r\n<strong>\r\n   <txp:variable name=\"pourcentage-acompte\" />\r\n</strong>\r\n à la signature du devis.',0,'2012-11-16 10:05:49',4,'admin','fr-fr'),
	(2,'livraison','<strong>\r\n   <txp:variable name=\"pourcentage-livraison\" />\r\n</strong> \r\nà la livraison de la prestation.','<strong>\r\n   <txp:variable name=\"pourcentage-livraison\" />\r\n</strong> \r\nà la livraison de la prestation.',0,'2012-10-19 10:26:18',4,'admin','fr-fr'),
	(3,'garantie','<strong>\r\n   <txp:variable name=\"pourcentage-garantie\" />\r\n</strong>\r\n1 mois après la date de livraison\r\n(période de garantie).','<strong>\r\n   <txp:variable name=\"pourcentage-garantie\" />\r\n</strong>\r\n1 mois après la date de livraison\r\n(période de garantie).',0,'2012-07-31 22:55:53',4,'admin','fr-fr'),
	(4,'rib','Nom Banque — Localité Banque\r\nVotre nom — Votre adresse\r\n\r\n*IBAN*\r\nFRXX XXXX XXXX XXXX XXXX XXXX XXX\r\n\r\n*BIC* XXXXXXXXXXX','	<p>Nom Banque — Localité Banque<br />\nVotre nom — Votre adresse</p>\n\n	<p><strong><span class=\"caps\">IBAN</span></strong><br />\n<span class=\"caps\">FRXX</span> <span class=\"caps\">XXXX</span> <span class=\"caps\">XXXX</span> <span class=\"caps\">XXXX</span> <span class=\"caps\">XXXX</span> <span class=\"caps\">XXXX</span> <span class=\"caps\">XXX</span></p>\n\n	<p><strong><span class=\"caps\">BIC</span></strong> <span class=\"caps\">XXXXXXXXXXX</span></p>',1,'2015-11-23 16:39:32',4,'admin','fr-fr');

/*!40000 ALTER TABLE `mck_snippet` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table smd_bio
# ------------------------------------------------------------

CREATE TABLE `smd_bio` (
  `user_ref` varchar(64) NOT NULL DEFAULT '',
  `societe` varchar(255) DEFAULT NULL,
  `tel_fixe` varchar(255) DEFAULT NULL,
  `tel_mobile` varchar(255) DEFAULT NULL,
  `skype` varchar(255) DEFAULT NULL,
  `adresse_rue` varchar(255) DEFAULT NULL,
  `adresse_quartier` varchar(255) DEFAULT NULL,
  `adresse_cp` varchar(10) DEFAULT NULL,
  `adresse_ville` varchar(255) DEFAULT NULL,
  `website` text,
  `type` mediumtext,
  `url` varchar(255) DEFAULT NULL,
  `adresse_pays` varchar(255) DEFAULT NULL,
  `form_juridique` varchar(255) DEFAULT NULL,
  UNIQUE KEY `user_ref` (`user_ref`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 PACK_KEYS=1;

LOCK TABLES `smd_bio` WRITE;
/*!40000 ALTER TABLE `smd_bio` DISABLE KEYS */;

INSERT INTO `smd_bio` (`user_ref`, `societe`, `tel_fixe`, `tel_mobile`, `skype`, `adresse_rue`, `adresse_quartier`, `adresse_cp`, `adresse_ville`, `website`, `type`, `url`, `adresse_pays`, `form_juridique`)
VALUES
	('admin','Ma société','+33 1','+33 6','','votre adresse','quartier','CP','Ville','http://www.masociete.com','particulier','http://www.url.com',NULL,NULL),
	('client','Client société','+33 1','+33 6','','Adresse de votre client','quartier','CP','Ville','http://www.clienturl.com','particulier','http://www.url.com','France','');

/*!40000 ALTER TABLE `smd_bio` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table smd_bio_meta
# ------------------------------------------------------------

CREATE TABLE `smd_bio_meta` (
  `id` int(4) NOT NULL AUTO_INCREMENT,
  `title` varchar(64) DEFAULT '',
  `name` varchar(64) NOT NULL DEFAULT '',
  `type` set('text','number','range','list','multilist','radio','yesnoradio','checkbox','textarea','image','email','url','date','month','week','time','datetime') NOT NULL DEFAULT 'text',
  `size` varchar(10) DEFAULT '0',
  `coltype` set('varchar','varbinary','tinytext','text','mediumtext','longtext','date','time','datetime','timestamp','int','tinyint','smallint','mediumint','float','double') NOT NULL DEFAULT 'varchar',
  `colsize` smallint(4) DEFAULT '0',
  `val` text,
  `position` varchar(16) DEFAULT '',
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

LOCK TABLES `smd_bio_meta` WRITE;
/*!40000 ALTER TABLE `smd_bio_meta` DISABLE KEYS */;

INSERT INTO `smd_bio_meta` (`id`, `title`, `name`, `type`, `size`, `coltype`, `colsize`, `val`, `position`)
VALUES
	(1,'Société','societe','text','35','varchar',255,'','10'),
	(2,'Tél. fixe','tel_fixe','text','25','varchar',255,'+221 33','20'),
	(3,'Mobile','tel_mobile','text','25','varchar',255,'+221 77','30'),
	(4,'Pseudo skype','skype','text','25','varchar',255,'','40'),
	(6,'Rue','adresse_rue','text','50','varchar',255,'','50'),
	(7,'Quartier','adresse_quartier','text','25','varchar',255,'','51'),
	(8,'Code Postale','adresse_cp','text','10','varchar',10,'','52'),
	(9,'Ville','adresse_ville','text','25','varchar',255,'','53'),
	(11,'Website','website','url','25','text',255,'http://www.','45'),
	(12,'Type','type','list','','mediumtext',0,'Particulier, Entreprise','05'),
	(13,'Url','url','text','25','varchar',255,'http://www','45'),
	(14,'Pays','adresse_pays','text','25','varchar',255,'','54'),
	(15,'Forme Juridique','form_juridique','text','25','varchar',255,'','15');

/*!40000 ALTER TABLE `smd_bio_meta` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table textpattern
# ------------------------------------------------------------

CREATE TABLE `textpattern` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `Posted` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `Expires` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `AuthorID` varchar(64) NOT NULL DEFAULT '',
  `LastMod` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `LastModID` varchar(64) NOT NULL DEFAULT '',
  `Title` varchar(255) NOT NULL DEFAULT '',
  `Title_html` varchar(255) NOT NULL DEFAULT '',
  `Body` mediumtext NOT NULL,
  `Body_html` mediumtext NOT NULL,
  `Excerpt` text NOT NULL,
  `Excerpt_html` mediumtext NOT NULL,
  `Image` varchar(255) NOT NULL DEFAULT '',
  `Category1` varchar(128) NOT NULL DEFAULT '',
  `Category2` varchar(128) NOT NULL DEFAULT '',
  `Annotate` int(2) NOT NULL DEFAULT '0',
  `AnnotateInvite` varchar(255) NOT NULL DEFAULT '',
  `comments_count` int(8) NOT NULL DEFAULT '0',
  `Status` int(2) NOT NULL DEFAULT '4',
  `textile_body` int(2) NOT NULL DEFAULT '1',
  `textile_excerpt` int(2) NOT NULL DEFAULT '1',
  `Section` varchar(128) NOT NULL DEFAULT '',
  `override_form` varchar(255) NOT NULL DEFAULT '',
  `Keywords` varchar(255) NOT NULL DEFAULT '',
  `url_title` varchar(255) NOT NULL DEFAULT '',
  `custom_1` varchar(255) NOT NULL DEFAULT '',
  `custom_2` varchar(255) NOT NULL DEFAULT '',
  `custom_3` varchar(255) NOT NULL DEFAULT '',
  `custom_4` varchar(255) NOT NULL DEFAULT '',
  `custom_5` varchar(255) NOT NULL DEFAULT '',
  `custom_6` varchar(255) NOT NULL DEFAULT '',
  `custom_7` varchar(255) NOT NULL DEFAULT '',
  `custom_8` varchar(255) NOT NULL DEFAULT '',
  `custom_9` varchar(255) NOT NULL DEFAULT '',
  `custom_10` varchar(255) NOT NULL DEFAULT '',
  `uid` varchar(32) NOT NULL DEFAULT '',
  `feed_time` date NOT NULL DEFAULT '0000-00-00',
  `custom_11` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `categories_idx` (`Category1`(10),`Category2`(10)),
  KEY `Posted` (`Posted`),
  KEY `section_status_idx` (`Section`,`Status`),
  KEY `Expires_idx` (`Expires`),
  KEY `author_idx` (`AuthorID`),
  KEY `url_title_idx` (`url_title`),
  FULLTEXT KEY `searching` (`Title`,`Body`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 PACK_KEYS=1;

LOCK TABLES `textpattern` WRITE;
/*!40000 ALTER TABLE `textpattern` DISABLE KEYS */;

INSERT INTO `textpattern` (`ID`, `Posted`, `Expires`, `AuthorID`, `LastMod`, `LastModID`, `Title`, `Title_html`, `Body`, `Body_html`, `Excerpt`, `Excerpt_html`, `Image`, `Category1`, `Category2`, `Annotate`, `AnnotateInvite`, `comments_count`, `Status`, `textile_body`, `textile_excerpt`, `Section`, `override_form`, `Keywords`, `url_title`, `custom_1`, `custom_2`, `custom_3`, `custom_4`, `custom_5`, `custom_6`, `custom_7`, `custom_8`, `custom_9`, `custom_10`, `uid`, `feed_time`, `custom_11`)
VALUES
	(1,'2013-06-23 15:54:11','0000-00-00 00:00:00','client','2016-04-29 15:19:20','admin','Mon premier projet','','Exemple de projet. Avec quelques taches.','	<p>Exemple de projet. Avec quelques taches.</p>','','','','','',1,'Commentaire',1,4,1,1,'projet','','','welcome-to-your-site','1','En cours','11295','','45','€','1-acompte-30%-2013/08/01-2013/09/01,\r\n2-livraison-50%-2013/10/01-2013/10/31,\r\n3-garantie-20%-2013/11/01-','19.6','','2014-10-25 13:37','577bbb3a183b2ced23806487b931f883','2013-06-23','11295'),
	(2,'2013-06-23 00:00:01','2013-07-01 23:59:59','admin','2013-08-05 13:30:09','admin','Logo, Premières recherches','','','','','','','crea-graphique','',0,'Laisser un commentaire',0,4,0,0,'todo','','','logo-premieres-recherches','1','En cours','24','0.1','','','','','','','b5f31f85a5f2d654f8733178f2ead829','2013-06-23',''),
	(3,'2013-06-23 16:14:48','0000-00-00 00:00:00','admin','2013-06-23 16:14:48','admin','Logo, développement de la piste retenue','','','','','','','crea-graphique','',0,'Laisser un commentaire',0,4,0,0,'todo','','','logo-developpement-de-la-piste-retenue','1','Non programmé','24','','','','','','','','5c27976edfb09c21963af9012485f13f','2013-06-23',''),
	(4,'2013-06-23 16:14:48','0000-00-00 00:00:00','admin','2013-06-23 16:14:48','admin','Logo, déclinaison N/B CMJN RVB, …','','','','','','','crea-graphique','',0,'Laisser un commentaire',0,4,0,0,'todo','','','logo-declinaison-n-b-cmjn-rvb','1','Non programmé','8','','','','','','','','ffb4505900faec7b79dbcebe680737b7','2013-06-23',''),
	(5,'2013-06-23 16:14:48','0000-00-00 00:00:00','admin','2013-06-23 16:14:48','admin','Logo, finalisation','','','','','','','crea-graphique','',0,'Laisser un commentaire',0,4,0,0,'todo','','','logo-finalisation','1','Non programmé','8','','','','','','','','27cf445eff03ce9867a6794a52bec7da','2013-06-23',''),
	(6,'2013-06-23 16:14:48','0000-00-00 00:00:00','admin','2013-06-23 16:14:48','admin','Logo : déclinaison sur supports de communication','','Papeterie, Carte de visite, etc.','Papeterie, Carte de visite, etc.','','','','crea-graphique','',0,'Laisser un commentaire',0,4,0,0,'todo','','','logo-declinaison-sur-supports-de-communication','1','Non programmé','32','','','','','','','','c9f226f486ee2267f2c0198d9d38670f','2013-06-23',''),
	(7,'2013-06-23 16:14:48','0000-00-00 00:00:00','admin','2013-06-23 16:14:48','admin','Charte graphique print et web','','','','','','','crea-graphique','',0,'Laisser un commentaire',0,4,0,0,'todo','','','charte-graphique-print-et-web','1','Non programmé','24','','','','','','','','519003a16f3eb9ea6ef09d0dcbdbd1b3','2013-06-23',''),
	(8,'2013-07-01 00:00:01','2013-07-02 23:59:59','admin','2013-07-25 13:24:09','admin','Arborescence du site','','','','','','','conception','',0,'Laisser un commentaire',0,4,0,0,'todo','','','arborescence-du-site','1','Programmé','8','','','','','','','','cfd8fc15c6d817a0b99ad73c7aa7962f','2013-06-23',''),
	(9,'2013-06-23 16:14:48','0000-00-00 00:00:00','admin','2013-06-23 16:14:48','admin','Mockup des pages gabarits','','','','','','','conception','',0,'Laisser un commentaire',0,4,0,0,'todo','','','mockup-des-pages-gabarits','1','Non programmé','16','','','','','','','','a7a26b3ac7d29b165ae9f53312791340','2013-06-23',''),
	(10,'2013-06-23 16:14:48','0000-00-00 00:00:00','admin','2013-06-23 16:14:48','admin','prototypage des pages gabarits','','','','','','','conception','',0,'Laisser un commentaire',0,4,0,0,'todo','','','prototypage-des-pages-gabarits','1','Non programmé','32','','','','','','','','d31b3240dd38c82dd41fd76fa9d7f277','2013-06-23',''),
	(11,'2013-06-23 16:14:48','0000-00-00 00:00:00','admin','2013-06-23 16:14:48','admin','Maquettage web, première(s) proposition(s)','','','','','','','webdesign','',0,'Laisser un commentaire',0,4,0,0,'todo','','','maquettage-web-premieres-propositions','1','Non programmé','16','','','','','','','','619ae5b73fdb7a495a8ef8c92962d8f1','2013-06-23',''),
	(12,'2013-06-23 16:14:48','0000-00-00 00:00:00','admin','2013-06-23 16:14:48','admin','Maquettage web, développement de la piste retenue','','','','','','','webdesign','',0,'Laisser un commentaire',0,4,0,0,'todo','','','maquettage-web-developpement-de-la-piste-retenue','1','Non programmé','8','','','','','','','','cecd43b9f1b9b5944ae3165fe73f8295','2013-06-23',''),
	(13,'2013-06-23 16:14:48','0000-00-00 00:00:00','admin','2013-06-23 16:14:48','admin','Intégration responsive des pages gabarits','','','','','','','webdesign','',0,'Laisser un commentaire',0,4,0,0,'todo','','','integration-responsive-des-pages-gabarits','1','Non programmé','40','','','','','','','','3de5579ac492b6e3ddecde53bfd47e90','2013-06-23',''),
	(14,'2013-06-24 00:00:01','2013-06-24 23:59:59','admin','2013-07-25 13:25:13','admin','Réunion Kick-off','','','','','','','reunion','',0,'Laisser un commentaire',0,4,0,0,'todo','','','reunion-kick-off','1','En cours','3','','','','','','','','4ee336d44f5b5d90f8369cb2e0108f0d','2013-06-23',''),
	(15,'2013-06-23 16:14:48','0000-00-00 00:00:00','admin','2013-06-23 16:14:48','admin','Prise en main de l\'interface d\'admin','','','','','','','formation','',0,'Laisser un commentaire',0,4,0,0,'todo','','','prise-en-main-de-l-interface-d-admin','1','Non programmé','8','','','','','','','','683a9c1f65c0dc405e8f96aed211159e','2013-06-23','');

/*!40000 ALTER TABLE `textpattern` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table txp_category
# ------------------------------------------------------------

CREATE TABLE `txp_category` (
  `id` int(6) NOT NULL AUTO_INCREMENT,
  `name` varchar(64) NOT NULL DEFAULT '',
  `type` varchar(64) NOT NULL DEFAULT '',
  `parent` varchar(64) NOT NULL DEFAULT '',
  `lft` int(6) NOT NULL DEFAULT '0',
  `rgt` int(6) NOT NULL DEFAULT '0',
  `title` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 PACK_KEYS=1;

LOCK TABLES `txp_category` WRITE;
/*!40000 ALTER TABLE `txp_category` DISABLE KEYS */;

INSERT INTO `txp_category` (`id`, `name`, `type`, `parent`, `lft`, `rgt`, `title`)
VALUES
	(13,'root','file','',1,10,'root'),
	(12,'root','image','',1,4,'root'),
	(11,'root','link','',1,4,'root'),
	(10,'root','article','',1,34,'root'),
	(8,'textpattern','link','root',2,3,'Textpattern'),
	(9,'site-design','image','root',2,3,'Site Design'),
	(14,'conception','article','facturees',3,4,'Conception'),
	(15,'crea-graphique','article','facturees',5,6,'Créa graphique'),
	(16,'maquettage','article','facturees',17,18,'maquettage'),
	(17,'webdesign','article','facturees',23,24,'Web Design'),
	(18,'dev-back','article','facturees',7,8,'Développement Web'),
	(26,'jmd_csv','file','root',6,7,'jmd_csv'),
	(19,'contenus','article','non-facturees',29,30,'Contenus'),
	(20,'reunion','article','facturees',21,22,'Réunion'),
	(23,'administratif','article','non-facturees',27,28,'Administratif'),
	(28,'conception','file','root',2,3,'Conception'),
	(29,'finance','file','root',4,5,'Finance'),
	(24,'rd','article','non-facturees',31,32,'R&D'),
	(25,'divers','article','facturees',9,10,'Divers'),
	(27,'formation','article','facturees',13,14,'Formation'),
	(30,'livrable','file','root',8,9,'Livrable'),
	(31,'documentation','article','facturees',11,12,'Documentation'),
	(32,'prototypage','article','facturees',19,20,'Prototypage'),
	(33,'integration-web','article','facturees',15,16,'Intégration Web'),
	(34,'facturees','article','root',2,25,'Facturées'),
	(35,'non-facturees','article','root',26,33,'Non Facturées');

/*!40000 ALTER TABLE `txp_category` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table txp_css
# ------------------------------------------------------------

CREATE TABLE `txp_css` (
  `name` varchar(255) NOT NULL,
  `css` mediumtext NOT NULL,
  `file_mod_time` datetime DEFAULT NULL,
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

LOCK TABLES `txp_css` WRITE;
/*!40000 ALTER TABLE `txp_css` DISABLE KEYS */;

INSERT INTO `txp_css` (`name`, `css`, `file_mod_time`)
VALUES
	('default','/* ============================= */\n/* === styles ecran pour ======= */\n/* ======  MEMENTO  ============ */\n/* © : Sacripant / Thomas Jund = */\n/* ============================= */\n\n/*Misc top\n-------------------------------*/\n/*reset des listes*/\n.nude			{ list-style-type: none; margin: 0; }\n.block		{ display: block; margin: 0; }\n\n/*Grilles\n-------------------------------*/\n/* table layout grid */\n.row {\n	display: table;\n	table-layout: fixed;\n/*	width: 100%;*/\n}\n.row > *,\n.col {\n	display: table-cell;\n	vertical-align: middle;\n	padding: 0.4em;\n}\n\n\n/* Sectionning\n-------------------------------*/\nbody:before {\n	content: \"\";\n	display: block;\n	width: 98%;\n	height: 120px;\n	background-color: hsl(190,100%,20%);\n	-webkit-transform: rotate(2deg);\n	   -moz-transform: rotate(2deg);\n	    -ms-transform: rotate(2deg);\n	     -o-transform: rotate(2deg);\n	        transform: rotate(2deg);\n	position: absolute;\n	top: -70px; left: 1%;\n	z-index: -1;\n}\n\n#keur				{/*id du body index*/}\n.site_wrapper	{ width: 940px; max-width: 95%; margin: 0 auto; }\n.site-header	{ padding-top: 10px; }\n.site_footer	{ }\n\n\n\n\n\n/*Site header\n-------------------------------*/\n.site-header			{ color: hsl(40, 10%, 90%); text-align: justify; }\n.site-header a			{ color: hsl(40, 10%, 90%); border: 0 none;}\n.site-header:after 	{\n	content: \"\";\n	width: 100%;\n	display: inline-block;\n}\n.site-header *		{ margin: 0; line-height: 1.1em; }\n.site-header > *	{ display: inline-block; vertical-align: text-bottom; }\n.brand				{ vertical-align: sub; }\n.site-name a		{ font-style: italic; /*color: inherit;*/ }\n.site-name:before {\n	content: attr(data-site-name);\n	position: absolute;\n	top: 0; left: 0; z-index: -1;\n	font-weight: 900;\n	color: hsl(190,100%,20%);\n	letter-spacing: -0.04em;\n}\n.infos-memento 			{\n	font-size: 0.4em;\n	border: 1px solid;\n	display: inline-block;\n	text-align: center;\n	width: 1.5em; height: 1.5em;\n	-webkit-background-clip: padding-box;\n	-webkit-border-radius: 1em;\n	   -moz-border-radius: 1em;\n	        border-radius: 1em;\n	position: relative;\n	top: -1em;	\n}\n.bascule-projet	{ text-align: left; max-width: 30%; }\n\n.whois-connected 	{  }\n.user-connected	{ display: inline; }	\n\n/*Main-section\n-------------------------------*/\n/*Login form*/\n.login-form		{ max-width:300px; background-color: hsl(40, 50%, 90%); padding: 1em; } \n\n/*Blocs*/\n.sidenav 		{ float: left; width: 5%; margin: 0; }\n.main-content 	{ float: left; width: 90%; margin: 0 0 3em 5%; min-height: 330px; }\n\n/*SideNav / TABS*/\n.li-sidenav		{ line-height: 1em; margin-bottom: 0.2em; }\n.li-sidenav:first-child { margin-top: -0.2em; }\n.a-sidenav		{ color: #fff; border: 0 none;}\n.fii				{ color: hsl(25,100%,50%); }\n	\n/*Main-content Misc*/\n.block-title { color: hsl(25,100%,50%); line-height: 1em; margin-bottom: 0.2em; } \n.block-title:before {\n	content: attr(data-this);\n	font-size: 2em;\n	position: absolute;\n	z-index: -1;\n	color: hsl(40, 15%, 85%);\n	font-weight: 800;\n	line-height: 1em;\n}\n\n/* PANES main-section section*/\n.pane {\n	clear: both;\n	/*display: none;*/\n	opacity: 0;\n	transform: translateY(-25px);\n	/*transform-origin: left top;*/\n	transition: all 600ms;\n/*	-webkit-transition: transform 400ms;\n		    transition: transform 400ms;*/\n}\n\n.pane-show {\n	/*display: block;*/\n	transform: translateY(0);\n	opacity: 1;\n}\n\n\n\n.id	{ font-style: italic; color: hsl(190, 20%, 55%); font-weight: 300;}\n\n/*Projets\n-------------------------------*/\n/*Archives projet*/\n/*.li-archive h2		{ width: 40px; }*/\n\n.ul-nav_archive\n, .archive-projet-meta\n{ white-space: nowrap; }\n\n.li-nav_archive	{ display: inline; }\n\n\n/*Projet header*/\n.projet-title					{ color: hsl(20, 100%, 50%); text-transform: none; font-weight:300; margin-bottom: 0; display: inline; }\n.projet-description			{ margin-left: 10%; }\n.projet-meta					{ display: inline; font-style: italic; }\n.projet-meta .edit-projet	{ vertical-align: super; }\n\n\n/*TODOS TABS\n-------------------------------*/\n\n/*table-todos-projet*/\ncol.todo-projet-id 		{ width:  6%; }\ncol.todo-projet-title 	{ width: 36%; }\ncol.todo-projet-cat 		{ width: 11%; }\ncol.todo-projet-start 	{ width: 10%; }\ncol.todo-projet-end 		{ width: 10%; }\ncol.todo-projet-temps	{ width: 10%; }\ncol.todo-projet-statut 	{ width: 12%; }\ncol.todo-projet-action	{ width:  5%; }\n\n/*table-todos-global*/\ncol.todo-globale-projet { width: 15%; }\ncol.todo-globale-title 	{ width: 34%; }\ncol.todo-globale-start 	{ width: 10%; }\ncol.todo-globale-end 	{ width: 10%; }\ncol.todo-globale-temps	{ width: 10%; }\ncol.todo-globale-statut { width: 12%; }\ncol.todo-globale-action	{ width:  8%; }\n\n/*Header*/\nth[class|=type]			{ cursor: pointer; white-space: nowrap; }\nth[class|=type]:after	{ \n	content :\" ▼\";\n	color : ;\n	font-size: 0.8em;\n	opacity: 0.3;\n	display: inline-block;\n	-webkit-transition: all 400ms ease;\n	   -moz-transition: all 400ms ease;\n	    -ms-transition: all 400ms ease;\n	     -o-transition: all 400ms ease;\n	        transition: all 400ms ease; /* transition-property transition-duration(ms/s) transition-timing-function(ease-out/ease/linear/ease-in-out/ease-in/cubic-bezier(0.42, 0, 1.0, 1.0)/step-start/steps(3)/steps(3,start)/step-end) transition-delay(+-ms/s) */\n	\n\n	\n}\nth.asc:after,\nth.desc:after			{ 	\n	opacity: 1;\n	color: hsl(20,100%,50%);\n}\nth.desc:after				{\n	-webkit-transform: rotate(180deg);\n	   -moz-transform: rotate(180deg);\n	    -ms-transform: rotate(180deg);\n	     -o-transform: rotate(180deg);\n	        transform: rotate(180deg);\n}\n\n.parent-id	{ display: inline-block; width: 25%; font-size: 0.71429em; /*idem .small*/}\n.action 		{ vertical-align: middle; }\n\n/*catégorie todos*/\n.en-cours,\n.programme			{ color: hsl(20, 70%, 40%); }\n.non-programme,\n.en-pause			{ color: hsla(20, 50%, 50%, 0.7); }\n.termine				{ color: hsla(190, 100%, 20%, 0.8); }\n.rejete				{ color: hsla(190, 100%, 20%, 0.5); text-decoration: line-through; }\n\n/*Highlight todo line when compteur ON*/\n.compteur-on	{\n	background-color: hsl(40, 50%, 98%);	\n	color: hsl(20, 70%, 45%);\n}\n.compteur-on .temps-reel	{\n	color: hsl(20, 100%, 35%);\n	font-weight: bold;\n}\n\n/*Edit-New-todo-form*/\n/*Inline Form*/\n.inline-form-wrapper {\n	padding: 0;\n	width: 100%;\n	min-width: 100%;\n	background-color: hsl(40, 70%, 80%);\n	color: hsl(190, 50%, 10%);\n}\n.inline-form-wrapper h2 {\n	margin-left: 5px;\n}\n.inline-form-wrapper tr:hover {\n	background-color: transparent;\n} \n\ncol.edit-todo-id			{ width:  4%; }\ncol.edit-todo-title		{ width: 37%; }\ncol.edit-todo-cat			{ width: 12%; }\ncol.edit-todo-date		{ width: 20%; }\ncol.edit-todo-temps		{ width: 10%; }\ncol.edit-todo-statut		{ width: 12%; }\ncol.edit-todo-action		{ width:  5%; }\n\ntd.edit-todo-date label	{ display: inline-block; width: 30%; }			\ntd.edit-todo-date input	{ display: inline-block; width: 70%; }\n\ncol.edit-new-title 	{ width: 45%; }       	\ncol.edit-new-cat     { width: 18%; }\ncol.edit-new-temps   { width: 13%; }\ncol.edit-new-statut  { width: 18%; }\ncol.edit-new-action  { width:  6%; }\n\n\n\n/* COMMENTAIRES TAB\n---------------------*/\n/*formulaire et preview*/\n#comment-form	{\n	max-height: 0px;\n	overflow: hidden;\n	\n	-webkit-transition: all 400ms ease-in;\n	   -moz-transition: all 400ms ease-in;\n	    -ms-transition: all 400ms ease-in;\n	     -o-transition: all 400ms ease-in;\n	        transition: all 400ms ease-in; /* transition-property transition-duration(ms/s) transition-timing-function(ease-out/ease/linear/ease-in-out/ease-in/cubic-bezier(0.42, 0, 1.0, 1.0)/step-start/steps(3)/steps(3,start)/step-end) transition-delay(+-ms/s) */\n	\n}\n#comment-form.open	{\n	max-height: 350px;\n	padding-top: 1em;\n}\n#cpreview				{ float: right; width: 49%; overflow: auto; height: 350px; }\n#txpCommentInputForm	{ float: left; width: 49%; }\n/*comments*/\n.comments-list 		{\n	list-style-type: none;\n	counter-reset: comment-count;\n}\n.comment				{\n	background-color: hsl(40, 12%, 94%);\n	padding: 0.4em;\n	position: relative;\n}\n.comments-list .comment:before {\n	counter-increment: comment-count;\n	content : counter(comment-count);\n	position: absolute;\n	right: 99%;\n	width: 1.5em;\n	height: 1.5em;\n	background-color: hsl(40, 100%, 50%);\n	line-height: 1.5em;\n	text-align: center;\n	-webkit-background-clip: padding-box; /* fix WebKit background bleed on border-radius */\n	-webkit-border-radius: 1em;\n	   -moz-border-radius: 1em;\n	        border-radius: 1em;\n	color: hsl(40, 12%, 90%);\n	font-weight: bold;\n	font-size: 1.35714em;\n	\n}\n\n.comment-anchor 	{\n	position: absolute;\n	font-size: 3em;\n	font-weight: bold;\n/*	color: hsl(38, 14%, 85%);*/\n	opacity: 0.15;\n	-moz-opacity: 0.15;\n	filter:alpha(opacity=15);\n	z-index: 2;\n	margin: -0.5em 0 0 -0.4em;\n}\n.comment-anchor a { border-bottom: 0 none; }\n.comment-data		{\n	text-align: right; margin: 0.4em 0; line-height: 1em;\n}\n.comment-data time 	{ font-style: italic; }\n.comment-body h1		{\n	font-size: 1.35714em; font-weight: bold;\n}\n.comment-body h2		{ font-size: 1.35714em; } \n\n\n/* ATTACHMENTS / FILES / LINKS\n-----------------------------*/\n\n#attachments form {\n	float: right;\n	width: 31.33%;\n	margin-left: 3%;\n}\n\n.attachments-content {\n	overflow: hidden;\n}\n.file_download_description { margin-bottom: 0; }\n.file-metas { float: right; }\n\n/*Progress bar*/\n.file-form-info		{ margin: 0.5em 0; }\n.progressBar			{ min-width: 98%; }\n\n/* ADRESSE TAB\n-----------------------------*/\n.vcards-list {\n	word-spacing: 1em;\n}\n.vcard	{\n	display: inline-block;\n	vertical-align: top;\n	padding: 1em;\n	background-color: hsla(40, 100%, 50%, .15);\n	word-spacing: normal;\n	margin-bottom: 1em;\n	border: 1px solid #fff;\n	position: relative;\n}\n.vcard * {}\n.org		{ font-weight: 500; }\n.vcard p .picto {\n	filter:alpha(opacity=40);\n			-moz-opacity: 0.4;\n				  opacity: 0.4;\n	vertical-align: top;\n}\n\n.download-vcard {\n	position: absolute;\n	right: 1em; bottom: 1em;\n}\n\n/*FINANCE / DEVIS\n-------------------*/\n\n\n#finance		{  }\n.devis-section		{ clear: both; }\n.devis-cat-title	{  }\n.item-devis			{ list-style-type: none; clear: both; height: 0.9em; border-bottom: 1px dotted; margin-bottom: 0.5em; }\n.item-devis-title	{ float: left; padding-right: 0.4em; background-color: hsl(40, 10%, 90%); font-weight: normal; }\n.item-devis-liste	{ margin-left: 1em; }\n.montant				{ float: right; text-align: right; padding-left: 0.4em; background-color: hsl(40, 10%, 90%); }\n\n.sous-total			{ font-style: italic; margin-top: 1em; }\n.total				{ font-weight: 400; }\n\n\n/*Images et galerie\n--------------------------------*/\n.thumb {/*pour toutes les vignettes*/}\n.fullsize {/*pour toutes les img full size*/}\n        \n.wrap-galerie {/*ul ou ol de galerie images*/}\n.li-galerie {}\n.a-galerie {}\n\n/*footer\n-------------------------------*/\n#nav_footer {}\n.li-nav_footer {}\n.a-nav_footer {}\n\n/*misc\n-------------------------------*/\n\n/*\n** Icones\n-------------------------------\ninfo 				: &#x2139	&#8505;			Printer		: &#59158;\nuser 				: &#59394;					Crayon		: &#9998;\ndisconnect/close	: &#10006\nliste 				: &#9776;\ncommentaires		: &#59392;\nfichiers liés 		: &#x1F4CE\nbourse dollars 		: &#x1f4b0\nvcard 				: &#59170;\n-------------------------------*/\n[data-picto]:before {\n	font-family: \'PictosMemento\';\n	content: attr(data-picto);\n}\n.picto strong {\n/*	visuallyhidden*/\n	border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;\n}\n\n/*Boutons*/\n\n.btn,\n.btn-wrap > * {\n	font-size: 0.9em;\n	color: hsl(40, 10%, 60%);\n	background-color: #fff;\n	\n	border: 1px solid hsl(40, 11%, 90%);\n	-webkit-background-clip: padding-box; /* fix WebKit background bleed on border-radius */\n	-webkit-border-radius: 0.4em;\n	   -moz-border-radius: 0.4em;\n	        border-radius: 0.4em;\n	\n	padding: 0em 0.2em 0.2em;	\n}\n\n.btn:hover, .btn:focus,\n.btn-wrap > *:hover, .btn-wrap > *:focus \n.compteur-on .action-start	{\n	color: hsl(40, 10%, 30%);\n	border-color: hsl(40, 10%, 20%);\n}\n.btn:active,\n.btn-wrap > *:active\n.compteur-on .action-start {\n	-webkit-box-shadow:   inset 0px 0px 2px 0px hsl(25, 100%, 30%);\n	   -moz-box-shadow:   inset 0px 0px 2px 0px hsl(25, 100%, 30%);\n	        box-shadow:   inset 0px 0px 2px 0px hsl(25, 100%, 30%); /* inset offset-x offset-y blur spread color */	\n}\n.btn:disabled,\n.btn-wrap > *:disabled		{\n	background: -moz-repeating-linear-gradient(125deg,hsl(40, 11%, 75%), hsl(40, 11%, 95%) 3px, hsl(40, 11%, 75%) 6px);\n	background: -webkit-repeating-linear-gradient(125deg,hsl(40, 11%, 75%), hsl(40, 11%, 95%) 3px, hsl(40, 11%, 75%) 6px);\n	background: repeating-linear-gradient(125deg,hsl(40, 11%, 75%), hsl(40, 11%, 95%) 3px, hsl(40, 11%, 75%) 6px);\n}\n\n/*\n** DateInput Jquey Tools\n-------------------------------*/\n/* the input field */\n.date {}\n\n/* calendar root element */\n#calroot {\n	z-index:10000;\n	margin-top:-5px;\n	padding:0.3em;\n	background-color:rgba(255,255,255,0.7);\n\n	font-size:0.8em;\n	\n	-webkit-box-shadow: 0em 0.3em 0.5em hsl(190,100%,10%);\n	   -moz-box-shadow: 0em 0.3em 0.5em hsl(190,100%,10%);\n	        box-shadow: 0em 0.3em 0.5em hsl(190,100%,10%);\n	\n	\n}\n#calhead a	{ border-bottom: 0 none; }\n\n#calhead			{ text-transform: uppercase; }\n#caltitle 			{\n    float:left;\n    text-align:center;\n    width:155px;\n    text-shadow:0 1px 0 #ddd;\n}\n#calnext, #calprev {\n    display:block;\n    width:20px;\n    height:20px;\n    float:left;\n    cursor:pointer;\n}\n#calprev:before	{ content:\"◤\"; } \n#calnext:before	{ content:\"◥\"; } \n#calnext 		{ float:right; text-align: right;}\n\n#calprev.caldisabled, #calnext.caldisabled {}\n\n/* year/month selector */\n#caltitle select {}\n\n/* names of the days */\n#caldays { clear: both; }\n\n#caldays span,\n.calweek a {\n	display: inline-block;\n	width: 14.285%;\n	text-align: right;\n	overflow: hidden;\n	padding: 0.2em 0.3em;\n	-webkit-box-sizing: border-box; \n	   -moz-box-sizing: border-box; \n	        box-sizing: border-box;\n	line-height: 1.5em;\n}\n\n/* container for weeks */\n#calweeks {}\n/* single week */\n.calweek { clear:left; line-height: 0; }\n/* single day */\n.calweek a {\n/*	border: 1px solid #000;*/\n	-webkit-background-clip: padding-box; /* fix WebKit background bleed on border-radius */\n	-webkit-border-radius: 0.4em;\n	   -moz-border-radius: 0.4em;\n	        border-radius: 0.4em;\n	background-color: hsl(190,20%,85%);\n	border: 1px solid transparent;\n}\n\n/* different states */\n.calweek a:hover, .calfocus {\n	background-color: hsl(190,65%,85%);\n	color: inherit;\n	border-color: hsl(190,65%,55%);\n}\n\n/* sunday */\n/* offmonth day */\na.calsunday,\na.caloff {\n	-moz-opacity: 0.6;\n	filter:alpha(opacity=60);\n	opacity: 0.6;\n}\n\na.caloff:hover { }\n\n/* unselecteble day */\na.caldisabled { }\n\n/* current day */\n#calcurrent { background-color:hsl(40,85%,65%); }\n\n/* today */\n#caltoday { border-color: hsl(190,65%,55%); background-color: hsl(190,65%,85%);}\n\n/*\n** Overlay Jquey Tools\n-------------------------------*/\n#overlay {\n	display:none;\n	z-index:10000;\n	background-color:#333;\n	width:675px;\n	min-height:200px;\n	border:1px solid #666; \n	/* CSS3 styling for latest browsers */\n	-webkit-box-shadow: 0 0 90px #000;\n	   -moz-box-shadow: 0 0 90px #000;\n	        box-shadow: 0 0 90px #000;\n	\n}\n','2015-11-23 16:37:44'),
	('forms','/* --------------------------------------------------------------\n\n   forms.css\n   * Sets up some default styling for forms\n   * Gives you classes to enhance your forms\n\n   Usage:\n   * For text fields, use class .title or .text\n   * For inline forms, use .inline (even when using columns)\n\n-------------------------------------------------------------- */\nlabel       { font-weight: 400; }\nfieldset    { padding:.4em; margin: 0 0 1.5em 0; border: 1px solid #ccc; }\nlegend      { padding: 0.5% 0.5%; white-space: nowrap; }\n\n/* Form fields\n-------------------------------------------------------------- */\ninput[type=text], input[type=password], textarea, select, input[type=file] {\n	background-color:#fff;\n	border:1px solid #fff;\n	min-width: 100%;\n	max-width: 100%;\n	padding:5px;\n	margin: 0 0 0.5em 0;\n	-moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box; -khtml-box-sizing: border-box; box-sizing: border-box;\n	opacity: 0.7;\n}\n\ninput[type=text]:focus, input[type=password]:focus,\ninput.text:focus, textarea:focus, select:focus {\n	border-color: hsl(40, 10%, 20%);\n	opacity: 1;\n}\ninput[type=checkbox], input[type=radio], input[type=submit], input[type=\"reset\"] {\n	min-width: 0;\n	max-width: none;\n}\ntextarea, .input-title input {\n	font: inherit;\n}\n\n.input-title input {\n	font-weight: bold;\n}\n\n/* Form item inline\n-------------------------------------------------------------- */\n\n.inline input[type=text], .inline input[type=password], .inline textarea, .inline select { \n	min-width: 0;\n	vertical-align: baseline;\n}\n.inline li {\n	margin-right: 1em; \n	float: left; \n	display: inline; \n}\n\n/* grille % formulaires sur 12 cols (cf. formee 1.2)\n-------------------------------------------------------------- */\n\n/* Field form */\n.form-1-12, .form-2-12, .form-3-12, .form-4-12, .form-5-12, .form-6-12, .form-7-12, .form-8-12, .form-9-12, .form-10-12, .form-11-12, .form-12-12 \n{ display:inline; float:left; margin-left:1%; margin-right:1%; padding: 0.5% 0.5% 0.8%; height:100%; }\n\n\n/* 12-column form (thanks for Fluid 960 form System) */\n.form-1-12  { width: 5.333%; }\n.form-2-12  { width: 13.666%; }\n.form-3-12  { width: 22%; }\n.form-4-12  { width: 30.333%; }\n.form-5-12  { width: 38.666%; }\n.form-6-12  { width: 47%; }\n.form-7-12  { width: 55.333%; }\n.form-8-12  { width: 63.666%; }\n.form-9-12  { width: 72%; }\n.form-10-12 { width: 80.333%; }\n.form-11-12 { width: 88.666%; }\n.form-12-12 { width: 97%; }\n\n/* hover effect */\n.form-1-12:hover, .form-2-12:hover, .form-3-12:hover, .form-4-12:hover, .form-5-12:hover, .form-6-12:hover, .form-7-12:hover, .form-8-12:hover, .form-9-12:hover, .form-10-12:hover, .form-11-12:hover, .form-12-12:hover {\n/*	background:#e5e5e5;*/\n}\n\n/* liste radio & checkbox */\n/* <ul class=\".form-list-chk\" > */\n.form-list-chk, .form-list-rdo {\n   height: 100%;\n	list-style: none outside none;\n	margin: 0;\n}\n\n/* Classes texpattern zem_contact\n-------------------------------------------------------------- */\n.zemText        { }\n.zemTextarea    { }\n.zemSelect      { }\n.zemRadio       { }\n.zemCheckbox    { }\n.zemSubmit      { }\n\n/* Success, notice and error boxes\n-------------------------------------------------------------- */\n.zemError, .zemThanks, .error,\n.notice,.success        { padding: .5em .5em .5em .5em; margin-bottom: 1em; border: 2px solid #ddd; }\n.zemError,.error        { background: #FBE3E4; color: #8a1f11; border-color: #FBC2C4; }\n.notice                 { background: hsl(40, 75%, 85%); border-color:hsl(40, 65%, 80%); color:hsl(40, 65%, 30%); }\n.success, .zemThanks    { background: #E6EFC2; color: #264409; border-color: #C6D880; }\n\n.error a, .zemError a   { color: #8a1f11; }\n.notice a               { }\n.success a              { color: #264409; }\n\n/* add * after required label */\nlabel.zemRequired:after, .required:after,\nlabel.zemRequirederrorElement:after\n						{ content: \" *\"; }\n/*Txp only*/\n.errorElement {}\nlabel.zemRequirederrorElement { color: #8a1f11; }\ninput.zemRequirederrorElement,\ntextarea.zemRequirederrorElement {\n	background-color: #FBE3E4;\n	border-color: #FBC2C4;\n}\n','2015-11-23 16:37:44'),
	('reset','/* -------------------------------------------------------------- \n  \n   reset.css for HTML5\n   Mélange maison de boilerplate @ htlm5reset\n   \n-------------------------------------------------------------- */\n\nhtml, body, body div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, hgroup, menu, nav, section, time, mark, audio, video {\n	margin: 0;\n	padding: 0;\n	border: 0;\n	outline: 0;\n	font-size: 100%;\n	vertical-align: baseline;\n	background: transparent;\n}\n/* =============================================================================\n   HTML5 display definitions\n   ========================================================================== */\n\narticle, aside, details, figcaption, figure, footer, header, hgroup, nav, section { display: block; }\naudio, canvas, video { display: inline-block; *display: inline; *zoom: 1; }\naudio:not([controls]) { display: none; }\n[hidden] { display: none; }\n\n/* Responsive images and other embedded objects\n   Note: keeping IMG here will cause problems if you\'re using foreground images as sprites.\n   If this default setting for images is causing issues, you might want to replace it with a .responsive class instead. */\nimg,object, embed { max-width: 100%; }\nimg { border: 0; -ms-interpolation-mode: bicubic; vertical-align: middle; }\n\n\n/* force a vertical scrollbar to prevent a jumpy page */\nhtml {font-size: 100%; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; overflow-y: scroll;}\n\n/*NAV*/\nnav ul, nav ol { list-style: none; list-style-image: none; margin: 0; padding: 0; }\n\n/*RESET TYPO*/\nblockquote, q {quotes: none;}\nblockquote:before, blockquote:after, \nq:before, q:after {content: \'\'; content: none;}\n\n/* Redeclare monospace font family: h5bp.com/j */\npre, code, kbd, samp { font-family: monospace, serif; _font-family: \'courier new\', monospace; font-size: 1em; }\n/* Improve readability of pre-formatted text in all browsers */\npre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; }\n\n/* Position subscript and superscript content without affecting line-height: h5bp.com/k */\nsub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }\nsup { top: -0.5em; }\nsub { bottom: -0.25em; }\n\nsmall {font-size: 85%;}\n\nhr { display: block; height: 1px; border: 0; border-top: 1px solid #ccc; margin: 1em 0; padding: 0; }\n\n/* Tables still need \'cellspacing=\"0\"\' in the markup. */\ntable { border-collapse: separate; border-spacing: 0; }\ncaption, th, td { text-align: left; font-weight: normal; }\ntable, td, th { vertical-align: middle; }\n\n/*RESET FORMS*/\n/* hand cursor on clickable elements */\n.clickable, label, input[type=button], input[type=submit], button {cursor: pointer;}\nbutton[disabled], input[disabled] { cursor: default; }\nbutton, input, select, textarea { margin: 0; vertical-align: baseline; *vertical-align: middle; }\n\n/*MISC*/\n\n.clear      { clear: both; }\n.hide       { display: none; visibility: hidden; }\n/*CLEARFIX pour redonner 1 height aux blocs contenant des float*/\n.clearfix:before, .clearfix:after	{ content: \"\"; display: table; }\n.clearfix:after 							{ clear: both; }\n/* image replacement */\n.ir 			{ display: block; border: 0; text-indent: -999em; overflow: hidden; background-color: transparent; background-repeat: no-repeat; text-align: left; direction: ltr; }\n','2015-11-23 16:37:44'),
	('fonts','/* Pictos */\n@font-face {\n  font-family: \'PictosMemento\';\n  src: url(\"fonts/memento.eot\");\n  src: url(\"fonts/memento.eot?#iefix\") format(\'embedded-opentype\'), \n		 url(\"fonts/memento.woff\") format(\'woff\'), \n		 url(\"fonts/memento.ttf\") format(\'truetype\'), \n		 url(\"fonts/memento.svg#memento\") format(\'svg\');\n  font-weight: normal;\n  font-style: normal;\n}\n\n/* EXO */\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-Thin-webfont.eot\');\n    src: url(\'fonts/Exo-Thin-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-Thin-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-Thin-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-Thin-webfont.svg#ExoThin\') format(\'svg\');\n    font-weight: 100;\n    font-style: normal;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-Thin-Italic-webfont.eot\');\n    src: url(\'fonts/Exo-Thin-Italic-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-Thin-Italic-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-Thin-Italic-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-Thin-Italic-webfont.svg#ExoThinItalic\') format(\'svg\');\n    font-weight: 100;\n    font-style: italic;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-ExtraLight-webfont.eot\');\n    src: url(\'fonts/Exo-ExtraLight-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-ExtraLight-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-ExtraLight-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-ExtraLight-webfont.svg#ExoExtraLight\') format(\'svg\');\n    font-weight: 200;\n    font-style: normal;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-ExtraLight-Italic-webfont.eot\');\n    src: url(\'fonts/Exo-ExtraLight-Italic-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-ExtraLight-Italic-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-ExtraLight-Italic-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-ExtraLight-Italic-webfont.svg#ExoExtraLightItalic\') format(\'svg\');\n    font-weight: 200;\n    font-style: italic;\n\n}\n\n@font-face {\n    font-family: \'ExoLight\';\n    src: url(\'fonts/Exo-Light-webfont.eot\');\n    src: url(\'fonts/Exo-Light-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-Light-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-Light-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-Light-webfont.svg#ExoLight\') format(\'svg\');\n    font-weight: 300;\n    font-style: normal;\n\n}\n\n@font-face {\n    font-family: \'ExoLightItalic\';\n    src: url(\'fonts/Exo-Light-Italic-webfont.eot\');\n    src: url(\'fonts/Exo-Light-Italic-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-Light-Italic-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-Light-Italic-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-Light-Italic-webfont.svg#ExoLightItalic\') format(\'svg\');\n    font-weight: 300;\n    font-style: italic;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-Regular-webfont.eot\');\n    src: url(\'fonts/Exo-Regular-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-Regular-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-Regular-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-Regular-webfont.svg#ExoRegular\') format(\'svg\');\n    font-weight: 400;\n    font-style: normal;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-Regular-Italic-webfont.eot\');\n    src: url(\'fonts/Exo-Regular-Italic-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-Regular-Italic-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-Regular-Italic-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-Regular-Italic-webfont.svg#ExoRegularItalic\') format(\'svg\');\n    font-weight: 400;\n    font-style: italic;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-Medium-webfont.eot\');\n    src: url(\'fonts/Exo-Medium-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-Medium-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-Medium-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-Medium-webfont.svg#ExoMedium\') format(\'svg\');\n    font-weight: 500;\n    font-style: normal;\n\n}\n\n@font-face {\n    font-family: \'ExoMediumItalic\';\n    src: url(\'fonts/Exo-Medium-Italic-webfont.eot\');\n    src: url(\'fonts/Exo-Medium-Italic-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-Medium-Italic-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-Medium-Italic-webfont.ttf\') format(\'truetype\'),\n         url(\'Exo-Medium-Italic-webfont.svg#ExoMediumItalic\') format(\'svg\');\n    font-weight: 500;\n    font-style: italic;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-DemiBold-webfont.eot\');\n    src: url(\'fonts/Exo-DemiBold-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-DemiBold-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-DemiBold-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-DemiBold-webfont.svg#ExoDemiBold\') format(\'svg\');\n    font-weight: 600;\n    font-style: normal;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-DemiBold-Italic-webfont.eot\');\n    src: url(\'fonts/Exo-DemiBold-Italic-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-DemiBold-Italic-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-DemiBold-Italic-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-DemiBold-Italic-webfont.svg#ExoDemiBoldItalic\') format(\'svg\');\n    font-weight: 600;\n    font-style: italic;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-Bold-webfont.eot\');\n    src: url(\'fonts/Exo-Bold-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-Bold-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-Bold-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-Bold-webfont.svg#ExoBold\') format(\'svg\');\n    font-weight: 700;\n    font-style: normal;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-Bold-Italic-webfont.eot\');\n    src: url(\'fonts/Exo-Bold-Italic-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-Bold-Italic-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-Bold-Italic-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-Bold-Italic-webfont.svg#ExoBoldItalic\') format(\'svg\');\n    font-weight: 700;\n    font-style: italic;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-ExtraBold-webfont.eot\');\n    src: url(\'fonts/Exo-ExtraBold-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-ExtraBold-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-ExtraBold-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-ExtraBold-webfont.svg#ExoExtraBold\') format(\'svg\');\n    font-weight: 800;\n    font-style: normal;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-ExtraBold-Italic-webfont.eot\');\n    src: url(\'fonts/Exo-ExtraBold-Italic-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-ExtraBold-Italic-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-ExtraBold-Italic-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-ExtraBold-Italic-webfont.svg#ExoExtraBoldItalic\') format(\'svg\');\n    font-weight: 800;\n    font-style: italic;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-Black-webfont.eot\');\n    src: url(\'fonts/Exo-Black-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-Black-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-Black-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-Black-webfont.svg#ExoBlack\') format(\'svg\');\n    font-weight: 900;\n    font-style: normal;\n\n}\n\n@font-face {\n    font-family: \'Exo\';\n    src: url(\'fonts/Exo-Black-Italic-webfont.eot\');\n    src: url(\'fonts/Exo-Black-Italic-webfont.eot?#iefix\') format(\'embedded-opentype\'),\n         url(\'fonts/Exo-Black-Italic-webfont.woff\') format(\'woff\'),\n         url(\'fonts/Exo-Black-Italic-webfont.ttf\') format(\'truetype\'),\n         url(\'fonts/Exo-Black-Italic-webfont.svg#ExoBlackItalic\') format(\'svg\');\n    font-weight: 900;\n    font-style: italic;\n\n}\n\n','2015-11-23 16:37:44'),
	('typography','/* -------------------------------------------------------------- \n  \n\n	COULEURS\n	\n	vert : h 190\n		header hsl(190 100 25)\n		body	hsl(190 100 10)\n		id\n	\n	orange-rouge : h 20	\n	orange : h 25\n	jaune : h 40\n-------------------------------------------------------------- */\n\n/* -------------------------------------------------------------- \n\n	TYPO\n	\n	body font size : 14px\n	body line height : 1.5\n	Scale factor : 1.368\n	\n-------------------------------------------------------------- */\n\n\n/* Default font settings. \n   The font-size percentage is of 16px. (0.875 * 16px = 14px) */\nbody { \n  font-size: 87.5%; \n  color: hsl(190,100%,10%); \n  background: hsl(40, 10%, 90%);\n  font-family: \"Helvetica Neue\", Arial, Helvetica, sans-serif;\n}\n\n\n/* Headings\n-------------------------------------------------------------- */\n\nh1,h2,h3,h4,h5,h6,\n.h1,.h2,.h3,.h4,.h5,.h6,\nth,label,legend \n	{ font-weight: 200; font-family: Exo, Arial, Helvetica, sans-serif; }\n\nh1, .h1 { font-size: 3.5em; line-height: 1.28571em; margin-top: 0.4286em; margin-bottom: 0.8571em; position: relative; text-transform: uppercase; }\nh2, .h2 { font-size: 1.86em; line-height: 1.6em; margin-top: 1.6em; margin-bottom: 0.8em; }\nh3, .h3 { font-size: 1.35714em; line-height: 1.10526em; margin-top: 1.1053em; margin-bottom: 0em; }\nh4, .h4 { font-size: 1em; line-height: 1.5em; }\nh5 { font-size: 1em; font-weight: bold; margin-bottom: 1.5em; }\nh6 { font-size: 1em; font-weight: bold; }\n\n/* avoid collapsing margins on headings */\nh1:first-child, h2:first-child,\nh3:first-child, h4:first-child,\nh5:first-child, h6:first-child {\n	margin-top: 0;\n}\n\nh1 img, h2 img, h3 img, \nh4 img, h5 img, h6 img {\n  margin: 0;\n}\n\n\n/* Text elements\n-------------------------------------------------------------- */\n\np, .p       { font-size: 1em; margin: 0 0 1.5em; }\np img.left  { float: left; margin: 1.5em 1.5em 1.5em 0; padding: 0; }\np img.right { float: right; margin: 1.5em 0 1.5em 1.5em; }\n\na:focus, \na:hover     { color: hsl(25,100%,50%); border-bottom-style: solid; }\na           { color: inherit; text-decoration: none; border-bottom: 1px dashed;}\n\nblockquote  { margin: 1.5em; color: #666; font-style: italic; }\nstrong      { font-weight: bolder; }\nem,dfn      { font-style: italic; }\ndfn         { font-weight: bold; }\nsup, sub    { line-height: 0; }\n\nabbr, \nacronym     { border-bottom: 1px dotted #666; }\naddress     { margin: 0 0 1.5em; font-style: italic; }\ndel         { color:#666; }\n\npre 			{ margin: 1.5em 0; white-space: pre; }\npre,code,tt { font: 1em \'andale mono\', \'lucida console\', monospace; line-height: 1.5; }\n\n\n/* Lists\n-------------------------------------------------------------- */\n\nli ul, \nli ol       { margin:0 1.5em; }\nul, ol      { margin: 0 1.5em 1.5em 1.5em; }\n\nul          { list-style-type: disc; }\nol          { list-style-type: decimal; }\n\ndl          { margin: 0 0 1.5em 0; }\ndl dt       { font-weight: bold; }\ndd          { margin-left: 1.5em;}\n\n\n/* Tables\n-------------------------------------------------------------- */\n\ntable       			{ width:100%; table-layout: fixed; }\n/*col:nth-child(odd)	{ background-color: #ddd; }*/\ntbody tr:hover,\n.row:hover				{ background-color: hsla(40, 0%, 100%, 0.4); }\nth          			{ text-transform: uppercase; font-weight: 400; font-size: 0.9em; }\nth,td,caption 			{ padding: 5px; vertical-align: top; }\ntd 						{ overflow: hidden; text-overflow: ellipsis; }\n\n/*tr.even td  { background: #e5ecf9; }*/\ntfoot       { font-style: italic; }\ncaption     { text-transform: uppercase; color: #666; }\n\n\n/* Typo Misc classes\n-------------------------------------------------------------- */\n\n.small      { font-size: 0.71429em; }\n.small p 	{ margin: 0.5em 0 }\n.large      { font-size: 1.2em; line-height: 2.5em; margin-bottom: 1.25em; }\n','2015-11-23 16:37:44'),
	('print-preview','/* ================================= */\n/* = Print-preview & print finance = */\n/* ================================= */\n\nbody 	{ \n	font-family: \"PT Sans\", Arial, Helvetica, sans-serif;\n	font-size: 8pt;\n	line-height: 1.2em;\n	margin: 10mm 23.8% 30mm 7.15%;\n	color: #000;\n	background-color: transparent; \n}\n\n/*Misc*/\n.nude { list-style-type: none; margin: 0; }\n.white-mask { background: #fff; }\n\n\n/*#print			{ position: fixed; top 10px; right: 10px;}*/\n.metas-devis 	{ display: none; }\n\n/*Headers*/\nheader, h1, h2, h3, h4 {\n	font-family: \"PT Serif\", serif;\n	font-weight: normal;\n	line-height: normal;\n}\nh1	{ }\nh2	{ font-size: 12pt; font-style: italic; line-height: 1.2em; font-weight: bold; margin-bottom: 6pt; }\nh3	{ font-size: 10pt; font-weight: bold; }\nh4 { font-size: 10pt; }\n\nul {\n	list-style-position: inside;\n}\n\n/*Containers*/\n.site_wrapper {\n	width: 100%;\n	max-width: none;\n	argin: 0;\n}\n\n#devis, .facture {\n	border-bottom: 1px solid;\n	padding: 1em 0;\n}\n	\n/*Adresse Commanditaire*/\n.commanditaire-wrapper	{\n	float: right;\n	position: relative;\n}\n.commanditaire-wrapper h2 {\n	font-size: inherit;\n}\n.commanditaire-content {\n	border: 0.5pt dashed #000;\n	padding: 1em;\n	font-family: \"PT Sans Caption\", serif;\n}\n\n/*Titre document (devis,facture)*/\nh1	{\n	clear: both;\n	position: relative;\n	top: -40pt;\n	z-index: 100;\n}\n/*.finance-block-title {\n	font-size: 36pt;\n	font-weight: bold;\n	color: #fff;\n	-webkit-text-shadow: 0.5pt 0.5pt 0 #000, -0.5pt -0.5pt 0 #000;\n	   -moz-text-shadow: 0.5pt 0.5pt 0 #000, -0.5pt -0.5pt 0 #000;\n	        text-shadow: 0.5pt 0.5pt 0 #000, -0.5pt -0.5pt 0 #000;	\n}*/\n.no-devis {\n	display: block;\n	font-family: \"PT Mono\", serif;\n	font-size: 9pt;\n}\n\n/*Nature du Travail = Projet Header*/\n\narticle {\n	margin-left: 24mm;\n}\n.devis header {\n	margin-top: -20pt;\n}\narticle header {}\narticle header h2 {}\n.projet-title, .projet-description, .projet-description p {\n	display: inline;\n	font-size: 9pt;\n	line-height: 1.2em;\n}\n.projet-title {\n	font-weight: bold;\n	font-style: italic;\n	text-transform: uppercase;\n}\n\n\n/*détail du Devis 	*/\n.details-prestation {\n	margin-top: 1em;\n}\n.devis-section		{\n	margin-left: .5cm;\n}\n\n.item-devis-liste	{ \n	margin-left: 1em;\n	font-size: 8pt;\n}\n\n\n/*Item-devis*/\n.item-devis	{ \n	clear: both;\n	position: relative; \n	/*height: 1em; */\n	/*border-bottom: 1px dotted; */\n	margin-bottom: 0.33em;\n	/*background-color: yellow;*/\n	padding-top: 0;\n	overflow: hidden;\n}\n\n.item-devis-title	{ \n	float: left; \n	padding-right: .4em; \n	/*background-color: #fff; */\n	font-weight: normal; \n	max-width: 80%;\n}\n.item-devis-title:first-letter	{ \n	text-transform: uppercase;\n}\n.item-devis-title:after {\n	content: \"0000\";\n	width: 100%;\n	height: 1em;\n	border-bottom: 1px dotted;\n	position: absolute;\n	top: 0;\n	left: 0;\n	z-index: -1;\n}\n\n\n.montant	{ \n	float: right; \n	text-align: right; \n	padding-left: 0.4em; \n	background-color: #fff; \n}\n\n\n.sous-total			{ font-style: italic; margin-top: 0.4em; }\n\n/*total Devis*/\n.total-groupe		{ font-size: 12pt; margin: 1em 0; }\n.total-groupe .montant { font-weight: bold; }\n.total-groupe h4 	{ margin-bottom: 0.5em; }\n.total-groupe .note	{ font-size: 8pt; margin-top: 12pt; }\n.rib				{ border: 1px dotted; padding: 1em; margin-top: 1em; }\n\n/*Répartiion Factures*/\n.repartition	{ margin-bottom: 1em; }\n.repartition h3 { font-style: italic; }\n.devis-liste-factures {\n	border: 1px solid #999;\n	padding: 0.4em;\n}\n\n.footer-notes {\n	font-style: italic;\n}\n\n/* Specifique Factures */\n.rappel-presta {\n	padding: 1em;\n	border: 1pt solid #eee;\n	margin-bottom: 2em;\n}\n.rappel-total-presta .montant {\n	font-weight: normal;\n	font-size: 9pt;\n}\n\n.somme-a-payer h2 {\n	font-size: 14pt;\n}\n.somme-a-payer h4 {\n	font-size: 11pt;\n}\n\n\n/* Specifique PRINT */\n@media print {\n	body {\n		margin: 0;\n	}\n	\n	@page {\n		size: 210mm 297mm;\n		margin: 10mm 50mm 30mm 15mm ;\n		padding: 0;\n/*		margin: 15mm 45mm 45mm 45mm;*/\n		@bottom {\n/*			background-color: yellow;*/\n			content:url(../img/background-entete.svg);\n			text-align: left;\n/*			background-size:  cover;*/\n/*			width: 100%;*/\n		}\n	}\n	\n	#print {\n		display: none;\n	}\n	\n	#devis, .facture {\n		page-break-after: always;\n		border-bottom: 0 none;\n	}\n}\n\n','2016-11-21 18:29:08');

/*!40000 ALTER TABLE `txp_css` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table txp_discuss
# ------------------------------------------------------------

CREATE TABLE `txp_discuss` (
  `discussid` int(6) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `parentid` int(8) NOT NULL DEFAULT '0',
  `name` varchar(255) NOT NULL DEFAULT '',
  `email` varchar(254) NOT NULL DEFAULT '',
  `web` varchar(255) NOT NULL DEFAULT '',
  `ip` varchar(100) NOT NULL DEFAULT '',
  `posted` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `message` text NOT NULL,
  `visible` tinyint(4) NOT NULL DEFAULT '1',
  PRIMARY KEY (`discussid`),
  KEY `parentid` (`parentid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 PACK_KEYS=1;

LOCK TABLES `txp_discuss` WRITE;
/*!40000 ALTER TABLE `txp_discuss` DISABLE KEYS */;

INSERT INTO `txp_discuss` (`discussid`, `parentid`, `name`, `email`, `web`, `ip`, `posted`, `message`, `visible`)
VALUES
	(000001,1,'Donald Swain','donald.swain@example.com','example.com','127.0.0.1','2005-07-22 14:11:32','<p>I enjoy your site very much.</p>',1);

/*!40000 ALTER TABLE `txp_discuss` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table txp_discuss_ipban
# ------------------------------------------------------------

CREATE TABLE `txp_discuss_ipban` (
  `ip` varchar(255) NOT NULL DEFAULT '',
  `name_used` varchar(255) NOT NULL DEFAULT '',
  `date_banned` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `banned_on_message` int(8) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ip`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;



# Affichage de la table txp_discuss_nonce
# ------------------------------------------------------------

CREATE TABLE `txp_discuss_nonce` (
  `issue_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `nonce` varchar(255) NOT NULL DEFAULT '',
  `used` tinyint(4) NOT NULL DEFAULT '0',
  `secret` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`nonce`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

LOCK TABLES `txp_discuss_nonce` WRITE;
/*!40000 ALTER TABLE `txp_discuss_nonce` DISABLE KEYS */;

INSERT INTO `txp_discuss_nonce` (`issue_time`, `nonce`, `used`, `secret`)
VALUES
	('2013-10-17 15:07:35','a1d10c436e5986c7c0810ebe70110d3e',0,''),
	('2013-10-17 15:07:25','349f1adcf396f5d45f9f092445f709ce',0,''),
	('2013-08-05 13:29:48','df55e9e0ef058204bbec1080de059941',1,''),
	('2013-08-05 13:36:54','e4fcb27b191f0c720e365dce15ce7a17',0,'20bcf0fa6ca19f6df54186418635495e'),
	('2013-08-05 13:34:00','8bd644fa891ea7d1bc9e014997b35a2c',0,''),
	('2013-08-05 13:31:38','6a879431956881a0923b9225ebef3214',0,''),
	('2013-08-05 13:31:12','041aea6ae736becee5f3d1eee3776f5d',0,''),
	('2013-08-05 13:30:09','97f3d23512786c2e9228ee14b370df01',1,''),
	('2013-08-05 13:29:59','cc47801f85ceba82266dd32b3d8d0d73',1,'');

/*!40000 ALTER TABLE `txp_discuss_nonce` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table txp_file
# ------------------------------------------------------------

CREATE TABLE `txp_file` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `filename` varchar(255) NOT NULL DEFAULT '',
  `title` varchar(255) DEFAULT NULL,
  `category` varchar(255) NOT NULL DEFAULT '',
  `permissions` varchar(32) NOT NULL DEFAULT '0',
  `description` text NOT NULL,
  `downloads` int(4) unsigned NOT NULL DEFAULT '0',
  `status` smallint(6) NOT NULL DEFAULT '4',
  `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `size` bigint(20) DEFAULT NULL,
  `author` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  UNIQUE KEY `filename` (`filename`),
  KEY `author_idx` (`author`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 PACK_KEYS=0;

LOCK TABLES `txp_file` WRITE;
/*!40000 ALTER TABLE `txp_file` DISABLE KEYS */;

INSERT INTO `txp_file` (`id`, `filename`, `title`, `category`, `permissions`, `description`, `downloads`, `status`, `modified`, `created`, `size`, `author`)
VALUES
	(1,'1_01-initialisation_taches_1372004035.csv','Intialisation taches','jmd_csv','','',0,4,'2013-06-23 16:17:21','2013-06-23 16:17:21',1249,'admin');

/*!40000 ALTER TABLE `txp_file` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table txp_form
# ------------------------------------------------------------

CREATE TABLE `txp_form` (
  `name` varchar(64) NOT NULL DEFAULT '',
  `type` varchar(28) NOT NULL DEFAULT '',
  `Form` text NOT NULL,
  `file_mod_time` datetime DEFAULT NULL,
  PRIMARY KEY (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 PACK_KEYS=1;

LOCK TABLES `txp_form` WRITE;
/*!40000 ALTER TABLE `txp_form` DISABLE KEYS */;

INSERT INTO `txp_form` (`name`, `type`, `Form`, `file_mod_time`)
VALUES
	('Links','link','<p><txp:link /><br />\n<txp:link_description /></p>','2015-11-23 16:37:44'),
	('comments','comment','<article>\n	<!-- add a permlink so people can link direct to this comment -->\n	<h3 class=\"comment-anchor\">\n		<txp:if_variable name=\"comment-preview\" value=\"no\">\n    		<txp:comment_permlink anchor=\"1\">#<txp:comment_id /></txp:comment_permlink>\n		<txp:else />\n			#Preview\n		</txp:if_variable>\n	</h3>\n	<h2 class=\"p comment-data\">\n		<span data-picto=\"\" class=\"picto\"><strong>Utilisateur&nbsp;:</strong></span><txp:comment_name /> \n		| \n		<time datetime=\"<txp:comment_time format=\'iso8601\' />\" itemprop=\"commentTime\"><txp:comment_time />				\n				<txp:if_variable name=\"comment-preview\" value=\"no\">\n					(<txp:comment_time format=\"since\" />)\n				</txp:if_variable>\n		</time>\n	</h2>\n\n  <div itemprop=\"commentText\" class=\"comment-body\">\n    <txp:comment_message />\n  </div>\n</article>','2015-11-23 16:37:44'),
	('default','article','<txp:if_individual_article>\n<h1 class=\"entry-title\"><txp:permlink><txp:title /></txp:permlink></h1>\n<txp:else />\n<h3 class=\"entry-title\"><txp:permlink><txp:title /></txp:permlink></h3>\n</txp:if_individual_article>\n\n<p class=\"published\"><txp:posted /></p>\n\n<div class=\"entry-content\">\n<txp:body />\n</div>\n\n<address class=\"vcard author\">&#8212; <span class=\"fn\"><txp:author /></span></address>\n\n<p class=\"tags\"><txp:category1 title=\"1\" link=\"1\" />, <txp:category2 title=\"1\" link=\"1\" /></p>\n\n<txp:comments_invite wraptag=\"p\" />\n\n<div class=\"divider\"><txp:image id=\"1\" /></div>\n\n','2015-11-23 16:37:44'),
	('comment_form','comment','<txp:hide>\n============\nModule comment_form.comment appelé depuis le module default.txp\n============\n</txp:hide>\n\n<txp:comments_error wraptag=\"ul\" break=\"li\" />\n\n<fieldset>\n	<legend>Ajouter un commentaire</legend>\n\n\n	<div class=\"hide\">\n		<txp:comment_name_input />\n	</div>\n	<div class=\"hide\">\n		<txp:comment_email_input />\n	</div>\n\n	<div class=\"form-item titre-comment input-title\">\n		<input type=\"text\" name=\"title-comment\" value=\"\" placeholder=\"Titre du commentaire\" />\n	</div>\n	\n	<div class=\"form-item\">\n		<txp:comment_message_input />\n	</div>\n	\n	<div class=\"notice small\">\n		<p>\n			Vous pouvez enrichir votre message à l\'aide de la Syntaxe Textile. <a href=\"<txp:site_url />template/textile-reference/fr/index.html\" \n			   onclick=\"window.open(this.href,\'textile_reference\',\'height=400,width=600,scrollbars=1\'); return false;\">Aide Textile</a>.\n		</p>\n		<p>Vous devez prévisualiser votre message avant de pouvoir l\'envoyer.</p>\n	</div>\n	\n	<div class=\"btn-wrap\">\n		<txp:comment_preview />\n		<txp:comment_submit />\n	</div>\n</fieldset>\n','2015-11-23 16:37:44'),
	('files','file','<txp:text item=\"file\" />: \n<txp:file_download_link>\n<txp:file_download_name /> [<txp:file_download_size format=\"auto\" decimals=\"2\" />]\n</txp:file_download_link>\n<br />\n<txp:text item=\"category\" />: <txp:file_download_category /><br />\n<txp:text item=\"download\" />: <txp:file_download_downloads />','2015-11-23 16:37:44'),
	('comments_display','article','<txp:if_comments_allowed>\n	<button id=\"add-comment\" class=\"btn\" type=\"button\"><span class=\"picto\" data-picto=\"&#43;&#59160;\"><strong>Ajouter une tache</strong></span></button>\n	<div id=\"comment-form\" class=\"clearfix\">\n		<txp:if_comments_preview>\n			<txp:variable name=\"comment-preview\" value=\"yes\" />\n			<div id=\"cpreview\">\n				<txp:comments_preview wraptag=\"div\" class=\"comment-preview comment\" />\n			</div>	\n		</txp:if_comments_preview>\n		\n		<txp:comments_form /> 		\n	</div>\n</txp:if_comments_allowed>\n\n<txp:if_comments>	\n	<h2><txp:comments_count /> commentaire(s)</h2>\n	<txp:variable name=\"comment-preview\" value=\"no\" />\n	<txp:comments class=\"comments-list\" breakclass=\"comment\"/>\n	\n<txp:else />\n	<h2>Il n\'y a encore aucun commentaire</h2>\n</txp:if_comments>\n\n\n\n\n','2015-11-23 16:37:44'),
	('js_bottom','misc','<!-- Javascript bottom -->\n	<!-- Données Json de la page -->\n	<txp:output_form form=\"page-data-json\" />\n\n	<!-- <script src=\"<txp:site_url />template/js/jquery-1.7.2.min.js\"></script> -->\n	<script src=\"<txp:site_url />template/js/jquery-1.10.2.min.js\"></script>\n	<script src=\"<txp:site_url />/template/js/jquery.form.js\"></script>\n	\n	<!-- <script src=\"<txp:site_url />/template/js/jquery.tools.min.js\"></script> -->\n	<script src=\"<txp:site_url />/template/js/stupidtable.min.js\"></script>\n		\n	<script src=\"<txp:site_url />/template/js/sacripant.js\"></script>\n\n	<txp:cbe_frontauth_if_connected level=\"1\">\n			<script src=\"<txp:site_url />/template/js/finance.js\"></script>\n		<txp:if_section name=\"\">\n			<script src=\"<txp:site_url />/template/js/CA.js\"></script>\n		</txp:if_section>\n	</txp:cbe_frontauth_if_connected>','2015-11-20 16:08:47'),
	('start','misc','<!doctype html>\n<!-- paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ -->\n<!--[if lt IE 7]> <html class=\"no-js lt-ie9 lt-ie8 lt-ie7\" lang=\"fr\"> <![endif]-->\n<!--[if IE 7]>    <html class=\"no-js lt-ie9 lt-ie8\" lang=\"fr\"> <![endif]-->\n<!--[if IE 8]>    <html class=\"no-js lt-ie9\" lang=\"fr\"> <![endif]-->\n<!-- Consider adding a manifest.appcache: h5bp.com/d/Offline -->\n<!--[if gt IE 8]><!--> <html class=\"no-js\" lang=\"fr\"> <!--<![endif]-->\n\n<head>\n	<meta charset=\"utf-8\" />\n	<meta name=\"author\" content=\"sacripant - Thomas Jund\" />\n	<meta name=\"copyright\" content=\"©sacripant.fr\" />\n	<meta name=\"description\" content=\"Memento, gesitonnaire de projet sous Textpattern\" />\n	\n	<title>\n		<txp:if_individual_article>\n			<txp:title /> –\n		</txp:if_individual_article>\n		Memento\n	</title>\n	\n<!-- affichage favicon -->\n	<!-- Chrome, Safari, IE -->\n	<link rel=\"shortcut icon\" href=\"<txp:site_url />favicon.ico\">\n\n	<!-- Firefox, Opera (Chrome and Safari say thanks but no thanks) -->\n	<link rel=\"icon\" href=\"<txp:site_url />favicon.png\">\n\n<!-- CSS -->\n\n	<link rel=\"stylesheet\" href=\"<txp:site_url />template/css/fonts.css\" media=\"all\" />\n	<link rel=\"stylesheet\" href=\"<txp:site_url />template/css/reset.css\" media=\"all\" />\n	<link rel=\"stylesheet\" href=\"<txp:site_url />template/css/typography.css\" media=\"all\" />\n	<link rel=\"stylesheet\" href=\"<txp:site_url />template/css/forms.css\" type=\"text/css\" media=\"screen\" />\n	<link rel=\"stylesheet\" href=\"<txp:site_url />template/css/default.css\" type=\"text/css\" media=\"screen\" />	\n	\n<txp:hide>	<txp:css name=\"reset,typography,forms,default\" format=\"link\" /></txp:hide>\n	\n	\n	<!-- MODERNIZR, VERSION DE DEV, NON COMPRESSÉ ET FULL -->\n	<txp:hide>	<script src=\"js/modernizr-2.5.3.js\"></script></txp:hide>\n	<!-- Noter les fonctionnalités utilisé pour charger une version custom :\n		* html5shiv\n		* YepNope\n		* Class js/no-js \n	-->\n	\n\n\n<!-- Script permettant de rafraichir la page auto après mise à jour des css - JS - html FACILITE L\'INTEGRAITON\n	LIGNES À EFFACER LORS DE L\'INCORPORATION AU CMS - ou de la mise en ligne en prod -->\n<txp:hide>	<script src=\"<txp:site_url />template/js/live.js\"></script></txp:hide>\n	\n\n</head>\n\n','2015-11-23 16:37:44'),
	('odd_even','misc','<txp:hide>\n=======================\nbascule d\'une variable odd / even\nà utiliser pour les liste, les tableaux\n=======================\n</txp:hide>\n\n<txp:if_variable name=\"odd-even\" value=\" even\">\n    <txp:variable name=\"odd-even\" value=\" odd\" />\n<txp:else />\n    <txp:variable name=\"odd-even\" value=\" even\" />\n</txp:if_variable>','2015-11-23 16:37:44'),
	('rah_eo_From-newTodo.html','misc','; Content-type: text/html\n<txp:cbe_frontauth_if_logged>\r\n	<txp:adi_gps />\r\n	\r\n	<h1>Ajouter une tache au projet <em><txp:smd_query column=\"Title\" table=\"textpattern\" where=\'ID=<txp:variable name=\"idProjet\" />\' >{Title}</txp:smd_query></em></h1>\r\n\r\n	<txp:variable name=\"statut\"><txp:smd_query column=\"value\" table=\"custom_fields\" where=\"name=\'custom_2_set\' ORDER BY value\" break=\",\">{value}</txp:smd_query></txp:variable>\r\n\r\n	<txp:mem_simple_form table=\"textpattern\" id_field=\"ID\">\r\n			<txp:mem_form_secret name=\"string_Section\" value=\'todo\' />\r\n			<txp:mem_form_secret name=\"now_Posted\" value=\'\' />\r\n			<txp:mem_form_secret name=\"now_LastMod\" value=\'\' />\r\n			<txp:mem_form_secret name=\"now_feed_time\" value=\'\' />\r\n			<txp:mem_form_secret name=\"string_AuthorID\" value=\'<txp:cbe_frontauth_whois />\' />\r\n			<txp:mem_form_secret name=\"string_LastModID\" value=\'<txp:cbe_frontauth_whois />\' />\r\n			<txp:mem_form_secret name=\"randuid_uid\" value=\'\' />\r\n			<txp:mem_form_secret name=\"string_custom_1\" value=\'<txp:variable name=\"idProjet\" />\' />				\r\n\r\n			<div class=\"form-item\">\r\n				<txp:mem_form_textarea rows=\"2\" cols=\"30\" name=\"string_Title\" label=\"Titre\" break=\"\" default=\'\' />					\r\n			</div>\r\n			<div class=\"form-item\">\r\n				<txp:mem_form_select_category name=\"string_category1\" label=\"Categorie\" break=\"\" />\r\n			</div>\r\n			<div class=\"form-item\">\r\n				<txp:mem_form_select name=\"string_custom_2\" items=\'<txp:variable name=\"statut\" />\' values=\'<txp:variable name=\"statut\" />\' label=\"Statut\" break=\"\" />\r\n			</div>\r\n			<div class=\"form-item\">\r\n				<txp:mem_form_submit button=\"1\" label=\"Save\" />\r\n			</div>\r\n	</txp:mem_simple_form>\r\n	\r\n	<txp:mem_simple_if_ps name=\"string_Title\">\r\n		<txp:variable name=\"titleUrl\"><txp:smd_wrap transform=\"sanitize|url_title\" item=\'<txp:mem_simple_ps name=\"string_Title\" />\' /></txp:variable>\r\n		<txp:smd_query query=\'UPDATE textpattern \r\n			SET url_title =\'\'<txp:variable name=\"titleUrl\" />\'\'\r\n	   	WHERE uid=\'\'<txp:mem_simple_ps name=\"randuid_uid\" />\'\';\' \r\n	   />\r\n	</txp:mem_simple_if_ps>\r\n	\r\n</txp:cbe_frontauth_if_logged>		','2012-07-17 11:57:10'),
	('titre-print-svg','misc','<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.0//EN\" \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n<svg version=\"1.0\" id=\"Calque_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n	 width=\"70mm\" height=\"20mm\" viewBox=\"0 0 198.425 56.693\">\n\n<g id=\"vectors\">\n	<txp:if_variable name=\"devis\" value=\"1\">\n	<g id=\"devis\">\n		<path fill=\"none\" stroke=\"#000000\" stroke-width=\"0.5\" d=\"M0.284,55.978V54.61c0.408-0.239,0.864-0.45,1.368-0.63\n			s1.032-0.318,1.584-0.414V33.19c-0.552-0.12-1.086-0.271-1.602-0.45s-0.966-0.378-1.35-0.594v-1.368h4.176\n			c0.408,0,0.912-0.012,1.512-0.036c0.6-0.023,1.224-0.054,1.872-0.09c0.648-0.035,1.278-0.072,1.89-0.107\n			c0.612-0.037,1.134-0.055,1.566-0.055c2.088,0,3.954,0.276,5.598,0.828c1.644,0.553,3.036,1.356,4.176,2.412\n			c1.14,1.057,2.016,2.364,2.628,3.924c0.612,1.561,0.918,3.36,0.918,5.4c0,1.992-0.288,3.805-0.864,5.436\n			c-0.576,1.633-1.44,3.024-2.592,4.176c-1.152,1.152-2.61,2.047-4.374,2.683s-3.834,0.954-6.21,0.954\n			c-0.312,0-0.732-0.018-1.26-0.055c-0.528-0.035-1.092-0.071-1.692-0.107c-0.6-0.036-1.2-0.072-1.8-0.107\n			c-0.601-0.037-1.128-0.055-1.584-0.055H0.284z M10.832,32.83c-0.432,0-0.864,0.013-1.296,0.037\n			c-0.432,0.023-0.805,0.06-1.116,0.107v20.844c0.096,0.024,0.264,0.043,0.504,0.055c0.24,0.012,0.486,0.023,0.738,0.035\n			c0.252,0.013,0.498,0.024,0.738,0.036c0.24,0.013,0.42,0.019,0.54,0.019c1.392,0,2.574-0.289,3.546-0.864\n			c0.972-0.576,1.77-1.356,2.394-2.341c0.624-0.982,1.08-2.135,1.368-3.455s0.432-2.724,0.432-4.213c0-1.318-0.15-2.592-0.45-3.815\n			c-0.3-1.224-0.762-2.315-1.386-3.276c-0.624-0.959-1.434-1.728-2.43-2.304C13.417,33.119,12.223,32.83,10.832,32.83z\"/>\n		<path fill=\"none\" stroke=\"#000000\" stroke-width=\"0.5\" d=\"M43.555,52.955c-0.192,0.408-0.499,0.822-0.918,1.241\n			c-0.42,0.421-0.936,0.792-1.548,1.116c-0.612,0.324-1.32,0.588-2.124,0.792s-1.674,0.306-2.61,0.306\n			c-1.488,0-2.808-0.222-3.96-0.666c-1.152-0.443-2.112-1.08-2.88-1.908c-0.769-0.828-1.35-1.817-1.746-2.969\n			c-0.396-1.152-0.594-2.449-0.594-3.889c0-3.072,0.804-5.412,2.412-7.02s3.84-2.412,6.696-2.412c1.224,0,2.37,0.168,3.438,0.504\n			c1.067,0.336,1.956,0.888,2.664,1.656c0.708,0.768,1.2,1.775,1.476,3.023s0.258,2.771-0.054,4.572H32.755\n			c0.024,1.896,0.51,3.408,1.458,4.535c0.948,1.129,2.346,1.692,4.194,1.692c0.792,0,1.614-0.12,2.466-0.36\n			c0.852-0.239,1.518-0.551,1.998-0.936L43.555,52.955z M36.119,39.598c-0.477,0-0.9,0.085-1.27,0.252\n			c-0.37,0.168-0.692,0.474-0.966,0.918s-0.495,1.044-0.662,1.8c-0.167,0.756-0.286,1.71-0.357,2.862h5.76\n			c0.167-1.872,0.061-3.312-0.321-4.32C37.919,40.102,37.192,39.598,36.119,39.598z\"/>\n		<path fill=\"none\" stroke=\"#000000\" stroke-width=\"0.5\" d=\"M53.527,56.41l-7.2-16.197c-0.696-0.24-1.332-0.529-1.908-0.866v-1.368\n			h9.468v1.332c-0.312,0.169-0.63,0.331-0.954,0.488c-0.324,0.156-0.69,0.294-1.098,0.414l3.348,9.242l0.684,2.42h0.072l0.576-2.455\n			l3.06-9.207c-0.384-0.096-0.738-0.217-1.062-0.361c-0.324-0.145-0.63-0.312-0.918-0.505v-1.368h6.948v1.368\n			c-0.24,0.169-0.535,0.325-0.882,0.469c-0.348,0.145-0.738,0.276-1.17,0.397l-6.3,15.765L53.527,56.41z\"/>\n		<path fill=\"none\" stroke=\"#000000\" stroke-width=\"0.5\" d=\"M75.234,55.978h-9.936V54.61c0.36-0.192,0.731-0.355,1.116-0.488\n			c0.384-0.132,0.804-0.259,1.26-0.38V40.5l-2.376-0.289v-1.369c0.36-0.143,0.81-0.287,1.35-0.432c0.54-0.144,1.11-0.27,1.71-0.377\n			c0.6-0.109,1.188-0.204,1.764-0.289c0.576-0.084,1.08-0.149,1.512-0.197h1.224v16.197c0.48,0.121,0.912,0.247,1.296,0.379\n			c0.383,0.133,0.744,0.295,1.08,0.487V55.978z M67.134,32.074c0-0.84,0.285-1.5,0.854-1.979c0.569-0.479,1.305-0.72,2.207-0.72\n			c0.901,0,1.637,0.24,2.206,0.72s0.854,1.14,0.854,1.979c0,0.816-0.284,1.465-0.854,1.944c-0.569,0.48-1.305,0.72-2.206,0.72\n			c-0.902,0-1.637-0.239-2.207-0.72C67.419,33.539,67.134,32.89,67.134,32.074z\"/>\n		<path fill=\"none\" stroke=\"#000000\" stroke-width=\"0.5\" d=\"M86.502,52.054c0-0.624-0.223-1.164-0.666-1.62\n			c-0.444-0.456-0.996-0.876-1.656-1.261c-0.66-0.383-1.38-0.768-2.159-1.151c-0.781-0.384-1.501-0.833-2.161-1.351\n			c-0.661-0.516-1.212-1.121-1.656-1.817c-0.444-0.696-0.666-1.548-0.666-2.556c0-0.721,0.168-1.374,0.504-1.963\n			c0.335-0.588,0.792-1.085,1.368-1.494c0.576-0.407,1.266-0.725,2.07-0.953c0.803-0.229,1.673-0.342,2.61-0.342\n			c1.296,0,2.502,0.102,3.618,0.306s2.094,0.485,2.934,0.847c-0.096,0.768-0.288,1.59-0.576,2.465\n			c-0.288,0.877-0.563,1.674-0.828,2.395h-1.224l-1.512-3.672c-0.288-0.12-0.589-0.198-0.9-0.234\n			c-0.312-0.035-0.66-0.054-1.044-0.054c-0.72,0-1.266,0.21-1.638,0.63s-0.559,0.895-0.559,1.422c0,0.6,0.222,1.122,0.666,1.566\n			s0.996,0.857,1.656,1.242c0.66,0.384,1.38,0.768,2.16,1.151c0.779,0.384,1.5,0.823,2.16,1.313c0.66,0.492,1.212,1.075,1.656,1.746\n			c0.443,0.673,0.666,1.477,0.666,2.412c0,1.656-0.673,2.959-2.017,3.906c-1.344,0.949-3.145,1.422-5.399,1.422\n			c-1.152,0-2.341-0.12-3.564-0.359c-1.224-0.24-2.28-0.576-3.168-1.008c0.048-0.864,0.252-1.74,0.612-2.629\n			c0.36-0.887,0.744-1.68,1.152-2.375h1.224l1.764,3.924c0.264,0.191,0.558,0.306,0.882,0.342c0.324,0.035,0.63,0.054,0.918,0.054\n			c0.696,0,1.332-0.204,1.908-0.612C86.214,53.338,86.502,52.774,86.502,52.054z\"/>\n	</g>\n	<txp:else />\n	<g id=\"facture\">\n		<path display=\"inline\" fill=\"none\" stroke=\"#000000\" stroke-width=\"0.5\" d=\"M8.275,53.566c1.104,0.145,2.148,0.492,3.132,1.044\n			v1.368H0.284V54.61c0.383-0.216,0.792-0.414,1.224-0.594c0.432-0.181,0.888-0.329,1.368-0.45V33.19\n			c-0.552-0.12-1.039-0.275-1.458-0.468c-0.42-0.191-0.798-0.384-1.134-0.576v-1.368h18.828c0,0.48-0.024,1.003-0.072,1.566\n			c-0.048,0.563-0.103,1.14-0.162,1.728c-0.06,0.589-0.132,1.164-0.216,1.729c-0.084,0.564-0.174,1.086-0.27,1.566h-1.476\n			l-1.656-4.248H8.275v9.467h4.932l1.62-2.771h1.08c0.095,0.625,0.162,1.284,0.198,1.98c0.036,0.695,0.054,1.392,0.054,2.088\n			c-0.024,0.72-0.054,1.416-0.09,2.088c-0.036,0.672-0.09,1.271-0.162,1.8h-1.08l-1.62-2.844H8.275V53.566z\"/>\n		<path display=\"inline\" fill=\"none\" stroke=\"#000000\" stroke-width=\"0.5\" d=\"M37.183,50.757c0,0.529,0.006,0.984,0.018,1.369\n			c0.012,0.384,0.042,0.791,0.09,1.224l2.484,0.36v1.26c-0.288,0.145-0.679,0.287-1.17,0.432c-0.492,0.145-1.008,0.283-1.548,0.414\n			c-0.54,0.133-1.074,0.24-1.602,0.324c-0.528,0.084-0.996,0.149-1.404,0.197h-1.224c-0.24-0.551-0.384-1.104-0.432-1.655\n			c-0.048-0.552-0.084-1.224-0.108-2.017h-0.18c-0.121,0.48-0.324,0.943-0.612,1.387c-0.288,0.444-0.654,0.84-1.098,1.188\n			c-0.444,0.349-0.966,0.631-1.566,0.846c-0.6,0.217-1.272,0.324-2.016,0.324c-0.792,0-1.524-0.12-2.196-0.359\n			c-0.672-0.24-1.26-0.576-1.764-1.008c-0.504-0.433-0.9-0.955-1.188-1.566c-0.288-0.611-0.432-1.302-0.432-2.07\n			c0-1.08,0.204-1.967,0.612-2.664c0.408-0.695,1.05-1.266,1.926-1.709c0.876-0.444,2.004-0.775,3.384-0.99\n			c1.38-0.217,3.054-0.372,5.022-0.469c0.192-2.063,0.108-3.576-0.252-4.535c-0.36-0.96-1.14-1.44-2.34-1.44\n			c-0.745,0-1.428,0.12-2.052,0.36l-1.692,4.319h-1.584c-0.192-0.288-0.378-0.617-0.558-0.989c-0.18-0.373-0.348-0.769-0.504-1.188\n			c-0.156-0.42-0.288-0.847-0.396-1.278s-0.186-0.852-0.234-1.26c0.912-0.624,2.088-1.116,3.528-1.477\n			c1.44-0.359,2.964-0.539,4.572-0.539c1.368,0,2.484,0.15,3.348,0.449c0.864,0.301,1.542,0.709,2.034,1.225\n			c0.492,0.516,0.833,1.122,1.026,1.818c0.192,0.695,0.288,1.439,0.288,2.231c0,1.44-0.03,2.742-0.09,3.906\n			S37.183,49.535,37.183,50.757z M29.083,53.53c0.504,0,0.936-0.095,1.296-0.288c0.36-0.191,0.666-0.42,0.918-0.684\n			s0.444-0.552,0.576-0.864c0.132-0.312,0.234-0.587,0.306-0.827v-3.601c-1.128,0.024-2.052,0.097-2.772,0.216\n			c-0.72,0.121-1.284,0.318-1.692,0.594c-0.409,0.276-0.69,0.625-0.846,1.045c-0.156,0.42-0.234,0.93-0.234,1.529\n			c0,0.912,0.216,1.62,0.648,2.124S28.315,53.53,29.083,53.53z\"/>\n		<path display=\"inline\" fill=\"none\" stroke=\"#000000\" stroke-width=\"0.5\" d=\"M56.731,53.062c-0.168,0.48-0.444,0.918-0.828,1.314\n			c-0.384,0.396-0.846,0.75-1.386,1.062s-1.152,0.552-1.836,0.72c-0.684,0.168-1.398,0.252-2.142,0.252\n			c-1.584,0-2.946-0.222-4.086-0.666c-1.14-0.443-2.083-1.08-2.826-1.908c-0.744-0.828-1.296-1.823-1.656-2.987\n			c-0.36-1.164-0.54-2.454-0.54-3.87c0-3.048,0.833-5.382,2.502-7.002c1.667-1.62,4.038-2.43,7.11-2.43\n			c1.176,0,2.255,0.125,3.24,0.377c0.984,0.253,1.8,0.547,2.448,0.883c-0.048,0.408-0.114,0.858-0.198,1.35\n			c-0.084,0.492-0.18,0.984-0.288,1.477c-0.108,0.492-0.234,0.972-0.378,1.439c-0.144,0.469-0.288,0.858-0.432,1.17h-1.764\n			l-1.512-4.283c-0.168-0.12-0.349-0.211-0.54-0.271c-0.192-0.06-0.48-0.09-0.864-0.09c-0.625,0-1.165,0.114-1.62,0.342\n			c-0.456,0.229-0.846,0.618-1.17,1.17c-0.324,0.553-0.564,1.284-0.72,2.196c-0.157,0.912-0.234,2.04-0.234,3.384\n			c0,0.984,0.108,1.89,0.324,2.718s0.545,1.549,0.99,2.16c0.444,0.612,1.002,1.093,1.674,1.439c0.671,0.35,1.463,0.522,2.376,0.522\n			c0.84,0,1.572-0.12,2.196-0.36c0.624-0.239,1.152-0.527,1.584-0.863L56.731,53.062z\"/>\n		<path display=\"inline\" fill=\"none\" stroke=\"#000000\" stroke-width=\"0.5\" d=\"M57.595,38.876c0.912-0.592,1.872-1.012,2.88-1.258\n			v-2.916c0.144-0.145,0.39-0.282,0.738-0.414c0.348-0.133,0.72-0.252,1.116-0.36s0.786-0.21,1.17-0.306\n			c0.384-0.096,0.696-0.168,0.936-0.217h1.224v4.572h4.752v2.34h-4.752v9.273c0,1.48,0.186,2.508,0.558,3.08\n			c0.372,0.572,0.99,0.858,1.854,0.858c0.432,0,0.918-0.03,1.458-0.09s1.038-0.174,1.494-0.342l0.252,1.188\n			c-0.216,0.215-0.534,0.443-0.954,0.684c-0.42,0.24-0.9,0.468-1.44,0.684c-0.54,0.217-1.128,0.396-1.764,0.54\n			c-0.636,0.144-1.302,0.216-1.998,0.216c-1.561,0-2.724-0.406-3.492-1.218c-0.768-0.812-1.152-2.127-1.152-3.942V40.318h-2.88\n			V38.876z\"/>\n		<path display=\"inline\" fill=\"none\" stroke=\"#000000\" stroke-width=\"0.5\" d=\"M74.227,48.833c0-1.516,0.036-2.922,0.108-4.221\n			c0.072-1.299,0.108-2.671,0.108-4.114l-2.376-0.288v-1.369c0.384-0.143,0.858-0.287,1.422-0.432\n			c0.564-0.144,1.146-0.27,1.746-0.377c0.6-0.109,1.182-0.204,1.746-0.289c0.563-0.084,1.038-0.149,1.422-0.197h1.224\n			c0,1.8-0.036,3.57-0.108,5.31c-0.072,1.74-0.108,3.45-0.108,5.13c0,1.969,0.198,3.385,0.594,4.248\n			c0.396,0.864,1.134,1.296,2.213,1.296c0.744,0,1.434-0.282,2.07-0.849c0.637-0.564,1.158-1.473,1.566-2.725v-9.458l-2.34-0.288\n			v-1.369c0.359-0.143,0.811-0.287,1.35-0.432c0.541-0.144,1.104-0.27,1.691-0.377c0.588-0.109,1.17-0.204,1.746-0.289\n			c0.576-0.084,1.08-0.149,1.512-0.197h1.225v15.875l2.377,0.289v1.26c-0.338,0.145-0.756,0.287-1.26,0.432\n			s-1.033,0.283-1.584,0.414c-0.553,0.133-1.1,0.24-1.639,0.324c-0.541,0.084-1.025,0.149-1.459,0.197h-1.223l-0.252-4.283h-0.145\n			c-0.121,0.504-0.336,1.014-0.648,1.529c-0.312,0.518-0.715,0.984-1.205,1.404c-0.492,0.42-1.074,0.762-1.746,1.026\n			c-0.673,0.264-1.417,0.396-2.232,0.396c-0.913,0-1.723-0.114-2.43-0.342c-0.708-0.229-1.314-0.633-1.818-1.209\n			c-0.504-0.577-0.888-1.354-1.152-2.327C74.358,51.557,74.227,50.325,74.227,48.833z\"/>\n		<path display=\"inline\" fill=\"none\" stroke=\"#000000\" stroke-width=\"0.5\" d=\"M104.502,42.119c-0.287,0.145-0.625,0.385-1.008,0.722\n			c-0.385,0.337-0.732,0.891-1.045,1.661v9.242c0.48,0.049,0.961,0.139,1.441,0.271c0.479,0.133,0.959,0.331,1.439,0.596v1.368\n			h-10.44V54.61c0.432-0.241,0.84-0.422,1.224-0.542c0.384-0.121,0.768-0.229,1.152-0.326V40.5l-2.376-0.289v-1.369\n			c0.384-0.167,0.857-0.323,1.422-0.467c0.563-0.145,1.146-0.271,1.746-0.379c0.6-0.107,1.182-0.197,1.747-0.27\n			c0.562-0.072,1.037-0.132,1.422-0.18h1.223v4.787h0.145c0.191-0.527,0.475-1.08,0.846-1.655c0.373-0.576,0.811-1.104,1.314-1.584\n			s1.057-0.864,1.656-1.152s1.225-0.419,1.871-0.396c0.264,0.336,0.492,0.81,0.686,1.422c0.191,0.611,0.348,1.193,0.467,1.746v1.404\n			H104.502z\"/>\n		<path display=\"inline\" fill=\"none\" stroke=\"#000000\" stroke-width=\"0.5\" d=\"M127.075,52.955c-0.193,0.408-0.498,0.822-0.918,1.241\n			c-0.42,0.421-0.938,0.792-1.549,1.116s-1.32,0.588-2.123,0.792c-0.805,0.204-1.674,0.306-2.611,0.306\n			c-1.488,0-2.807-0.222-3.959-0.666c-1.152-0.443-2.113-1.08-2.881-1.908s-1.35-1.817-1.746-2.969\n			c-0.395-1.152-0.594-2.449-0.594-3.889c0-3.072,0.805-5.412,2.412-7.02s3.84-2.412,6.695-2.412c1.225,0,2.371,0.168,3.439,0.504\n			c1.066,0.336,1.955,0.888,2.664,1.656c0.707,0.768,1.199,1.775,1.475,3.023s0.258,2.771-0.053,4.572h-11.053\n			c0.023,1.896,0.51,3.408,1.459,4.535c0.947,1.129,2.346,1.692,4.193,1.692c0.791,0,1.613-0.12,2.467-0.36\n			c0.852-0.239,1.518-0.551,1.996-0.936L127.075,52.955z M119.637,39.598c-0.477,0-0.9,0.085-1.27,0.252\n			c-0.369,0.168-0.691,0.474-0.967,0.918c-0.273,0.444-0.494,1.044-0.66,1.8c-0.168,0.756-0.287,1.71-0.359,2.862h5.762\n			c0.166-1.872,0.061-3.312-0.322-4.32C121.438,40.102,120.711,39.598,119.637,39.598z\"/>\n	</g>\n	</txp:if_variable>\n	<txp:variable name=\"devis\" value=\"0\" />\n</g>\n<rect fill=\"none\" width=\"198.425\" height=\"56.693\"/>\n</svg>\n','2015-11-23 16:37:44'),
	('header','misc','<header class=\"site-header\">\n	\n	<div id=\"\" class=\"brand\">\n		<h1 class=\"site-name\" data-site-name=\"<txp:site_name />\">\n			<txp:link_to_home><txp:site_name /></txp:link_to_home>\n			<a href=\"#\" class=\"picto infos-memento\" data-picto=\"&#8505;\"><strong>Information</strong></a>	\n		</h1>\n	</div>\n	\n	<txp:cbe_frontauth_if_logged>\n		\n		<txp:variable name=\"article-filter\" value=\'<txp:cbe_frontauth_whois type=\"name\" />\' />\n		\n		<txp:cbe_frontauth_if_logged level=\"1\">\n			<txp:variable name=\"article-filter\" value=\'\' />			\n		</txp:cbe_frontauth_if_logged>\n		\n		\n		<!-- BASCULE PROJETS -->\n		<!-- filtrer les projets none programmés, programmés, en cours, en pause -->\n		<txp:variable name=\"projet-liste\">\n			<txp:smd_query column=\"ID\" table=\"textpattern\" where=\"Section = \'projet\' AND custom_2 in (\'Non programmé\',\'Programmé\',\'En cours\',\'En pause\')\" break=\",\">{ID}</txp:smd_query>\n		</txp:variable>\n\n		<div id=\"\" class=\"bascule-projet\">\n			<label>Changer de projet&nbsp;:</label>\n			<txp:article_custom \n				sort=\"title\"\n				id=\'<txp:variable name=\"projet-liste\" />\' \n				wraptag=\"select\" \n				break=\"\" \n				limit=\"999\" \n				time=\"any\"\n				author=\'<txp:variable name=\"article-filter\" />\'\n			>\n				<txp:if_first_article>\n					<option value=\"\">Projets</option>\n					<option value=\"\">----------</option>\n				</txp:if_first_article>\n				<option <txp:if_article_id>selected=\"selected\"</txp:if_article_id> value=\"<txp:permlink />\"><txp:title /></option>\n			</txp:article_custom>\n		\n			\n		</div>\n		\n		<div class=\"whois-connected\">\n			<h2 class=\"h3 user-connected\">\n				<span class=\"picto\" data-picto=\"&#59394;\"><strong>Utilisateur Connecté :</strong></span> \n				<txp:cbe_frontauth_whois type=\"RealName\" wraptag=\"\" class=\"\"/>\n				<a title=\"Se déconnecter\" class=\"picto\"  data-picto=\"&#10006\" href=\"?logout=1\"><strong>Se déconnecter</strong></a>			\n			</h2>\n		</div>\n		\n	</txp:cbe_frontauth_if_logged>\n</header>','2015-11-20 16:08:47'),
	('rah_eo_Form-EditTodo.html','misc','; Content-type: text/html\n<txp:cbe_frontauth_if_logged>\r\n	<txp:adi_gps />\r\n\r\n	<txp:variable name=\"statut\"><txp:smd_query column=\"value\" table=\"custom_fields\" where=\"name=\'custom_2_set\'\" break=\",\">{value}</txp:smd_query></txp:variable>\r\n\r\n\r\n	<txp:smd_query column=\"*\" table=\"textpattern\" where=\'ID=<txp:variable name=\"ID\" />\' >\r\n\r\n	<txp:variable name=\"idProjet\" value=\"{custom_1}\" />\r\n	<txp:variable name=\"end\" value=\"{Expires}\" />\r\n	<txp:if_variable name=\"end\" value=\"0000-00-00 00:00:00\">\r\n		<txp:variable name=\"end\" value=\"\" />\r\n	</txp:if_variable>\r\n\r\n	<td colspan=\"7\" class=\"inline-form-edit-wrapper\">\r\n		<txp:mem_simple_form table=\"textpattern\" id_field=\"ID\" id_insert=\"0\" redirect_url=\'<txp:permlink id=\"4\" />\'>\r\n			<table>\r\n				<tr>\r\n				\r\n					<txp:mem_form_secret name=\"int_ID\" value=\'{ID}\' />\r\n					<txp:mem_form_secret name=\"now_LastMod\" value=\'\' />\r\n					<txp:mem_form_secret name=\"string_LastModID\" value=\'<txp:cbe_frontauth_whois />\' />				\r\n				\r\n					<td class=\"todo-id\">{ID}</td>\r\n					<td class=\"todo-title\"><txp:mem_form_textarea rows=\"2\" cols=\"30\" name=\"string_Title\" label=\"\" break=\"\" default=\'{Title}\' /></td>\r\n					<td class=\"todo-cat\">{Category1}</td>\r\n					<td class=\"todo-start\">{Posted}</td>\r\n					<td class=\"todo-end\"><txp:mem_form_text name=\"string_expires\" label=\"\" break=\"\" class=\"date-input\" default=\'<txp:variable name=\"end\" />\' /></td>\r\n					<td class=\"todo-statut\"><txp:mem_form_select name=\"string_custom_2\" items=\'<txp:variable name=\"statut\" />\' values=\'<txp:variable name=\"statut\" />\' label=\"\" break=\"\" selected=\'{custom_2}\' /></td>\r\n					<td class=\"todo-action save\"><txp:mem_form_submit button=\"1\" label=\"Save\" /></td>\r\n				</tr>\r\n			</table>\r\n		</txp:mem_simple_form>	\r\n	</td>\r\n\r\n				\r\n	</txp:smd_query>\r\n</txp:cbe_frontauth_if_logged>		','2012-07-17 11:57:10'),
	('tab-todolist-projet','misc','<txp:hide>\n============\nModule tab-todolist-projet appelé depuis le module section-projet.article\n============\nPrépare la structure, les colonnes et le header du tableau des taches du projet\n============\n</txp:hide>\n\n\n<!-- TODO Liste -->\n<h1 class=\"block-title\" data-this=\"Todoliste\">Todoliste</h1>\n\n<!-- filtrage des todos par catégories -->\n<form class=\"filtrage\">\n	<fieldset>\n		<legend>filtrage des taches par catégories</legend>\n		\n		<ul class=\"form-12-12 inline form-list-chk\">\n			<li><input type=\"checkbox\" data-target=\".programme,.en-cours\" id=\"filtre-programme\" checked=\"checked\"> <label for=\"filtre-programme\">Programmé</label></li>\n			<li><input type=\"checkbox\" data-target=\".non-programme,.en-pause\" id=\"filtre-non-programme\" checked=\"checked\"> <label for=\"filtre-non-programme\">Non programmé / En pause</label></li>\n			<li><input type=\"checkbox\" data-target=\".termine,.rejete\" id=\"filtre-termine\"> <label for=\"filtre-termine\">Terminé / Rejeté</label></li>\n		</ul>\n	</fieldset>\n</form>\n\n<!-- Tableaux des todos -->\n<table class=\"todolist-table\">\n	<colgroup>\n		<col class=\"todo-projet-id\">\n		<col class=\"todo-projet-title\">\n		<col class=\"todo-projet-cat\">\n		<col class=\"todo-projet-start\">\n		<col class=\"todo-projet-end\">\n		<col class=\"todo-projet-statut\">\n		<txp:cbe_frontauth_if_connected level=\"1\">			\n			<col class=\"todo-projet-temps\">\n			<col class=\"action edit\">\n		</txp:cbe_frontauth_if_connected>	\n	</colgroup>\n	<thead>\n		<tr>\n			<th scope=\"col\" class=\"type-int\">ID</th>\n			<th scope=\"col\" class=\"type-string\">Titre</th>\n			<th scope=\"col\" class=\"type-string\">Catégorie</th>\n			<th scope=\"col\" class=\"type-string asc\">Start</th>\n			<th scope=\"col\" class=\"type-string\">End</th>\n			<th scope=\"col\" class=\"type-string\">Statut</th>\n			<txp:cbe_frontauth_if_connected level=\"1\">				\n				<th scope=\"col\">Temps</th>\n				<th scope=\"col\">Action</th>\n			</txp:cbe_frontauth_if_connected>	\n		</tr>\n		<!-- ADD TODO BUTTON -->\n		<tr class=\"add-todo-line\">\n			<td colspan=\"8\"><button id=\"add-todo\" class=\"btn\" type=\"button\"><span class=\"picto\" data-picto=\"&#43;&#9776;\"><strong>Ajouter une tache</strong></span></button></td>\n		</tr>\n	</thead>\n	<tbody>\n		\n	<!-- Liste des taches du projet -->\n		<txp:article_custom projet=\'<txp:article_id />\' section=\"todo\" form=\"todolist-table\" break=\"\" sort=\"posted asc\" limit=\"999\" time=\"any\" />\n	</tbody>\n</table>\n\n<!-- Bouton d\'export du tableau au format CSV -->\n<a id=\"csv_export\" class=\"btn\" href=\"<txp:site_url />?rah_external_output=todolist-projet-csv&id=<txp:article_id />\">CSV</a>','2015-11-23 16:37:44'),
	('rah_eo_From-newTodo','misc','; Content-type: text/html\r\n<txp:cbe_frontauth_if_logged level=\"1\">\r\n	<txp:adi_gps />\r\n	<td colspan=\"8\" class=\"inline-form-wrapper\">\r\n	\r\n		<h2 class=\"h3\">Ajouter une tache au projet <em><txp:smd_query column=\"Title\" table=\"textpattern\" where=\'ID=<txp:variable name=\"idProjet\" />\' >{Title}</txp:smd_query></em></h2>\r\n\r\n		<txp:variable name=\"statut\"><txp:smd_query column=\"value\" table=\"custom_fields\" where=\"name=\'custom_2_set\' ORDER BY value\" break=\",\">{value}</txp:smd_query></txp:variable>\r\n		\r\n		<txp:mem_simple_form table=\"textpattern\" id_field=\"ID\">\r\n			<table>\r\n				<colgroup>\r\n					<col class=\"edit-new-title\" />\r\n					<col class=\"edit-new-cat\" />\r\n					<col class=\"edit-new-temps\" />\r\n					<col class=\"edit-new-statut\" />\r\n					<col class=\"edit-new-action save\" />					\r\n				</colgroup>\r\n				<tr>						\r\n					<txp:mem_form_secret name=\"string_Section\" value=\'todo\' />\r\n					<txp:mem_form_secret name=\"now_Posted\" value=\'\' />\r\n					<txp:mem_form_secret name=\"now_LastMod\" value=\'\' />\r\n					<txp:mem_form_secret name=\"now_feed_time\" value=\'\' />\r\n					<txp:mem_form_secret name=\"string_AuthorID\" value=\'<txp:cbe_frontauth_whois />\' />\r\n					<txp:mem_form_secret name=\"string_LastModID\" value=\'<txp:cbe_frontauth_whois />\' />\r\n					<txp:mem_form_secret name=\"randuid_uid\" value=\'\' />\r\n					<txp:mem_form_secret name=\"string_custom_1\" value=\'<txp:variable name=\"idProjet\" />\' />				\r\n\r\n					<td class=\"edit-new-title\"> <txp:mem_form_textarea rows=\"2\" cols=\"30\" name=\"string_Title\" label=\"Titre\" break=\"\" default=\'\' /> </td>\r\n					<td class=\"edit-new-cat\"> \r\n						<txp:mem_form_select_category name=\"string_category1\" label=\"Categorie\" break=\"\" />\r\n						<txp:mem_form_text name=\"string_custom_9\" label=\"Parent\" break=\"\" size=\"4\" required=\"0\" /> \r\n					</td>\r\n					<td class=\"edit-new-temps\"> <txp:mem_form_text name=\"string_custom_3\" label=\"Tps prévu\" break=\"\" size=\"4\" default=\"0\" /> </td>\r\n					<td class=\"edit-new-statut\"> <txp:mem_form_select name=\"string_custom_2\" items=\'<txp:variable name=\"statut\" />\' values=\'<txp:variable name=\"statut\" />\' label=\"Statut\" break=\"\" /> </td>\r\n					<td class=\"action save\"><txp:mem_form_submit class=\"btn\" button=\"1\" label=\"ok\" /></td>\r\n				</tr>\r\n			</table>\r\n		</txp:mem_simple_form>\r\n	\r\n	</td>\r\n	\r\n	<txp:mem_simple_if_ps name=\"string_Title\">\r\n		<txp:variable name=\"titleUrl\"><txp:smd_wrap transform=\"sanitize|url_title\" item=\'<txp:mem_simple_ps name=\"string_Title\" />\' /></txp:variable>\r\n		<txp:smd_query query=\'UPDATE textpattern \r\n			SET url_title =\'\'<txp:variable name=\"titleUrl\" />\'\'\r\n	   	WHERE uid=\'\'<txp:mem_simple_ps name=\"randuid_uid\" />\'\';\' \r\n	   />\r\n	</txp:mem_simple_if_ps>\r\n	\r\n</txp:cbe_frontauth_if_logged>		','2015-11-23 16:37:44'),
	('section-projet','article','<txp:hide>\n============\nModule ARTICLE section-projet appelé depuis la page default.txp\n============\nAffiche le Header + la structure ( sidebar + main-content) d\'un projet\n============\n</txp:hide>\n\n<txp:hide>\n				Authorisation d\'accéder à ce projet\n</txp:hide>\n<txp:cbe_frontauth_if_connected level=\"1\" name=\'<txp:author title=\"0\" />\'>\n<txp:else />\n	<txp:txp_die status=\"401\" />\n</txp:cbe_frontauth_if_connected>\n\n<txp:hide>\n				var num_Devis =\n				Valeur CF num-date_Devis\n				||\n				date de modification de la dernière todo rattachée au projet\n</txp:hide>\n<txp:if_custom_field name=\"num-date_Devis\">\n	<txp:variable name=\"num_Devis\"><txp:smd_wrap transform=\"date|%g%m%d%H%M\"><txp:custom_field name=\"num-date_Devis\" /></txp:smd_wrap></txp:variable>\n<txp:else />\n	<txp:variable name=\"num_Devis\"><txp:article_custom projet=\'<txp:article_id />\' parent=\"\" section=\"todo\" sort=\"LastMod desc\" limit=\"1\" time=\"any\"><txp:modified format=\"%g%m%d%H%M\"/></txp:article_custom></txp:variable>\n</txp:if_custom_field>\n\n<article>\n	<header class=\"project-header\">\n		<h1 class=\"projet-title\"><span class=\"id idProjet small\"><txp:article_id /></span><txp:title /></h1>\n		<p class=\"projet-meta h3\">\n			|\n			<txp:custom_field name=\"Etat\" />\n			|\n			<txp:if_expires>\n				End&nbsp;: <txp:expires />\n				|\n			</txp:if_expires>			\n			<txp:hide><!-- Edition du projet dans le back-office (admin only) --></txp:hide>\n			<txp:cbe_frontauth_if_connected level=\"1\">	\n				<a class=\"btn picto edit-projet\" target=\"_blank\" href=\"<txp:site_url />textpattern/index.php?event=article&amp;step=edit&amp;ID=<txp:article_id />\" title=\"Editer le Projet\" data-picto=\"&#9998\"><strong>Editer le Projet</strong></a>\n			</txp:cbe_frontauth_if_connected>	\n		</p>\n		<div class=\"projet-description\">\n			<txp:body />\n		</div>\n	</header>\n	\n	\n	<txp:hide>	\n		<!-- Tabs Navigation -->\n	</txp:hide>\n	<nav class=\"sidenav nav_projet h1\">\n		<ul>\n			<li class=\"li-sidenav li-nav_projet\">\n				<a href=\"#todolist\" title=\"Todolist\" class=\"a-sidenav picto\" data-picto=\"&#9776;\"><strong>Todolist</strong></a>\n			</li>\n			<li class=\"li-sidenav li-nav_projet\">\n				<a href=\"#commentaires\" class=\"a-sidenav picto\" data-picto=\"&#59392;\"><strong>Commentaires</strong></a>\n			</li>\n			<li class=\"li-sidenav li-nav_projet\">\n				<a href=\"#attachments\" class=\"a-sidenav picto\" data-picto=\"&#x1F4CE\"><strong>Pièces jointes</strong></a>\n			</li>\n			<li class=\"li-sidenav li-nav_projet\">\n				<a href=\"#adresses\" class=\"a-sidenav picto\" data-picto=\"&#59170;\"><strong>Carnet d\'adresses</strong></a>\n			</li>\n			<txp:hide>\n				<!-- finance BUTTON (ADMIN ONLY) -->\n			</txp:hide>\n			<txp:cbe_frontauth_if_connected level=\"1\">				\n				<txp:if_custom_field name=\"Taux_horaire\" value=\"\">\n				<txp:else />\n					<li class=\"li-sidenav li-nav_projet\">\n						<a href=\"#finance\" class=\"a-sidenav picto\" data-picto=\"&#x1f4b0\"><strong>Finance</strong></a>\n					</li>\n				</txp:if_custom_field>\n			</txp:cbe_frontauth_if_connected>	\n		</ul>\n	</nav>\n	\n	\n	\n	<txp:hide>	\n		<!-- Content Tabs for a project -->\n	</txp:hide>\n	<div class=\"main-content project-content\">\n		<section id=\"todolist\" class=\"pane\">\n			<txp:output_form form=\"tab-todolist-projet\" />	\n		</section>\n		<section id=\"commentaires\"  class=\"pane\">\n			<h1 class=\"block-title\" data-this=\"Commentaires\">commentaires</h1>\n			<txp:article form=\"comments_display\" />\n		</section>\n		<section id=\"attachments\" class=\"pane\">\n				<txp:output_form form=\"tab-attachments\" />				\n		</section>\n		<section id=\"adresses\" class=\"pane\">\n			<txp:output_form form=\"tab-adresse\" />	\n		</section>\n		<txp:hide>\n			<!-- finance (ADMIN ONLY) -->\n		</txp:hide>\n		<txp:cbe_frontauth_if_connected level=\"1\">					\n			<txp:if_custom_field name=\"Taux_horaire\" value=\"\">\n			<txp:else />\n				<section id=\"finance\" class=\"pane\">\n					<txp:output_form form=\"tab-finance\" />				\n				</section>		\n			</txp:if_custom_field>\n		</txp:cbe_frontauth_if_connected>				\n	</div>\n	\n</article>','2015-11-23 16:37:44'),
	('tab-todolist-globale','misc','<txp:hide>\n============\nModule todolist appelé depuis la page default.txp\n============\nAffiche la liste des article de la section \"todo\" liés aux articles \"projet\" \"en cours\" ou \"programmé\" \n============\nNecessite plugins \"smd_query\"\n============\n</txp:hide>\n\n\n<!-- TODO Liste -->\n<h1 class=\"block-title\" data-this=\"Todoliste globale\">Todoliste globale</h1>\n\n<!-- filtrage des todos par catégories -->\n<form class=\"filtrage\" methode=\"post\">\n	<fieldset>\n		<legend>filtrage des taches par catégories</legend>\n		\n		<ul class=\"form-12-12 inline form-list-chk\">\n			<li><input type=\"checkbox\" data-target=\".programme,.en-cours\" id=\"filtre-programme\" checked=\"checked\"> <label for=\"filtre-programme\">Programmé</label></li>\n			<li><input type=\"checkbox\" data-target=\".non-programme,.en-pause\" id=\"filtre-non-programme\"> <label for=\"filtre-non-programme\">Non programmé / En pause</label></li>\n		</ul>\n	</fieldset>\n</form>\n\n<!-- Tableaux des todos -->\n<table class=\"todolist-table\">\n	<colgroup>\n		<col class=\"todo-globale-projet\">\n		<col class=\"todo-globale-title\">\n		<col class=\"todo-globale-start\">\n		<col class=\"todo-globale-end\">\n		<col class=\"todo-globale-temps\">\n		<col class=\"todo-globale-statut\">\n		<col class=\"todo-globale-action\">\n	</colgroup>\n	<thead>\n		<tr>\n			<th scope=\"col\" class=\"type-string\">Projet</th>\n			<th scope=\"col\" class=\"type-string\">Titre</th>\n			<th scope=\"col\" class=\"type-string asc\">Start</th>\n			<th scope=\"col\" class=\"type-string\">End</th>\n			<th scope=\"col\">Temps</th>\n			<th scope=\"col\" class=\"type-string\">Statut</th>\n			<th scope=\"col\">Action</th>\n		</tr>\n	</thead>\n	<tbody>\n		<!-- filtrer les projets programmé, en cours -->\n		<txp:variable name=\"projet-liste\"><txp:smd_wrap>\n			<txp:smd_query column=\"ID\" table=\"textpattern\" where=\"Section = \'projet\' AND custom_2 in (\'Programmé\',\'En cours\')\" break=\",\">{ID}</txp:smd_query>\n		</txp:smd_wrap></txp:variable>\n\n		<txp:if_variable name=\'projet-liste\' value=\"\">\n			<tr>\n				<td colspan=\"0\">\n					<p class=\"notice\">\n						Aucune tache en cours.\n					</p>\n				</td>\n			</tr>\n		<txp:else />\n			<!-- filtrer les todos non terminé, non rejetés AND appartenant à la var projet-liste-->\n			<txp:variable name=\"todo-liste\">\n				<txp:smd_query column=\"ID\" table=\"textpattern\" where=\'custom_1 in (<txp:variable name=\"projet-liste\" />) AND custom_2 in (\"Non programmé\",\"Programmé\",\"En cours\",\"En pause\")\' break=\",\">{ID}</txp:smd_query>\n			</txp:variable>\n			<txp:article_custom section=\"todo\" id=\'<txp:variable name=\"todo-liste\" />\' break=\"\" sort=\"posted asc\" limit=\"999\" time=\"any\">\n				<txp:output_form form=\"odd_even\" />\n				<txp:variable name=\"statut-class\"><txp:smd_wrap transform=\"sanitize|url_title\"><txp:custom_field name=\'etat\' /></txp:smd_wrap></txp:variable>\n				<tr data-id=\"<txp:article_id />\" class=\"todo <txp:variable name=\"statut-class\" /><txp:variable name=\'odd-even\' />\">\n					<td class=\"todo-projet\">\n						<txp:smd_query column=\"Title,ID\" table=\"textpattern\" where=\'ID=<txp:custom_field name=\"Projet\" />\'>\n							<txp:permlink id=\"{ID}\">{Title}</txp:permlink>\n						</txp:smd_query></td>\n					<td class=\"todo-title\"><txp:custom_field name=\"title\" escape=\"\"/></td>\n					<td class=\"todo-start\" data-order-by=\"<txp:posted format=\'iso8601\'/>\"><txp:posted format=\"%d.%m.%y\"/></td>\n					<td class=\"todo-end\"><txp:expires /></td>\n					<td class=\"todo-temps\">\n						<span class=\"temps-prevu\"><txp:custom_field name=\"Temps_prevu\" /></span>\n						/ \n						<span class=\"temps-reel\"><txp:if_custom_field name=\"Temps_reel\" value=\"\">0<txp:else /><txp:custom_field name=\"Temps_reel\" /></txp:if_custom_field></span>\n					</td>\n					<td class=\"todo-statut\"><txp:custom_field name=\"etat\" /></td>\n					<td class=\"action\">\n							<button class=\"btn picto action-editer\" type=\"button\" data-picto=\"&#9998\"><strong>Edit</strong></button>\n						<txp:if_custom_field name=\'etat\' value=\"Non programmé,En pause\" match=\"any\" separator=\",\">\n						<txp:else />\n							<button class=\"btn picto action-start\" type=\"button\" data-picto=\"&#9654\"><strong>Edit</strong></button>\n						</txp:if_custom_field>\n					</td>\n				</tr>	\n			</txp:article_custom>\n		</txp:if_variable>\n	</tbody>\n</table>','2016-11-21 18:29:08'),
	('rah_eo_Form-EditTodo','misc','; Content-type: text/html\r\n<txp:cbe_frontauth_if_logged level=\"1\">\r\n	<txp:adi_gps />\r\n\r\n	<txp:variable name=\"statut\"><txp:smd_query column=\"value\" table=\"custom_fields\" where=\"name=\'custom_2_set\'\" break=\",\">{value}</txp:smd_query></txp:variable>\r\n\r\n\r\n	<txp:smd_query column=\"*\" table=\"textpattern\" where=\'ID=<txp:variable name=\"ID\"/>\' escape=\"Title\">\r\n\r\n	<txp:variable name=\"idProjet\" value=\"{custom_1}\" />\r\n	<txp:variable name=\"end\" value=\"{Expires}\" />\r\n	<txp:if_variable name=\"end\" value=\"0000-00-00 00:00:00\">\r\n		<txp:variable name=\"end\" value=\"\" />\r\n	</txp:if_variable>\r\n\r\n	<td colspan=\"8\" class=\"inline-form-wrapper\">\r\n		<txp:mem_simple_form table=\"textpattern\" id_field=\"ID\" id_insert=\"0\">\r\n			<table>\r\n				<colgroup>\r\n					<col class=\"edit-todo-id\" />\r\n					<col class=\"edit-todo-title\" />\r\n					<col class=\"edit-todo-cat\" />\r\n					<col class=\"edit-todo-date\" />\r\n					<col class=\"edit-todo-temps\" />\r\n					<col class=\"edit-todo-statut\" />\r\n					<col class=\"edit-todo-action save\" />					\r\n				</colgroup>\r\n				<tr>\r\n				\r\n					<txp:mem_form_secret name=\"int_ID\" value=\'{ID}\' />\r\n					<txp:mem_form_secret name=\"now_LastMod\" value=\'\' />\r\n					<txp:mem_form_secret name=\"string_LastModID\" value=\'<txp:cbe_frontauth_whois />\' />				\r\n				\r\n					<td class=\"id edit-todo-id\">{ID}</td>\r\n					<td class=\"edit-todo-title\"><txp:mem_form_textarea rows=\"2\" cols=\"30\" name=\"string_Title\" label=\"\" break=\"\" escape_value=\"0\" default=\"{Title}\" /></td>\r\n					<td class=\"edit-todo-cat\"><txp:category name=\'{Category1}\' title=\"1\" /></td>\r\n					<td class=\"edit-todo-date inline\">\r\n						<txp:mem_form_text name=\"string_Posted\" label=\"Start\" break=\"\" class=\"date-input\" default=\'{Posted}\' />\r\n						<txp:mem_form_text name=\"string_expires\" label=\"End\" break=\"\" class=\"date-input\" default=\'<txp:variable name=\"end\" />\' />\r\n					</td>\r\n					<td class=\"edit-todo-temps\"><span class=\"temps-prevu\">{custom_3}</span>/<span class=\"temps-reel inline\"><txp:mem_form_text name=\"string_custom_4\" label=\"\" break=\"\" size=\"4\" default=\'{custom_4}\' required=\"0\"/></span></td>\r\n					<td class=\"edit-todo-statut\"><txp:mem_form_select name=\"string_custom_2\" items=\'<txp:variable name=\"statut\" />\' values=\'<txp:variable name=\"statut\" />\' label=\"\" break=\"\" selected=\'{custom_2}\' /></td>\r\n					<td class=\"action save\"><txp:mem_form_submit class=\"btn\" button=\"1\" label=\"ok\" /></td>\r\n				</tr>\r\n			</table>\r\n		</txp:mem_simple_form>	\r\n	</td>\r\n\r\n				\r\n	</txp:smd_query>\r\n</txp:cbe_frontauth_if_logged>		','2015-11-23 16:37:44'),
	('footer','misc','<div id=\"overlay\"></div>','2015-11-23 16:37:44'),
	('rah_eo_query-finance','misc','; Content-type: text/html\n\n<txp:cbe_frontauth_if_logged level=\"1\">\n	<txp:adi_gps type=\"post\" />\n	<txp:variable name=\"now\"><txp:smd_wrap transform=\"fordb\"><txp:php>echo strftime(\"%F %R\");</txp:php></txp:smd_wrap></txp:variable>\n	\n	<txp:rah_repeat value=\'<txp:variable name=\"query\" />\' delimiter=\"&amp;\" wraptag=\"\" break=\"\">\n		<txp:rah_repeat_value />\n		<txp:variable name=\"id_todo\"><txp:smd_wrap transform=\"replace||tp_||,replace||th_||,replace||ht_||,split|=||1\" item=\'<txp:rah_repeat_value />\' /></txp:variable>\n		<txp:variable name=\"tps\"><txp:smd_wrap transform=\"split|=||2\" item=\'<txp:rah_repeat_value />\' /></txp:variable>\n		\n		<txp:variable name=\"id_todo\" /> && id_projet\n		<txp:variable name=\"tps\" /> && taux_horaire\n		\n		<txp:rah_repeat_if_first>\n			<!-- Update Project Taux horaire -->\n			<txp:smd_query query=\'UPDATE textpattern \n				SET custom_5 =\'\'<txp:variable name=\"tps\" />\'\'\n		   		WHERE ID= <txp:variable name=\"id_todo\" />;\' \n			/>\n			<!-- Update Devis ID -->\n			<txp:smd_query query=\'UPDATE textpattern \n				SET custom_10 =\'\'<txp:variable name=\"now\" />\'\'\n		   		WHERE ID= <txp:variable name=\"id_todo\" />;\' \n			/>\n		<txp:else />\n			<!-- Update todo Temps prevu -->\n			<txp:smd_query query=\'UPDATE textpattern \n				SET custom_3 =\'\'<txp:variable name=\"tps\" />\'\'\n		   		WHERE ID= <txp:variable name=\"id_todo\" />;\' \n			/>		\n		</txp:rah_repeat_if_first>\n\n		<txp:rah_repeat_if_last>\n			<!-- Update Total HT -->\n			<txp:smd_query query=\'UPDATE textpattern \n				SET custom_11 =\'\'<txp:variable name=\"tps\" />\'\'\n		   		WHERE ID= <txp:variable name=\"id_todo\" />;\' \n			/>		\n		</txp:rah_repeat_if_last>\n\n\n\n	</txp:rah_repeat>\n</txp:cbe_frontauth_if_logged>\n\n\n\n\n','2015-11-23 16:37:44'),
	('todolist-table','article','<txp:hide>\n============\nModule todolist appelé depuis le module tab-todolist.misc\n============\nAffiche la liste des articles de la section \"todo\" liés à l\'article \"projet\" selectionné\n============\nNecessite plugins \"smd_wrap\"\n============\n</txp:hide>\n\n<txp:hide><!-- VARIABLES --></txp:hide>\n<txp:variable name=\"statut-class\"><txp:smd_wrap transform=\"sanitize|url_title\"><txp:custom_field name=\'etat\' /></txp:smd_wrap></txp:variable>\n<txp:output_form form=\"odd_even\" />\n\n<tr data-id=\"<txp:article_id />\" class=\"todo <txp:variable name=\"statut-class\" /><txp:variable name=\'odd-even\' />\">\n\n	<!-- ID -->\n	<td class=\"id todo-id\">\n		<txp:if_custom_field name=\"parent\">\n			<span \n				class=\"parent-id\" \n				title=\"<txp:article_custom id=\'<txp:custom_field name=\'\'parent\'\' />\'><txp:title /></txp:article_custom>\"\n			>\n				<txp:custom_field name=\"parent\" />\n				↳			\n			</span>\n		</txp:if_custom_field>\n		<txp:article_id />\n	</td>\n	\n	<!-- TITLE -->\n	<td class=\"todo-title\"><txp:custom_field name=\"title\" escape=\"\" /></td>\n	\n	<!-- CAT -->\n	<td class=\"todo-cat\"><txp:category1 title=\"1\"/></td>\n	\n	<!-- START -->\n	<td class=\"todo-start\" data-order-by=\"<txp:posted format=\'iso8601\'/>\"><txp:posted format=\"%d.%m.%y\"/></td>\n	\n	<!-- STOP -->\n	<td class=\"todo-end\" data-order-by=\"<txp:expires format=\'iso8601\'/>\"><txp:expires /></td>\n	\n	<!-- STATUT -->\n	<td class=\"todo-statut\"><txp:custom_field name=\"etat\" /></td>\n	\n	<txp:cbe_frontauth_if_connected level=\"1\">\n	\n	<!-- TEMPS admin ONLY -->\n		<td class=\"todo-temps\"><span class=\"temps-prevu\"><txp:custom_field name=\"Temps_prevu\" /></span> / <span class=\"temps-reel\"><txp:custom_field name=\"Temps_reel\" /></span></td>\n		\n	<!-- BTN ACTION admin only -->\n		<td class=\"action\">\n			<txp:if_custom_field name=\'etat\' value=\"Terminé,Rejeté\" separator=\",\" match=\"any\">\n			<txp:else />\n				<button class=\"btn picto action-editer\" type=\"button\" data-picto=\"&#9998\"><strong>Edit</strong></button>\n			</txp:if_custom_field>\n		</td>\n		\n	</txp:cbe_frontauth_if_connected>\n	\n</tr>\n\n\n\n<txp:hide><!-- HAS CHILD ? -->\n	<txp:variable name=\"child-todo\"><txp:smd_wrap>\n		<txp:article_custom parent=\'<txp:article_id />\' section=\"todo\" form=\"todolist-bis\" break=\"\" sort=\"posted asc\" limit=\"999\" time=\"any\" />\n	</txp:smd_wrap></txp:variable>\n	\n	<txp:if_variable name=\"child-todo\" value=\"\"><txp:else />\n		<!-- Liste des taches enfants -->	\n			<txp:variable name=\"child-todo\" />		\n	</txp:if_variable>\n</txp:hide>','2015-11-23 16:37:44'),
	('section-home','misc','<nav class=\"sidenav nav_projet h1\">\n	<ul>\n		<txp:hide><!-- \"Global todolist BUTTON\" for ADMIN ONLY --></txp:hide>\n		<txp:cbe_frontauth_if_connected level=\"1\">						\n			<li class=\"li-sidenav li-nav_projet\">\n				<a class=\"a-sidenav picto\" href=\"#todolist\" title=\"Todolist\" data-picto=\"&#9776;\"><strong>Todolists</strong></a>\n			</li>\n		</txp:cbe_frontauth_if_connected>\n		<txp:hide><!-- \"Archive list of project BUTTON\" for all users --></txp:hide>\n		<li class=\"li-sidenav li-nav_projet\">\n			<a class=\"a-sidenav picto\" href=\"#archives\" title=\"Archives projets\" data-picto=\"&#59399;\"><strong>Archives projets</strong></a>\n		</li>\n		<txp:hide><!-- \"Directory User list BUTTON\" for ADMIN only--></txp:hide>\n		<txp:cbe_frontauth_if_connected level=\"1\">			\n			<li class=\"li-sidenav li-nav_projet\">\n				<a class=\"a-sidenav picto\" href=\"#adresses\" title=\"Annuaire\" data-picto=\"&#59170;\"><strong>Adresses</strong></a>\n			</li>\n			<li class=\"li-sidenav li-nav_projet\">\n				<a class=\"a-sidenav picto\" href=\"#CA\" title=\"Annuaire\" data-picto=\"&#x1f4b0;\"><strong>Chiffre d\'affaire</strong></a>\n			</li>\n		</txp:cbe_frontauth_if_connected>\n	</ul>\n</nav>\n\n	\n<main role=\"main\" class=\"main-content\">\n	\n	<txp:hide>\n			<!-- \"Global todolist tab\" for ADMIN ONLY -->\n	</txp:hide>\n	<txp:cbe_frontauth_if_connected level=\"1\">						\n		<!-- todolistes -->\n		<section id=\"todolist\" class=\"todolist-globale pane\">\n			<txp:output_form form=\"tab-todolist-globale\" />\n		</section>\n	</txp:cbe_frontauth_if_connected>\n\n	\n	<txp:hide>\n			<!-- \"Liste projects tab\" for all users -->\n	</txp:hide>\n\n	<!-- Archives -->\n	<section id=\"archives\" class=\"pane\">\n		<txp:output_form form=\"tab-archives-projets\" />\n	</section>\n	\n	<txp:hide>\n			<!-- \"Directory Users list BUTTON\" for ADMIN only-->\n	</txp:hide>\n	<txp:cbe_frontauth_if_connected level=\"1\">			\n		<!-- Adresses -->\n		<section id=\"adresses\" class=\"pane\">\n			<txp:output_form form=\"tab-adresse\" />\n		</section>\n\n		<section id=\"CA\" class=\"pane\">\n			<txp:output_form form=\"tab-CA\" />			\n		</section>\n	</txp:cbe_frontauth_if_connected>\n		\n</main>\n\n\n\n','2015-11-23 16:37:44'),
	('tab-archives-projets','misc','<txp:hide>\n============\nModule MISC tab-archives-projet appelé depuis le module section-home.txp\n============\nAffiche tous les projets filtrage par Etat\n============\n</txp:hide>\n\n<h1 class=\"block-title\" data-this=\"Archives projets\">Archives projets</h1>\n\n<txp:article_custom \n	sort=\"title\" \n	section=\"projet\" \n	wraptag=\"ul\" \n	class=\"nude\" \n	time=\"any\"\n	author=\'<txp:variable name=\"article-filter\" />\'\n	limit=\'999\'\n>\n\n	<txp:variable name=\"statut-class\"><txp:smd_wrap transform=\"sanitize|url_title\"><txp:custom_field name=\'Etat\' /></txp:smd_wrap></txp:variable>\n	<li class=\'li-archive row <txp:variable name=\"statut-class\" />\'>\n		\n		<!-- Title -->\n		<h2 class=\"h3\">\n			<txp:permlink>\n				<txp:title />\n			</txp:permlink>\n		</h2>\n		<!-- Tabs Nav -->\n		<nav>\n			<ul class=\"ul-nav_archive\">\n				<li class=\"li-nav_archive\">\n					<a href=\"<txp:permlink />#todolist\" title=\"Todolist\" class=\"picto btn\" data-picto=\"&#9776;\"><strong>Todolist</strong></a>\n				</li>\n				<li class=\"li-nav_archive\">\n					<a href=\"<txp:permlink />#commentaires\" class=\"picto btn\" data-picto=\"&#59392;\"><strong>Commentaires</strong></a>\n				</li>\n				<li class=\"li-nav_archive\">\n					<a href=\"<txp:permlink />#attachments\" class=\"picto btn\" data-picto=\"&#x1F4CE\"><strong>Pièces jointes</strong></a>\n				</li>\n				<li class=\"li-nav_archive\">\n					<a href=\"<txp:permlink />#adresses\" class=\"picto btn\" data-picto=\"&#59170;\"><strong>Carnet d\'adresses</strong></a>\n				</li>\n				<txp:hide><!-- finance BUTTON ADMIN ONLY --></txp:hide>\n				<txp:cbe_frontauth_if_connected level=\"1\">\n					<txp:if_custom_field name=\"Taux_horaire\" value=\"\">\n					<txp:else />\n						<li class=\"li-nav_archive\">\n							<a href=\"<txp:permlink />#finance\" class=\"picto btn\" data-picto=\"&#x1f4b0\"><strong>Finance</strong></a>\n						</li>\n					</txp:if_custom_field>\n				</txp:cbe_frontauth_if_connected>\n			</ul>\n		</nav>\n		<!-- projet metas : Etat + deadline + Edit -->\n		<p class=\"archive-projet-meta\">\n			|\n			<txp:custom_field name=\"Etat\" />\n			|\n			<txp:if_expires>\n				End&nbsp;: <txp:expires />\n				|\n			</txp:if_expires>\n			<txp:hide><!-- Edit Project BUTTON ADMIN only --></txp:hide>\n			<txp:cbe_frontauth_if_connected level=\"1\">\n				<a class=\"btn picto edit-projet\" target=\"_blank\" href=\"<txp:site_url />textpattern/index.php?event=article&amp;step=edit&amp;ID=<txp:article_id />\" title=\"Editer le Projet\" data-picto=\"&#9998\"><strong>Editer le Projet</strong></a>\n			</txp:cbe_frontauth_if_connected>			\n		</p>\n	</li>\n	\n</txp:article_custom>\n','2015-11-23 16:37:44'),
	('user-info-vcard','misc','<txp:smd_bio_info\n	fields=\"name,RealName,email,tel_mobile,skype,societe,adresse_rue,adresse_quartier,adresse_cp,adresse_ville,tel_fixe,adresse_pays\"\n	wraptag=\"\"\n	class=\"\" \n	show_empty=\"1\"\n>\n	<li class=\'vcard\' />\n	<txp:hide><txp:if_article_author name=\"{smd_bio_name}\"> vcard-facturation</txp:if_author></txp:hide>\n		<div class=\"societe_meta\">\n			<txp:smd_bio_data field=\"societe\" wraptag=\"h2\" class=\"h3 org\" />\n			<p class=\"adr\">\n				<span class=\"street-address\">\n					<txp:smd_bio_data field=\"adresse_rue\" wraptag=\"span\" class=\"block\"/>\n					<txp:smd_bio_data field=\"adresse_quartier\" wraptag=\"span\" class=\"block\" />\n				</span>\n				\n				<txp:smd_bio_data field=\"adresse_cp\" wraptag=\"span\" class=\"postal-code\" />\n				<txp:smd_bio_data field=\"adresse_ville\" wraptag=\"span\" class=\"locality\" />\n				<txp:smd_bio_data field=\"adresse_pays\" wraptag=\"span\" class=\"pays block\" />\n			</p>				\n		</div>\n		<div class=\"user-meta\">\n			<h2 class=\"h3 fn\"><span class=\"picto\" data-picto=\"&#59394;\"><strong>Contact&nbsp;:</strong> </span>{smd_bio_RealName}</h2>\n			<p>\n				<span class=\"block\">\n					<span class=\"picto\" data-picto=\"@\"><strong>Email :</strong></span>\n					<span class=\"email\"><a href=\"mailto:{smd_bio_email}\">{smd_bio_email}</a></span>				\n				</span>\n				\n				<span class=\"tel block\">\n					<span class=\"type\">mobile&nbsp;:</span>\n					<span class=\"value\">{smd_bio_tel_mobile}</span>\n				</span>\n					\n				<span class=\"tel block\">\n					<span class=\"picto\" data-picto=\"&#xf303;\"><strong>Skype :</strong></span>\n					<txp:smd_bio_data field=\"skype\" wraptag=\"span\" />\n				</span>\n			</p>\n<txp:hide>			<a href=\"#\" class=\"download-vcard picto btn\" data-picto=\"&#x1f4e5;\"><strong>Télécharger Vcard</strong></a>			</txp:hide>\n		</div>\n	</li> <!-- .vcard -->\n</txp:smd_bio_info>','2015-11-23 16:37:44'),
	('rah_eo_compteur','misc','; Content-type: text/html\r\n<txp:cbe_frontauth_if_logged level=\"1\">\r\n	<txp:adi_gps />\r\n	\r\n	<txp:smd_query query=\'UPDATE textpattern \r\n		SET custom_4 =\'\'<txp:variable name=\"time\" />\'\'\r\n   	WHERE ID=\'\'<txp:variable name=\"id\" />\'\';\' \r\n   />\r\n<txp:else />\r\n	<txp:txp_die status=\"401\" />		  \r\n</txp:cbe_frontauth_if_logged>\r\n\r\n','2015-11-23 16:37:44'),
	('page-data-json','misc','<script>\n\nvar pageDatas = {\n	site : {\n		siteUrl : \'<txp:site_url />\'\n	},\n	user : {\n		realName		: \'<txp:cbe_frontauth_whois type=\"RealName\" />\',\n		name			: \'<txp:cbe_frontauth_whois type=\"name\" />\',\n		email			: \'<txp:cbe_frontauth_whois type=\"email\" />\',\n		level			: <txp:cbe_frontauth_whois type=\"privs\" />\n	},\n	projet : {\n		<txp:if_section name=\"projet\">\n			<txp:if_individual_article>\n				id	: <txp:article_id />\n				<txp:if_custom_field name=\"Taux_horaire\" value=\"\">\n					,\n					finance : 0\n				<txp:else />\n					,\n					finance : 1,\n					tauxHoraire : <txp:custom_field name=\"Taux_horaire\" />,\n					devise : \'<txp:custom_field name=\"Devise\" />\',\n					taxe : <txp:if_custom_field name=\"taxe\" value=\"off\">0<txp:else /><txp:custom_field name=\"taxe\" /></txp:if_custom_field>\n				</txp:if_custom_field>\n			</txp:if_individual_article>\n		<txp:else />\n		finance : 0\n		</txp:if_section>\n	}\n	\n};\n	\n</script>','2015-11-23 16:37:44'),
	('rah_eo_upload-files','misc','; Content-type: text/html\n<txp:cbe_frontauth_if_logged>\n	<txp:adi_gps />\n	\n	<txp:variable name=\"import\" value=\"0\" />\n	\n	<txp:php>	\n		variable(array(\n			\'name\' => \'filesize\',\n			\'value\' => $_FILES[\'file-fichier\'][\'size\']\n		));\n		variable(array(\n			\'name\' => \'timestamp\',\n			\'value\' => time()\n		));\n		$infosfichier = pathinfo($_FILES[\'file-fichier\'][\'name\']); \n		variable(array(\n			\'name\' => \'extension\',\n			\'value\' => $infosfichier[\'extension\']\n		));	\n		variable(array(\n			\'name\' => \'filename\',\n			\'value\' => $infosfichier[\'filename\']\n		));\n	</txp:php>\n	\n	<txp:variable name=\"newFileName\"><txp:variable name=\"file_id-projet\" />_<txp:smd_wrap item=\'<txp:variable name=\"filename\" />\' transform=\"sanitize|url\" />_<txp:variable name=\"timestamp\" />.<txp:variable name=\"extension\" /></txp:variable>\n	\n	<txp:php>\n		$newfile = \'files/\'.variable(array(\'name\' => \'newFileName\'));\n		if(!empty($_FILES[\'file-fichier\'][\'tmp_name\']) AND is_uploaded_file($_FILES[\'file-fichier\'][\'tmp_name\']))\n		{\n			if(filesize($_FILES[\'file-fichier\'][\'tmp_name\'])<5000000)\n			{\n				//Copie le fichier dans le répertoire de destination\n				if(move_uploaded_file($_FILES[\'file-fichier\'][\'tmp_name\'], $newfile))\n				{\n					variable(array(\n						\'name\' => \'import\',\n						\'value\' => \'1\'\n					));\n				}\n			}		\n		}\n	</txp:php>\n	\n	<txp:hide>Gestion des valeurs pour Insert sql </txp:hide>\n	<txp:hide><!-- title --></txp:hide>\n	<txp:if_variable name=\"file-titre\" value=\"\">\n		<txp:variable name=\"file-titre\">NULL</txp:variable>	\n	<txp:else />\n		<txp:variable name=\"file-titre\">\'<txp:smd_wrap item=\'<txp:variable name=\"file-titre\" />\' transform=\"fordb\" />\'</txp:variable>\n	</txp:if_variable>\n	<txp:hide><!-- description --></txp:hide>\n	<txp:variable name=\"file-description\">\'<txp:smd_wrap item=\'<txp:variable name=\"file-description\" />\' transform=\"fordb\" />\'</txp:variable>\n\n	<txp:hide><!-- If Upload OK --></txp:hide>\n	<txp:if_variable name=\"import\" value=\"1\">\n		<txp:smd_query query=\'INSERT INTO txp_file \n		 	(filename, title, description, status, modified, created, size, author) \n		VALUES\n			 (\'\'<txp:variable name=\"newFileName\" />\'\', <txp:variable name=\"file-titre\" />, <txp:variable name=\"file-description\" />, 3, NOW(), NOW(), <txp:variable name=\"filesize\" />, \'\'<txp:cbe_frontauth_whois type=\"name\" />\'\');\' \n		/>\n		<p class=\"success\">Fichier bien reçu sur le serveur. En attente de vérification…</p>\n		\n	</txp:if_variable>\n	\n	<txp:if_variable name=\"import\" value=\"0\">\n		<p class=\"error\">Erreur lors de l\'importation du fichier. Vérifiez que votre fichier ne dépasse pas les 5Mo.</p>\n	</txp:if_variable>\n\n<txp:else />\n\n	<txp:txp_die status=\"401\" />\n	\n</txp:cbe_frontauth_if_logged>\n','2015-11-23 16:37:44'),
	('tab-adresse','misc','<txp:hide>\n============\nModule pour TAB Adresses appelé depuis le module sectio-projet.misc.txp et section-home\n============\nAffiche la liste des utilisateurs qui ont accès au projet\nou liste complète des utilisateurs\n============\n</txp:hide>\n\n<!-- Adresses -->\n<txp:if_section name=\"\">\n	<h1 class=\"block-title\" data-this=\"Adresses\">Adresses</h1>\n	\n	<txp:smd_bio_author author=\"SMD_ALL\" wraptag=\"ul\" class=\"vcards-list nude\" sort=\"societe asc\">\n		<txp:output_form form=\"user-info-vcard\" />	\n	</txp:smd_bio_author>\n<txp:else />\n	<h1 class=\"block-title\" data-this=\"Membres et coordonnées\">Membres et coordonnées</h1>\n	\n	<ul class=\"vcards-list nude\">\n		<txp:output_form form=\"user-info-vcard\" />		\n	</ul>\n	\n</txp:if_section>\n\n','2015-11-23 16:37:44'),
	('tab-attachments','misc','<section class=\"attachments-files clearfix\">\n	\n	<txp:hide><!-- FORMULAIRE D\'ENVOI --></txp:hide>\n\n	<form method=\"post\" action=\"<txp:site_url />?rah_external_output=upload-files\" enctype=\"multipart/form-data\" id=\"attach-file-form\">\n		<fieldset>\n			<legend>Envoyer un fichier</legend>\n		\n			<input type=\"hidden\" name=\"file_id-projet\" id=\"file_id-projet\" value=\"<txp:article_id />\" />\n		\n			<div class=\"form-12-12\">     \n				<label for=\"fichier\">Fichier <span class=\"small\">(max. 5 Mo)</span>&nbsp;:</label>\n				<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"5000000\" />\n				<input type=\"file\" name=\"file-fichier\" id=\"file-fichier\" required=\"required\"/>\n			</div>\n\n			<div class=\"form-12-12\">     \n			    <label for=\"titre\">Titre du fichier&nbsp;:</label>\n			    <input type=\"text\" name=\"file-titre\" placeholder=\"Titre du fichier\" value=\"\" id=\"file-titre\" /><br />\n			</div>     \n\n			<div class=\"form-12-12\">     \n			    <label for=\"description\">Description&nbsp;:</label>\n			    <textarea name=\"file-description\" id=\"file-description\"></textarea>\n			</div>\n\n			<input type=\"submit\" name=\"submit\" value=\"Envoyer\" />\n			\n			<div class=\"form-12-12 file-form-info\">\n				<progress class=\"progressBar\" value=\"0\" max=\"100\"></progress>\n			</div>\n		\n		</fieldset>\n	</form>\n	\n	<div class=\"attachments-content attachments-files-content\">\n		<h1 class=\"block-title\" data-this=\"Fichiers\">Fichiers</h1>\n		\n		<txp:hide><!-- Liste ID des fichiers attachés au projet --></txp:hide>\n		<txp:variable name=\"attached-files-id\">\n			<txp:smd_query \n				column=\"id\" \n				table=\"txp_file\" \n				where=\'filename LIKE \"<txp:article_id />\\_%\"\' break=\",\"\n			>{id}</txp:smd_query>\n		</txp:variable>\n		\n		<txp:variable name=\"attached-files-id\" />\n		<txp:hide><!-- Liste Fichiers --></txp:hide>\n		\n		<txp:variable name=\"live_file_download_list\"><txp:file_download_list status=\"live\" id=\'<txp:variable name=\"attached-files-id\" />\' wraptag=\"ul\" class=\"nude\">\n			<li class=\"clearfix\">\n				<h2 class=\"h3\"><txp:smd_file_download_link show_suffix=\"1\"><txp:file_download_name title=\"1\"/> <span title=\"Download\" class=\"picto\" data-picto=\"&#x1f4e5;\"><strong>Télécharger</strong></span></txp:smd_file_download_link></h2>\n				<txp:file_download_description wraptag=\"p\" class=\"file_download_description\"/>\n				<p class=\"file-metas small\">\n					Posté le <em><txp:file_download_created /></em> par <em><txp:file_download_author title=\"1\" /></em>. <strong><txp:file_download_size /></strong> \n				</p>			\n			</li>\n		</txp:file_download_list></txp:variable>\n		\n		<txp:if_variable name=\"pending_file_download_list\" value=\"\">\n		<txp:else />\n			<section class=\"pending_file_download_list\">\n				<txp:variable name=\"live_file_download_list\" />		\n			</section>\n		</txp:if_variable>\n		\n		<txp:hide><!-- Fichiers en attente de validation --></txp:hide>\n		\n		<txp:variable name=\"pending_file_download_list\"><txp:file_download_list status=\"pending\" id=\'<txp:variable name=\"attached-files-id\" />\' wraptag=\"ul\" break=\"li\">\n			<txp:file_download_name />\n		</txp:file_download_list></txp:variable>\n		\n		<txp:if_variable name=\"pending_file_download_list\" value=\"\">\n		<txp:else />\n			<section class=\"pending_file_download_list notice small\">\n				<h1 class=\"h4\">fichiers en attente de validation</h1>\n				<txp:variable name=\"pending_file_download_list\" />		\n			</section>\n		</txp:if_variable>	\n	</div>\n</section>\n\n<section class=\"attachments-links clearfix\">\n	<h1 class=\"block-title\" data-this=\"Liens\">Liens</h1>\n	\n</section>\n\n','2016-11-21 18:29:08'),
	('tab-finance','misc','<txp:hide>\n============\nModule Finance appelé depuis la page section-projet.article.txp\n============\nAffiche la liste des todos parents liés à l\'article selectionné, classés par catégories.\nPermet de modifier le taux horaire du projet et le temps prévu sur chaque todo pour générer devis et factures\n============\n</txp:hide>\n\n\n<!-- #Finance -->\n<h1 class=\"block-title\" data-this=\"Finance\">Finance</h1>\n\n<h2 class=\"h3\">\n	<span class=\"finance-block-title\">Devis</span>\n	<span class=\"no-devis\">N° <txp:article_id />-<txp:variable name=\"num_Devis\" /></span> \n</h2>\n\n<!-- bouton preview print -->\n<a href=\'<txp:site_url />printFacture?projetID=<txp:article_id />\' \n	class=\"btn picto\" \n	data-picto=\"&#59146 &#59158\" \n	id=\"print-preview\" \n	title=\"Imprimer le devis et les factures\"\n	target=\"_blank\"\n>\n	<strong>Preview for print</strong>\n</a>\n\n<form  id=\"calcul\" method=\"post\" action=\"<txp:site_url />?rah_external_output=query-finance\" autocomplete=\"off\">\n\n	<!-- METAS TAUX HORAIRE ET DEVISE -->\n	<div class=\"metas-devis\">\n		<ul>\n			<li>\n				<strong>taux horaire&nbsp;:</strong> \n\n				<!-- Input th_ (taux horaire) -->\n				<input type=\"number\" step=\"any\" class=\"taux-horaire inputnum\" name=\'th_<txp:article_id />\' value=\'<txp:custom_field name=\"Taux_horaire\" />\' />\n				<span class=\"devise\"><txp:custom_field name=\"Devise\" /></span>\n			</li>\n			<li>\n				<strong>taxe&nbsp;:</strong> \n				<span class=\"taxe\"><txp:custom_field name=\"taxe\" /></span>\n			</li>\n		</ul>\n	</div>\n	\n	<div id=\"devis\">\n		\n	<!-- Start catégories liste -->\n	<txp:category_list \n		break=\"\" \n		parent=\"facturees\"\n		exclude=\"facturees\"\n	>\n	\n		<!-- VARIABLE : Liste des todos par catégorie -->\n		<txp:variable name=\"todos_this_cat\"><txp:smd_wrap>\n			<txp:article_custom projet=\'<txp:article_id />\' parent=\"\" section=\"todo\" category=\'<txp:category />\' wraptag=\"ul\" class=\"nude item-devis-liste\" limit=\"999\" time=\"any\" sort=\"id asc\">\n				<li class=\"item-devis item-<txp:category />\">\n					<strong class=\"item-devis-title\"><txp:title /></strong>\n					<span class=\"montant montant-item\">\n						<span class=\"total-item\"></span>\n						<span class=\"temps-prevu\"> \n							<!-- Input tp_ (temps) -->\n							<input type=\"number\" class=\"inputnum\" name=\"tp_<txp:article_id />\" value=\'<txp:custom_field name=\"Temps_prevu\" />\' step=\"0.1\" min=\"0\"/>\n						</span>\n					</span>\n				</li>\n			</txp:article_custom>\n		</txp:smd_wrap></txp:variable>\n		\n		<!-- Display Cat + todos -->\n		<txp:if_variable name=\"todos_this_cat\" value=\"\">\n		<txp:else />\n			<div class=\"devis-section clearfix\">\n				<h3 class=\"devis-cat-title\"><txp:category title=\"1\"/></h3>\n			\n				<!-- Liste des taches -->\n				<txp:variable name=\"todos_this_cat\" />\n			\n				<!-- Sous totale d\'une cat -->\n				<h4 class=\"item-devis sous-total\">\n					<strong class=\"item-devis-title\">Sous Total <txp:category title=\"1\"/></strong><span class=\"montant montant-sous-total\"></span>\n				</h4>	\n			</div>\n		</txp:if_variable>\n	\n		<!-- Total Devis -->\n		<txp:if_last_category>\n			<div class=\"total-groupe-devis\">\n				<!-- TOTAL HT + taxe = TOTAL TTC -->\n					<!-- Total HT -->\n					<h3 class=\"item-devis total-ht\">\n						<strong class=\"item-devis-title\">Total HT</strong>\n						<span class=\"montant\">\n							<span class=\"montant-total-ht\"></span>\n							<span class=\"devise\"><txp:custom_field name=\"Devise\" /></span>\n						</span>\n					</h3>\n\n					<!-- Input for saving Total HT in BDD -->\n					<input type=\"hidden\" class=\"input-montant-total-ht\" name=\"ht_<txp:article_id />\" value=\"abcd\"/>\n\n				\n				<txp:if_custom_field name=\"taxe\" value=\"off\">\n				<txp:else />\n					<!-- Taxe -->\n					<h3 class=\"item-devis taxe\">\n						<strong class=\"item-devis-title\">5% retenus</strong><span class=\"montant\">\n							<span class=\"montant-taxe\"></span>\n							<span class=\"devise\"><txp:custom_field name=\"Devise\" /></span>\n						</span>\n					</h3>	\n					<!-- Total TTC -->\n					<h3 class=\"item-devis total-ttc\">\n						<strong class=\"item-devis-title\">Total TTC</strong>\n						<span class=\"montant\">\n							<span class=\"montant-total-ttc\"></span>\n							<span class=\"devise\"><txp:custom_field name=\"Devise\" /></span>\n						</span>\n					</h3>\n				</txp:if_custom_field>\n			</div> <!-- .total-goupe -->\n\n			<txp:if_custom_field name=\"repartition\">\n				<!-- \n					Répartition des paiements\n				-->\n				<txp:rah_repeat value=\'<txp:custom_field name=\"repartition\" />\' trim=\"1\" wraptag=\"ul\" class=\"devis-liste-factures nude\">\n					\n					<txp:hide>\n					<!--\n					Assign to variables\n						index, quand, pourcentage\n						quand -> quand1 & quand2\n					-->\n					</txp:hide>\n\n					<txp:rah_repeat value=\'<txp:rah_repeat_value />\' trim=\"1\" delimiter=\"-\" assign=\"index, quand, pourcentage\"></txp:rah_repeat>\n					\n					<txp:cbe_if_variable name=\'quand\' value=\"^[\\w]*[\\/][\\w\\W]*$\" match=\"pattern\">\n						<txp:variable name=\'quand1\'><txp:smd_wrap transform=\"split|/||1\" item=\'<txp:variable name=\"quand\" />\' /></txp:variable>\n						<txp:variable name=\'quand2\'><txp:smd_wrap transform=\"split|/||2\" item=\'<txp:variable name=\"quand\" />\' /></txp:variable>\n					<txp:else />\n						<txp:variable name=\'quand1\' value=\'<txp:variable name=\"quand\" />\' />\n						<txp:variable name=\'quand2\' value=\"\" />\n					</txp:cbe_if_variable>\n\n				<!-- FACTURE <txp:variable name=\"index\" /> -->\n					<li class=\"item-devis\" data-pourcentage=\"<txp:variable name=\'pourcentage\' />\">\n			\n					<!-- IF var quand = DATE YYYY/MM/DD -->\n						<txp:cbe_if_variable name=\"quand\" value=\"^[\\d]{4}/\\d{2}/\\d{2}$\" match=\"pattern\">\n							<strong class=\'item-devis-title\'>\n								<strong><txp:smd_wrap transform=\"date|%b %Y\" item=\'<txp:variable name=\"quand\" />\' /></strong> :\n								<txp:variable name=\"index\" /><sup>e</sup> tranche de paiement de <strong><txp:variable name=\'pourcentage\' /></strong>.\n							</strong>\n						<txp:else />\n					<!-- ELSE -->\n							<strong class=\"item-devis-title\">\n								<txp:output_form form=\'quand-<txp:variable name=\"quand1\" />\'/>\n							</strong>\n						</txp:cbe_if_variable>\n							\n						<span class=\"montant\">\n							<span class=\'somme-a-payer\'></span>\n							<txp:hide><span class=\"devise\"><txp:custom_field name=\"Devise\" /></span></txp:hide>\n						</span>\n					</li>\n				</txp:rah_repeat>\n			</txp:if_custom_field>\n		</txp:if_last_category>\n	</txp:category_list>\n	</div><!-- #devis -->\n<!-- <button type=\"submit\">Sauver</button> -->\n<input type=\"submit\" id=\"submit-finance\" name=\"submit\" value=\"Sauver\" />\n</form> <!-- end form calcul -->\n\n\n\n\n','2016-11-21 18:29:08'),
	('rah_eo_todolist-projet-csv','misc','<txp:adi_gps /><txp:php>\nheader(\'Content-Type: text/csv; charset=utf-8\');\nheader(\'Content-Disposition: attachment; filename=\"project.csv\"\');\n</txp:php>\"id\";\"Titre\";\"Cat\";Start;End;\"Statut\";Temps;\n<txp:article_custom projet=\'<txp:variable name=\"id\" />\' section=\"todo\" break=\"\" sort=\"posted asc\" limit=\"999\" time=\"any\">\n\"<txp:custom_field name=\'parent\' />-<txp:article_id />\";\"<txp:custom_field name=\"title\" escape=\"\" />\";<txp:category1 title=\"1\"/>;<txp:posted format=\'%F\'/>;<txp:expires format=\'%F\'/>;<txp:custom_field name=\"etat\" />;<txp:smd_wrap delim=\"@\" transform=\"replace||.|,\"><txp:custom_field name=\"Temps_reel\" /></txp:smd_wrap></txp:article_custom>;\n','2015-11-23 16:37:44'),
	('tab-CA','misc','<txp:hide>\n============\nModule tab-CA appelé depuis la page default.txp\n============\nAffiche le Chiffre d\'affaire par année basé sur les dates des factures\n============\nNecessite plugins rah_repeat\n============\n</txp:hide>\n\n\n\n<h1 class=\"block-title\" data-this=\"Chiffre d\'affaire\">Chiffre d\'affaire</h1>\n\n<section class=\"ca_section\" id=\"ca_section\">\n	<h2 class=\"h--ca_section\"></h2>\n\n	<table>\n	    <thead>\n	        <tr>\n	            <th>Project</th>\n	            <th>Quand</th>\n	            <th>Date Facture</th>\n	            <th>Date Règlement</th>\n	            <!-- <th>Total HT</th> -->\n	            <th>Montant HT</th>\n	            <th>Montant taxe</th>\n	            <th>Montant TTC</th>\n	        </tr>\n	    </thead>\n	    <tfoot>\n	    	<tr>\n	    		<td></td>\n	    		<td></td>\n	    		<td></td>\n	    		<td></td>\n	    		<td class=\"total_ht--ca_section\">Total HT</td>\n	    		<td class=\"total_taxe--ca_section\">Total Taxe</td>\n	    		<td class=\"total_ttc--ca_section\">Total TTC</td>\n	    	</tr>\n	    </tfoot>\n	    <tbody class=\"tbody--ca_section\">\n	        <!-- this will be auto-populated -->\n	    </tbody>\n	</table>\n</section>\n\n\n<script>\n	var paiements = [\n		<txp:article_custom section=\"projet\" limit=\"999\" repartition=\"_%\">\n			<txp:if_custom_field name=\"Etat\" value=\"Programmé,En cours,En pause,Terminé \" match=\"any\">\n				<txp:rah_repeat value=\'<txp:custom_field name=\"repartition\" />\' trim=\"1\">\n					<txp:rah_repeat \n						value=\'<txp:rah_repeat_value />\' \n						delimiter=\"-\" \n						assign=\"index, quand, pourcentage, date-facture, date-paie\" \n					/>\n						{\n							id : \"<txp:article_id />\",\n							projet : \"<txp:title />\",\n							index : <txp:variable name=\"index\" />,\n							quand : \"<txp:variable name=\"quand\" />\",\n							pourcentage : \"<txp:smd_wrap transform=\"replace||%||\" item=\'<txp:variable name=\"pourcentage\" />\' />\",\n							annee : \"<txp:smd_wrap transform=\"date|%Y\" item=\'<txp:variable name=\"date-paie\" />\' />\",\n							dateFacture : \"<txp:variable name=\"date-facture\" />\",\n							datePaie : \"<txp:variable name=\"date-paie\" />\",\n							taxe : <txp:if_custom_field name=\"taxe\" value=\"off\">0<txp:else /><txp:custom_field name=\"taxe\" /></txp:if_custom_field>,\n							totalHT : \"<txp:custom_field name=\"total-HT\" />\",\n							devise : \"<txp:custom_field name=\"Devise\" />\"\n						},\n				</txp:rah_repeat>\n			</txp:if_custom_field>\n		</txp:article_custom>\n	];\n</script>\n\n\n','2016-11-21 18:29:08'),
	('quand-acompte','misc','<txp:hide>\n	Acompte (variable quand)\n	Text Snippet for \"Répartition de la facturation\"\n\n	Use in:\n		* forms/tab-finance\n		* pages/printfacture\n</txp:hide>\n\nAcompte de \n<strong>\n   <txp:variable name=\"pourcentage\" />\n</strong>\n à la signature du devis.','2016-11-21 18:29:08'),
	('quand-garantie','misc','<txp:hide>\n	Garantie (variable quand)\n	Text Snippet for \"Répartition de la facturation\"\n\n	Use in:\n		* forms/tab-finance\n		* pages/printfacture\n</txp:hide>\n\n<strong>\n   <txp:variable name=\"pourcentage\" />\n</strong>\n1 mois après la date de livraison\n(période de garantie).','2016-11-21 18:29:08'),
	('quand-livraison','misc','<txp:hide>\n	Livraison (variable quand)\n	Text Snippet for \"Répartition de la facturation\"\n\n	Use in:\n		* forms/tab-finance\n		* pages/printfacture\n</txp:hide>\n\n<strong>\n   <txp:variable name=\"pourcentage\" />\n</strong> \nà la livraison \n<txp:if_variable name=\'quand2\' value=\"\">\n	de la prestation.\n<txp:else />\n	<txp:variable name=\"quand2\" />.\n</txp:if_variable>','2016-11-21 18:29:08'),
	('quand-misc','misc','<txp:hide>\n	Misc (variable quand)\n	100% + texte custom en variable quand-2\n	Text Snippet for \"Répartition de la facturation\"\n\n	Use in:\n		* forms/tab-finance\n		* pages/printfacture\n</txp:hide>\n\n<strong>\n   <txp:variable name=\"pourcentage\" />\n</strong> \n<txp:if_variable name=\'quand2\' value=\"\">\n<txp:else />\n	<txp:variable name=\"quand2\" />.\n</txp:if_variable>','2016-11-21 18:29:08'),
	('rib','misc','<div class=\"rib\">\n	<p>\n	La Banque de l\'univers — 8 avenue de la Lune — 348904 MARS <br/>\n	Mr Sacripant — citoyen du monde\n	</p>\n\n	<p>\n	<strong>IBAN</strong> <br/>\n	xxxx xxxx xxxx xxxx xxxx xxxx xxx\n	</p>\n\n	<p>\n	<strong>BIC</strong> xxxxxxxxxxx\n	</p>\n</div>','2017-02-17 16:22:40');

/*!40000 ALTER TABLE `txp_form` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table txp_image
# ------------------------------------------------------------

CREATE TABLE `txp_image` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL DEFAULT '',
  `category` varchar(255) NOT NULL DEFAULT '',
  `ext` varchar(20) NOT NULL DEFAULT '',
  `w` int(8) NOT NULL DEFAULT '0',
  `h` int(8) NOT NULL DEFAULT '0',
  `alt` varchar(255) NOT NULL DEFAULT '',
  `caption` text NOT NULL,
  `date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `author` varchar(255) NOT NULL DEFAULT '',
  `thumbnail` int(2) NOT NULL DEFAULT '0',
  `thumb_w` int(8) NOT NULL DEFAULT '0',
  `thumb_h` int(8) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `author_idx` (`author`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 PACK_KEYS=0;



# Affichage de la table txp_lang
# ------------------------------------------------------------

CREATE TABLE `txp_lang` (
  `id` int(9) NOT NULL AUTO_INCREMENT,
  `lang` varchar(16) NOT NULL,
  `name` varchar(64) NOT NULL,
  `event` varchar(64) NOT NULL,
  `data` tinytext,
  `lastmod` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `lang` (`lang`,`name`),
  KEY `lang_2` (`lang`,`event`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

LOCK TABLES `txp_lang` WRITE;
/*!40000 ALTER TABLE `txp_lang` DISABLE KEYS */;

INSERT INTO `txp_lang` (`id`, `lang`, `name`, `event`, `data`, `lastmod`)
VALUES
	(1,'fr-fr','404_not_found','public','La page demandée n’a pu être trouvée (erreur 404).','2016-10-24 11:39:40'),
	(2,'fr-fr','410_gone','public','La ressource (page, document, fichier) demandée n’est plus disponible.','2016-10-24 11:39:40'),
	(1159,'fr-fr','edit_file','file','Édition du fichier','2014-01-17 09:24:52'),
	(4,'fr-fr','active','common','Actif','2017-02-13 11:31:30'),
	(5,'fr-fr','active_class','tag','Classe CSS de l’élément actif de la liste','2016-10-25 14:23:44'),
	(6,'fr-fr','active_language','prefs','Langue actuelle :','2017-01-26 13:14:27'),
	(7,'fr-fr','active_plugins','diag','Plugins actifs','2017-01-25 17:30:25'),
	(8,'fr-fr','add','common','Ajouter','2017-02-13 11:31:30'),
	(9,'fr-fr','add_declaration','css','ajouter une déclaration','2014-05-19 12:11:09'),
	(10,'fr-fr','add_magnify_icon','image','Loupe','2017-02-13 11:31:46'),
	(11,'fr-fr','add_new_author','admin','Ajouter un auteur','2016-02-22 10:16:54'),
	(12,'fr-fr','add_new_selector','css','Ajouter un sélecteur','2014-05-19 12:11:09'),
	(13,'fr-fr','admin','common','Administration','2017-02-13 11:31:30'),
	(14,'fr-fr','admin_side_plugins','prefs','Utiliser les plugins administratifs ?','2017-01-26 13:14:27'),
	(15,'fr-fr','advanced_options','article','Configuration avancée','2015-10-29 10:03:17'),
	(16,'fr-fr','advanced_preferences','prefs','Options avancées','2017-01-26 13:14:27'),
	(17,'fr-fr','ago','public','auparavant','2016-10-24 11:39:40'),
	(18,'fr-fr','align','tag','Alignement','2016-10-25 14:23:44'),
	(19,'fr-fr','all','public','Tous','2016-10-24 11:39:40'),
	(20,'fr-fr','allowoverride','tag','Autoriser le remplacement du module ?','2016-10-25 14:23:44'),
	(21,'fr-fr','allow_article_php_scripting','prefs','Autoriser l’usage de PHP dans les articles ?','2017-01-26 13:14:27'),
	(22,'fr-fr','allow_form_override','prefs','Autoriser l’usage du module de remplacement par article ?','2017-01-26 13:14:27'),
	(23,'fr-fr','allow_page_php_scripting','prefs','Autoriser l’usage de PHP dans les gabarits ?','2017-01-26 13:14:27'),
	(24,'fr-fr','allow_raw_php_scripting','prefs','Autoriser le code PHP brut ?','2017-01-26 13:14:27'),
	(25,'fr-fr','all_checks_passed','diag','Toutes les vérifications sont OK !','2017-01-25 17:30:25'),
	(26,'fr-fr','all_forms','form','Liste des modules','2015-09-04 14:50:24'),
	(27,'fr-fr','all_hits','prefs','Toutes les requêtes','2017-01-26 13:14:27'),
	(28,'fr-fr','all_pages','page','Tous les gabarits','2015-09-04 14:50:47'),
	(29,'fr-fr','all_stylesheets','css','Toutes les feuilles de styles','2014-05-19 12:11:09'),
	(30,'fr-fr','already_exists','public','existe déjà','2016-10-24 11:39:40'),
	(1157,'fr-fr','download_count','public','Décompte des téléchargements','2016-10-24 11:39:40'),
	(1158,'fr-fr','edit_default_section','section','Édition de la section par défaut','2015-10-29 10:00:48'),
	(32,'fr-fr','alt_text','image','Texte alternatif','2017-02-13 11:31:46'),
	(33,'fr-fr','and_mailed_to','admin','et l’envoyer à','2016-02-22 10:16:54'),
	(34,'fr-fr','apache_modules','diag','Modules Apache','2017-01-25 17:30:25'),
	(35,'fr-fr','apache_version','diag','Version d’Apache','2017-01-25 17:30:25'),
	(36,'fr-fr','ar-ar','common','عربي','2017-02-13 11:31:30'),
	(37,'fr-fr','ar-dz','common','جزائري عربي','2017-02-13 11:31:30'),
	(38,'fr-fr','archive_dateformat','prefs','Format de la date des archives','2017-01-26 13:14:27'),
	(39,'fr-fr','archive_date_case','prefs','Casse de la date des archives','2017-01-26 13:14:27'),
	(40,'fr-fr','archive_dir','prefs','Répertoire des archives','2017-01-26 13:14:27'),
	(41,'fr-fr','are_you_sure','common','Êtes-vous certain ?','2017-02-13 11:31:30'),
	(42,'fr-fr','article','common','Article','2017-02-13 11:31:30'),
	(43,'fr-fr','articles','public','Articles','2016-10-24 11:39:40'),
	(44,'fr-fr','articles_found','public','articles trouvés','2016-10-24 11:39:40'),
	(45,'fr-fr','articles_use_excerpts','prefs','Les articles utilisent un résumé ?','2017-01-26 13:14:27'),
	(46,'fr-fr','article_categories_deleted','category','Catégories d’articles supprimées : <strong>{list}</strong>.','2015-12-12 10:46:12'),
	(47,'fr-fr','article_category','category','Catégorie d’article','2015-12-12 10:46:12'),
	(48,'fr-fr','article_category_already_exists','category','La catégorie d’articles <strong>{name}</strong> existe déjà.','2015-12-12 10:46:12'),
	(49,'fr-fr','article_category_created','category','Catégorie d’articles <strong>{name}</strong> créée.','2015-12-12 10:46:12'),
	(50,'fr-fr','article_category_invalid','category','La catégorie d’article <strong>{name}</strong> n’est pas valide.','2015-12-12 10:46:12'),
	(51,'fr-fr','article_category_name','category','Nom de la catégorie d’articles','2015-12-12 10:46:12'),
	(52,'fr-fr','article_category_title','category','Titre de la catégorie d’articles','2015-12-12 10:46:12'),
	(53,'fr-fr','article_category_updated','category','Catégorie d’articles <strong>{name}</strong> mise à jour.','2015-12-12 10:46:12'),
	(54,'fr-fr','article_context','public','article','2016-10-24 11:39:40'),
	(55,'fr-fr','article_day','article','Jour','2015-10-29 10:03:17'),
	(56,'fr-fr','article_deleted','discuss','Article supprimé !','2015-09-04 14:50:09'),
	(57,'fr-fr','article_divider','tag','Séparateur d’article','2016-10-25 14:23:44'),
	(58,'fr-fr','article_expires_before_postdate','article','Erreur : l’article expire <strong>avant</strong> sa date de publication.','2015-10-29 10:03:17'),
	(59,'fr-fr','article_exp_day','article','Jour','2015-10-29 10:03:17'),
	(60,'fr-fr','article_exp_hour','article','Heure','2015-10-29 10:03:17'),
	(61,'fr-fr','article_exp_minute','article','Minute','2015-10-29 10:03:17'),
	(62,'fr-fr','article_exp_month','article','Mois','2015-10-29 10:03:17'),
	(63,'fr-fr','article_exp_second','article','Seconde','2015-10-29 10:03:17'),
	(64,'fr-fr','article_exp_year','article','Année','2015-10-29 10:03:17'),
	(65,'fr-fr','article_found','public','article trouvé','2016-10-24 11:39:40'),
	(66,'fr-fr','article_head','category','Catégories d’articles','2015-12-12 10:46:12'),
	(67,'fr-fr','article_hour','article','Heure','2015-10-29 10:03:17'),
	(68,'fr-fr','article_image','article','Image de l’article','2015-10-29 10:03:17'),
	(69,'fr-fr','article_markup','article','Balises d’article','2015-10-29 10:03:17'),
	(70,'fr-fr','article_minute','article','Minute','2015-10-29 10:03:17'),
	(71,'fr-fr','article_modified','list','Modifié','2008-04-06 06:48:17'),
	(72,'fr-fr','article_month','article','Mois','2015-10-29 10:03:17'),
	(73,'fr-fr','article_posted','article','Article publié.','2015-10-29 10:03:17'),
	(74,'fr-fr','article_saved','article','Article enregistré et publié.','2015-10-29 10:03:17'),
	(75,'fr-fr','article_saved_draft','article','Article enregistré comme brouillon.','2015-10-29 10:03:17'),
	(76,'fr-fr','article_saved_hidden','article','Article enregistré et masqué.','2015-10-29 10:03:17'),
	(77,'fr-fr','article_saved_pending','article','Article enregistré et en attente de validation.','2015-10-29 10:03:17'),
	(78,'fr-fr','article_second','article','Seconde','2015-10-29 10:03:17'),
	(79,'fr-fr','article_year','article','Année','2015-10-29 10:03:17'),
	(80,'fr-fr','ascending','common','Ordre ascendant','2017-02-13 11:31:30'),
	(81,'fr-fr','assign_assets_to','admin','Attribuer les contenus de cet utilisateur à','2016-02-22 10:16:54'),
	(82,'fr-fr','atom_feed_title','public','Flux Atom','2016-10-24 11:39:40'),
	(83,'fr-fr','attach_titles_to_permalinks','prefs','Attacher le titre aux URI permanentes ?','2017-01-26 13:14:27'),
	(84,'fr-fr','attribute_values_must_be_quoted','public','Le contenu des attributs doit être mis entre guillemets droits doubles.','2016-10-24 11:39:40'),
	(85,'fr-fr','author','public','Auteur','2016-10-24 11:39:40'),
	(86,'fr-fr','authors','public','Auteurs','2016-10-24 11:39:40'),
	(87,'fr-fr','author_already_exists','admin','L’auteur <strong>{name}</strong> existe déjà.','2016-02-22 10:16:54'),
	(88,'fr-fr','author_deleted','admin','Auteur <strong>{name}</strong> supprimé.','2016-02-22 10:16:54'),
	(89,'fr-fr','author_updated','admin','Auteur <strong>{name}</strong> mis à jour.','2016-02-22 10:16:54'),
	(90,'fr-fr','auth_required','common','Autorisation requise.','2017-02-13 11:31:30'),
	(91,'fr-fr','auto_dst','prefs','Ajuster automatiquement les heures été / hiver ?','2017-01-26 13:14:27'),
	(92,'fr-fr','a_few_seconds','public','quelques secondes','2016-10-24 11:39:40'),
	(93,'fr-fr','a_message_will_be_sent_with_login','admin','Un message sera envoyé avec ces informations de connexion.','2016-02-22 10:16:54'),
	(94,'fr-fr','a_new_password_will_be_mailed','admin','Un nouveau mot de passe sera envoyé par courrier électronique.','2016-02-22 10:16:54'),
	(95,'fr-fr','bad_cookie','common','Votre session de connexion a expiré. Merci de bien vouloir vous reconnecter.','2017-02-13 11:31:30'),
	(96,'fr-fr','bad_plugin_code','plugin','Le code source du plugin est invalide ou absent.','2017-02-13 11:32:02'),
	(97,'fr-fr','ban','discuss','Bannir','2015-09-04 14:50:09'),
	(98,'fr-fr','banned_for','discuss','Banni pour','2015-09-04 14:50:09'),
	(99,'fr-fr','ban_author','discuss','Bannir l’auteur du commentaire','2015-09-04 14:50:09'),
	(1156,'fr-fr','doctype','prefs','Doctype','2016-10-04 13:17:59'),
	(101,'fr-fr','bg-bg','common','български','2017-02-13 11:31:30'),
	(102,'fr-fr','blockquote','public','Bloc de citation','2016-10-24 11:39:40'),
	(103,'fr-fr','body','common','Corps','2017-02-13 11:31:30'),
	(104,'fr-fr','breadcrumb_linked','tag','Fil d’Ariane avec liens hypertextes ?','2016-10-25 14:23:44'),
	(105,'fr-fr','breadcrumb_separator','tag','Séparateur du fil d’Ariane','2016-10-25 14:23:44'),
	(106,'fr-fr','break','tag','Séparateur','2016-10-25 14:23:44'),
	(107,'fr-fr','breakclass','tag','Classe CSS du séparateur des listes','2016-10-25 14:23:44'),
	(108,'fr-fr','broken_plugin','plugin','défaillant','2017-02-13 11:32:02'),
	(109,'fr-fr','browse','public','Naviguer','2016-10-24 11:39:40'),
	(110,'fr-fr','bs-ba','common','Bosanski','2017-02-13 11:31:30'),
	(111,'fr-fr','build','tag','Construire la balise','2016-10-25 14:23:44'),
	(112,'fr-fr','bulkload_existing_css','css','Créer ou charger une nouvelle feuille de styles','2014-05-19 12:11:09'),
	(113,'fr-fr','bulleted_list','public','Liste non ordonnée','2016-10-24 11:39:40'),
	(114,'fr-fr','button_text','tag','Texte du bouton','2016-10-25 14:23:44'),
	(115,'fr-fr','ca-es','common','Català','2017-02-13 11:31:30'),
	(116,'fr-fr','cannot_delete_default_css','css','La feuille de styles par <strong>défaut</strong> ne peut être supprimée.','2014-05-19 12:11:09'),
	(117,'fr-fr','cannot_instantiate_theme','common','Le thème <strong>{name}</strong> ({class}) n\\\'a pu être chargé correctement depuis le fichier {path}. Le thème par défaut sera utilisé en remplacement.','2017-02-13 11:31:30'),
	(118,'fr-fr','cannot_write_directory','image','Impossible d’écrire dans le répertoire','2017-02-13 11:31:46'),
	(119,'fr-fr','cant_ban_blank_ip','discuss','Impossible de bannir une adresse IP vide.','2015-09-04 14:50:09'),
	(120,'fr-fr','caption','public','Légende','2016-10-24 11:39:40'),
	(121,'fr-fr','categories','public','Catégories','2016-10-24 11:39:40'),
	(122,'fr-fr','categorize','public','Catégorie(s)','2016-10-24 11:39:40'),
	(123,'fr-fr','category','common','Categorie','2017-02-13 11:31:30'),
	(124,'fr-fr','category1','public','Catégorie 1','2016-10-24 11:39:40'),
	(125,'fr-fr','category2','public','Catégorie 2','2016-10-24 11:39:40'),
	(126,'fr-fr','category_list_section','tag','Hyperlien vers une section spécifique ?','2016-10-25 14:23:44'),
	(127,'fr-fr','category_subcategory','prefs','/catégorie/sous-catégorie','2017-01-26 13:14:27'),
	(128,'fr-fr','category_tags','tag','Catégories','2016-10-25 14:23:44'),
	(129,'fr-fr','change','public','changer','2016-10-24 11:39:40'),
	(130,'fr-fr','changeauthor','common','Changer l’auteur','2017-02-13 11:31:30'),
	(131,'fr-fr','changecategory','common','Modifier la catégorie','2017-02-13 11:31:30'),
	(132,'fr-fr','changecategory1','common','Changer la catégorie1','2017-02-13 11:31:30'),
	(133,'fr-fr','changecategory2','common','Changer la catégorie2','2017-02-13 11:31:30'),
	(134,'fr-fr','changecomments','common','Changer les commentaires','2017-02-13 11:31:30'),
	(135,'fr-fr','changeorder','plugin','Modifier l’ordre de tri','2017-02-13 11:32:02'),
	(136,'fr-fr','changeprivilege','admin','Modifier les droits','2016-02-22 10:16:54'),
	(137,'fr-fr','changesection','common','Changer la section','2017-02-13 11:31:30'),
	(138,'fr-fr','changestatus','common','Changer le statut','2017-02-13 11:31:30'),
	(139,'fr-fr','change_email_address','admin','Modifier l’adresse email','2016-02-22 10:16:54'),
	(140,'fr-fr','change_password','admin','Modifier le mot de passe','2016-02-22 10:16:54'),
	(142,'fr-fr','check_for_txp_updates','prefs','Vérifier l’existence de mises à jour','2017-01-26 13:14:27'),
	(143,'fr-fr','check_html','public','Vérifier le code HTML','2016-10-24 11:39:40'),
	(144,'fr-fr','choose','public','Choisissez…','2016-10-24 11:39:40'),
	(145,'fr-fr','choose_either_width_height_or_both','image','Indiquer largeur, hauteur ou les deux','2017-02-13 11:31:46'),
	(1154,'fr-fr','deleteforce','common','Forcer la suppression','2017-02-13 11:31:30'),
	(1155,'fr-fr','deprecated_configuration','public','Option de configuration dépréciée : <strong>{name}</strong>.','2016-10-24 11:39:40'),
	(147,'fr-fr','citation','public','référence','2016-10-24 11:39:40'),
	(148,'fr-fr','class','tag','Classe CSS','2016-10-25 14:23:44'),
	(149,'fr-fr','clean','prefs','optimisées (« propres »)','2017-01-26 13:14:27'),
	(150,'fr-fr','cleanurl_only_apache','diag','Les URL « propres » ne sont vraiment supportées que par Apache, vous les utilisez à vos propres risques.','2017-01-25 17:30:25'),
	(151,'fr-fr','clean_url_test_failed','diag','Impossible de tester si le mode d’URL optimisées est applicable.','2017-01-25 17:30:25'),
	(152,'fr-fr','comment','common','Commentaire','2017-02-13 11:31:30'),
	(153,'fr-fr','comments','public','Commentaires','2016-10-24 11:39:40'),
	(154,'fr-fr','comments_are_ol','prefs','Afficher les commentaires en une liste ordonnée ?','2017-01-26 13:14:27'),
	(155,'fr-fr','comments_auto_append','prefs','Ajout automatique des commentaires après un article ?','2017-01-26 13:14:27'),
	(156,'fr-fr','comments_closed','public','Commentaires fermés pour cet article.','2016-10-24 11:39:40'),
	(157,'fr-fr','comments_dateformat','prefs','Format de la date des commentaires','2017-01-26 13:14:27'),
	(158,'fr-fr','comments_default_invite','prefs','Phrase – par défaut – d’invitation à poster','2017-01-26 13:14:27'),
	(159,'fr-fr','comments_deleted','discuss','Commentaires supprimés : <strong>{list}</strong>.','2015-09-04 14:50:09'),
	(160,'fr-fr','comments_disabled_after','prefs','Désactivés après','2017-01-26 13:14:27'),
	(161,'fr-fr','comments_disallow_images','prefs','Interdire les images des utilisateurs ?','2017-01-26 13:14:27'),
	(162,'fr-fr','comments_form','tag','Module','2016-10-25 14:23:44'),
	(163,'fr-fr','comments_marked_spam','discuss','Commentaires désormais masqués et marqués comme spam : <strong>{list}</strong>.','2015-09-04 14:50:09'),
	(164,'fr-fr','comments_marked_unmoderated','discuss','Commentaires désormais masqués et marqués comme non-modérés : <strong>{list}</strong>.','2015-09-04 14:50:09'),
	(165,'fr-fr','comments_marked_visible','discuss','Commentaires désormais affichés : <strong>{list}</strong>.','2015-09-04 14:50:09'),
	(166,'fr-fr','comments_mode','prefs','Affichage des commentaires','2017-01-26 13:14:27'),
	(167,'fr-fr','comments_moderate','prefs','Modérer les commentaires ?','2017-01-26 13:14:27'),
	(168,'fr-fr','comments_on','public','Commentaires pour','2016-10-24 11:39:40'),
	(169,'fr-fr','comments_on_default','prefs','Activés par défaut ?','2017-01-26 13:14:27'),
	(170,'fr-fr','comments_permlink','public','URL (adresse de lien hypertexte) permanente','2016-10-24 11:39:40'),
	(171,'fr-fr','comments_require_email','prefs','Les commentaires exigent un email ?','2017-01-26 13:14:27'),
	(172,'fr-fr','comments_require_name','prefs','Les commentaires exigent un nom d’utilisateur ?','2017-01-26 13:14:27'),
	(173,'fr-fr','comments_sendmail','prefs','Envoyer les commentaires à l’auteur par email ?','2016-10-04 13:17:59'),
	(174,'fr-fr','comments_use_fat_textile','prefs','Permettre plus de balises Textile ?','2016-10-04 13:17:59'),
	(175,'fr-fr','comment_comment','public','Le commentaire','2016-10-24 11:39:40'),
	(176,'fr-fr','comment_details','tag','Détails d’un commentaire','2016-10-25 14:23:44'),
	(177,'fr-fr','comment_email','public','Email','2016-10-24 11:39:40'),
	(178,'fr-fr','comment_email_required','public','Veuillez renseigner une adresse électronique valide.','2016-10-24 11:39:40'),
	(179,'fr-fr','comment_form','tag','Structure des commentaires','2016-10-25 14:23:44'),
	(180,'fr-fr','comment_invitation','public','Texte de l’invite à commenter :','2016-10-24 11:39:40'),
	(181,'fr-fr','comment_means_site_updated','prefs','Site mis à jour si de nouveaux commentaires ?','2016-10-04 13:17:59'),
	(182,'fr-fr','comment_message','public','Message','2016-10-24 11:39:40'),
	(183,'fr-fr','comment_moderated','public','Votre commentaire est en attente de validation ; il sera visible après vérification.','2016-10-24 11:39:40'),
	(184,'fr-fr','comment_name','public','Auteur du commentaire','2016-10-24 11:39:40'),
	(185,'fr-fr','comment_name_link','tag','Hyperlien vers l’email / le site web de l’auteur du commentaire ?','2016-10-25 14:23:44'),
	(186,'fr-fr','comment_name_required','public','Veuillez renseigner votre nom.','2016-10-24 11:39:40'),
	(187,'fr-fr','comment_nofollow','prefs','Attribut <code>nofollow</code> pour les liens des commentaires ?','2016-10-04 13:17:59'),
	(188,'fr-fr','comment_not_found','discuss','Ce commentaire n’existe pas, il a peut-être été effacé ?','2015-09-04 14:50:09'),
	(189,'fr-fr','comment_posted','public','Commentaire envoyé, merci de votre participation.','2016-10-24 11:39:40'),
	(190,'fr-fr','comment_received','public','[{site}] commentaire reçu : {title}','2016-10-24 11:39:40'),
	(191,'fr-fr','comment_recorded','public','Un nouveau commentaire pour votre article « {title} » vient d’être rédigé.','2016-10-24 11:39:40'),
	(192,'fr-fr','comment_required','public','Veuillez saisir un commentaire.','2016-10-24 11:39:40'),
	(193,'fr-fr','comment_updated','discuss','Commentaire <strong>{id}</strong> mis à jour.','2015-09-04 14:50:09'),
	(194,'fr-fr','comment_web','public','Site web','2016-10-24 11:39:40'),
	(195,'fr-fr','concurrent_edit_by','article','Article <strong>non</strong> sauvegardé. Cet article a été modifié au même moment par {author}. Si vous souhaitez confirmer vos modifications, cliquez sur le bouton “Sauver” de nouveau.','2015-10-29 10:03:17'),
	(196,'fr-fr','condition','file','Disponibilité','2014-01-17 09:24:52'),
	(197,'fr-fr','confirm_comment_deletion','discuss','confirmer la suppression du commentaire','2015-09-04 14:50:09'),
	(198,'fr-fr','confirm_delete_popup','common','Voulez-vous vraiment, vraiment supprimer ?','2017-02-13 11:31:30'),
	(1153,'fr-fr','definition_list','public','Liste de définitions','2016-10-24 11:39:40'),
	(200,'fr-fr','contact','public','Contacter l’auteur','2016-10-24 11:39:40'),
	(201,'fr-fr','continue','import','Continuer','2016-10-25 14:24:00'),
	(202,'fr-fr','convert_linebreaks','prefs','Convertir les retours à la ligne','2016-10-04 13:17:59'),
	(203,'fr-fr','cookies_must_be_enabled','common','Votre navigateur web doit accepter les cookies pour utiliser Textpattern CMS sur ce site.','2017-02-13 11:31:30'),
	(204,'fr-fr','copy','public','Copier','2016-10-24 11:39:40'),
	(205,'fr-fr','copy_css_as','css','…ou copier la feuille de styles sous le nom :','2014-05-19 12:11:09'),
	(206,'fr-fr','copy_editor','admin','Rédacteur en chef','2016-02-22 10:16:54'),
	(207,'fr-fr','copy_page_as','page','…ou copier le gabarit sous le nom :','2015-09-04 14:50:47'),
	(208,'fr-fr','could_not_log_in','common','Impossible de se connecter avec ce nom et/ou mot de passe.','2017-02-13 11:31:30'),
	(209,'fr-fr','could_not_mail','admin','Impossible d’envoyer l’email','2016-02-22 10:16:54'),
	(210,'fr-fr','could_not_update_author','admin','Impossible de mettre à jour l’auteur.','2016-02-22 10:16:54'),
	(211,'fr-fr','create','public','Créer','2016-10-24 11:39:40'),
	(212,'fr-fr','created','public','créé','2016-10-24 11:39:40'),
	(1151,'fr-fr','date_settings','article','Options de dates','2015-10-29 10:03:17'),
	(1152,'fr-fr','default_write_section','section','Section de publication par défaut','2015-10-29 10:00:48'),
	(214,'fr-fr','create_new','public','Ajouter un nouvel article','2016-10-24 11:39:40'),
	(215,'fr-fr','create_new_css','css','Créer une nouvelle','2014-05-19 12:11:09'),
	(216,'fr-fr','create_new_form','form','Créer un nouveau module','2015-09-04 14:50:24'),
	(217,'fr-fr','create_new_page','page','Créer un nouveau gabarit','2015-09-04 14:50:47'),
	(218,'fr-fr','create_thumbnail','image','Créer une miniature','2017-02-13 11:31:46'),
	(219,'fr-fr','cs-cz','common','Čeština','2017-02-13 11:31:30'),
	(220,'fr-fr','css','prefs','CSS','2016-10-04 13:17:59'),
	(221,'fr-fr','css_already_exists','css','Une feuille de styles CSS du nom <strong>{name}</strong> existe déjà.','2014-05-19 12:11:09'),
	(222,'fr-fr','css_created','css','Feuille de style <strong>{name}</strong> créée.','2014-05-19 12:11:09'),
	(223,'fr-fr','css_deleted','css','Feuille de style <strong>{name}</strong> supprimée.','2014-05-19 12:11:09'),
	(224,'fr-fr','css_mode','css','Mode CSS','2014-05-19 12:11:09'),
	(225,'fr-fr','css_name_required','css','Veuillez nommer votre feuille de style.','2014-05-19 12:11:09'),
	(226,'fr-fr','css_property_value','css','Propriété : valeur','2014-05-19 12:11:09'),
	(227,'fr-fr','css_selector','css','Sélecteur','2014-05-19 12:11:09'),
	(228,'fr-fr','css_updated','css','Feuille de styles <strong>{name}</strong> mise à jour.','2014-05-19 12:11:09'),
	(229,'fr-fr','css_used_by_section','css','La feuille de styles <strong>{name}</strong> n’a pas été effacée car elle est utilisée par {count} section(s).','2014-05-19 12:11:09'),
	(230,'fr-fr','custom','prefs','Saisie personnalisée','2016-10-04 13:17:59'),
	(231,'fr-fr','custom_10_set','prefs','Champ personnalisé 10','2016-10-04 13:17:59'),
	(232,'fr-fr','custom_1_set','prefs','Champ personnalisé 1','2016-10-04 13:17:59'),
	(233,'fr-fr','custom_2_set','prefs','Champ personnalisé 2','2016-10-04 13:17:59'),
	(234,'fr-fr','custom_3_set','prefs','Champ personnalisé 3','2016-10-04 13:17:59'),
	(235,'fr-fr','custom_4_set','prefs','Champ personnalisé 4','2016-10-04 13:17:59'),
	(236,'fr-fr','custom_5_set','prefs','Champ personnalisé 5','2016-10-04 13:17:59'),
	(237,'fr-fr','custom_6_set','prefs','Champ personnalisé 6','2016-10-04 13:17:59'),
	(238,'fr-fr','custom_7_set','prefs','Champ personnalisé 7','2016-10-04 13:17:59'),
	(239,'fr-fr','custom_8_set','prefs','Champ personnalisé 8','2016-10-04 13:17:59'),
	(240,'fr-fr','custom_9_set','prefs','Champ personnalisé 9','2016-10-04 13:17:59'),
	(241,'fr-fr','czech','prefs','Čeština','2012-08-27 12:37:41'),
	(242,'fr-fr','da-dk','common','Dansk','2017-02-13 11:31:30'),
	(243,'fr-fr','danish','prefs','Dansk','2012-08-27 12:37:41'),
	(1150,'fr-fr','date_added','common','Date ajoutée','2017-02-13 11:31:30'),
	(245,'fr-fr','database_stuff','import','Informations de la base de données','2016-10-25 14:24:00'),
	(246,'fr-fr','date','public','Date','2016-10-24 11:39:40'),
	(247,'fr-fr','dateformat','public','Format de la date','2016-10-24 11:39:40'),
	(248,'fr-fr','date_banned','discuss','Date du bannissement','2015-09-04 14:50:09'),
	(249,'fr-fr','date_case','public','Casse de la date','2016-10-24 11:39:40'),
	(250,'fr-fr','day','public','jour','2016-10-24 11:39:40'),
	(251,'fr-fr','days','public','jours','2016-10-24 11:39:40'),
	(1149,'fr-fr','css_save_failed','css','Cette feuille de styles n’a pas été enregistrée en raison d’une erreur. Veuillez essayer de nouveau.','2014-05-19 12:11:09'),
	(1148,'fr-fr','create_section','section','Créer une nouvelle section','2015-10-29 10:00:48'),
	(256,'fr-fr','de-de','common','Deutsch','2017-02-13 11:31:30'),
	(257,'fr-fr','decimals','tag','Combien de décimales doivent être affichées ?','2016-10-25 14:23:44'),
	(258,'fr-fr','default','public','Défaut','2016-10-24 11:39:40'),
	(259,'fr-fr','default_event','prefs','Onglet actif par défaut','2016-10-04 13:17:59'),
	(260,'fr-fr','default_title','tag','Texte affiché par défaut pour les hyperliens de section','2016-10-25 14:23:44'),
	(261,'fr-fr','delete','public','Supprimer','2016-10-24 11:39:40'),
	(262,'fr-fr','deleted','public','supprimé','2016-10-24 11:39:40'),
	(263,'fr-fr','deleted_text','public','texte supprimé','2016-10-24 11:39:40'),
	(264,'fr-fr','delete_declaration','css','Supprimer cette déclaration','2014-05-19 12:11:09'),
	(265,'fr-fr','delete_entire_selector','css','Supprimer ce sélecteur au complet','2014-05-19 12:11:09'),
	(266,'fr-fr','delete_form_confirmation','form','confirmer la suppression du module','2015-09-04 14:50:24'),
	(267,'fr-fr','delete_page_confirmation','page','confirmer la suppression du gabarit','2015-09-04 14:50:47'),
	(268,'fr-fr','delete_section_confirmation','section','confirmer la suppression de la section','2015-10-29 10:00:48'),
	(269,'fr-fr','delete_selected','common','Supprimer la sélection','2017-02-13 11:31:30'),
	(270,'fr-fr','delete_this_declaration','css','Supprimer cette déclaration','2014-05-19 12:11:09'),
	(271,'fr-fr','deprecated_attribute','public','L’attribut <strong>{name}</strong> est obsolète.','2016-10-24 11:39:40'),
	(272,'fr-fr','deprecated_function','public','La fonction <strong>{name}</strong> est obsolète.','2016-10-24 11:39:40'),
	(273,'fr-fr','deprecated_function_with','public','La fonction <strong>{name}</strong> est obsolète : utilisez <strong>{with}</strong> à sa place.','2016-10-24 11:39:40'),
	(274,'fr-fr','deprecated_tag','public','Balise obsolète','2016-10-24 11:39:40'),
	(275,'fr-fr','descending','common','Ordre descendant','2017-02-13 11:31:30'),
	(276,'fr-fr','description','common','Description','2017-02-13 11:31:30'),
	(277,'fr-fr','designer','admin','Designer','2016-02-22 10:16:54'),
	(278,'fr-fr','detail','diag','Détails','2017-01-25 17:30:25'),
	(279,'fr-fr','detail_toggle','common','Afficher les détails','2017-02-13 11:31:30'),
	(280,'fr-fr','dev_version_live','diag','Vous utilisez des fichiers en développement sur un serveur public.','2017-01-25 17:30:25'),
	(281,'fr-fr','diagnostic_info','diag','Informations de diagnostic','2017-01-25 17:30:25'),
	(283,'fr-fr','dir_not_writable','diag','Le serveur ne peut écrire dans {dirtype}','2017-01-25 17:30:25'),
	(284,'fr-fr','displayed_comments','discuss','Commentaires affichés','2015-09-04 14:50:09'),
	(285,'fr-fr','dns_lookup_fails','diag','Échec de la trace via DNS du nom de domaine','2017-01-25 17:30:25'),
	(286,'fr-fr','document_root','diag','Document racine','2017-01-25 17:30:25'),
	(287,'fr-fr','download','file','Télécharger','2014-01-17 09:24:52'),
	(288,'fr-fr','downloads','file','Téléchargements','2014-01-17 09:24:52'),
	(289,'fr-fr','draft','common','Brouillon','2017-02-13 11:31:30'),
	(290,'fr-fr','dutch','prefs','Nederlands','2012-08-27 12:37:41'),
	(291,'fr-fr','edit','public','Éditer','2016-10-24 11:39:40'),
	(292,'fr-fr','edit_author','admin','Éditer l’auteur','2016-02-22 10:16:54'),
	(293,'fr-fr','edit_category','category','Édition de la catégorie','2015-12-12 10:46:12'),
	(294,'fr-fr','edit_comment','discuss','Édition du commentaire','2015-09-04 14:50:09'),
	(295,'fr-fr','edit_css','css','Éditer la feuille de styles CSS','2014-05-19 12:11:09'),
	(296,'fr-fr','edit_css_file','css','Éditer le fichier CSS','2014-05-19 12:11:09'),
	(297,'fr-fr','edit_css_in_form','css','Éditer dans l’éditeur CSS','2014-05-19 12:11:09'),
	(298,'fr-fr','edit_forms','form','Éditer les modules','2015-09-04 14:50:24'),
	(299,'fr-fr','edit_image','image','Édition de l’image','2017-02-13 11:31:46'),
	(300,'fr-fr','edit_links','link','Éditer les liens','2014-05-19 12:11:35'),
	(301,'fr-fr','edit_page','page','Éditer le gabarit','2015-09-04 14:50:47'),
	(302,'fr-fr','edit_pages','page','Éditer les gabarits','2015-09-04 14:50:47'),
	(303,'fr-fr','edit_plugins','plugin','Éditer les plugins','2017-02-13 11:32:02'),
	(304,'fr-fr','edit_preferences','prefs','Éditer les préférences','2016-10-04 13:17:59'),
	(305,'fr-fr','edit_raw_css','css','Éditer le CSS brut','2014-05-19 12:11:09'),
	(306,'fr-fr','edit_raw_css_by_default','prefs','Éditer les feuilles de styles CSS en brut par défaut ?','2016-10-04 13:17:59'),
	(307,'fr-fr','edit_sections','section','Éditer les sections','2015-10-29 10:00:48'),
	(308,'fr-fr','el-gr','common','Ελληνικά','2017-02-13 11:31:30'),
	(309,'fr-fr','email','public','Adresse email','2016-10-24 11:39:40'),
	(310,'fr-fr','email_address','public','Adresse email','2016-10-24 11:39:40'),
	(311,'fr-fr','email_changed','admin','Adresse email changée en <strong>{email}</strong>.','2016-02-22 10:16:54'),
	(313,'fr-fr','emphasis','public','emphase','2016-10-24 11:39:40'),
	(314,'fr-fr','en-gb','common','English (British)','2017-02-13 11:31:30'),
	(315,'fr-fr','en-us','common','English (American)','2017-02-13 11:31:30'),
	(316,'fr-fr','enable_xmlrpc_server','prefs','Activer le serveur XML-RPC ?','2016-10-04 13:17:59'),
	(317,'fr-fr','english_gb','prefs','English (GB)','2012-08-27 12:37:41'),
	(318,'fr-fr','english_us','prefs','English (US)','2012-08-27 12:37:41'),
	(1147,'fr-fr','comment_settings','article','Options de commentaires','2015-10-29 10:03:17'),
	(320,'fr-fr','error_adding_new_author','admin','Erreur lors de l’ajout d’un nouvel auteur.','2016-02-22 10:16:54'),
	(321,'fr-fr','error_article_context','public','Les balises spécifiques aux articles ne peuvent pas être utilisées en dehors du contexte des articles.','2016-10-24 11:39:40'),
	(322,'fr-fr','error_comment_context','public','Les balises de commentaires ne peuvent pas être utilisées en-dehors du contexte des commentaires.','2016-10-24 11:39:40'),
	(323,'fr-fr','error_file_context','public','Les balises de fichiers ne peuvent pas être utilisées en-dehors du contexte des fichiers.','2016-10-24 11:39:40'),
	(324,'fr-fr','error_image_context','public','Les balises d’image ne peuvent être utilisées en-dehors du contexte des images.','2016-10-24 11:39:40'),
	(325,'fr-fr','error_link_context','public','Les balises de liens hypertextes ne peuvent pas être utilisées en-dehors du contexte des liens.','2016-10-24 11:39:40'),
	(326,'fr-fr','es-es','common','Español','2017-02-13 11:31:30'),
	(327,'fr-fr','escape','tag','Échappement','2016-10-25 14:23:44'),
	(328,'fr-fr','et-ee','common','Eesti','2017-02-13 11:31:30'),
	(329,'fr-fr','excerpt','common','Résumé','2017-02-13 11:31:30'),
	(330,'fr-fr','excerpt_markup','article','Balises de résumé','2015-10-29 10:03:17'),
	(331,'fr-fr','exclude','tag','Exclure','2016-10-25 14:23:44'),
	(332,'fr-fr','existing_file','file','Fichiers existants :','2014-01-17 09:24:52'),
	(333,'fr-fr','experts_only','prefs','pour les experts','2016-10-04 13:17:59'),
	(334,'fr-fr','expired','common','Expiré','2017-02-13 11:31:30'),
	(335,'fr-fr','expires','article','Date d’expiration','2015-10-29 10:03:17'),
	(336,'fr-fr','expire_logs_after','prefs','Les journaux d’activités expirent après ?','2016-10-04 13:17:59'),
	(337,'fr-fr','extensions','public','Extensions','2016-10-24 11:39:40'),
	(338,'fr-fr','fa-ir','common','پارسی','2017-02-13 11:31:30'),
	(339,'fr-fr','feeds','prefs','Flux de syndication','2016-10-04 13:17:59'),
	(340,'fr-fr','fi-fi','common','Suomi','2017-02-13 11:31:30'),
	(341,'fr-fr','file','file','Fichier','2014-01-17 09:24:52'),
	(342,'fr-fr','filename','tag','Nom','2016-10-25 14:23:44'),
	(343,'fr-fr','file_already_exists','file','Le fichier <strong>{name}</strong> existe déjà.','2014-01-17 09:24:52'),
	(344,'fr-fr','file_base_path','prefs','Chemin du répertoire des fichiers téléchargés','2016-10-04 13:17:59'),
	(345,'fr-fr','file_cannot_rename','file','Le fichier <strong>{name}</strong> n’a pas pu être renommé.','2014-01-17 09:24:52'),
	(346,'fr-fr','file_categories_deleted','category','Catégories de fichiers supprimées : <strong>{list}</strong>.','2015-12-12 10:46:12'),
	(347,'fr-fr','file_category','file','Catégorie','2014-01-17 09:24:52'),
	(348,'fr-fr','file_category_already_exists','category','La catégorie de fichier <strong>{name}</strong> existe déjà.','2015-12-12 10:46:12'),
	(349,'fr-fr','file_category_created','category','Catégorie de fichiers <strong>{name}</strong> créée.','2015-12-12 10:46:12'),
	(350,'fr-fr','file_category_invalid','category','Catégorie de fichiers <strong>{name}</strong> invalide.','2015-12-12 10:46:12'),
	(351,'fr-fr','file_category_name','category','Nom de la catégorie de fichiers','2015-12-12 10:46:12'),
	(352,'fr-fr','file_category_title','category','Titre de la catégorie du fichiers','2015-12-12 10:46:12'),
	(353,'fr-fr','file_category_updated','category','Catégorie de fichiers <strong>{name}</strong> mise à jour.','2015-12-12 10:46:12'),
	(354,'fr-fr','file_context','public','fichier','2016-10-24 11:39:40'),
	(355,'fr-fr','file_deleted','file','Fichier(s) <strong>{name}</strong> effacé(s).','2014-01-17 09:24:52'),
	(356,'fr-fr','file_delete_failed','file','Impossible d’effacer le(s) fichier(s)','2014-01-17 09:24:52'),
	(357,'fr-fr','file_dir_not_writeable','file','<strong>Attention</strong> : le serveur ne peut pas écrire dans le répertoire <code>{filedir}</code> Merci de vérifier les permissions (CHMOD).','2014-01-17 09:24:52'),
	(358,'fr-fr','file_download_count','file','Nombre de téléchargements','2014-01-17 09:24:52'),
	(359,'fr-fr','file_download_tags','tag','Téléchargement de fichiers','2016-10-25 14:23:44'),
	(360,'fr-fr','file_head','category','Catégories de fichiers','2015-12-12 10:46:12'),
	(361,'fr-fr','file_max_upload_size','prefs','Taille maximale d’un fichier envoyé sur le serveur (octets)','2016-10-04 13:17:59'),
	(362,'fr-fr','file_name','file','Nom du fichier','2014-01-17 09:24:52'),
	(363,'fr-fr','file_not_found','file','Fichier(s) non trouvé(s)','2014-01-17 09:24:52'),
	(364,'fr-fr','file_not_updated','file','Fichier <strong>{name}</strong> <em>non</em> mis à jour !','2014-01-17 09:24:52'),
	(365,'fr-fr','file_relink','file','Envoyer/assigner un fichier','2014-01-17 09:24:52'),
	(366,'fr-fr','file_status','file','Statut du fichier','2014-01-17 09:24:52'),
	(367,'fr-fr','file_status_missing','file','Manquant','2014-01-17 09:24:52'),
	(368,'fr-fr','file_status_ok','file','OK','2014-01-17 09:24:52'),
	(369,'fr-fr','file_unsynchronized','file','Le fichier <strong>{name}</strong> n’est plus synchrone avec la base de données. Merci d’adapter son nom manuellement.','2014-01-17 09:24:52'),
	(370,'fr-fr','file_updated','file','Fichier <strong>{name}</strong> mis à jour.','2014-01-17 09:24:52'),
	(371,'fr-fr','file_uploaded','file','Fichier <strong>{name}</strong> bien reçu sur le serveur.','2014-01-17 09:24:52'),
	(372,'fr-fr','file_uploads_disabled','diag','Le téléchargement de fichiers sur le serveur est désactivé','2017-01-25 17:30:25'),
	(373,'fr-fr','file_upload_failed','file','L’envoi du fichier a échoué','2014-01-17 09:24:52'),
	(374,'fr-fr','finnish','prefs','Finnois','2012-08-27 12:37:41'),
	(375,'fr-fr','flavor','tag','Format de syndication','2016-10-25 14:23:44'),
	(376,'fr-fr','flavour','tag','Format de syndication','2016-10-25 14:23:44'),
	(377,'fr-fr','foo_bar','public','Test d’erreur du caractère souligné','2012-08-27 13:19:21'),
	(378,'fr-fr','forget','public','Effacer les informations mémorisées','2016-10-24 11:39:40'),
	(379,'fr-fr','form','public','Module','2016-10-24 11:39:40'),
	(380,'fr-fr','format','tag','Format','2016-10-25 14:23:44'),
	(381,'fr-fr','forms','public','Modules','2016-10-24 11:39:40'),
	(382,'fr-fr','forms_deleted','form','Module(s) effacé(s) : <strong>{list}</strong>.','2015-09-04 14:50:24'),
	(383,'fr-fr','form_already_exists','form','Le module <strong>{name}</strong> existe déjà.','2015-09-04 14:50:24'),
	(384,'fr-fr','form_created','form','Module <strong>{name}</strong> créé.','2015-09-04 14:50:24'),
	(385,'fr-fr','form_name','form','Nom du module (requis)','2015-09-04 14:50:24'),
	(386,'fr-fr','form_name_invalid','form','Le nom du module n’est pas valide.','2015-09-04 14:50:24'),
	(387,'fr-fr','form_not_found','common','Module introuvable','2017-02-13 11:31:30'),
	(388,'fr-fr','form_not_specified','common','Module non spécifié.','2017-02-13 11:31:30'),
	(389,'fr-fr','form_type','form','Type de module (requis)','2015-09-04 14:50:24'),
	(390,'fr-fr','form_type_missing','form','Il manque le type du module','2015-09-04 14:50:24'),
	(391,'fr-fr','form_updated','form','Module <strong>{name}</strong> mis à jour.','2015-09-04 14:50:24'),
	(392,'fr-fr','fr-fr','common','Français','2017-02-13 11:31:30'),
	(393,'fr-fr','freelancer','admin','Rédacteur simple','2016-02-22 10:16:54'),
	(394,'fr-fr','french','prefs','Français','2012-08-27 12:37:41'),
	(395,'fr-fr','from_file','prefs','Installation depuis un fichier','2016-10-04 13:17:59'),
	(396,'fr-fr','from_server','prefs','Installation depuis un serveur','2016-10-04 13:17:59'),
	(1146,'fr-fr','comment_save_failed','discuss','Ce commentaire n’a pas été enregistré en raison d’une erreur. Veuillez essayer de nouveau.','2015-09-04 14:50:09'),
	(398,'fr-fr','gd_info','diag','{version} formats supportés : {supported}.','2017-01-25 17:30:25'),
	(399,'fr-fr','gd_library','diag','GD Graphics Library','2017-01-25 17:30:25'),
	(400,'fr-fr','gd_unavailable','common','indisponible','2017-02-13 11:31:30'),
	(401,'fr-fr','gl-gz','common','Galego','2017-02-13 11:31:30'),
	(402,'fr-fr','gmt','tag','Format selon le temps UTC / GMT ?','2016-10-25 14:23:44'),
	(403,'fr-fr','gmtoffset','prefs','Fuseau horaire (GMT compensé en secondes)','2016-10-04 13:17:59'),
	(404,'fr-fr','go','public','Appliquer','2016-10-24 11:39:40'),
	(405,'fr-fr','go_content','public','Aller au contenu','2016-10-24 11:39:40'),
	(406,'fr-fr','go_nav','public','Aller à la navigation','2016-10-24 11:39:40'),
	(407,'fr-fr','go_search','public','Aller à la recherche','2016-10-24 11:39:40'),
	(408,'fr-fr','go_to','public','Aller à','2016-10-24 11:39:40'),
	(409,'fr-fr','greeting','common','Salutation','2017-02-13 11:31:30'),
	(410,'fr-fr','ham','prefs','Non spam','2016-10-04 13:17:59'),
	(411,'fr-fr','has_excerpt','tag','Dispose d’un résumé','2016-10-25 14:23:44'),
	(412,'fr-fr','he-il','common','עברית','2017-02-13 11:31:30'),
	(413,'fr-fr','header','public','Sous-titres','2016-10-24 11:39:40'),
	(414,'fr-fr','help','plugin','Aide','2017-02-13 11:32:02'),
	(415,'fr-fr','hidden','common','Masqué','2017-02-13 11:31:30'),
	(416,'fr-fr','hide_comment','discuss','Masquer le commentaire','2015-09-04 14:50:09'),
	(417,'fr-fr','hide_spam','discuss','Cacher les spams','2015-09-04 14:50:09'),
	(418,'fr-fr','hide_unmoderated','discuss','Cacher les non modérés','2015-09-04 14:50:09'),
	(419,'fr-fr','high','diag','Maximum','2017-01-25 17:30:25'),
	(420,'fr-fr','hilight','tag','Balise de surlignage','2016-10-25 14:23:44'),
	(421,'fr-fr','hilight_limit','tag','Combien de cas à surligner ?','2016-10-25 14:23:44'),
	(422,'fr-fr','home','public','Accueil','2016-10-24 11:39:40'),
	(423,'fr-fr','host','public','Hôte','2016-10-24 11:39:40'),
	(424,'fr-fr','hour','public','heure','2016-10-24 11:39:40'),
	(425,'fr-fr','hours','public','heures','2016-10-24 11:39:40'),
	(426,'fr-fr','hours_days_ago','prefs','heures / jours auparavant','2016-10-04 13:17:59'),
	(427,'fr-fr','hr','public','ligne séparatrice horizontale','2016-10-24 11:39:40'),
	(428,'fr-fr','hr-hr','common','Hrvatski','2017-02-13 11:31:30'),
	(429,'fr-fr','htaccess_contents','diag','Contenu du fichier .htaccess','2017-01-25 17:30:25'),
	(430,'fr-fr','htaccess_missing','diag','Fichier .htaccess absent','2017-01-25 17:30:25'),
	(431,'fr-fr','html_id','tag','Attribut HTML <code>id</code>','2016-10-25 14:23:44'),
	(432,'fr-fr','hu-hu','common','Magyar','2017-02-13 11:31:30'),
	(433,'fr-fr','hyperlink','public','lien hypertexte','2016-10-24 11:39:40'),
	(434,'fr-fr','id','tag','ID#','2016-10-25 14:23:44'),
	(435,'fr-fr','id-id','common','Bahasa Indonesia','2017-02-13 11:31:30'),
	(436,'fr-fr','id_title','prefs','/id/titre','2016-10-04 13:17:59'),
	(437,'fr-fr','image','public','image','2016-10-24 11:39:40'),
	(438,'fr-fr','images','image','Images','2017-02-13 11:31:46'),
	(439,'fr-fr','imageurl','public','URL de l’image','2016-10-24 11:39:40'),
	(440,'fr-fr','image_categories_deleted','category','Catégories d’images supprimées : <strong>{list}</strong>.','2015-12-12 10:46:12'),
	(441,'fr-fr','image_category','common','Catégorie','2017-02-13 11:31:30'),
	(442,'fr-fr','image_category_already_exists','category','La catégorie d’images <strong>{name}</strong> existe déjà.','2015-12-12 10:46:12'),
	(443,'fr-fr','image_category_created','category','Catégorie d’images <strong>{name}</strong> créée.','2015-12-12 10:46:12'),
	(444,'fr-fr','image_category_invalid','category','Catégorie d’images <strong>{name}</strong> invalide.','2015-12-12 10:46:12'),
	(445,'fr-fr','image_category_name','category','Nom de la catégorie d’images','2015-12-12 10:46:12'),
	(446,'fr-fr','image_category_title','category','Titre de la catégorie d’images','2015-12-12 10:46:12'),
	(447,'fr-fr','image_category_updated','category','Catégorie d’images <strong>{name}</strong> mise à jour.','2015-12-12 10:46:12'),
	(448,'fr-fr','image_context','public','image','2016-10-24 11:39:40'),
	(449,'fr-fr','image_deleted','image','Image(s) <strong>{name}</strong> effacée(s).','2017-02-13 11:31:46'),
	(450,'fr-fr','image_delete_failed','image','L’image <strong>{name}</strong> n’a pas pu être totalement effacée.','2017-02-13 11:31:46'),
	(451,'fr-fr','image_head','category','Catégories d’images','2015-12-12 10:46:12'),
	(452,'fr-fr','image_name','image','Nom du fichier image originel','2017-02-13 11:31:46'),
	(453,'fr-fr','image_save_error','image','Il s’est produit une erreur lors de la sauvegarde de l’image.','2017-02-13 11:31:46'),
	(454,'fr-fr','image_updated','image','Image <strong>{name}</strong> mise à jour.','2017-02-13 11:31:46'),
	(455,'fr-fr','image_uploaded','image','Image(s) <strong>{name}</strong> envoyée(s) sur le serveur.','2017-02-13 11:31:46'),
	(456,'fr-fr','img_dir','prefs','Répertoire des images','2016-10-04 13:17:59'),
	(457,'fr-fr','img_dir_not_writeable','image','<strong>Attention</strong> : impossible d’enregistrer l’image dans le répertoire <code>{imgdir}</code>. Veuillez contacter votre hébergeur pour connaître les permissions (CHMOD) appropriées devant être appliquées.','2017-02-13 11:31:46'),
	(458,'fr-fr','img_dir_read_only','diag','Le répertoire d’images est en lecture seule','2017-01-25 17:30:25'),
	(459,'fr-fr','import_blogid','import','ID du Blog','2016-10-25 14:24:00'),
	(460,'fr-fr','import_database','import','Nom de la base de données','2016-10-25 14:24:00'),
	(461,'fr-fr','import_file_not_found','import','Fichier d’importation non trouvé. Veuillez renommer le fichier en <code>import.txt</code> et le placer dans le répertoire <code>/textpattern/include/import/</code>.','2016-10-25 14:24:00'),
	(462,'fr-fr','import_host','import','Adresse du serveur MySQL','2016-10-25 14:24:00'),
	(463,'fr-fr','import_invite','import','Invitación a comentar por defecto','2016-10-25 14:24:00'),
	(464,'fr-fr','import_login','import','Nom d’utilisateur MySQL','2016-10-25 14:24:00'),
	(465,'fr-fr','import_password','import','Mot de passe MySQL','2016-10-25 14:24:00'),
	(466,'fr-fr','import_section','import','Choix de la section','2016-10-25 14:24:00'),
	(467,'fr-fr','import_status','import','Statut des articles','2016-10-25 14:24:00'),
	(468,'fr-fr','import_wpprefix','import','Préfixes des tables SQL (optionnel)','2016-10-25 14:24:00'),
	(469,'fr-fr','include_default','tag','Inclure la section par défaut ?','2016-10-25 14:23:44'),
	(470,'fr-fr','include_email_atom','prefs','Inclure l’adresse email dans les flux Atom ?','2016-10-04 13:17:59'),
	(471,'fr-fr','include_in_search','section','Ajouter aux recherches ?','2015-10-29 10:00:48'),
	(472,'fr-fr','inline_style','tag','Style CSS dans le code HTML (inline style)','2016-10-25 14:23:44'),
	(473,'fr-fr','input_size','tag','Taille du masque de saisie','2016-10-25 14:23:44'),
	(474,'fr-fr','inserted_text','public','texte inséré','2016-10-24 11:39:40'),
	(475,'fr-fr','install','plugin','Installer','2017-02-13 11:32:02'),
	(476,'fr-fr','install_langfile','prefs','Pour installer de nouveaux langages, vous pouvez aussi les télécharger depuis {url} et les placer dans le répertoire ./textpattern/lang/','2016-10-04 13:17:59'),
	(477,'fr-fr','install_language','prefs','Installer la langue','2016-10-04 13:17:59'),
	(478,'fr-fr','install_plugin','plugin','Installation de plugin','2017-02-13 11:32:02'),
	(479,'fr-fr','install_textpack','prefs','Ajout d’une traduction de plugin (Textpack)','2016-10-04 13:17:59'),
	(480,'fr-fr','invalid_attribute_value','public','<strong>{name}</strong> n’est pas une valeur d’attribut valide','2016-10-24 11:39:40'),
	(481,'fr-fr','invalid_filename','file','Nom de fichier invalide','2014-01-17 09:24:52'),
	(482,'fr-fr','invalid_id','file','Numéro d’ID invalide','2014-01-17 09:24:52'),
	(483,'fr-fr','invalid_width_or_height','image','Dimensions invalides.','2017-02-13 11:31:46'),
	(484,'fr-fr','ips_banned','discuss','Adresses IP bannies des commentaires : <strong>{list}</strong>.','2015-09-04 14:50:09'),
	(485,'fr-fr','ip_already_banned','discuss','Adresse IP <strong>{ip}</strong> déjà bannie.','2015-09-04 14:50:09'),
	(486,'fr-fr','ip_banned','discuss','Adresse IP <strong>{ip}</strong> bannie.','2015-09-04 14:50:09'),
	(487,'fr-fr','ip_ban_removed','discuss','Bannissement de l’adresse IP <strong>{ip}</strong> annulé.','2015-09-04 14:50:09'),
	(488,'fr-fr','is-is','common','Íslenska','2017-02-13 11:31:30'),
	(489,'fr-fr','isize','tag','Taille du masque de saisie','2016-10-25 14:23:44'),
	(490,'fr-fr','is_dst','prefs','Mises à jour des heures d’été utilisées ?','2016-10-04 13:17:59'),
	(491,'fr-fr','is_inaccessible','diag','est inaccessible','2017-01-25 17:30:25'),
	(492,'fr-fr','it-it','common','Italiano','2017-02-13 11:31:30'),
	(493,'fr-fr','ja-jp','common','日本語','2017-02-13 11:31:30'),
	(494,'fr-fr','just_spam_results_found','discuss','Seuls des spam de commentaires sont présents. Sélectionnez “Afficher le spam” pour les consulter.','2015-09-04 14:50:09'),
	(495,'fr-fr','keep_square_pixels','image','Rogner','2017-02-13 11:31:46'),
	(496,'fr-fr','keywords','public','Mots-clefs','2016-10-24 11:39:40'),
	(497,'fr-fr','ko-kr','common','한국말 (대한민국)','2017-02-13 11:31:30'),
	(498,'fr-fr','label','public','Label','2016-10-24 11:39:40'),
	(499,'fr-fr','labeltag','tag','Balise HTML du label','2016-10-25 14:23:44'),
	(500,'fr-fr','language','prefs','Langue','2016-10-04 13:17:59'),
	(501,'fr-fr','lang_dir','common','ltr','2017-02-13 11:31:30'),
	(502,'fr-fr','lastmod_keepalive','prefs','Compenser le bug de connexions de <code>mod_deflate</code> ?','2016-10-04 13:17:59'),
	(503,'fr-fr','last_login','admin','Dernière connexion','2016-02-22 10:16:54'),
	(504,'fr-fr','last_modification','public','Dernière modification','2016-10-24 11:39:40'),
	(505,'fr-fr','last_update','diag','Dernière mise à jour','2017-01-25 17:30:25'),
	(506,'fr-fr','leave_text_untouched','prefs','Laisser le texte tel quel','2016-10-04 13:17:59'),
	(507,'fr-fr','limit','tag','Limite','2016-10-25 14:23:44'),
	(508,'fr-fr','linebreak','public','saut de ligne','2016-10-24 11:39:40'),
	(509,'fr-fr','link','prefs','Liens','2016-10-04 13:17:59'),
	(510,'fr-fr','linkcategory','link','Catégories de lien','2014-05-19 12:11:35'),
	(511,'fr-fr','linkclass','tag','Classe CSS des hyperliens','2016-10-25 14:23:44'),
	(512,'fr-fr','linked_to_file','file','Enregistrement lié au fichier','2014-01-17 09:24:52'),
	(513,'fr-fr','links','common','Liens','2017-02-13 11:31:30'),
	(514,'fr-fr','links_deleted','link','Lien(s) effacé(s) : <strong>{list}</strong>.','2014-05-19 12:11:35'),
	(515,'fr-fr','linktext','article','Texte du lien','2016-03-17 09:43:20'),
	(516,'fr-fr','link_categories_deleted','category','Catégories de liens supprimées : <strong>{list}</strong>.','2015-12-12 10:46:12'),
	(517,'fr-fr','link_category','common','Catégorie du lien','2017-02-13 11:31:30'),
	(518,'fr-fr','link_category_already_exists','category','La catégorie de liens <strong>{name}</strong> existe déjà.','2015-12-12 10:46:12'),
	(519,'fr-fr','link_category_created','category','Catégorie de liens <strong>{name}</strong> créée.','2015-12-12 10:46:12'),
	(520,'fr-fr','link_category_invalid','category','La catégorie de liens <strong>{name}</strong> n’est pas valide.','2015-12-12 10:46:12'),
	(521,'fr-fr','link_category_name','category','Nom de la catégorie de liens','2015-12-12 10:46:12'),
	(522,'fr-fr','link_category_title','category','Titre de la catégorie de liens','2015-12-12 10:46:12'),
	(523,'fr-fr','link_category_updated','category','Catégorie de liens <strong>{name}</strong> mise à jour.','2015-12-12 10:46:12'),
	(524,'fr-fr','link_context','public','lien','2016-10-24 11:39:40'),
	(525,'fr-fr','link_created','link','Lien <strong>{name}</strong> créé.','2014-05-19 12:11:35'),
	(526,'fr-fr','link_deleted','link','Lien <strong>{name}</strong> supprimé.','2014-05-19 12:11:35'),
	(527,'fr-fr','link_head','category','Catégories de liens','2015-12-12 10:46:12'),
	(528,'fr-fr','link_name','link','Nom du lien','2014-05-19 12:11:35'),
	(529,'fr-fr','link_saved','link','Lien enregistré.','2014-05-19 12:11:35'),
	(530,'fr-fr','link_text','link','Informations sur le lien','2014-05-19 12:11:35'),
	(531,'fr-fr','link_to_this_author','tag','Lien vers une liste d’autres articles par cet auteur ?','2016-10-25 14:23:44'),
	(532,'fr-fr','link_to_this_category','tag','Lien vers une liste d’autres articles dans cette catégorie ?','2016-10-25 14:23:44'),
	(533,'fr-fr','link_to_this_section','tag','Lien vers une liste d’autres articles dans cette section ?','2016-10-25 14:23:44'),
	(534,'fr-fr','link_updated','link','Lien(s) <strong>{name}</strong> mis à jour.','2014-05-19 12:11:35'),
	(535,'fr-fr','list','public','Liste','2016-10-24 11:39:40'),
	(536,'fr-fr','listform','tag','Module de liste','2016-10-25 14:23:44'),
	(537,'fr-fr','list_articles','public','Afficher les articles','2016-10-24 11:39:40'),
	(538,'fr-fr','list_banned_ips','discuss','Afficher les IP bannies','2015-09-04 14:50:09'),
	(539,'fr-fr','list_categories','public','afficher les catégories','2016-10-24 11:39:40'),
	(540,'fr-fr','list_discussions','discuss','Commentaires','2015-09-04 14:50:09'),
	(541,'fr-fr','list_forms','form','afficher les modules','2015-09-04 14:50:24'),
	(542,'fr-fr','list_links','public','afficher les liens','2016-10-24 11:39:40'),
	(543,'fr-fr','live','public','Publié','2016-10-24 11:39:40'),
	(544,'fr-fr','locale','prefs','Paramètres régionaux','2016-10-04 13:17:59'),
	(545,'fr-fr','logged_in_as','common','Connecté en tant que','2017-02-13 11:31:30'),
	(546,'fr-fr','logging','prefs','Enregistrements dans le journal d’activités','2016-10-04 13:17:59'),
	(547,'fr-fr','login','common','Identifiant','2017-02-13 11:31:30'),
	(548,'fr-fr','login_name','admin','Connexion','2016-02-17 10:00:39'),
	(549,'fr-fr','login_to_textpattern','common','Connexion à Textpattern CMS','2017-02-13 11:31:30'),
	(550,'fr-fr','logout','common','Déconnexion','2017-02-13 11:31:30'),
	(551,'fr-fr','logs','log','Journal d’activité (logs)','2013-09-28 12:34:20'),
	(552,'fr-fr','logs_deleted','log','Journaux supprimés : <strong>{list}</strong>.','2013-09-28 12:34:20'),
	(553,'fr-fr','logs_expire','prefs','Le journal d’activités (log) expire après ?','2016-10-04 13:17:59'),
	(554,'fr-fr','log_in_at','admin','Pour vous connecter, allez à','2016-01-10 11:37:16'),
	(555,'fr-fr','log_in_button','common','Se connecter','2017-02-13 11:31:30'),
	(556,'fr-fr','low','diag','Minimum','2017-01-25 17:30:25'),
	(557,'fr-fr','lowercase','public','minuscules','2016-10-24 11:39:40'),
	(558,'fr-fr','lt-lt','common','Lietuvių','2017-02-13 11:31:30'),
	(559,'fr-fr','lv-lv','common','Latviešu','2017-02-13 11:31:30'),
	(560,'fr-fr','magic_quotes','diag','Magic quotes PHP','2017-01-25 17:30:25'),
	(561,'fr-fr','mail_it','admin','Me l’envoyer par email','2016-01-10 11:37:16'),
	(562,'fr-fr','manage','list','Gérer','2008-04-06 06:48:17'),
	(563,'fr-fr','manage_languages','prefs','Gérer les langues','2016-10-04 13:17:59'),
	(564,'fr-fr','managing_editor','admin','Assistant administrateur','2016-01-10 11:37:16'),
	(565,'fr-fr','manual','public','Manuel','2016-10-24 11:39:40'),
	(566,'fr-fr','markup_default','prefs','Balises par défaut','2016-10-04 13:17:59'),
	(567,'fr-fr','match','tag','Quelle est leur relation ?','2016-10-25 14:23:44'),
	(568,'fr-fr','max_url_len','prefs','Taille maximum d’une URL (en caractères)','2016-10-04 13:17:59'),
	(569,'fr-fr','media','tag','Attribut HTML <code>media</code>','2016-10-25 14:23:44'),
	(570,'fr-fr','mentions','prefs','Mentions','2016-10-04 13:17:59'),
	(571,'fr-fr','message','public','Message','2016-10-24 11:39:40'),
	(572,'fr-fr','message_deleted','public','Message effacé','2016-10-24 11:39:40'),
	(573,'fr-fr','message_preview','public','Prévisualisation du message','2016-10-24 11:39:40'),
	(574,'fr-fr','message_saved','public','Message enregistré','2016-10-24 11:39:40'),
	(575,'fr-fr','messy','prefs','brutes (?=paramètres)','2016-10-04 13:17:59'),
	(576,'fr-fr','meta','article','Métadonnées','2015-10-29 10:03:17'),
	(577,'fr-fr','method','common','Méthode','2017-02-13 11:31:30'),
	(578,'fr-fr','minute','public','minute','2016-10-24 11:39:40'),
	(579,'fr-fr','minutes','public','minutes','2016-10-24 11:39:40'),
	(580,'fr-fr','missing_article_tag','public','Le gabarit <strong>{page}</strong> ne contient pas de balise txp:article.','2016-10-24 11:39:40'),
	(581,'fr-fr','missing_files','diag','Fichiers manquants','2017-01-25 17:30:25'),
	(582,'fr-fr','modified','common','modifié','2017-02-13 11:31:30'),
	(583,'fr-fr','modified_by','public','Dernière modification par','2016-10-24 11:39:40'),
	(584,'fr-fr','modified_files','diag','Certains fichiers de Textpattern ont été modifiés','2017-01-25 17:30:25'),
	(585,'fr-fr','mod_rewrite_missing','diag','Le module <code>mod_rewrite</code> d’Apache n’est pas installé.','2017-01-25 17:30:25'),
	(586,'fr-fr','month','public','Mois','2016-10-24 11:39:40'),
	(587,'fr-fr','more','public','Plus','2016-10-24 11:39:40'),
	(588,'fr-fr','msgcols','tag','Nombre de colonnes de la zone de saisie des messages','2016-10-25 14:23:44'),
	(589,'fr-fr','msgrows','tag','Nombre de lignes de la zone de saisie des messages','2016-10-25 14:23:44'),
	(590,'fr-fr','must_reassign_assets','admin','Veuillez ré-assigner les contenus de l’utilisateur','2016-01-10 11:37:16'),
	(1145,'fr-fr','comments_expired','common','Les commentaires sont expirés pour cet article.','2017-02-13 11:31:30'),
	(599,'fr-fr','n','tag','Nom','2016-10-25 14:23:44'),
	(600,'fr-fr','name','public','Identifiant','2016-10-24 11:39:40'),
	(601,'fr-fr','name_for_this_style','css','Nom de ce style','2014-05-19 12:11:09'),
	(602,'fr-fr','name_used','discuss','Nom utilisé','2015-09-04 14:50:09'),
	(1144,'fr-fr','clean_url_data_failed','diag','Le test d’URL propres a échoué','2017-01-25 17:30:25'),
	(604,'fr-fr','never','public','jamais','2016-10-24 11:39:40'),
	(605,'fr-fr','never_display_email','prefs','Toujours masquer les adresses email ?','2016-10-04 13:17:59'),
	(606,'fr-fr','newer','public','Plus récents','2016-10-24 11:39:40'),
	(607,'fr-fr','new_email','admin','Nouvel email','2016-01-10 11:37:16'),
	(608,'fr-fr','new_password','admin','Nouveau mot de passe','2016-01-10 11:37:16'),
	(609,'fr-fr','new_textpattern_version_available','prefs','Une nouvelle version de Textpattern est disponible. <a href=\"http://textpattern.com/download\" rel=\"external\" title=\"Accès au téléchargement sur le site Textpattern\">Voulez-vous la télécharger</a> ?','2016-10-04 13:17:59'),
	(610,'fr-fr','next','public','Suivant','2016-10-24 11:39:40'),
	(611,'fr-fr','next_page_link','tag','Lien vers la page suivante','2016-10-25 14:23:44'),
	(612,'fr-fr','nl-nl','common','Nederlands','2017-02-13 11:31:30'),
	(613,'fr-fr','no','public','Non','2016-10-24 11:39:40'),
	(614,'fr-fr','no-no','common','Norsk','2017-02-13 11:31:30'),
	(615,'fr-fr','none','public','Aucun','2016-10-24 11:39:40'),
	(616,'fr-fr','nopopup','public','sans popup','2016-10-24 11:39:40'),
	(617,'fr-fr','norwegian','prefs','Norvégien','2012-08-27 12:37:41'),
	(618,'fr-fr','not_saved','image','N’a <strong>pas</strong> été sauvegardé !','2017-02-13 11:31:46'),
	(619,'fr-fr','no_articles_recorded','article','Aucun article enregistré.','2015-10-29 10:03:17'),
	(620,'fr-fr','no_categories_available','tag','Pas de catégories disponibles.','2016-10-25 14:23:44'),
	(621,'fr-fr','no_categories_exist','category','Aucune catégorie n’existe pour le moment.','2015-12-12 10:46:12'),
	(622,'fr-fr','no_comments_recorded','discuss','Pas encore de commentaire enregistré.','2015-09-04 14:50:09'),
	(623,'fr-fr','no_files_recorded','file','Aucun fichier enregistré.','2014-01-17 09:24:52'),
	(624,'fr-fr','no_forms_available','tag','Pas de modules disponibles.','2016-10-25 14:23:44'),
	(625,'fr-fr','no_images_recorded','image','Aucune image enregistrée.','2017-02-13 11:31:46'),
	(626,'fr-fr','no_ips_banned','discuss','Aucune adresse IP n’a encore été bannie.','2015-09-04 14:50:09'),
	(627,'fr-fr','no_links_recorded','link','Aucun lien hypertexte enregistré.','2014-05-19 12:11:35'),
	(628,'fr-fr','no_other_categories_exist','category','Pas d’autre catégorie existante.','2015-12-12 10:46:12'),
	(629,'fr-fr','no_popup','prefs','fenêtre actuelle','2016-10-04 13:17:59'),
	(630,'fr-fr','no_refers_recorded','log','Pas encore de référent enregistré.','2013-09-28 12:34:20'),
	(631,'fr-fr','no_results_found','common','Aucun résultat.','2017-02-13 11:31:30'),
	(632,'fr-fr','no_sections_available','tag','Pas de sections disponibles.','2016-10-25 14:23:44'),
	(633,'fr-fr','numeric_list','public','Liste ordonnée','2016-10-24 11:39:40'),
	(634,'fr-fr','off','public','Désactivés','2016-10-24 11:39:40'),
	(635,'fr-fr','offset','tag','Décalage (sauter x occurrences)','2016-10-25 14:23:44'),
	(636,'fr-fr','older','public','Plus anciens','2016-10-24 11:39:40'),
	(637,'fr-fr','old_files','diag','Certains fichiers de Textpattern CMS ne sont plus à jour','2017-01-25 17:30:25'),
	(638,'fr-fr','old_placeholder','diag','Un vieux fichier d’émulation de section existe et gène le bon fonctionnement','2017-01-25 17:30:25'),
	(639,'fr-fr','old_plugin','plugin','Installateur de plugin « à l’ancienne »','2017-02-13 11:32:02'),
	(640,'fr-fr','on','public','Activés','2016-10-24 11:39:40'),
	(641,'fr-fr','only_articles_can_be_previewed','public','<strong>Note</strong> : seuls les modules d’article peuvent être prévisualisés.','2016-10-24 11:39:40'),
	(642,'fr-fr','only_graphic_files_allowed','image','Seuls les fichiers d’images .jpg, .gif, .png ou .swf sont autorisés.','2017-02-13 11:31:46'),
	(643,'fr-fr','on_front_page','section','En page d’accueil ?','2015-10-29 10:00:48'),
	(644,'fr-fr','order','plugin','Ordre','2017-02-13 11:32:02'),
	(645,'fr-fr','or_publish_at','article','…ou différer le :','2015-10-29 10:03:17'),
	(646,'fr-fr','os_version','diag','Système d’exploitation du serveur','2017-01-25 17:30:25'),
	(647,'fr-fr','override_default_form','article','Module de remplacement','2015-10-29 10:03:17'),
	(648,'fr-fr','override_emailcharset','prefs','Transformer les emails en Latin 1 (ISO-8859-1) ?','2016-10-04 13:17:59'),
	(649,'fr-fr','page','public','Page','2016-10-24 11:39:40'),
	(650,'fr-fr','pageby','tag','Paginer par','2016-10-25 14:23:44'),
	(651,'fr-fr','pages','public','Pages','2016-10-24 11:39:40'),
	(652,'fr-fr','page_already_exists','page','Un gabarit du nom <strong>{name}</strong> existe déjà.','2015-09-04 14:50:47'),
	(653,'fr-fr','page_article_hed','page','Affichage des articles','2015-09-04 14:50:47'),
	(654,'fr-fr','page_article_nav_hed','page','Navigation dans les articles','2015-09-04 14:50:47'),
	(655,'fr-fr','page_created','page','Gabarit <strong>{name}</strong> créé.','2015-09-04 14:50:47'),
	(656,'fr-fr','page_deleted','page','Gabarit <strong>{name}</strong> supprimé.','2015-09-04 14:50:47'),
	(657,'fr-fr','page_file_hed','tag','Téléchargement de fichiers','2016-10-25 14:23:44'),
	(658,'fr-fr','page_misc_hed','page','Divers','2015-09-04 14:50:47'),
	(659,'fr-fr','page_mode','prefs','Type de gabarit','2012-08-27 12:37:41'),
	(660,'fr-fr','page_name','page','Nom du gabarit (requis)','2015-09-04 14:50:47'),
	(661,'fr-fr','page_name_invalid','page','Nom de gabarit invalide.','2015-09-04 14:50:47'),
	(662,'fr-fr','page_nav_hed','page','Navigation dans le site','2015-09-04 14:50:47'),
	(663,'fr-fr','page_updated','page','Gabarit <strong>{name}</strong> mis à jour.','2015-09-04 14:50:47'),
	(664,'fr-fr','page_used_by_section','page','Le module <strong>{name}</strong> n’a pas été effacé car il est utilisé par {count} section(s).','2015-09-04 14:50:47'),
	(665,'fr-fr','page_xml_hed','page','Flux XML','2015-09-04 14:50:47'),
	(666,'fr-fr','paragraph','public','paragraphe','2016-10-24 11:39:40'),
	(667,'fr-fr','parent','category','Parent','2015-12-12 10:46:13'),
	(668,'fr-fr','password','common','Mot de passe','2017-02-13 11:31:30'),
	(669,'fr-fr','password_changed','admin','Mot de passe mis à jour.','2016-01-10 11:37:16'),
	(670,'fr-fr','password_changed_mailed','admin','Mot de passe modifié et envoyé à <strong>{email}</strong>.','2016-01-10 11:37:16'),
	(671,'fr-fr','password_forgotten','admin','Mot de passe oublié ?','2016-01-10 11:37:16'),
	(672,'fr-fr','password_required','admin','Merci de fournir un nouveau mot de passe.','2016-01-10 11:37:16'),
	(673,'fr-fr','password_reset','admin','Demande de réinitialisation du mot de passe','2016-01-10 11:37:16'),
	(674,'fr-fr','password_reset_button','admin','Réinitialiser','2016-01-10 11:37:16'),
	(675,'fr-fr','password_reset_confirmation','admin','Une demande de réinitialisation de votre mot de passe a été faite, merci de confirmer cette demande en cliquant sur le lien ci-dessous.','2016-01-10 11:37:16'),
	(676,'fr-fr','password_reset_confirmation_request','admin','Merci de confirmer la réinitialisation de votre mot de passe','2016-01-10 11:37:16'),
	(677,'fr-fr','password_reset_confirmation_request_sent','admin','Un message de confirmation a été envoyé à votre adresse email. Veuillez consulter ce message afin de suivre les instructions fournies.','2016-01-10 11:37:16'),
	(678,'fr-fr','password_sent_to','admin','Mot de passe envoyé à','2016-01-10 11:37:16'),
	(679,'fr-fr','path_from_root','prefs','Sous répertoire (s’il existe)','2016-10-04 13:17:59'),
	(680,'fr-fr','path_not_doc_root','diag','path_to_site ne correspond pas à document_root','2012-08-27 09:07:06'),
	(681,'fr-fr','path_to_site_inacc','diag','<code>path_to_site</code> ne correspond pas.','2017-01-25 17:30:25'),
	(682,'fr-fr','path_to_site_missing','prefs','<code>$path_to_site</code> n’est pas configuré (mettez <code>index.php</code> à jour)','2016-10-04 13:17:59'),
	(684,'fr-fr','pending','article','À valider','2015-10-29 10:03:17'),
	(685,'fr-fr','permalink_title_format','prefs','Permaliens titre-comme-cela (au lieu de TitreCommeCela) ?','2016-10-04 13:17:59'),
	(686,'fr-fr','permanent_link','public','Permalien vers l’article','2016-10-24 11:39:40'),
	(687,'fr-fr','permissions','file','Permissions','2014-01-17 09:24:52'),
	(688,'fr-fr','permlink','public','URL permanente (permalien)','2016-10-24 11:39:40'),
	(689,'fr-fr','permlink_mode','prefs','Format des URL','2016-10-04 13:17:59'),
	(690,'fr-fr','per_page','common','par page','2017-02-13 11:31:30'),
	(691,'fr-fr','pgonly','tag','Compter les articles mais ne rien afficher','2016-10-25 14:23:44'),
	(692,'fr-fr','php_extensions','diag','Extensions PHP','2017-01-25 17:30:25'),
	(693,'fr-fr','php_sapi_mode','diag','API PHP du serveur','2017-01-25 17:30:25'),
	(694,'fr-fr','php_version','diag','Version de PHP','2017-01-25 17:30:25'),
	(695,'fr-fr','ping_textpattern_com','prefs','Automatiquement prévenir textpattern.com ?','2016-10-04 13:17:59'),
	(696,'fr-fr','ping_weblogsdotcom','prefs','Automatiquement prévenir pingomatic.com ?','2016-10-04 13:17:59'),
	(697,'fr-fr','pl-pl','common','Polski','2017-02-13 11:31:30'),
	(1143,'fr-fr','changeparent','common','Changer de parente','2017-02-13 11:31:30'),
	(699,'fr-fr','plugin','plugin','Plugin','2017-02-13 11:32:02'),
	(700,'fr-fr','plugins','plugin','Plugins','2017-02-13 11:32:02'),
	(701,'fr-fr','plugin_cache_dir','prefs','Chemin du répertoire de cache des plugins','2016-10-04 13:17:59'),
	(702,'fr-fr','plugin_compression_unsupported','plugin','Le serveur n’a pu décompresser le plugin. Veuillez contacter l’auteur du plugin pour obtenir une version décompressée.','2017-02-13 11:32:02'),
	(703,'fr-fr','plugin_deleted','plugin','Plugin <strong>{name}</strong> supprimé.','2017-02-13 11:32:02'),
	(704,'fr-fr','plugin_help','plugin','Aide du plugin','2017-02-13 11:32:02'),
	(705,'fr-fr','plugin_installed','plugin','Plugin <strong>{name}</strong> bien installé.','2017-02-13 11:32:02'),
	(706,'fr-fr','plugin_install_failed','plugin','L’installation du plugin <strong>{name}</strong> a <em>échoué</em> !','2017-02-13 11:32:02'),
	(707,'fr-fr','plugin_load_error','public','Erreur lors du chargement du plugin :','2016-10-24 11:39:40'),
	(708,'fr-fr','plugin_load_error_above','public','Les erreurs ci-dessus ont été causées par le plugin :','2016-10-24 11:39:40'),
	(709,'fr-fr','plugin_modified','plugin','Modifié ?','2017-02-13 11:32:02'),
	(710,'fr-fr','plugin_prefs','plugin','Options','2017-02-13 11:32:02'),
	(711,'fr-fr','plugin_saved','plugin','Plugin <strong>{name}</strong> sauvegardé.','2017-02-13 11:32:02'),
	(712,'fr-fr','plugin_updated','plugin','Plugin <strong>{name}</strong> mis à jour.','2017-02-13 11:32:02'),
	(713,'fr-fr','polish','prefs','Polonais','2012-08-27 12:37:41'),
	(714,'fr-fr','popup','public','en popup','2016-10-24 11:39:40'),
	(715,'fr-fr','portuguese','prefs','Portugais','2012-08-27 12:37:41'),
	(716,'fr-fr','post','public','Poster','2016-10-24 11:39:40'),
	(717,'fr-fr','posted','public','Publié','2016-10-24 11:39:40'),
	(718,'fr-fr','posted_by','public','Posté par','2016-10-24 11:39:40'),
	(720,'fr-fr','preferences_saved','prefs','Préférences enregistrées','2016-10-04 13:17:59'),
	(1141,'fr-fr','category_not_found','category','Catégorie inexistante','2015-12-12 10:46:12'),
	(1142,'fr-fr','category_save_failed','category','Cette catégorie n’a pas été enregistrée en raison d’une erreur. Veuillez essayer de nouveau.','2015-12-12 10:46:12'),
	(1140,'fr-fr','categories_set_parent','category','{list} assignée(s) à la catégorie {type} parente « {parent} »','2015-12-12 10:46:12'),
	(723,'fr-fr','preflight_check','diag','Vérifications','2017-01-25 17:30:25'),
	(724,'fr-fr','prefs','prefs','Préférences','2016-10-04 13:17:59'),
	(725,'fr-fr','prev','public','Précédent','2016-10-24 11:39:40'),
	(726,'fr-fr','preview','public','Aperçu','2016-10-24 11:39:40'),
	(727,'fr-fr','previewing_plugin','plugin','Prévisualisation du plugin :','2017-02-13 11:32:02'),
	(728,'fr-fr','private','file','Privé','2014-01-17 09:24:52'),
	(729,'fr-fr','privileges','admin','Privilèges','2016-01-10 11:37:16'),
	(730,'fr-fr','problem_connecting_rpc_server','prefs','Impossible de se connecter au serveur RPC. Essayez plus tard.','2016-10-04 13:17:59'),
	(731,'fr-fr','production_debug','prefs','En déboguage','2016-10-04 13:17:59'),
	(732,'fr-fr','production_live','prefs','En exploitation','2016-10-04 13:17:59'),
	(733,'fr-fr','production_status','prefs','Statut de production','2016-10-04 13:17:59'),
	(734,'fr-fr','production_test','prefs','En test','2016-10-04 13:17:59'),
	(735,'fr-fr','property','css','Propriété','2014-05-19 12:11:09'),
	(736,'fr-fr','pt-br','common','Português (Brasil)','2017-02-13 11:31:30'),
	(737,'fr-fr','pt-pt','common','Português (Portugal)','2017-02-13 11:31:30'),
	(738,'fr-fr','public','file','Public','2014-01-17 09:24:52'),
	(739,'fr-fr','publish','public','Publier','2016-10-24 11:39:40'),
	(740,'fr-fr','published_at','public','Publié le','2016-10-24 11:39:40'),
	(741,'fr-fr','publisher','admin','Administrateur','2016-01-10 11:37:16'),
	(742,'fr-fr','publish_expired_articles','prefs','Publier les articles qui ont expiré ?','2016-10-04 13:17:59'),
	(743,'fr-fr','random','tag','Aléatoire','2016-10-25 14:23:44'),
	(744,'fr-fr','range','common','Sélection','2017-02-13 11:31:30'),
	(745,'fr-fr','raw_php_deprecated','public','Les lignes de code PHP brutes ne sont plus supportées','2016-10-24 11:39:40'),
	(746,'fr-fr','real_name','admin','Nom réel','2016-01-10 11:37:16'),
	(747,'fr-fr','recently','public','Récemment','2016-10-24 11:39:40'),
	(748,'fr-fr','recent_articles','public','Articles récents','2016-10-24 11:39:40'),
	(749,'fr-fr','recent_posts','public','Posts récents','2016-10-24 11:39:40'),
	(750,'fr-fr','record_mentions','prefs','Enregistrer les mentions','2016-10-04 13:17:59'),
	(751,'fr-fr','referrer','log','Référent','2013-09-28 12:34:20'),
	(752,'fr-fr','referrers_only','prefs','Uniquement les référents','2016-10-04 13:17:59'),
	(753,'fr-fr','register_globals','diag','Register globals PHP','2017-01-25 17:30:25'),
	(754,'fr-fr','rel','tag','Attribut HTML <code>rel</code>','2016-10-25 14:23:44'),
	(755,'fr-fr','remember','public','Mémoriser les informations saisies','2016-10-24 11:39:40'),
	(756,'fr-fr','replace_file','file','Remplacer le fichier','2014-01-17 09:24:52'),
	(757,'fr-fr','replace_image','image','Remplacer l’image','2017-02-13 11:31:46'),
	(758,'fr-fr','reset','file','remise à zéro','2014-01-17 09:24:52'),
	(759,'fr-fr','resetpassword','admin','Réinitialiser le mot de passe','2016-01-10 11:37:16'),
	(760,'fr-fr','reset_author_password','admin','Réinitialiser le mot de passe de l’auteur','2016-01-10 11:37:16'),
	(761,'fr-fr','reset_file_count_failure','file','Impossible de remettre à zéro le nombre de téléchargements','2014-01-17 09:24:52'),
	(762,'fr-fr','reset_file_count_success','file','Remise à zéro du nombre de téléchargements effectuée','2014-01-17 09:24:52'),
	(763,'fr-fr','reset_time','article','Horodater à « maintenant »','2015-10-29 10:03:17'),
	(764,'fr-fr','restricted_area','common','Zone restreinte.','2017-02-13 11:31:30'),
	(765,'fr-fr','revert','public','Revenir en arrière','2016-10-24 11:39:40'),
	(766,'fr-fr','rfc2616_headers','diag','Entêtes RFC 2616','2017-01-25 17:30:25'),
	(767,'fr-fr','rfc_2616_headers','diag','Type d’entêtes CGI','2017-01-25 17:30:25'),
	(768,'fr-fr','ro-ro','common','Română','2017-02-13 11:31:30'),
	(769,'fr-fr','rpc_connect_error','prefs','Impossible de se connecter au serveur distant pour mettre à jour les langues, merci de réessayer plus tard.','2016-10-04 13:17:59'),
	(770,'fr-fr','rss_feed_title','public','Flux RSS','2016-10-24 11:39:40'),
	(771,'fr-fr','rss_how_many','prefs','Combien d’articles par flux XML (RSS) ?','2016-10-04 13:17:59'),
	(772,'fr-fr','ru-ru','common','Русский','2017-02-13 11:31:30'),
	(773,'fr-fr','russian','prefs','Russe','2012-08-27 12:37:41'),
	(774,'fr-fr','save','public','Sauver','2016-10-24 11:39:40'),
	(775,'fr-fr','saved','public','enregistré','2016-10-24 11:39:40'),
	(776,'fr-fr','save_button','public','Sauver','2016-10-24 11:39:40'),
	(777,'fr-fr','save_css_as','css','Enregistrer la feuille de styles sous le nom :','2014-05-19 12:11:09'),
	(778,'fr-fr','save_new','common','Enregistrer le nouveau','2017-02-13 11:31:30'),
	(779,'fr-fr','save_these_settings_as_default','image','Enregistrer ces paramètres comme défaut','2017-02-13 11:31:46'),
	(780,'fr-fr','save_this_declaration','css','Enregistrer cette déclaration','2014-05-19 12:11:09'),
	(781,'fr-fr','save_this_selector','css','Enregistrer ce sélecteur','2014-05-19 12:11:09'),
	(782,'fr-fr','scots','prefs','Écossais','2012-08-27 12:37:41'),
	(783,'fr-fr','search','public','Rechercher','2016-10-24 11:39:40'),
	(784,'fr-fr','searchall','tag','Chercher dans toutes les sections ?','2016-10-25 14:23:44'),
	(785,'fr-fr','searchsticky','tag','Chercher aussi dans les articles persistants ?','2016-10-25 14:23:44'),
	(786,'fr-fr','search_input_form','tag','Saisie de la recherche','2016-10-25 14:23:44'),
	(787,'fr-fr','search_results','public','Résultats de la recherche','2016-10-24 11:39:40'),
	(788,'fr-fr','search_results_form','tag','Résultats de recherches','2016-10-25 14:23:44'),
	(789,'fr-fr','section','section','Section','2015-10-29 10:00:48'),
	(790,'fr-fr','sections','section','Sections','2015-10-29 10:00:48'),
	(791,'fr-fr','section_created','section','Section <strong>{name}</strong> créée.','2015-10-29 10:00:48'),
	(792,'fr-fr','section_deleted','section','Section <strong>{name}</strong> supprimée.','2015-10-29 10:00:48'),
	(793,'fr-fr','section_head','section','Sections du site','2015-10-29 10:00:48'),
	(794,'fr-fr','section_id_title','prefs','/section/id/titre','2016-10-04 13:17:59'),
	(795,'fr-fr','section_longtitle','section','Titre de la section','2015-10-29 10:00:48'),
	(796,'fr-fr','section_name','section','Nom de la section','2015-10-29 10:00:48'),
	(797,'fr-fr','section_name_already_exists','section','La section <strong>{name}</strong> existe déjà.','2015-10-29 10:00:48'),
	(798,'fr-fr','section_tags','tag','Sections','2016-10-25 14:23:44'),
	(799,'fr-fr','section_title','prefs','/section/titre','2016-10-04 13:17:59'),
	(800,'fr-fr','section_updated','section','Section(s) <strong>{name}</strong> mise(s) à jour.','2015-10-29 10:00:48'),
	(801,'fr-fr','section_used_by_article','section','La section <strong>{name}</strong> n’a pas été effacée car elle est utilisée par {count} article(s).','2015-10-29 10:00:48'),
	(802,'fr-fr','select','public','Sélectionner','2016-10-24 11:39:40'),
	(803,'fr-fr','selected','public','Sélectionné','2016-10-24 11:39:40'),
	(804,'fr-fr','selected_by_default','section','Sélectionnée par défaut','2015-10-29 10:00:48'),
	(805,'fr-fr','selector','css','Sélecteur','2014-05-19 12:11:09'),
	(806,'fr-fr','select_tool','import','Importer depuis','2016-10-25 14:24:00'),
	(807,'fr-fr','send_lastmod','prefs','Envoyer l’entête de dernière modification ?','2016-10-04 13:17:59'),
	(808,'fr-fr','server','diag','Serveur','2017-01-25 17:30:25'),
	(809,'fr-fr','server_time','diag','Date et heure du serveur','2017-01-25 17:30:25'),
	(1137,'fr-fr','back_to_top','public','Vers le haut','2016-10-24 11:39:40'),
	(1138,'fr-fr','banned_ips','discuss','IP bannies','2015-09-04 14:50:09'),
	(1139,'fr-fr','cannot_assign_assets_to_deletee','admin','Vous ne pouvez rien associer à un compte supprimé.','2016-02-22 10:16:54'),
	(1136,'fr-fr','back_to_login','common','Retour : connexion à Textpattern CMS','2017-02-13 11:31:30'),
	(813,'fr-fr','set_to_now','article','Publier « maintenant »','2015-10-29 10:03:17'),
	(814,'fr-fr','show','discuss','Afficher','2015-09-04 14:50:09'),
	(815,'fr-fr','showalways','tag','Toujours afficher','2016-10-25 14:23:44'),
	(816,'fr-fr','showcount','tag','Afficher le nombre d’occurences ?','2016-10-25 14:23:44'),
	(817,'fr-fr','showing_search_results','common','Résultats {from} à {to} sur {total}','2017-02-13 11:31:30'),
	(818,'fr-fr','show_article_category_count','prefs','Afficher le nombre d’article par catégories ?','2016-10-04 13:17:59'),
	(819,'fr-fr','show_comment_count_in_feed','prefs','Afficher le nombre de commentaires dans les flux XML ?','2016-10-04 13:17:59'),
	(820,'fr-fr','show_spam','discuss','Afficher les spams','2015-09-04 14:50:09'),
	(821,'fr-fr','site','public','Site','2016-10-24 11:39:40'),
	(822,'fr-fr','sitename','public','Nom du site','2016-10-24 11:39:40'),
	(823,'fr-fr','siteurl','public','URL du site','2016-10-24 11:39:40'),
	(824,'fr-fr','site_administration','admin','Administration','2016-01-10 11:37:16'),
	(826,'fr-fr','site_prefs','prefs','Préférences du site','2016-10-04 13:17:59'),
	(827,'fr-fr','site_slogan','common','Slogan du site','2017-02-13 11:31:30'),
	(828,'fr-fr','site_trailing_slash','diag','L’URL du site a un <code>/</code> final','2017-01-25 17:30:25'),
	(1135,'fr-fr','article_save_failed','article','Cet article n’a pas été enregistré en raison d’une erreur. Veuillez essayer de nouveau.','2015-10-29 10:03:17'),
	(830,'fr-fr','site_url_mismatch','diag','L’URL du site renseignée dans les préférences est peut-être incorrecte','2017-01-25 17:30:25'),
	(831,'fr-fr','size_format','tag','Format de taille','2016-10-25 14:23:44'),
	(832,'fr-fr','sk-sk','common','Slovenčina','2017-02-13 11:31:30'),
	(833,'fr-fr','smtp_from','prefs','Adresse d’envoi SMTP','2016-10-04 13:17:59'),
	(834,'fr-fr','some_php_functions_disabled','diag','Certaines fonctions PHP (pouvant être nécessaires) sont désactivées sur le serveur','2017-01-25 17:30:25'),
	(835,'fr-fr','sort','tag','Trier par','2016-10-25 14:23:44'),
	(836,'fr-fr','sort_by','tag','Trier par','2016-10-25 14:23:44'),
	(837,'fr-fr','sort_direction','tag','Ordre du tri','2016-10-25 14:23:44'),
	(838,'fr-fr','sort_display','article','Affectations de l’article','2015-10-29 10:03:17'),
	(839,'fr-fr','sort_value','common','Valeur de tri','2017-02-13 11:31:30'),
	(840,'fr-fr','sp-rs','common','Srpski','2017-02-13 11:31:30'),
	(841,'fr-fr','spam','common','Spam','2017-02-13 11:31:30'),
	(842,'fr-fr','spam_blacklists','prefs','Listes noires anti-spam (séparées par une virgule)','2016-10-04 13:17:59'),
	(843,'fr-fr','spanish','prefs','Espagnol','2012-08-27 12:37:41'),
	(844,'fr-fr','sr-rs','common','Српски','2017-02-13 11:31:30'),
	(845,'fr-fr','staff_writer','admin','Rédacteur avancé','2016-01-10 11:37:16'),
	(846,'fr-fr','status','public','Statut','2016-10-24 11:39:40'),
	(847,'fr-fr','stay_logged_in','common','Se souvenir de moi','2017-02-13 11:31:30'),
	(848,'fr-fr','sticky','common','Persistant','2017-02-13 11:31:30'),
	(849,'fr-fr','still_exists','diag','existe encore','2017-01-25 17:30:25'),
	(850,'fr-fr','strong','public','forte emphase','2016-10-24 11:39:40'),
	(851,'fr-fr','structure','common','Structure','2017-02-13 11:31:30'),
	(852,'fr-fr','style','section','Styles','2015-10-29 10:00:48'),
	(853,'fr-fr','style_sheet','css','Feuille de styles','2014-05-19 12:11:09'),
	(854,'fr-fr','style_sheet_saved','css','Feuille de styles enregistrée','2014-05-19 12:11:09'),
	(855,'fr-fr','submit','public','Envoyer','2016-10-24 11:39:40'),
	(856,'fr-fr','subscript','public','indice','2016-10-24 11:39:40'),
	(857,'fr-fr','superscript','public','exposant','2016-10-24 11:39:40'),
	(858,'fr-fr','sv-se','common','Svenska','2017-02-13 11:31:30'),
	(859,'fr-fr','swedish','prefs','Suédois','2012-08-27 12:37:41'),
	(860,'fr-fr','syndicate','section','Syndiquer (flux XML) ?','2015-10-29 10:00:48'),
	(861,'fr-fr','syndicate_body_or_excerpt','prefs','Le résumé plutôt que l’article complet dans les flux XML ?','2016-10-04 13:17:59'),
	(863,'fr-fr','tab_admin','common','Administration','2017-02-13 11:31:30'),
	(864,'fr-fr','tab_comments','common','Commentaires','2017-02-13 11:31:30'),
	(865,'fr-fr','tab_content','common','Contenu','2017-02-13 11:31:30'),
	(866,'fr-fr','tab_diagnostics','common','Diagnostics','2017-02-13 11:31:30'),
	(867,'fr-fr','tab_extensions','common','Extensions','2017-02-13 11:31:30'),
	(868,'fr-fr','tab_file','common','Fichiers','2017-02-13 11:31:30'),
	(869,'fr-fr','tab_forms','common','Modules','2017-02-13 11:31:30'),
	(870,'fr-fr','tab_image','common','Images','2017-02-13 11:31:30'),
	(871,'fr-fr','tab_import','common','Importations','2017-02-13 11:31:30'),
	(872,'fr-fr','tab_link','common','Liens','2017-02-13 11:31:30'),
	(873,'fr-fr','tab_list','common','Articles','2017-02-13 11:31:30'),
	(874,'fr-fr','tab_logs','common','Activité','2017-02-13 11:31:30'),
	(875,'fr-fr','tab_organise','common','Catégories','2017-02-13 11:31:30'),
	(876,'fr-fr','tab_pages','common','Gabarits','2017-02-13 11:31:30'),
	(877,'fr-fr','tab_plugins','common','Plugins','2017-02-13 11:31:30'),
	(878,'fr-fr','tab_preferences','common','Préférences','2017-02-13 11:31:30'),
	(879,'fr-fr','tab_presentation','common','Présentation','2017-02-13 11:31:30'),
	(880,'fr-fr','tab_sections','common','Sections','2017-02-13 11:31:30'),
	(881,'fr-fr','tab_site_admin','common','Auteurs','2017-02-13 11:31:30'),
	(882,'fr-fr','tab_style','common','Styles','2017-02-13 11:31:30'),
	(883,'fr-fr','tab_view_site','common','Voir le site','2017-02-13 11:31:30'),
	(884,'fr-fr','tab_write','common','Rédiger','2017-02-13 11:31:30'),
	(885,'fr-fr','tag','tag','Balise','2016-10-25 14:23:44'),
	(886,'fr-fr','tagalog','prefs','Tagalog','2012-08-27 12:37:41'),
	(887,'fr-fr','tagbuilder','tag','Constructeur de balises','2016-10-25 14:23:44'),
	(888,'fr-fr','tags','tag','Balises','2016-10-25 14:23:44'),
	(889,'fr-fr','tag_article','tag','Articles (unique ou liste)','2016-10-25 14:23:44'),
	(890,'fr-fr','tag_article_custom','tag','Articles (liste personnalisée)','2016-10-25 14:23:44'),
	(891,'fr-fr','tag_article_image','tag','Image associée à l’article','2016-10-25 14:23:44'),
	(892,'fr-fr','tag_author','tag','Auteur','2016-10-25 14:23:44'),
	(893,'fr-fr','tag_body','tag','Corps de texte','2016-10-25 14:23:44'),
	(894,'fr-fr','tag_body_excerpt','tag','Extrait du corps de texte','2016-10-25 14:23:44'),
	(895,'fr-fr','tag_breadcrumb','tag','Fil d’Ariane','2016-10-25 14:23:44'),
	(896,'fr-fr','tag_category','tag','Catégorie','2016-10-25 14:23:44'),
	(897,'fr-fr','tag_category1','tag','Catégorie 1','2016-10-25 14:23:44'),
	(898,'fr-fr','tag_category2','tag','Catégorie 2','2016-10-25 14:23:44'),
	(899,'fr-fr','tag_category_list','tag','Liste des catégories','2016-10-25 14:23:44'),
	(900,'fr-fr','tag_comments','tag','Commentaires','2016-10-25 14:23:44'),
	(901,'fr-fr','tag_comments_form','tag','Module','2016-10-25 14:23:44'),
	(902,'fr-fr','tag_comments_invite','tag','Invitación a comentar','2016-10-25 14:23:44'),
	(903,'fr-fr','tag_comments_preview','tag','Prévisualisation','2016-10-25 14:23:44'),
	(904,'fr-fr','tag_comment_anchor','tag','Ancre','2016-10-25 14:23:44'),
	(905,'fr-fr','tag_comment_email','tag','Email','2016-10-25 14:23:44'),
	(906,'fr-fr','tag_comment_email_input','tag','Saisie de l’email','2016-10-25 14:23:44'),
	(907,'fr-fr','tag_comment_id','tag','ID#','2016-10-25 14:23:44'),
	(908,'fr-fr','tag_comment_message','tag','Message','2016-10-25 14:23:44'),
	(909,'fr-fr','tag_comment_message_input','tag','Saisie du message','2016-10-25 14:23:44'),
	(910,'fr-fr','tag_comment_name','tag','Nom du commentaire','2016-10-25 14:23:44'),
	(911,'fr-fr','tag_comment_name_input','tag','Saisie du nom','2016-10-25 14:23:44'),
	(912,'fr-fr','tag_comment_permlink','tag','Lien vers ce commentaire','2016-10-25 14:23:44'),
	(913,'fr-fr','tag_comment_preview','tag','Bouton de prévisualisation','2016-10-25 14:23:44'),
	(914,'fr-fr','tag_comment_remember','tag','Case à cocher « se souvenir des détails »','2016-10-25 14:23:44'),
	(915,'fr-fr','tag_comment_submit','tag','Bouton d’enregistrement','2016-10-25 14:23:44'),
	(916,'fr-fr','tag_comment_time','tag','Heure','2016-10-25 14:23:44'),
	(917,'fr-fr','tag_comment_web','tag','Site web','2016-10-25 14:23:44'),
	(918,'fr-fr','tag_comment_web_input','tag','Saisie web','2016-10-25 14:23:44'),
	(919,'fr-fr','tag_css','tag','Lien CSS (<code>head</code>)','2016-10-25 14:23:44'),
	(920,'fr-fr','tag_email','tag','Hyperlien d’email','2016-10-25 14:23:44'),
	(921,'fr-fr','tag_error','public','Erreur de balise :','2016-10-24 11:39:40'),
	(922,'fr-fr','tag_excerpt','tag','Résumé','2016-10-25 14:23:44'),
	(923,'fr-fr','tag_feed_link','tag','Flux des articles','2016-10-25 14:23:44'),
	(924,'fr-fr','tag_file_download','tag','Module de téléchargement de fichiers','2016-10-25 14:23:44'),
	(925,'fr-fr','tag_file_download_category','tag','Catégorie','2016-10-25 14:23:44'),
	(926,'fr-fr','tag_file_download_created','tag','Date et heure de création','2016-10-25 14:23:44'),
	(927,'fr-fr','tag_file_download_description','tag','Description','2016-10-25 14:23:44'),
	(928,'fr-fr','tag_file_download_downloads','tag','Nombre de téléchargements','2016-10-25 14:23:44'),
	(929,'fr-fr','tag_file_download_id','tag','ID#','2016-10-25 14:23:44'),
	(930,'fr-fr','tag_file_download_link','tag','Lien','2016-10-25 14:23:44'),
	(931,'fr-fr','tag_file_download_list','tag','Liste de fichiers','2016-10-25 14:23:44'),
	(932,'fr-fr','tag_file_download_modified','tag','Date et heure de modification','2016-10-25 14:23:44'),
	(933,'fr-fr','tag_file_download_name','tag','Nom','2016-10-25 14:23:44'),
	(934,'fr-fr','tag_file_download_size','tag','Taille','2016-10-25 14:23:44'),
	(935,'fr-fr','tag_home','tag','Accueil','2016-10-25 14:23:44'),
	(936,'fr-fr','tag_if_category','tag','Si catégorie','2016-10-25 14:23:44'),
	(937,'fr-fr','tag_if_section','tag','Si section','2016-10-25 14:23:44'),
	(938,'fr-fr','tag_image','tag','Image','2016-10-25 14:23:44'),
	(939,'fr-fr','tag_inline_','tag','Linéaire','2016-10-25 14:23:44'),
	(940,'fr-fr','tag_lang','tag','Langue','2016-10-25 14:23:44'),
	(941,'fr-fr','tag_link','tag','Lien uniquement','2016-10-25 14:23:44'),
	(942,'fr-fr','tag_linkdesctitle','tag','Attribut titre du lien','2016-10-25 14:23:44'),
	(943,'fr-fr','tag_linklist','tag','Liste de liens','2016-10-25 14:23:44'),
	(944,'fr-fr','tag_link_category','tag','Catégorie','2016-10-25 14:23:44'),
	(945,'fr-fr','tag_link_date','tag','Date','2016-10-25 14:23:44'),
	(946,'fr-fr','tag_link_description','tag','Description uniquement','2016-10-25 14:23:44'),
	(947,'fr-fr','tag_link_feed_link','tag','Flux des liens','2016-10-25 14:23:44'),
	(948,'fr-fr','tag_link_name','tag','Nom','2016-10-25 14:23:44'),
	(949,'fr-fr','tag_link_text','tag','Texte du lien uniquement','2016-10-25 14:23:44'),
	(950,'fr-fr','tag_link_to_home','tag','Lien vers la page d’accueil','2016-10-25 14:23:44'),
	(951,'fr-fr','tag_link_to_next','tag','Lien vers l’article suivant','2016-10-25 14:23:44'),
	(952,'fr-fr','tag_link_to_prev','tag','Lien vers l’article précédent','2016-10-25 14:23:44'),
	(953,'fr-fr','tag_message','tag','Message','2016-10-25 14:23:44'),
	(954,'fr-fr','tag_name','tag','Nom du commentateur','2016-10-25 14:23:44'),
	(955,'fr-fr','tag_newer','tag','Lien vers les articles plus récents','2016-10-25 14:23:44'),
	(956,'fr-fr','tag_next_article','tag','Article suivant','2016-10-25 14:23:44'),
	(957,'fr-fr','tag_next_title','tag','Titre de l’article suivant','2016-10-25 14:23:44'),
	(958,'fr-fr','tag_older','tag','Lien vers les articles plus anciens','2016-10-25 14:23:44'),
	(959,'fr-fr','tag_output_form','tag','Insertion de module','2016-10-25 14:23:44'),
	(960,'fr-fr','tag_page_title','tag','Titre de la page','2016-10-25 14:23:44'),
	(961,'fr-fr','tag_paging_link','tag','Lien vers la page suivante','2016-10-25 14:23:44'),
	(962,'fr-fr','tag_password_protect','tag','Protection par mot de passe','2016-10-25 14:23:44'),
	(963,'fr-fr','tag_permlink','tag','Lien permanent','2016-10-25 14:23:44'),
	(964,'fr-fr','tag_popup','tag','Liste en popup','2016-10-25 14:23:44'),
	(965,'fr-fr','tag_posted','tag','Publié','2016-10-25 14:23:44'),
	(966,'fr-fr','tag_prev_article','tag','Article précédent','2016-10-25 14:23:44'),
	(967,'fr-fr','tag_prev_title','tag','Titre de l’article précédent','2016-10-25 14:23:44'),
	(968,'fr-fr','tag_recent_articles','tag','Articles récents','2016-10-25 14:23:44'),
	(969,'fr-fr','tag_recent_comments','tag','Commentaires récents','2016-10-25 14:23:44'),
	(970,'fr-fr','tag_related_articles','tag','Articles sur le même sujet','2016-10-25 14:23:44'),
	(971,'fr-fr','tag_search_input','tag','Formulaire de saisie de recherche','2016-10-25 14:23:44'),
	(972,'fr-fr','tag_search_result_date','tag','Date du résultat','2016-10-25 14:23:44'),
	(973,'fr-fr','tag_search_result_excerpt','tag','Résumé du résultat','2016-10-25 14:23:44'),
	(974,'fr-fr','tag_search_result_title','tag','Titre du résultat','2016-10-25 14:23:44'),
	(975,'fr-fr','tag_search_result_url','tag','URL du résultat','2016-10-25 14:23:44'),
	(976,'fr-fr','tag_section','tag','Section','2016-10-25 14:23:44'),
	(977,'fr-fr','tag_section_list','tag','Liste des sections','2016-10-25 14:23:44'),
	(978,'fr-fr','tag_sitename','tag','Nom du site','2016-10-25 14:23:44'),
	(979,'fr-fr','tag_site_name','tag','Nom du site','2016-10-25 14:23:44'),
	(980,'fr-fr','tag_site_slogan','tag','Slogan du site','2016-10-25 14:23:44'),
	(981,'fr-fr','tag_title','tag','Titre','2016-10-25 14:23:44'),
	(982,'fr-fr','tag__inline','tag','Linéaire au début','2016-10-25 14:23:44'),
	(983,'fr-fr','tempdir','prefs','Chemin du répertoire temporaire','2016-10-04 13:17:59'),
	(984,'fr-fr','textile_help','public','Aide à la rédaction avec Textile','2016-10-24 11:39:40'),
	(985,'fr-fr','textile_links','prefs','Description des liens hypertextes Textile par défaut ?','2016-10-04 13:17:59'),
	(986,'fr-fr','textile_lite_help','public','Aide de Textile Lite','2016-10-24 11:39:40'),
	(987,'fr-fr','textonly','tag','Uniquement du texte ?','2016-10-25 14:23:44'),
	(988,'fr-fr','text_conversion','public','Conversion du texte','2016-10-24 11:39:40'),
	(989,'fr-fr','text_handling','public','Gestion du texte','2016-10-24 11:39:40'),
	(990,'fr-fr','text_or_tag','tag','Texte ou balise ici-même','2016-10-25 14:23:44'),
	(991,'fr-fr','th-th','common','ภาษาไทย','2017-02-13 11:31:30'),
	(992,'fr-fr','thai','prefs','Thaïlandais','2012-08-27 12:37:41'),
	(996,'fr-fr','theme_name','prefs','Thème de l’interface d’administration','2016-10-04 13:17:59'),
	(997,'fr-fr','this_section','tag','Hyperlien vers la section courante ?','2016-10-25 14:23:44'),
	(998,'fr-fr','thumbnail','common','Miniature','2017-02-13 11:31:30'),
	(999,'fr-fr','thumbnail_deleted','image','Miniature effacée.','2017-02-13 11:31:46'),
	(1000,'fr-fr','thumbnail_not_saved','image','La miniature <strong>{id}</strong> n’a <strong>pas</strong> pu être enregistrée !','2017-02-13 11:31:46'),
	(1001,'fr-fr','thumbnail_saved','image','Miniature <strong>{id}</strong> enregistrée.','2017-02-13 11:31:46'),
	(1002,'fr-fr','thumb_height','image','Hauteur','2017-02-13 11:31:46'),
	(1003,'fr-fr','thumb_width','image','Largeur','2017-02-13 11:31:46'),
	(1004,'fr-fr','time','public','Quand ?','2016-10-24 11:39:40'),
	(1005,'fr-fr','timeoffset','prefs','Décalage horaire (en heures)','2016-10-04 13:17:59'),
	(1006,'fr-fr','timestamp','article','Date de publication','2015-10-29 10:03:17'),
	(1007,'fr-fr','time_ago','public','Il y a {time}','2016-10-24 11:39:40'),
	(1008,'fr-fr','time_any','tag','N’importe','2016-10-25 14:23:44'),
	(1009,'fr-fr','time_format','tag','Chaîne de formatage des dates / heures','2016-10-25 14:23:44'),
	(1010,'fr-fr','time_future','tag','Futur','2016-10-25 14:23:44'),
	(1011,'fr-fr','time_past','tag','Passé','2016-10-25 14:23:44'),
	(1012,'fr-fr','title','public','Titre','2016-10-24 11:39:40'),
	(1013,'fr-fr','title_body','common','Titre et corps de texte','2017-02-13 11:31:30'),
	(1014,'fr-fr','title_body_excerpt','common','Titre, corps et résumé','2017-02-13 11:31:30'),
	(1015,'fr-fr','title_no_widow','prefs','Éviter un mot veuf (seul) dans les titres d’articles ?','2016-10-04 13:17:59'),
	(1016,'fr-fr','title_only','prefs','/titre','2016-10-04 13:17:59'),
	(1017,'fr-fr','title_separator','tag','Nom du site et séparateur individuel d’article','2016-10-25 14:23:44'),
	(1018,'fr-fr','tmp_plugin_paths_match','diag','Le répertoire <code>temporaire</code> et le répertoire de <code>cache des plugins</code> doivent être <strong>différents</strong>.','2017-01-25 17:30:25'),
	(1019,'fr-fr','tooltip','public','Attribut info-bulle du lien','2016-10-24 11:39:40'),
	(1020,'fr-fr','tr-tr','common','Türkçe','2017-02-13 11:31:30'),
	(1021,'fr-fr','txpnl2br','common','Uniquement la transformation en paragraphes','2017-02-13 11:31:30'),
	(1022,'fr-fr','txprawxhtml','common','HTML brut','2017-02-13 11:31:30'),
	(1023,'fr-fr','txpstriptags','common','Suppression des balises','2017-02-13 11:31:30'),
	(1024,'fr-fr','txptextile','common','Textile','2017-02-13 11:31:30'),
	(1025,'fr-fr','txptextilelite','common','Textile allégé','2017-02-13 11:31:30'),
	(1026,'fr-fr','txp_import','import','Importation depuis un autre outil de publication','2016-10-25 14:24:00'),
	(1027,'fr-fr','txp_path','diag','Chemin d’accès à Textpattern CMS','2017-01-25 17:30:25'),
	(1028,'fr-fr','txp_version','diag','Version de Textpattern CMS','2017-01-25 17:30:25'),
	(1029,'fr-fr','txt_quote_double_close','common',' »','2017-02-13 11:31:30'),
	(1030,'fr-fr','txt_quote_double_open','common','« ','2017-02-13 11:31:30'),
	(1031,'fr-fr','txt_quote_single_close','common','”','2017-02-13 11:31:30'),
	(1032,'fr-fr','txt_quote_single_open','common','“','2017-02-13 11:31:30'),
	(1033,'fr-fr','type','public','Type','2016-10-24 11:39:40'),
	(1034,'fr-fr','uk-ua','common','Українська','2017-02-13 11:31:30'),
	(1035,'fr-fr','unban','discuss','Dé-bannir','2015-09-04 14:50:09'),
	(1036,'fr-fr','undefined','public','Non défini','2016-10-24 11:39:40'),
	(1037,'fr-fr','unknown_attribute','public','Attribut de balise inconnu : {att}.','2016-10-24 11:39:40'),
	(1038,'fr-fr','unknown_author','admin','Auteur <strong>{name}</strong> inconnu.','2016-01-10 11:37:16'),
	(1039,'fr-fr','unknown_image','public','Image inconnue','2016-10-24 11:39:40'),
	(1040,'fr-fr','unknown_section','public','Section inconnue','2016-10-24 11:39:40'),
	(1041,'fr-fr','unknown_tag','public','cette balise n’existe pas','2016-10-24 11:39:40'),
	(1042,'fr-fr','unmoderated','common','Non modéré','2017-02-13 11:31:30'),
	(1043,'fr-fr','untitled','public','Sans titre','2016-10-24 11:39:40'),
	(1044,'fr-fr','update','public','Mettre à jour','2016-10-24 11:39:40'),
	(1045,'fr-fr','updated','prefs','à jour','2016-10-04 13:17:59'),
	(1046,'fr-fr','updated_branch_version_available','prefs','Une mise à jour de cette version de Textpattern est disponible. Voulez-vous la <a href=\"http://textpattern.com/download\" rel=\"external\" title=\"Accès à la zone de téléchargement du site Textpattern\">télécharger</a> ?','2016-10-04 13:17:59'),
	(1047,'fr-fr','update_languages','prefs','Mettre à jour les langues installées','2016-10-04 13:17:59'),
	(1048,'fr-fr','upload','public','Envoi','2016-10-24 11:39:40'),
	(1049,'fr-fr','uploaded','public','envoyé','2016-10-24 11:39:40'),
	(1050,'fr-fr','upload_category','image','Catégorie','2017-02-13 11:31:46'),
	(1051,'fr-fr','upload_dir_perms','image','les droits du répertoire doivent être vérifiés.','2017-02-13 11:31:46'),
	(1052,'fr-fr','upload_err_cant_write','common','Échec lors de l’écriture du fichier sur le disque.','2017-02-13 11:31:30'),
	(1053,'fr-fr','upload_err_extension','common','Envoi du fichier sur le serveur stoppé par une extension PHP.','2017-02-13 11:31:30'),
	(1054,'fr-fr','upload_err_form_size','common','Le fichier dépasse la taille permise par l’administrateur.','2017-02-13 11:31:30'),
	(1055,'fr-fr','upload_err_ini_size','common','Le fichier dépasse la taille permise par le paramètre <code>upload_max_filesize</code> du fichier <code>php.ini</code>.','2017-02-13 11:31:30'),
	(1056,'fr-fr','upload_err_no_file','common','Aucun fichier n’a été spécifié.','2017-02-13 11:31:30'),
	(1057,'fr-fr','upload_err_partial','common','Le fichier n’a été que partiellement envoyé.','2017-02-13 11:31:30'),
	(1058,'fr-fr','upload_err_tmp_dir','common','Le répertoire temporaire utilisé par PHP pour stocker les fichiers téléchargés n’est pas défini. Veuillez consulter votre hébergeur Internet.','2017-02-13 11:31:30'),
	(1059,'fr-fr','upload_file','common','Envoyer un fichier','2017-02-13 11:31:30'),
	(1060,'fr-fr','upload_image','image','Envoyer une image','2017-02-13 11:31:46'),
	(1061,'fr-fr','upload_thumbnail','image','Envoyer une miniature','2017-02-13 11:31:46'),
	(1062,'fr-fr','ur-in','common','اردو','2017-02-13 11:31:30'),
	(1063,'fr-fr','url','public','URL','2016-10-24 11:39:40'),
	(1064,'fr-fr','urls_to_ping','prefs','URL où envoyer un ping (séparées par une virgule)','2016-10-04 13:17:59'),
	(1065,'fr-fr','url_mode','prefs','Type d’URL','2016-10-04 13:17:59'),
	(1066,'fr-fr','url_title','article','Texte de l’URL','2015-10-29 10:03:17'),
	(1067,'fr-fr','url_title_is_blank','article','Le texte de l’URL est vide.','2015-10-29 10:03:17'),
	(1068,'fr-fr','url_title_is_multiple','article','Le texte de l’URL est déjà utilisé par {count} articles différents.','2015-10-29 10:03:17'),
	(1069,'fr-fr','useful_tags','tag','Balises utiles','2016-10-25 14:23:44'),
	(1070,'fr-fr','uses_page','section','Utilise le gabarit','2015-10-29 10:00:48'),
	(1071,'fr-fr','uses_style','section','Utilise le style','2015-10-29 10:00:48'),
	(1072,'fr-fr','use_comments','prefs','Accepter les commentaires ?','2016-10-04 13:17:59'),
	(1073,'fr-fr','use_dns','prefs','Utiliser une recherche DNS dans les journaux d’activités ?','2016-10-04 13:17:59'),
	(1074,'fr-fr','use_mail_on_feeds_id','prefs','Utiliser l’email pour l’identification des flux XML ?','2016-10-04 13:17:59'),
	(1075,'fr-fr','use_plugins','prefs','Utiliser les plugins ?','2016-10-04 13:17:59'),
	(1076,'fr-fr','use_textile','common','Utiliser Textile','2017-02-13 11:31:30'),
	(1077,'fr-fr','use_thumbnail','tag','Utiliser une miniature ?','2016-10-25 14:23:44'),
	(1134,'fr-fr','article_count','section','Articles de cette section : {num}.','2016-02-22 10:16:54'),
	(1079,'fr-fr','value','public','Valeur','2016-10-24 11:39:40'),
	(1080,'fr-fr','version','public','Version','2016-10-24 11:39:40'),
	(1081,'fr-fr','vi-vn','common','Tiếng Việt (Việt Nam)','2017-02-13 11:31:30'),
	(1082,'fr-fr','view','public','Voir','2016-10-24 11:39:40'),
	(1083,'fr-fr','viewsite','common','Voir le site','2017-02-13 11:31:30'),
	(1084,'fr-fr','view_per_page','common','Afficher {page} résultats par page','2017-02-13 11:31:30'),
	(1085,'fr-fr','visible','common','Visible','2017-02-13 11:31:30'),
	(1086,'fr-fr','visitor_logs','log','Journal d’activités des visiteurs','2013-09-28 12:34:20'),
	(1088,'fr-fr','warn_register_globals_or_update','diag','Votre version de PHP est soumise à des risques de sécurité. Veuillez désactiver le paramètre <code>register_globals</code> ou mettre à jour votre version de PHP.','2017-01-25 17:30:25'),
	(1089,'fr-fr','website','public','Site web','2016-10-24 11:39:40'),
	(1090,'fr-fr','web_domain','diag','URL du site','2017-01-25 17:30:25'),
	(1091,'fr-fr','week','public','semaine','2016-10-24 11:39:40'),
	(1092,'fr-fr','weeks','public','semaines','2016-10-24 11:39:40'),
	(1094,'fr-fr','with_selected','common','Avec la sélection :','2017-02-13 11:31:30'),
	(1095,'fr-fr','wraptag','tag','Balise entourante','2016-10-25 14:23:44'),
	(1096,'fr-fr','write','article','Rédiger','2015-10-29 10:03:17'),
	(1097,'fr-fr','writer','admin','Auteur','2016-01-10 11:37:16'),
	(1098,'fr-fr','year_month_day_title','prefs','/année/mois/jour/titre','2016-10-04 13:17:59'),
	(1099,'fr-fr','yes','public','Oui','2016-10-24 11:39:40'),
	(1100,'fr-fr','your_branch_is_updated','public','Vous disposez de la dernière version pour cette branche de Textpattern CMS.','2016-10-24 11:39:40'),
	(1133,'fr-fr','add_new_link','link','Ajout d’un lien','2014-05-19 12:11:35'),
	(1103,'fr-fr','your_ip_is_blacklisted_by','public','Vous avez été banni par','2016-10-24 11:39:40'),
	(1104,'fr-fr','your_login_info','admin','Vos informations de connexion','2016-01-10 11:37:16'),
	(1105,'fr-fr','your_login_is','admin','Votre nom de connexion (login) est','2016-01-10 11:37:16'),
	(1106,'fr-fr','your_new_password','admin','Votre nouveau mot de passe','2016-01-10 11:37:16'),
	(1107,'fr-fr','your_password_is','admin','Votre mot de passe est','2016-01-10 11:37:16'),
	(1108,'fr-fr','you_are_editing_css','css','Édition de la feuille de styles CSS en cours :','2014-05-19 12:11:09'),
	(1109,'fr-fr','you_are_editing_div','page','Édition du div en cours :','2015-09-04 14:50:47'),
	(1110,'fr-fr','you_are_editing_form','form','Édition du module en cours :','2015-09-04 14:50:24'),
	(1111,'fr-fr','you_are_editing_page','page','Édition du gabarit en cours :','2015-09-04 14:50:47'),
	(1131,'fr-fr','403_forbidden','public','Interdit.','2016-10-24 11:39:40'),
	(1132,'fr-fr','500_internal_server_error','public','Erreur interne du serveur.','2016-10-24 11:39:40'),
	(1113,'fr-fr','you_have_been_banned','public','Vous n’avez plus le droit de commenter.','2016-10-24 11:39:40'),
	(1114,'fr-fr','you_have_been_registered','admin','Vous avez été enregistré comme contributeur du site','2016-01-10 11:37:16'),
	(1115,'fr-fr','yyyy-mm','public','aaaa-mm','2016-10-24 11:39:40'),
	(1116,'fr-fr','zh-cn','common','中文(简体)','2017-02-13 11:31:30'),
	(1117,'fr-fr','zh-tw','common','中文(繁體)','2017-02-13 11:31:30'),
	(1118,'fr-fr','name_for_this_page','page','Nom de ce gabarit','2015-09-04 14:50:47'),
	(1119,'fr-fr','tab_start','common','Accueil','2017-02-13 11:31:30'),
	(1120,'fr-fr','textpack_strings_installed','prefs','{count} entrées installées à partir du fichier Textpack','2016-10-04 13:17:59'),
	(1121,'fr-fr','get_off_my_lawn','common','Je suis désolé, mais je crains de ne pouvoir continuer : <code>{event}</code> <code>{step}</code> est une opération à risques.','2017-02-13 11:31:30'),
	(1122,'fr-fr','units_b','common','o','2017-02-13 11:31:30'),
	(1123,'fr-fr','units_e','common','Eo','2017-02-13 11:31:30'),
	(1124,'fr-fr','units_g','common','Go','2017-02-13 11:31:30'),
	(1125,'fr-fr','units_k','common','ko','2017-02-13 11:31:30'),
	(1126,'fr-fr','units_m','common','Mo','2017-02-13 11:31:30'),
	(1127,'fr-fr','units_p','common','Po','2017-02-13 11:31:30'),
	(1128,'fr-fr','units_t','common','To','2017-02-13 11:31:30'),
	(1129,'fr-fr','units_y','common','Yo','2017-02-13 11:31:30'),
	(1130,'fr-fr','units_z','common','Zo','2017-02-13 11:31:30'),
	(1160,'fr-fr','edit_link','link','Édition du lien','2014-05-19 12:11:35'),
	(1161,'fr-fr','edit_plugin','plugin','Édition du plugin <strong>{name}</strong>','2017-02-13 11:32:02'),
	(1162,'fr-fr','edit_section','section','Édition de la section','2015-10-29 10:00:48'),
	(1163,'fr-fr','enter_comment_here','public','<strong>Rédigez votre commentaire à l’aide du formulaire ci-dessous</strong>. Les champs marqués d’une étoile (<b class=\"required\" title=\"Requis\">*</b>) sont obligatoires. Vous devez effectuer un aperçu de votre commentaire avant de l’envoyer.','2016-10-24 11:39:40'),
	(1164,'fr-fr','error_category_context','public','Les balises de catégories ne peuvent être utilisées en dehors de leur contexte des catégories.','2016-10-24 11:39:40'),
	(1165,'fr-fr','error_section_context','public','Les balises de sections ne peuvent être utilisées en dehors du contexte des sections.','2016-10-24 11:39:40'),
	(1166,'fr-fr','external_links','common','Liens externes','2017-02-13 11:31:30'),
	(1167,'fr-fr','file_size','public','Poids du fichier','2016-10-24 11:39:40'),
	(1168,'fr-fr','form_save_failed','form','Ce module n’a pas été enregistré en raison d’une erreur. Veuillez essayer de nouveau.','2015-09-04 14:50:24'),
	(1169,'fr-fr','form_submission_error','common','Désolé, le formulaire ne peut pas être soumis. Veuillez réessayer ultérieurement.','2017-02-13 11:31:30'),
	(1170,'fr-fr','general_error','common','Erreur générale','2017-02-13 11:31:30'),
	(1171,'fr-fr','go_txp_com','public','Accès au site de Textpattern','2016-10-24 11:39:40'),
	(1172,'fr-fr','image_save_failed','image','Cette image n’a pas été enregistrée en raison d’une erreur. Veuillez essayer de nouveau.','2017-02-13 11:31:46'),
	(1173,'fr-fr','import_wpdbcharset','import','Jeu de caractères de la base de données','2016-10-25 14:24:00'),
	(1174,'fr-fr','install_from_textpack','prefs','Installer un Textpack','2016-10-04 13:17:59'),
	(1175,'fr-fr','internal_error','common','Erreur interne','2017-02-13 11:31:30'),
	(1176,'fr-fr','last_modified','common','Dernière modification','2017-02-13 11:31:30'),
	(1177,'fr-fr','link_empty','link','Les liens ne peuvent être laissés vides.','2014-05-19 12:11:35'),
	(1178,'fr-fr','link_save_failed','link','Le lien ne peut être sauvegardé.','2014-05-19 12:11:35'),
	(1179,'fr-fr','matching_search_request','public','correspondant à votre recherche pour','2016-10-24 11:39:40'),
	(1180,'fr-fr','mysql_table_errors','diag','Les erreurs suivantes ont été détectées dans vos tables MySQL','2017-01-25 17:30:25'),
	(1181,'fr-fr','navigation','common','Navigation','2017-02-13 11:31:30'),
	(1182,'fr-fr','no_comments','public','Pas encore de commentaire pour cet article.','2016-10-24 11:39:40'),
	(1183,'fr-fr','no_search_matches','public','Désolé, il n’y a aucun résultat correspondant à votre recherche…','2016-10-24 11:39:40'),
	(1184,'fr-fr','no_temp_dir','diag','Aucun répertoire temp défini','2017-01-25 17:30:25'),
	(1185,'fr-fr','page_save_failed','page','Ce gabarit n’a pas été enregistré en raison d’une erreur. Veuillez essayer de nouveau.','2015-09-04 14:50:47'),
	(1186,'fr-fr','php_version_required','diag','Textpattern nécessite au moins une version {version} de PHP installée sur votre serveur','2017-01-25 17:30:25'),
	(1187,'fr-fr','press_preview_then_submit','public','Voici un aperçu de votre commentaire tel qu’il sera affiché. Effectuez les corrections éventuelles, appuyer sur le bouton « Aperçu » pour vérifier. Enfin, cliquez sur le bouton <strong><a href=\"#txpCommentSubmit\">Envoyer</a></strong>.','2016-10-24 11:39:40'),
	(1188,'fr-fr','privs_none','admin','Aucun','2016-01-10 11:37:16'),
	(1189,'fr-fr','published_with','common','Publié avec','2017-02-13 11:31:30'),
	(1190,'fr-fr','publisher_email','prefs','Envoi des informations de connexion à une adresse email','2016-10-04 13:17:59'),
	(1191,'fr-fr','remove_lang','prefs','Supprimer cette langue','2016-10-04 13:17:59'),
	(1192,'fr-fr','reset_download_count','file','Réinitialiser le compteur de téléchargements','2014-01-17 09:24:52'),
	(1193,'fr-fr','section_save_failed','section','Cette section n’a pas été enregistrée en raison d’une erreur. Veuillez essayer de nouveau.','2015-10-29 10:00:48'),
	(1194,'fr-fr','textpattern_update_available','diag','Une nouvelle version de Textpattern {version} <a href=\"http://textpattern.com/download\" rel=\"external\" title=\"Accès au téléchargement sur le site Textpattern CMS\">est disponible en téléchargement</a>.','2017-01-25 17:30:25'),
	(1195,'fr-fr','toggle_all_selected','common','Basculer la sélection','2017-02-13 11:31:30'),
	(1196,'fr-fr','too_common_search_term','public','Il semblerait que votre recherche se porte sur un terme trop générique ; essayez une phrase plus précise que','2016-10-24 11:39:40'),
	(1197,'fr-fr','unknown_callback_function','public','Fonction callback inconnue : {function}.','2016-10-24 11:39:40'),
	(1198,'fr-fr','verify_plugin','plugin','Vérifiez le plugin','2017-02-13 11:32:02'),
	(1199,'fr-fr','view_html','article','Vue HTML','2015-10-29 10:03:17'),
	(1200,'fr-fr','view_preview','article','Aperçu de l’article','2015-10-29 10:03:17'),
	(1201,'fr-fr','view_text','article','Mode saisie','2015-10-29 10:03:17'),
	(1202,'fr-fr','while_parsing_page_form','public','lors du traitement du module “{form}” dans le gabarit “{page}”','2016-10-24 11:39:40'),
	(1203,'fr-fr','with_selected_option','common','Avec la sélection…','2017-02-13 11:31:30'),
	(1204,'fr-fr','changetype','form','Changer de type','2015-09-04 14:50:24'),
	(1205,'fr-fr','misc','common','Divers','2017-02-13 11:31:30'),
	(1206,'fr-fr','required','public','Requis','2016-10-24 11:39:40'),
	(1207,'fr-fr','skip_to_main_content','public','Aller au contenu principal','2016-10-24 11:39:40'),
	(1208,'fr-fr','tab_languages','common','Langues','2017-02-13 11:31:30'),
	(1209,'fr-fr','smd_remote_all','smd_remote','All users','2005-08-14 00:00:00'),
	(1210,'fr-fr','smd_remote_download_status','smd_remote','Permitted download statuses','2005-08-14 00:00:00'),
	(1211,'fr-fr','smd_remote_internet','smd_remote','The Internet','2005-08-14 00:00:00'),
	(1212,'fr-fr','smd_remote_limit_privs','smd_remote','Limit downloads to this priv level','2005-08-14 00:00:00'),
	(1213,'fr-fr','smd_remote_mechanism','smd_remote','Allow downloads from','2005-08-14 00:00:00'),
	(1214,'fr-fr','smd_remote_prefs_deleted','smd_remote','Preferences deleted','2005-08-14 00:00:00'),
	(1215,'fr-fr','smd_remote_pref_legend','smd_remote','Remote file preferences','2005-08-14 00:00:00'),
	(1216,'fr-fr','smd_remote_secure','smd_remote','Secure','2005-08-14 00:00:00'),
	(1217,'fr-fr','smd_remote_secure_loc','smd_remote','Secure location','2005-08-14 00:00:00'),
	(1218,'fr-fr','smd_remote_secure_opts','smd_remote','Security options','2005-08-14 00:00:00'),
	(1219,'fr-fr','smd_remote_secure_path','smd_remote','Secure file path (not web-accessible)','2005-08-14 00:00:00'),
	(1220,'fr-fr','smd_remote_secure_uploaded','smd_remote','Secure file uploaded','2005-08-14 00:00:00'),
	(1221,'fr-fr','smd_remote_tab_name','smd_remote','Remote file','2005-08-14 00:00:00'),
	(1222,'fr-fr','smd_remote_upload','smd_remote','Upload','2005-08-14 00:00:00'),
	(1223,'fr-fr','smd_remote_url','smd_remote','or URL','2005-08-14 00:00:00'),
	(1224,'fr-fr','smd_remote_urls','smd_remote','Remote URLs','2005-08-14 00:00:00'),
	(1225,'fr-fr','smd_remote_url_tooltip','smd_remote','Enter a URL to upload to Textpattern','2005-08-14 00:00:00'),
	(1226,'fr-fr','rah_change_passwords','admin','Change password','2005-08-14 00:00:00'),
	(1227,'fr-fr','rah_change_passwords_pass','admin','New password','2005-08-14 00:00:00'),
	(1228,'fr-fr','rah_change_passwords_confirm','admin','Confirm new password','2005-08-14 00:00:00'),
	(1229,'fr-fr','rah_change_passwords_email_pass','admin','Email the password?','2005-08-14 00:00:00'),
	(1230,'fr-fr','rah_change_passwords_reset_session','admin','Reset session?','2005-08-14 00:00:00'),
	(1231,'fr-fr','rah_change_passwords_confirm_error','admin','Passwords do not match.','2005-08-14 00:00:00'),
	(1232,'fr-fr','rah_change_passwords_update_failed','admin','Saving changes failed.','2005-08-14 00:00:00'),
	(1233,'fr-fr','rah_change_passwords_changed','admin','Password changed.','2005-08-14 00:00:00'),
	(1234,'fr-fr','rah_change_passwords_mailed','admin','Password changed and sent to <strong>{email}</strong>.','2005-08-14 00:00:00'),
	(1235,'fr-fr','rah_change_passwords_mailing_failed','admin','Mailing password to <strong>{email}</strong> failed.','2005-08-14 00:00:00'),
	(1236,'fr-fr','adi_add_note','public','Ajouter une note','2005-08-14 00:00:00'),
	(1237,'fr-fr','adi_add_private_note','public','Ajouter une note privée','2005-08-14 00:00:00'),
	(1238,'fr-fr','adi_add_public_note','public','Ajouter une note publique','2005-08-14 00:00:00'),
	(1239,'fr-fr','adi_alphabetical','public','Alphabétique','2005-08-14 00:00:00'),
	(1240,'fr-fr','adi_alt_title','public','Texte alternatif','2005-08-14 00:00:00'),
	(1241,'fr-fr','adi_any_category','public','Toute catégorie','2005-08-14 00:00:00'),
	(1242,'fr-fr','adi_any_child_category','public','toutes les catégories enfants','2005-08-14 00:00:00'),
	(1243,'fr-fr','adi_any_parent_category','public','Toutes les catégories parentes','2005-08-14 00:00:00'),
	(1244,'fr-fr','adi_article_data','public','Données de l\'article','2005-08-14 00:00:00'),
	(1245,'fr-fr','adi_article_highlighting','public','Mise en évidence du titre de l\'article','2005-08-14 00:00:00'),
	(1246,'fr-fr','adi_article_limit','public','Nombre maximum d\'articles','2005-08-14 00:00:00'),
	(1247,'fr-fr','adi_article_matrix','public','Matrice d\'article','2005-08-14 00:00:00'),
	(1248,'fr-fr','adi_article_selection','public','Choix de l\'article','2005-08-14 00:00:00'),
	(1249,'fr-fr','adi_article_tooltips','public','Infobulle sur le titre de l\'article','2005-08-14 00:00:00'),
	(1250,'fr-fr','adi_article_update_fail','public','La mise à jour de l\'article a échoué','2005-08-14 00:00:00'),
	(1251,'fr-fr','adi_articles_not_modified','public','Aucun article n\'a été modifié','2005-08-14 00:00:00'),
	(1252,'fr-fr','adi_articles_saved','public','Article sauvegardé','2005-08-14 00:00:00'),
	(1253,'fr-fr','adi_cancel','public','Annuler','2005-08-14 00:00:00'),
	(1254,'fr-fr','adi_clone','public','Cloner','2005-08-14 00:00:00'),
	(1255,'fr-fr','adi_clone_title','public','Cloner le titre','2005-08-14 00:00:00'),
	(1256,'fr-fr','adi_convert_textile','public','Convertir en Textile','2005-08-14 00:00:00'),
	(1257,'fr-fr','adi_copy_alt_caption','public','Copier le texte alternatif dans la légende','2005-08-14 00:00:00'),
	(1258,'fr-fr','adi_custom','public','Personnalisé','2005-08-14 00:00:00'),
	(1259,'fr-fr','adi_default_sort','public','Classement par défaut','2005-08-14 00:00:00'),
	(1260,'fr-fr','adi_delete_image','public','Supprimer l\'image','2005-08-14 00:00:00'),
	(1261,'fr-fr','adi_directories','public','Répertoires','2005-08-14 00:00:00'),
	(1262,'fr-fr','adi_directory','public','Répertoire','2005-08-14 00:00:00'),
	(1263,'fr-fr','adi_display_article_id','public','Afficher l\'article ID#','2005-08-14 00:00:00'),
	(1264,'fr-fr','adi_display_convert_option','public','Afficher les options de convertion Textile','2005-08-14 00:00:00'),
	(1265,'fr-fr','adi_edit_form','public','Editer ce module','2005-08-14 00:00:00'),
	(1266,'fr-fr','adi_edit_private_note','public','Editer la note privéé','2005-08-14 00:00:00'),
	(1267,'fr-fr','adi_edit_public_note','public','Editer la note publique','2005-08-14 00:00:00'),
	(1268,'fr-fr','adi_enabled','public','Activé','2005-08-14 00:00:00'),
	(1269,'fr-fr','adi_expiry','public','Expiration','2005-08-14 00:00:00'),
	(1270,'fr-fr','adi_filter','public','Filtre','2005-08-14 00:00:00'),
	(1271,'fr-fr','adi_footer','public','Footer','2005-08-14 00:00:00'),
	(1272,'fr-fr','adi_forms_referenced','public','Modules associés&nbsp;','2005-08-14 00:00:00'),
	(1273,'fr-fr','adi_forms_used','public','Modules utilisés&nbsp;','2005-08-14 00:00:00'),
	(1274,'fr-fr','adi_has_expiry','public','Avec expiration','2005-08-14 00:00:00'),
	(1275,'fr-fr','adi_header','public','Header','2005-08-14 00:00:00'),
	(1276,'fr-fr','adi_ie_conditionals','public','commentaires conditionnels IE','2005-08-14 00:00:00'),
	(1277,'fr-fr','adi_include_descendent_cats','public','Inclure les catégories descendantes','2005-08-14 00:00:00'),
	(1278,'fr-fr','adi_install_fail','public','Impossible d\'installer','2005-08-14 00:00:00'),
	(1279,'fr-fr','adi_installed','public','Installé','2005-08-14 00:00:00'),
	(1280,'fr-fr','adi_invalid_timestamp','public','Horadatage invalide','2005-08-14 00:00:00'),
	(1281,'fr-fr','adi_jquery_ui','public','Fichier javascript de jQuery','2005-08-14 00:00:00'),
	(1282,'fr-fr','adi_jquery_ui_css','public','Fichier CSS de jQuery UI','2005-08-14 00:00:00'),
	(1283,'fr-fr','adi_link_list','public','Liste de liens','2005-08-14 00:00:00'),
	(1284,'fr-fr','adi_list_format','public','Format de la liste&nbsp;','2005-08-14 00:00:00'),
	(1285,'fr-fr','adi_logged_in_user','public','Utilisateur connecté','2005-08-14 00:00:00'),
	(1286,'fr-fr','adi_matrix','public','Matrice','2005-08-14 00:00:00'),
	(1287,'fr-fr','adi_matrix_admin','public','Gestionnaire des matrices d\'article','2005-08-14 00:00:00'),
	(1288,'fr-fr','adi_matrix_cfs_modified','public','Liste des champs personnalisés modifiée','2005-08-14 00:00:00'),
	(1289,'fr-fr','adi_matrix_delete_fail','public','La suppression de la matrice a échoué','2005-08-14 00:00:00'),
	(1290,'fr-fr','adi_matrix_deleted','public','Matrice supprimée','2005-08-14 00:00:00'),
	(1291,'fr-fr','adi_matrix_input_field_tooltips','public','Infos-bulle sur les champs de saisie','2005-08-14 00:00:00'),
	(1292,'fr-fr','adi_matrix_name','public','Nom de la matrice','2005-08-14 00:00:00'),
	(1293,'fr-fr','adi_matrix_update_fail','public','La mise à jour des paramètres de la matrice a échoué','2005-08-14 00:00:00'),
	(1294,'fr-fr','adi_matrix_updated','public','Les paramètres de la matrice ont été mis à jour','2005-08-14 00:00:00'),
	(1295,'fr-fr','adi_matrix_validation_error','public','Les champs invalides ont été ignorés','2005-08-14 00:00:00'),
	(1296,'fr-fr','adi_menu_loop_warning','public','Boucles Parent/Enfant décelées','2005-08-14 00:00:00'),
	(1297,'fr-fr','adi_menu_parent_warning','public','Sections avec parents inexistants','2005-08-14 00:00:00'),
	(1298,'fr-fr','adi_menu_redirect_link_warning','public','Sections redirigées vers des liens inexistants','2005-08-14 00:00:00'),
	(1299,'fr-fr','adi_menu_redirect_section_warning','public','Sections redirigées vers des sections inexistantes','2005-08-14 00:00:00'),
	(1300,'fr-fr','adi_menu_summary_footnote','public','Le menu peut être modifié ultérieurement en utilisant les attributs de balises adi_menu','2005-08-14 00:00:00'),
	(1301,'fr-fr','adi_menu_summary_note','public','La configuration ci-dessus génèrera la hiérarchie de sections suivante','2005-08-14 00:00:00'),
	(1302,'fr-fr','adi_menu_summary_note_key','public','les sections en gras sont redirigées, les sections en italique comportent des titres alternatifs','2005-08-14 00:00:00'),
	(1303,'fr-fr','adi_menu_update_fail','public','La mise à jour du menu a échouée','2005-08-14 00:00:00'),
	(1304,'fr-fr','adi_menu_updated','public','Menu mis à jour','2005-08-14 00:00:00'),
	(1305,'fr-fr','adi_minimal','public','Minimal','2005-08-14 00:00:00'),
	(1306,'fr-fr','adi_no_category','public','Sans catégorie','2005-08-14 00:00:00'),
	(1307,'fr-fr','adi_no_expiry','public','Sans expiration','2005-08-14 00:00:00'),
	(1308,'fr-fr','adi_none_found','public','Aucun résultat','2005-08-14 00:00:00'),
	(1309,'fr-fr','adi_not_installed','public','Non installé','2005-08-14 00:00:00'),
	(1310,'fr-fr','adi_not_readable','public','Non lisible','2005-08-14 00:00:00'),
	(1311,'fr-fr','adi_note_delete_fail','public','Impossible de supprimer cette note','2005-08-14 00:00:00'),
	(1312,'fr-fr','adi_note_deleted','public','Note supprimée','2005-08-14 00:00:00'),
	(1313,'fr-fr','adi_note_editing_private','public','Edition de la note privée','2005-08-14 00:00:00'),
	(1314,'fr-fr','adi_note_editing_public','public','Edition de la note publique','2005-08-14 00:00:00'),
	(1315,'fr-fr','adi_note_markup','public','Editeur','2005-08-14 00:00:00'),
	(1316,'fr-fr','adi_note_public_edit_privs','public','Privilèges associés à l\'édition de la note publique','2005-08-14 00:00:00'),
	(1317,'fr-fr','adi_note_save_fail','public','Impossible de sauvegarder la note','2005-08-14 00:00:00'),
	(1318,'fr-fr','adi_note_saved','public','Note sauvegardée','2005-08-14 00:00:00'),
	(1319,'fr-fr','adi_note_tabs','public','Onglet Note','2005-08-14 00:00:00'),
	(1320,'fr-fr','adi_notes','public','Notes','2005-08-14 00:00:00'),
	(1321,'fr-fr','adi_notes_admin','public','Notes d\'administrateur','2005-08-14 00:00:00'),
	(1322,'fr-fr','adi_nothing_to_do','public','Rien à faire','2005-08-14 00:00:00'),
	(1323,'fr-fr','adi_numerical','public','Numérique','2005-08-14 00:00:00'),
	(1324,'fr-fr','adi_ok','public','OK','2005-08-14 00:00:00'),
	(1325,'fr-fr','adi_one_category','public','Une catégorie','2005-08-14 00:00:00'),
	(1326,'fr-fr','adi_position','public','Position','2005-08-14 00:00:00'),
	(1327,'fr-fr','adi_pref_update_fail','public','La mise à jour des préférences a échoué','2005-08-14 00:00:00'),
	(1328,'fr-fr','adi_prefs','public','Configuration des préférences','2005-08-14 00:00:00'),
	(1329,'fr-fr','adi_prefs_add','public','Ajouter des préférences','2005-08-14 00:00:00'),
	(1330,'fr-fr','adi_prefs_multiple_set_match','public','Les configurations {set} correspondent aux préférences actuelles','2005-08-14 00:00:00'),
	(1331,'fr-fr','adi_prefs_no_set_match','public','Aucune configuration ne correspond à la préférence actuelle','2005-08-14 00:00:00'),
	(1332,'fr-fr','adi_prefs_one_set_match','public','La configuration {set} correspond aux préférences actuelles','2005-08-14 00:00:00'),
	(1333,'fr-fr','adi_prefs_pref_add_fail','public','Impossible d\'ajouter la préférence {pref}','2005-08-14 00:00:00'),
	(1334,'fr-fr','adi_prefs_pref_added','public','Préférence {pref} ajoutée','2005-08-14 00:00:00'),
	(1335,'fr-fr','adi_prefs_pref_not_selected','public','Aucune nouvelle préférence choisie','2005-08-14 00:00:00'),
	(1336,'fr-fr','adi_prefs_pref_remove_fail','public','Impossible de supprimer la préférence {pref}','2005-08-14 00:00:00'),
	(1337,'fr-fr','adi_prefs_pref_removed','public','Préférence {pref} supprimée','2005-08-14 00:00:00'),
	(1338,'fr-fr','adi_prefs_remove_pref','public','Supprimer la préférence ?','2005-08-14 00:00:00'),
	(1339,'fr-fr','adi_prefs_remove_pref_query','public','Supprimer {pref} des configurations ?','2005-08-14 00:00:00'),
	(1340,'fr-fr','adi_prefs_set_applied','public','Configuration {set} appliquée','2005-08-14 00:00:00'),
	(1341,'fr-fr','adi_prefs_set_apply_fail','public','Impossible d\'appliquer la configuration {set}','2005-08-14 00:00:00'),
	(1342,'fr-fr','adi_prefs_set_not_selected','public','Aucune configuration sélectionnée','2005-08-14 00:00:00'),
	(1343,'fr-fr','adi_prefs_set_titles_update_fail','public','Impossible de mettre à jour les titres de la configuration','2005-08-14 00:00:00'),
	(1344,'fr-fr','adi_prefs_set_titles_updated','public','Titres de la onfiguration mis à jour','2005-08-14 00:00:00'),
	(1345,'fr-fr','adi_prefs_set_visibility_update_fail','public','Impossible de mettre à jour la visibilité de la configuration','2005-08-14 00:00:00'),
	(1346,'fr-fr','adi_prefs_set_visibility_updated','public','Visibilité de la configuration mise à jour','2005-08-14 00:00:00'),
	(1347,'fr-fr','adi_prefs_sets_update_fail','public','Impossible de mettre à jour les configurations','2005-08-14 00:00:00'),
	(1348,'fr-fr','adi_prefs_sets_updated','public','Configurations mises à jour','2005-08-14 00:00:00'),
	(1349,'fr-fr','adi_prefs_titles','public','Titres de la configuration','2005-08-14 00:00:00'),
	(1350,'fr-fr','adi_prefs_upgrade_fail','public','Impossible de mettre à jour adi_prefs','2005-08-14 00:00:00'),
	(1351,'fr-fr','adi_prefs_upgraded','public','adi_prefs correctement mise à jour','2005-08-14 00:00:00'),
	(1352,'fr-fr','adi_recent_images','public','Images récentes','2005-08-14 00:00:00'),
	(1353,'fr-fr','adi_recent_items','public','Intervention récentes','2005-08-14 00:00:00'),
	(1354,'fr-fr','adi_recent_tab','public','Récents','2005-08-14 00:00:00'),
	(1355,'fr-fr','adi_recent_tab_max_items','public','Nombre maximum d\'élément&nbsp;','2005-08-14 00:00:00'),
	(1356,'fr-fr','adi_red','public','Rouge','2005-08-14 00:00:00'),
	(1357,'fr-fr','adi_redirect_link_id','public','Rediriger l\'ID du lien','2005-08-14 00:00:00'),
	(1358,'fr-fr','adi_redirect_section','public','Rediriger la section','2005-08-14 00:00:00'),
	(1359,'fr-fr','adi_reset','public','Réinitialiser','2005-08-14 00:00:00'),
	(1360,'fr-fr','adi_scripts','public','Scripts','2005-08-14 00:00:00'),
	(1361,'fr-fr','adi_scripts_dir','public','Répertoire des scripts','2005-08-14 00:00:00'),
	(1362,'fr-fr','adi_scripts_dir_not_found','public','Répertoire inexistant','2005-08-14 00:00:00'),
	(1363,'fr-fr','adi_scripts_general_warning','public','Certains répertoires/fichiers ne sont pas lisibles','2005-08-14 00:00:00'),
	(1364,'fr-fr','adi_scripts_manage_fail','public','Impossible de gérer les scripts','2005-08-14 00:00:00'),
	(1365,'fr-fr','adi_scripts_manage_selected','public','Gérer les scripts sélectionnés','2005-08-14 00:00:00'),
	(1366,'fr-fr','adi_scripts_managed','public','Scripts choisis pris en compte','2005-08-14 00:00:00'),
	(1367,'fr-fr','adi_scripts_managed_scripts','public','Scripts gérés','2005-08-14 00:00:00'),
	(1368,'fr-fr','adi_scripts_unmanaged_scripts','public','Scripts non gérés','2005-08-14 00:00:00'),
	(1369,'fr-fr','adi_scripts_updated','public','Configuration du script mise à jour','2005-08-14 00:00:00'),
	(1370,'fr-fr','adi_scroll','public','Défilement','2005-08-14 00:00:00'),
	(1371,'fr-fr','adi_search_database','public','BDD dans laquelle rechercher','2005-08-14 00:00:00'),
	(1372,'fr-fr','adi_search_db','public','Recherches dans la BDD','2005-08-14 00:00:00'),
	(1373,'fr-fr','adi_section_updated','public','Section <strong>{name}</strong> mise à jour','2005-08-14 00:00:00'),
	(1374,'fr-fr','adi_sort_type','public','Classement','2005-08-14 00:00:00'),
	(1375,'fr-fr','adi_summary','public','Sommaire','2005-08-14 00:00:00'),
	(1376,'fr-fr','adi_tab','public','Onglet','2005-08-14 00:00:00'),
	(1377,'fr-fr','adi_textpack','public','Textpack','2005-08-14 00:00:00'),
	(1378,'fr-fr','adi_textpack_fail','public','L\'installation du fichier Textpack a échoué','2005-08-14 00:00:00'),
	(1379,'fr-fr','adi_textpack_feedback','public','Commentaires sur ce Textpack','2005-08-14 00:00:00'),
	(1380,'fr-fr','adi_textpack_online','public','Textpack est également disponible en ligne','2005-08-14 00:00:00'),
	(1381,'fr-fr','adi_timestamp_invalid','public','Horodatage invalide','2005-08-14 00:00:00'),
	(1382,'fr-fr','adi_tiny_mce','public','TinyMCE','2005-08-14 00:00:00'),
	(1383,'fr-fr','adi_tiny_mce_config','public','Configuration de TinyMCE','2005-08-14 00:00:00'),
	(1384,'fr-fr','adi_tiny_mce_dir_path','public','Chemin du dossier TinyMCE','2005-08-14 00:00:00'),
	(1385,'fr-fr','adi_tiny_mce_hak','public','TinyMCE (hak_tinymce)','2005-08-14 00:00:00'),
	(1386,'fr-fr','adi_tiny_mce_javascript','public','TinyMCE (Javascript)','2005-08-14 00:00:00'),
	(1387,'fr-fr','adi_tiny_mce_jquery','public','TinyMCE (jQuery)','2005-08-14 00:00:00'),
	(1388,'fr-fr','adi_two_categories','public','Deux catégories','2005-08-14 00:00:00'),
	(1389,'fr-fr','adi_uninstall','public','Désinstaller','2005-08-14 00:00:00'),
	(1390,'fr-fr','adi_uninstall_fail','public','Impossible de désinstaller','2005-08-14 00:00:00'),
	(1391,'fr-fr','adi_uninstalled','public','Désinstallé','2005-08-14 00:00:00'),
	(1392,'fr-fr','adi_update','public','Mettre à jour','2005-08-14 00:00:00'),
	(1393,'fr-fr','adi_update_directories','public','Actualiser','2005-08-14 00:00:00'),
	(1394,'fr-fr','adi_update_matrix','public','Mettre à jour les paramètres de la matrice','2005-08-14 00:00:00'),
	(1395,'fr-fr','adi_update_menu','public','Mettre à jour','2005-08-14 00:00:00'),
	(1396,'fr-fr','adi_update_prefs','public','Mettre à jour les préférences','2005-08-14 00:00:00'),
	(1397,'fr-fr','adi_update_scripts','public','Mettre à jour','2005-08-14 00:00:00'),
	(1398,'fr-fr','adi_upgrade_fail','public','Impossible de faire la mise à niveau','2005-08-14 00:00:00'),
	(1399,'fr-fr','adi_upgrade_required','public','Mise à niveau nécessaire','2005-08-14 00:00:00'),
	(1400,'fr-fr','adi_upgraded','public','Mise à niveau faite','2005-08-14 00:00:00'),
	(1401,'fr-fr','adi_use_page_section','public','Utilisez <strong>{name}</strong> avec la section&nbsp;','2005-08-14 00:00:00'),
	(1402,'fr-fr','adi_user','public','Utilisateur','2005-08-14 00:00:00'),
	(1403,'fr-fr','adi_variable','public','Variable','2005-08-14 00:00:00'),
	(1404,'fr-fr','adi_variables','public','Variables','2005-08-14 00:00:00'),
	(1405,'fr-fr','adi_variables_already_exists','public','Cette variable existe déjà','2005-08-14 00:00:00'),
	(1406,'fr-fr','adi_variables_copy_form','public','Copier les variables depuis','2005-08-14 00:00:00'),
	(1407,'fr-fr','adi_variables_delete_fail','public','Variable non supprimée','2005-08-14 00:00:00'),
	(1408,'fr-fr','adi_variables_deleted','public','Variable supprimée','2005-08-14 00:00:00'),
	(1409,'fr-fr','adi_variables_form_copied','public','Module de variables copié','2005-08-14 00:00:00'),
	(1410,'fr-fr','adi_variables_form_copy_fail','public','Module de variables non copié','2005-08-14 00:00:00'),
	(1411,'fr-fr','adi_variables_form_empty','public','Module de variables vide','2005-08-14 00:00:00'),
	(1412,'fr-fr','adi_variables_none_found','public','aucune variable existante','2005-08-14 00:00:00'),
	(1413,'fr-fr','adi_variables_update_fail','public','Echec de mise à jour de variable','2005-08-14 00:00:00'),
	(1414,'fr-fr','adi_variables_updated','public','Variables mises à jour','2005-08-14 00:00:00'),
	(1415,'fr-fr','adi_visibility','public','Visibilité','2005-08-14 00:00:00'),
	(1416,'fr-fr','adi_width','public','Largeur','2005-08-14 00:00:00'),
	(1417,'fr-fr','adi_write_tab_select_format','public','Format de la liste des section dans l\'onglet Rédiger','2005-08-14 00:00:00'),
	(1418,'fr-fr','adi_write_tab_select_indent','public','Indentation des sections dans l\'onglet Rédiger','2005-08-14 00:00:00'),
	(1419,'fr-fr','adi_yellow','public','Jaune','2005-08-14 00:00:00'),
	(1420,'fr-fr','custom_11_set','prefs','total-HT','2014-10-25 11:22:46'),
	(1421,'fr-fr','account_activation','admin','Veuillez activer votre compte','2016-02-22 10:16:54'),
	(1422,'fr-fr','account_activation_confirmation','admin','Veuillez cliquer sur le lien ci-dessous afin d’activer votre compte et renseigner votre mot de passe :','2016-02-22 10:16:54'),
	(1423,'fr-fr','add_new_article','article','Créer un article','2015-10-29 10:03:17'),
	(1424,'fr-fr','all_preferences','prefs','Toutes les préférences','2017-01-26 13:14:27'),
	(1425,'fr-fr','any','public','N’importe','2016-10-24 11:39:40'),
	(1426,'fr-fr','article_category_description','category','Description de la catégorie d’acticles','2015-12-12 10:46:12'),
	(1427,'fr-fr','cancel','common','Annuler','2017-02-13 11:31:30'),
	(1428,'fr-fr','close','common','Fermer','2017-02-13 11:31:30'),
	(1429,'fr-fr','collapse_all','common','Réduire tout','2017-02-13 11:31:30'),
	(1430,'fr-fr','comment_duplicate','public','La duplication de commentaires n’est pas autorisée.','2016-10-24 11:39:40'),
	(1431,'fr-fr','create_new_category','category','Ajouter une nouvelle catégorie','2015-12-12 10:46:12'),
	(1432,'fr-fr','create_skin','skin','Créer un thème','2015-11-13 10:13:28'),
	(1433,'fr-fr','css_code','css','Code source du style CSS :','2014-05-19 12:11:09'),
	(1434,'fr-fr','css_name','css','Nom du style CSS :','2014-05-19 12:11:09'),
	(1435,'fr-fr','current_password','admin','Mot de passe actuel','2016-02-22 10:16:54'),
	(1436,'fr-fr','db_global_timezone','diag','Fuseau horaire du serveur de base de données','2017-01-25 17:30:25'),
	(1437,'fr-fr','db_server_time','diag','Heure du serveur de base de données','2017-01-25 17:30:25'),
	(1438,'fr-fr','db_server_timeoffset','diag','Décalage horaire du serveur de base de données','2017-01-25 17:30:25'),
	(1439,'fr-fr','db_session_timezone','diag','Fuseau horaire de session de la base de données','2017-01-25 17:30:25'),
	(1440,'fr-fr','default_publish_status','prefs','Statut de publication par défaut','2016-10-04 13:17:59'),
	(1441,'fr-fr','documentation','public','Documentation','2016-10-24 11:39:40'),
	(1442,'fr-fr','duplicate','common','Dupliquer','2017-02-13 11:31:30'),
	(1443,'fr-fr','edit_skin','skin','Éditer le thème','2015-11-13 10:13:28'),
	(1444,'fr-fr','exact','public','Exact','2016-10-24 11:39:40'),
	(1445,'fr-fr','expand_all','common','Déployer tout','2017-02-13 11:31:30'),
	(1446,'fr-fr','expire_date','common','Expiration','2017-02-13 11:31:30'),
	(1447,'fr-fr','expire_time','common','Heure d’expiration','2017-02-13 11:31:30'),
	(1448,'fr-fr','extension','image','Extension','2017-02-13 11:31:46'),
	(1449,'fr-fr','file_category_description','category','Description de la catégorie de fichiers','2015-12-12 10:46:12'),
	(1450,'fr-fr','form_clone','form','Dupliquer ce module','2015-09-04 14:50:24'),
	(1451,'fr-fr','form_code','form','Contenu du module :','2015-09-04 14:50:24'),
	(1452,'fr-fr','go_back','public','Retour','2016-10-24 11:39:40'),
	(1453,'fr-fr','image_category_description','category','Description de la catégorie d’images','2015-12-12 10:46:12'),
	(1454,'fr-fr','image_details','image','Détails de l’image','2017-02-13 11:31:46'),
	(1455,'fr-fr','installing_language','prefs','Installation d’une langue','2016-10-04 13:17:59'),
	(1456,'fr-fr','invalid_postdate','article','Horodatage non valide.','2015-10-29 10:03:17'),
	(1457,'fr-fr','link_category_description','category','Description de la catégorie de liens','2015-12-12 10:46:12'),
	(1458,'fr-fr','link_expires','admin','Vous disposez d’une semaine, jusqu’au {day} {month} {year} à {time}, pour répondre avant que ce lien n’expire.','2016-02-22 10:16:54'),
	(1459,'fr-fr','list_options','common','Options de la liste','2017-02-13 11:31:30'),
	(1460,'fr-fr','locale_not_available_for_language','prefs','Aucuns paramètres régionaux disponibles pour la langue <strong>{name}</strong>. Utilisation de la configuration locale par défaut.','2016-10-04 13:17:59'),
	(1461,'fr-fr','login_sent_to','admin','Mot de passe envoyé à {email}.','2016-01-10 11:37:16'),
	(1462,'fr-fr','main_content','public','Contenu principal','2016-10-24 11:39:40'),
	(1463,'fr-fr','match_type','tag','Type de relation','2016-10-25 14:23:44'),
	(1464,'fr-fr','no_preferences','prefs','Aucune préférence disponible.','2016-10-04 13:17:59'),
	(1465,'fr-fr','of','public','sur','2016-10-24 11:39:40'),
	(1466,'fr-fr','opens_external_link','public','(ouvre le lien externe dans une nouvelle fenêtre)','2016-10-24 11:39:40'),
	(1467,'fr-fr','page_code','page','Contenu du gabarit :','2015-09-04 14:50:47'),
	(1468,'fr-fr','password_change_confirmation','admin','Votre mot de passe vient d\'être modifié. Si vous n\'êtes pas à l\'origine de cette demande veuillez contacter le responsable du site (son administrateur).','2016-01-10 11:37:16'),
	(1469,'fr-fr','password_confirm_button','admin','Confirmer la modification','2016-01-10 11:37:16'),
	(1470,'fr-fr','password_invalid','admin','Votre mot de passe est invalide.','2016-01-10 11:37:16'),
	(1471,'fr-fr','password_set','admin','Votre mot de passe a bien été enregistré','2016-01-10 11:37:16'),
	(1472,'fr-fr','password_set_confirmation','admin','Votre mot de passe vient d’être enregistré. Si vous n’approuvez pas cette modification, veuillez contacter l’administrateur (le responsable) du site.','2016-01-10 11:37:16'),
	(1473,'fr-fr','password_strength_0','admin','Risqué','2016-01-10 11:37:16'),
	(1474,'fr-fr','password_strength_1','admin','Prédictible','2016-01-10 11:37:16'),
	(1475,'fr-fr','password_strength_2','admin','Correct','2016-01-10 11:37:16'),
	(1476,'fr-fr','password_strength_3','admin','Fort','2016-01-10 11:37:16'),
	(1477,'fr-fr','password_strength_4','admin','Sécurisé','2016-01-10 11:37:16'),
	(1478,'fr-fr','permlink_format','prefs','Permaliens : forme des titres d’URL','2016-10-04 13:17:59'),
	(1479,'fr-fr','permlink_hyphenated','prefs','Avec traits d’union (titre-comme-cela)','2016-10-04 13:17:59'),
	(1480,'fr-fr','permlink_intercapped','prefs','Casse de chameau (TitreCommeCela)','2016-10-04 13:17:59'),
	(1481,'fr-fr','publish_date','common','Date de publication','2017-02-13 11:31:30'),
	(1482,'fr-fr','publish_time','common','Heure de publication','2017-02-13 11:31:30'),
	(1483,'fr-fr','recent_comments','public','Commentaires récents','2016-10-24 11:39:40'),
	(1484,'fr-fr','related_articles','public','Articles sur le même sujet','2016-10-24 11:39:40'),
	(1485,'fr-fr','resend_activation','admin','Envoyer à nouveau le lien d’activation','2016-01-10 11:37:16'),
	(1486,'fr-fr','resend_activation_request_sent','admin','Message d’activation transmis à {name}.','2016-01-10 11:37:16'),
	(1487,'fr-fr','salutation','common','Bonjour {name},','2017-02-13 11:31:30'),
	(1488,'fr-fr','search_all','common','Cocher tous les choix','2017-02-13 11:31:30'),
	(1489,'fr-fr','search_articles','article','Recherche d’articles','2015-11-06 10:18:58'),
	(1490,'fr-fr','search_clear','common','Effacer la recherche','2017-02-13 11:31:30'),
	(1491,'fr-fr','search_comments','discuss','Recherche de commentaires','2015-11-13 10:13:28'),
	(1492,'fr-fr','search_files','file','Recherche de fichiers','2015-11-06 10:30:57'),
	(1493,'fr-fr','search_images','image','Recherche d’images','2017-02-13 11:31:46'),
	(1494,'fr-fr','search_links','link','Recherche de liens','2015-11-13 10:13:28'),
	(1495,'fr-fr','search_logs','log','Recherche de logs','2015-11-13 10:13:28'),
	(1496,'fr-fr','search_options','common','Options de recherche','2017-02-13 11:31:30'),
	(1497,'fr-fr','search_sections','section','Recherche de sections','2015-11-13 10:13:28'),
	(1498,'fr-fr','search_users','admin','Recherche d’utilisateurs','2016-01-10 11:37:16'),
	(1499,'fr-fr','set_password','admin','Créez votre mot de passe','2016-01-10 11:37:16'),
	(1500,'fr-fr','show_password','admin','Afficher le mot de passe','2016-01-10 11:37:16'),
	(1501,'fr-fr','skin_author','skin','Auteur du thème','2015-11-13 10:13:28'),
	(1502,'fr-fr','skin_base_path','prefs','Chemin de base du thème','2016-10-04 13:17:59'),
	(1503,'fr-fr','skin_name','skin','Nom du thème','2015-11-13 10:13:28'),
	(1504,'fr-fr','skin_title','skin','Titre du thème','2015-11-13 10:13:28'),
	(1505,'fr-fr','skin_version','skin','Version du thème','2015-11-13 10:13:28'),
	(1506,'fr-fr','skin_website','skin','Site web du thème','2015-11-13 10:13:28'),
	(1507,'fr-fr','tab_skins','common','Thèmes','2017-02-13 11:31:30'),
	(1508,'fr-fr','textfilter_help','article','Aide à la rédaction Textile','2015-10-29 10:03:17'),
	(1509,'fr-fr','up_to_date','prefs','À jour','2016-10-04 13:17:59'),
	(1510,'fr-fr','view_html_short','article','HTML','2015-10-29 10:03:17'),
	(1511,'fr-fr','view_preview_short','article','Aperçu','2015-10-29 10:03:17'),
	(1512,'fr-fr','view_text_short','article','Saisie','2015-10-29 10:03:17');

/*!40000 ALTER TABLE `txp_lang` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table txp_link
# ------------------------------------------------------------

CREATE TABLE `txp_link` (
  `id` int(6) NOT NULL AUTO_INCREMENT,
  `date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `category` varchar(64) NOT NULL DEFAULT '',
  `url` text NOT NULL,
  `linkname` varchar(255) NOT NULL DEFAULT '',
  `linksort` varchar(128) NOT NULL DEFAULT '',
  `description` text NOT NULL,
  `author` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  KEY `author_idx` (`author`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 PACK_KEYS=1;



# Affichage de la table txp_log
# ------------------------------------------------------------

CREATE TABLE `txp_log` (
  `id` int(12) NOT NULL AUTO_INCREMENT,
  `time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `host` varchar(255) NOT NULL DEFAULT '',
  `page` varchar(255) NOT NULL DEFAULT '',
  `refer` mediumtext NOT NULL,
  `status` int(11) NOT NULL DEFAULT '200',
  `method` varchar(16) NOT NULL DEFAULT 'GET',
  `ip` varchar(45) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  KEY `time` (`time`),
  KEY `ip` (`ip`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;



# Affichage de la table txp_page
# ------------------------------------------------------------

CREATE TABLE `txp_page` (
  `name` varchar(128) NOT NULL DEFAULT '',
  `user_html` text NOT NULL,
  `file_mod_time` datetime DEFAULT NULL,
  PRIMARY KEY (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 PACK_KEYS=1;

LOCK TABLES `txp_page` WRITE;
/*!40000 ALTER TABLE `txp_page` DISABLE KEYS */;

INSERT INTO `txp_page` (`name`, `user_html`, `file_mod_time`)
VALUES
	('default','<txp:output_form form=\"start\"/>\n\n<txp:hide><!-- hack for use cbe_frontauth_whois in body class --></txp:hide>\n<txp:cbe_frontauth_if_logged></txp:cbe_frontauth_if_logged>\n<body <txp:if_section name=\"\">id=\"home\"<txp:else />id=\"<txp:section />\"</txp:if_section> class=\'user-level<txp:cbe_frontauth_whois type=\"privs\" />\'>\n	\n	<div class=\"site_wrapper\">\n		\n		<txp:output_form form=\"header\" />\n			\n		<section> \n									\n			<txp:cbe_frontauth_if_logged>\n				<txp:if_section name=\"\">\n					<txp:output_form form=\"section-home\" />					\n				<txp:else />\n					<txp:if_section name=\"projet\">\n						<txp:article form=\"section-projet\" limit=\"1\" />					\n					</txp:if_section>\n				</txp:if_section>\n				\n			<txp:else />\n				<txp:cbe_frontauth_login invite=\"\" wraptag=\"div\" class=\"login-form\">\n					<fieldset>\n						<legend>Connexion</legend>\n						<txp:cbe_frontauth_logname label=\"Name\" wraptag=\"div\" class=\"form-12-12\" />\n						<txp:cbe_frontauth_password label=\"Pass\" wraptag=\"div\" class=\"form-12-12\" />\n						<div class=\"form-12-12\">\n							<txp:cbe_frontauth_submit label=\"Go\" class=\"btn\" />\n							<txp:hide><txp:cbe_frontauth_reset label=\"Password forgotten ?\" /></txp:hide>\n						</div>	\n					</fieldset>\n				</txp:cbe_frontauth_login>\n			</txp:cbe_frontauth_if_logged>	\n\n		</section>\n	</div>\n	\n	<txp:output_form form=\"footer\"/>\n	\n	<txp:cbe_frontauth_if_logged>\n		<txp:output_form form=\"js_bottom\"/>\n	</txp:cbe_frontauth_if_logged>	\n	\n</body>\n\n\n</html>','2015-11-23 16:37:44'),
	('archive','<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\n	<title><txp:page_title /></title>\n\n	<link rel=\"home\" href=\"<txp:site_url />\" />\n\n	<txp:feed_link flavor=\"atom\" format=\"link\" label=\"Atom\" />\n	<txp:feed_link flavor=\"rss\" format=\"link\" label=\"RSS\" />\n\n	<txp:css format=\"link\" />\n\n	<txp:rsd />\n</head>\n<body id=\"<txp:section />\">\n\n<!-- accessibility -->\n<div id=\"accessibility\">\n	<ul>\n		<li><a href=\"#content\"><txp:text item=\"go_content\" /></a></li>\n		<li><a href=\"#sidebar-1\"><txp:text item=\"go_nav\" /></a></li>\n		<li><a href=\"#sidebar-2\"><txp:text item=\"go_search\" /></a></li>\n	</ul>\n</div>\n\n<div id=\"container\">\n\n<!-- head -->\n	<div id=\"head\">\n		<p id=\"site-name\"><txp:link_to_home><txp:site_name /></txp:link_to_home></p>\n		<p id=\"site-slogan\"><txp:site_slogan /></p>\n	</div>\n\n<!-- left -->\n	<div id=\"sidebar-1\">\n		<txp:section_list default_title=\'<txp:text item=\"home\" />\' include_default=\"1\" wraptag=\"ul\" break=\"li\">\n			<txp:if_section name=\'<txp:section />\'>&raquo;</txp:if_section>\n			<txp:section link=\"1\" title=\"1\" />\n			<txp:if_section name=\'<txp:section />\'>\n				<txp:article_custom  section=\'<txp:section />\' wraptag=\"ul\" break=\"li\">\n					<txp:if_article_id>&rsaquo;</txp:if_article_id>\n					<txp:permlink><txp:title /></txp:permlink>\n				</txp:article_custom>\n			</txp:if_section>\n		</txp:section_list>\n\n		<txp:search_input wraptag=\"p\" />\n\n		<p><txp:feed_link label=\"RSS\" /> / <txp:feed_link flavor=\"atom\" label=\"Atom\" /></p>\n	</div>\n\n<!-- right -->\n	<div id=\"sidebar-2\">\n		<txp:linklist wraptag=\"p\" />\n\n		<p><a href=\"http://textpattern.com/\"><txp:image id=\"2\" /></a></p>\n	</div>\n\n<!-- center -->\n	<div id=\"content\">\n		<txp:if_article_list><h1><txp:section title=\"1\" /></h1></txp:if_article_list>\n\n		<div class=\"hfeed\">\n		<txp:article listform=\"article_listing\" limit=\"5\" />\n		</div>\n	\n<txp:if_individual_article>\n		<div class=\"divider\"><txp:image id=\"1\" /></div>\n\n		<p><txp:link_to_prev>&#171; <txp:prev_title /></txp:link_to_prev> \n			<txp:link_to_next><txp:next_title /> &#187;</txp:link_to_next></p>\n<txp:else />\n		<p><txp:older>&#171; <txp:text item=\"older\" /></txp:older> \n			<txp:newer><txp:text item=\"newer\" /> &#187;</txp:newer></p>\n</txp:if_individual_article>\n	</div>\n\n<!-- footer -->\n	<div id=\"foot\">&nbsp;</div>\n\n</div>\n\n</body>\n</html>','2015-11-23 16:37:44'),
	('error_default','<txp:output_form form=\"start\"/>\n<body id=\"error-page\">\n	\n	<div class=\"site_wrapper\">\n		<txp:output_form form=\"header\" />\n		\n		\n		<section>\n			\n			<txp:cbe_frontauth_if_logged>\n\n				<h1 class=\"error\"><txp:error_status /></h1>\n				<p class=\"error-msg\"><txp:error_message /></p>\n				\n			<txp:else />\n				<txp:cbe_frontauth_box login_invite=\"Connexion\" />\n			</txp:cbe_frontauth_if_logged>	\n\n		</section>\n	</div>\n	\n	<txp:output_form form=\"footer\"/>\n	\n	<txp:cbe_frontauth_if_logged>\n		<txp:output_form form=\"js_bottom\"/>\n	</txp:cbe_frontauth_if_logged>	\n	\n</body>\n\n\n</html>\n		','2015-11-23 16:37:44'),
	('printfacture','<!doctype html>\n<html lang=\"fr\">\n\n<head>\n	<meta charset=\"utf-8\" />\n	<meta name=\"copyright\" content=\"©sacripant.fr\" />\n	<meta name=\"description\" content=\"Memento, gestionnaire de projet sous Textpattern\" />\n	\n	<title>Impression factures - Memento</title>\n	\n<!-- affichage favicon -->\n	<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"favicon.ico\" />\n\n<!-- CSS FOR PRINT -->\n	<link rel=\"stylesheet\" href=\"<txp:site_url />template/css/reset.css\" media=\"all\" />\n	<link rel=\"stylesheet\" href=\"<txp:site_url />template/css/print-preview.css\" type=\"text/css\" media=\"all\" />\n	\n</head>\n\n\n<body id=\"<txp:section />\">\n	\n	<!-- VARIABLES -->\n	<txp:adi_gps />\n	<txp:hide>	\n		<!-- ID projet -->\n		<txp:variable name=\"projetID\"/><br />\n		<!-- Nb de tranches -->\n		<txp:variable name=\"nbTranches\" />\n	</txp:hide>\n	\n	\n	<txp:article_custom id=\'<txp:variable name=\"projetID\"/>\' time=\"any\">\n	\n	<!-- Tranches de paiement -->\n	<txp:variable name=\"tranches\" value=\'<txp:custom_field name=\"repartition\" />\' />\n	<!-- N0 Devis -->\n	<txp:variable name=\"devisID\"><txp:variable name=\"projetID\"/>-<txp:smd_wrap transform=\"date|%g%m%d%H%M\"><txp:custom_field name=\"num-date_Devis\" /></txp:smd_wrap></txp:variable>	\n	\n	<!-- COMMANDITAIRE -->\n	<txp:variable name=\"commanditaire\">\n		<div id=\"\" class=\"commanditaire-wrapper\">\n			<h2>Commanditaire :</h2>\n			<div class=\"commanditaire-content\">\n				<txp:smd_bio_info\n					fields=\"name,RealName,type,societe,adresse_rue,adresse_quartier,adresse_cp,adresse_ville,form_juridique,adresse_pays\"\n					show_empty=\"1\"\n				>\n					<txp:smd_if_bio field=\"type\" value=\"entreprise\">\n						<strong class=\"org\">{smd_bio_societe}</strong><br />\n						<txp:smd_if_bio field=\"form_juridique\">\n							{smd_bio_form_juridique} <br/>\n						</txp:smd_if_bio>\n					<txp:else />\n						<strong class=\"org\">{smd_bio_RealName}</strong><br />\n					</txp:smd_if_bio>\n					<span class=\"street-address\">\n						{smd_bio_adresse_rue}<br/>\n						<txp:smd_if_bio field=\"adresse_quartier\">\n							{smd_bio_adresse_quartier}<br/>\n						</txp:smd_if_bio>\n					</span>\n					<span class=\"locality\">\n						<txp:smd_if_bio field=\"adresse_cp\">\n							{smd_bio_adresse_cp}\n						</txp:smd_if_bio>\n\n						{smd_bio_adresse_ville}\n					</span>\n					<txp:smd_if_bio field=\"adresse_pays\">\n					<br/> <span class=\"country\">\n						{smd_bio_adresse_pays}\n					</span>\n					</txp:smd_if_bio>\n				</txp:smd_bio_info>											\n			</div>\n		</div>			\n	</txp:variable>\n	\n	<!-- TAUX HORAIRE ET DEVISE -->\n	<div class=\"metas-devis\">\n		<span class=\"taux-horaire\"><txp:custom_field name=\"Taux_horaire\" /></span> \n		<span class=\"devise\"><txp:custom_field name=\"Devise\" /></span>\n	</div>\n	\n	<!-- NATURE DU TRAVAIL -->\n	<txp:variable name=\"chose_facturee\">\n		<div>\n			<h3 class=\"projet-title\"><txp:title />.</h3>\n			<div class=\"projet-description\"><txp:body /></div>\n		</div>	\n	</txp:variable>\n	\n	<!-- Détail de la prestation -->\n	<txp:variable name=\"detail_prestation\">\n\n	<!-- Liste détaillées des items de la facture par catégories -->\n	<txp:category_list \n		break=\"\" \n		parent=\"facturees\"\n		exclude=\"facturees\"\n	>\n			<txp:variable name=\"todos_this_cat\"><txp:smd_wrap>\n				<txp:article_custom projet=\'<txp:variable name=\"projetID\" />\' parent=\"\" section=\"todo\" category=\'<txp:category />\' wraptag=\"ul\" class=\"nude item-devis-liste\" limit=\"999\" time=\"any\" sort=\"id asc\">\n					<li class=\"item-devis item-<txp:category />\">\n						<strong class=\"item-devis-title\">\n							<span class=\"white-mask\"><txp:title /></span>\n						</strong>\n						<span class=\"montant montant-item\" data-temps=\'<txp:if_custom_field name=\"Temps_prevu\" value=\"\">0<txp:else /><txp:custom_field name=\"Temps_prevu\" /></txp:if_custom_field>\'>\n							<span class=\"total-item\"></span>\n						</span>\n					</li>\n				</txp:article_custom>\n			</txp:smd_wrap></txp:variable>\n\n			<txp:if_variable name=\"todos_this_cat\" value=\"\">\n			<txp:else />\n				<div class=\"devis-section clearfix\">\n					<h3 class=\"devis-cat-title\"><txp:category title=\"1\"/></h3>\n\n					<!-- Liste des taches -->\n					<txp:variable name=\"todos_this_cat\" />\n\n					<!-- Sous totale d\'une cat -->\n					<h4 class=\"item-devis sous-total\">\n						<strong class=\"item-devis-title\">\n							<span class=\"white-mask\">\n								Sous Total <txp:category title=\"1\"/>\n							</span>\n						</strong>\n						<span class=\"montant montant-sous-total\"></span>\n					</h4>	\n				</div>\n			</txp:if_variable>\n\n		</txp:category_list>	\n	</txp:variable>\n	\n	\n		<!-- PAGE -->\n		<div class=\"site_wrapper\">\n			<!-- Print button -->\n			<txp:hide>			\n				<button type=\"button\" id=\"print\" title=\"Imprimer le devis et les factures\">Print</button>\n			</txp:hide>\n			\n		\n			<!-- \n				DEVIS \n			-->\n			<section id=\"devis\">\n			\n				<header>\n					<p class=\"date-courier\">\n						À l\'Arbresle, le \n						<txp:smd_wrap transform=\"date|%A %e %B %Y\"><txp:custom_field name=\"num-date_Devis\" /></txp:smd_wrap>\n						<!-- À Dakar, le Vendredi 27 juillet 2012 -->\n					</p>\n					<txp:variable name=\"commanditaire\" />\n					<h1>\n						<txp:variable name=\"devis\" value=\"1\" />\n						<txp:output_form form=\"titre-print-svg\" />\n						\n						<span class=\"no-devis\">N<sup>o</sup> <txp:variable name=\"devisID\" /></span>\n					</h1>\n				</header>\n		\n				<article class=\"devis\">\n					<header>\n						<h2>Nature du travail</h2>\n						<txp:variable name=\"chose_facturee\" />\n					</header>\n\n\n					<txp:variable name=\"detail_prestation\" />\n\n\n\n					<!-- Total Devis et modalité de règlement -->\n					<footer>\n						<div class=\"total-groupe total-groupe-devis\">\n							<!-- TOTAL HT + taxe = TOTAL TTC -->\n								<!-- Total HT -->\n								<h3 class=\"item-devis total-ht\">\n									<strong class=\"item-devis-title\">\n										<span class=\"white-mask\">\n											Total HT\n											<txp:if_custom_field name=\"taxe\" value=\"off\">\n												<span class=\"note\">\n													(TVA non applicable, art. 293 B du CGI)\n												</span>\n											</txp:if_custom_field>\n										</span>\n									</strong>\n									<span class=\"montant\">\n										<span class=\"montant-total-ht\"></span>\n										<span class=\"devise\"><txp:custom_field name=\"Devise\" /></span>\n									</span>\n								</h3>\n\n							<txp:if_custom_field name=\"taxe\" value=\"off\">\n							<txp:else />\n								<!-- Taxe -->\n								<h3 class=\"item-devis taxe\">\n									<strong class=\"item-devis-title\">\n										<span class=\"white-mask\">\n											5% retenus\n										</span>\n									</strong>\n									<span class=\"montant\">\n										<span class=\"montant-taxe\"></span>\n										<span class=\"devise\"><txp:custom_field name=\"Devise\" /></span>\n									</span>\n								</h3>	\n								<!-- Total TTC -->\n								<h3 class=\"item-devis total-ttc\">\n									<strong class=\"item-devis-title\">\n										<span class=\"white-mask\">\n											Total TTC											\n										</span>\n									</strong>\n									<span class=\"montant\">\n										<span class=\"montant-total-ttc\"></span>\n										<span class=\"devise\"><txp:custom_field name=\"Devise\" /></span>\n									</span>\n								</h3>\n							</txp:if_custom_field>\n						</div> <!-- .total-goupe -->\n						\n						\n						<txp:if_custom_field name=\"repartition\">\n						<!-- \n							Tableau de Tranches de paiement \n						-->\n							<div class=\"repartition\">\n								<h2>Modalités de règlement</h2>\n								\n								<txp:rah_repeat value=\'<txp:variable name=\"tranches\" />\' trim=\"1\" wraptag=\"ul\" class=\"devis-liste-factures nude\">\n									<txp:hide>\n										<txp:variable name=\"index\"><txp:smd_wrap transform=\"split|-||1\" item=\'<txp:rah_repeat_value />\' /></txp:variable>\n										<txp:variable name=\"quand\"><txp:smd_wrap transform=\"split|-||2\" item=\'<txp:rah_repeat_value />\' /></txp:variable>\n										<txp:variable name=\'pourcentage-<txp:variable name=\"quand\" />\'><txp:smd_wrap transform=\"split|-||3\" item=\'<txp:rah_repeat_value />\' /></txp:variable>									\n									</txp:hide>\n									\n									<txp:rah_repeat value=\'<txp:rah_repeat_value />\' trim=\"1\" delimiter=\"-\" assign=\"index, quand, pourcentage\"></txp:rah_repeat>\n					\n									<txp:cbe_if_variable name=\'quand\' value=\"^[\\w]*[\\/][\\w\\W]*$\" match=\"pattern\">\n										<txp:variable name=\'quand1\'><txp:smd_wrap transform=\"split|/||1\" item=\'<txp:variable name=\"quand\" />\' /></txp:variable>\n										<txp:variable name=\'quand2\'><txp:smd_wrap transform=\"split|/||2\" item=\'<txp:variable name=\"quand\" />\' /></txp:variable>\n									<txp:else />\n										<txp:variable name=\'quand1\' value=\'<txp:variable name=\"quand\" />\' />\n										<txp:variable name=\'quand2\' value=\"\" />\n									</txp:cbe_if_variable>\n\n\n									<li class=\"item-devis\" data-pourcentage=\"<txp:variable name=\'pourcentage\' />\">\n									\n										<strong class=\'item-devis-title\'>\n											<span class=\"white-mask\">\n											<!-- IF var quand = DATE YYYY/MM/DD -->\n												<txp:cbe_if_variable name=\"quand\" value=\"^[\\d]{4}/\\d{2}/\\d{2}$\" match=\"pattern\">\n													<strong><txp:smd_wrap transform=\"date|%b %Y\" item=\'<txp:variable name=\"quand\" />\' /></strong> :\n													<txp:variable name=\"index\" /><sup>e</sup> tranche de paiement de <strong><txp:variable name=\'pourcentage-<txp:variable name=\'\'quand\'\' />\' /></strong>.\n												<txp:else />\n											<!-- ELSE -->\n													<txp:output_form form=\'quand-<txp:variable name=\"quand1\" />\'/>\n												</txp:cbe_if_variable>\n											</span>\n										</strong>\n									\n										<!-- Montant + devise -->\n										<span class=\"montant\">\n											<span class=\'somme-a-payer\'></span>\n										</span>\n									</li>\n								</txp:rah_repeat>\n							</div>\n						</txp:if_custom_field>\n						<!-- Notes Juridiques -->\n						<div class=\"footer-notes\">\n\n							<!-- Durée de validité -->\n							<p>\n								Ce présent devis est valable jusqu\'au\n								<txp:variable name=\"start-date-devis\">\n									<txp:smd_wrap transform=\"date|%Y-%m-%d\">\n										<txp:custom_field name=\"num-date_Devis\" />\n									</txp:smd_wrap>\n								</txp:variable>\n								<txp:php>\n									$datestart = variable(array (\'name\' => \'start-date-devis\'));\n									$date = new DateTime($datestart);\n									$date->add(new DateInterval(\'P3M\')); //Où \'P3M\' indique \'Période de 3 Mois\'\n									echo $date->format(\'d m Y\');\n								</txp:php>.\n							</p>\n							\n							<p>\n								Cachet, date et signature précédés de <em>\"BON POUR ACCORD\"</em>.\n							</p>\n						</div>\n					</footer>\n				</article>\n				\n			</section> <!-- END DEVIS -->\n			\n			\n			<!-- \n				FACTURES \n			-->\n			<!-- phrase de référence au devis -->\n			<txp:variable name=\"ref_devis\">\n				<p class=\"note ref_devis\">\n					Se référer au devis N<sup>o</sup> <txp:variable name=\"devisID\" /> pour les détails de la prestation.\n				</p>\n			</txp:variable>\n\n			\n			\n			<!-- Create Nb facture avec custom field \"tranches\" -->\n			<txp:rah_repeat value=\'<txp:variable name=\"tranches\" />\' trim=\"1\">\n				<txp:hide>\n					<txp:variable name=\"index\"><txp:smd_wrap transform=\"split|-||1\" item=\'<txp:rah_repeat_value />\' /></txp:variable>\n					<txp:variable name=\"quand\"><txp:smd_wrap transform=\"split|-||2\" item=\'<txp:rah_repeat_value />\' /></txp:variable>\n					<txp:variable name=\'pourcentage-<txp:variable name=\"quand\" />\'><txp:smd_wrap transform=\"split|-||3\" item=\'<txp:rah_repeat_value />\' /></txp:variable>\n					<txp:variable name=\'date-facture\'><txp:smd_wrap transform=\"split|-||4\" item=\'<txp:rah_repeat_value />\' /></txp:variable>\n				</txp:hide>\n\n				<txp:rah_repeat value=\'<txp:rah_repeat_value />\' trim=\"1\" delimiter=\"-\" assign=\"index, quand, pourcentage, date-facture\"></txp:rah_repeat>\n				\n				<txp:cbe_if_variable name=\'quand\' value=\"^[\\w]*[\\/][\\w\\W]*$\" match=\"pattern\">\n\n					<txp:variable name=\'quand1\'><txp:smd_wrap transform=\"split|/||1\" item=\'<txp:variable name=\"quand\" />\' /></txp:variable>\n					<txp:variable name=\'quand2\'><txp:smd_wrap transform=\"split|/||2\" item=\'<txp:variable name=\"quand\" />\' /></txp:variable>\n				<txp:else />\n					<txp:variable name=\'quand1\' value=\'<txp:variable name=\"quand\" />\' />\n					<txp:variable name=\'quand2\' value=\"\" />\n				</txp:cbe_if_variable>\n\n			\n				<!-- FACTURE 0<txp:variable name=\"index\" /> -->	\n				<section id=\'facture<txp:variable name=\"index\" />\' class=\"facture\">\n				\n					<header>\n						<p class=\"date-courier\">\n							<!-- IF var date-facture = DATE YYYY/MM/DD -->\n								<txp:cbe_if_variable name=\"date-facture\" value=\"^[\\d]{4}/\\d{2}/\\d{2}$\" match=\"pattern\">\n									À l\'Arbresle, le <txp:smd_wrap transform=\"date|%A %e %B %Y\" item=\'<txp:variable name=\"date-facture\" />\' />\n								<txp:else />\n							<!-- ELSE date-facture = NOW-->\n									À l\'Arbresle, le <txp:php>echo strftime(\"%A %e %B %Y\");</txp:php>\n								</txp:cbe_if_variable>	\n						</p>\n						<txp:variable name=\"commanditaire\" />\n					\n						<h1>\n							<txp:output_form form=\"titre-print-svg\" />\n							<span class=\"no-devis\">\n								N<sup>o</sup> <txp:variable name=\"devisID\" /> <txp:variable name=\"index\" />-<txp:variable name=\"nbTranches\" />\n								\n\n								<txp:hide>\n									<!-- Optionnal REF -->\n									<br/> <span class=\"optionnal-ref-smile\">ref: XXXXXX XXXXX XXX</span>\n								</txp:hide>\n								\n							</span>\n\n						</h1>\n					</header>\n				\n					\n					<article>\n						<section class=\"rappel-presta\">\n							<header>\n								<h2>Rappel de la prestation</h2>\n								<txp:variable name=\"chose_facturee\" />\n							</header>\n							\n							<div class=\"rappel-total-presta add_totaux\"></div>\n							<txp:variable name=\"ref_devis\" />\n						</section>\n				\n						<section class=\"somme-a-payer\">\n							\n							<h2>Somme à payer :</h2>\n\n							<h3 class=\"clearfix\">	\n								<strong class=\'\'>\n									<span class=\"white-mask\">\n									<!-- IF var quand = DATE YYYY/MM/DD -->\n										<txp:cbe_if_variable name=\"quand\" value=\"^[\\d]{4}/\\d{2}/\\d{2}$\" match=\"pattern\">\n											<strong><txp:smd_wrap transform=\"date|%b %Y\" item=\'<txp:variable name=\"quand\" />\' /></strong> :\n											<txp:variable name=\"index\" /><sup>e</sup> tranche de paiement de <strong><txp:variable name=\'pourcentage-<txp:variable name=\'\'quand\'\' />\' /></strong>.\n										<txp:else />\n									<!-- ELSE -->\n											<txp:output_form form=\'quand-<txp:variable name=\"quand1\" />\'/>\n										</txp:cbe_if_variable>									\n									</span>\n								</strong>\n							</h3>\n\n							<div class=\"total-groupe total-groupe-facture clearfix\">\n							<!-- TOTAL TTC + 5% + TOTAL HT -->\n								<h4 class=\"item-devis total-ht\">\n									<strong class=\"item-devis-title\">\n										<span class=\"white-mask\">\n											Total HT\n											<txp:if_custom_field name=\"taxe\" value=\"off\">\n												<span class=\"note\">\n													(TVA non applicable, art. 293 B du CGI)\n												</span>\n											</txp:if_custom_field>\n										</span>\n									</strong>\n									<span class=\"montant\">\n										<span class=\"montant-total-ht\"></span>\n										<span class=\"devise\"><txp:custom_field name=\"Devise\" /></span>\n									</span>\n								</h4>\n								<txp:if_custom_field name=\"taxe\" value=\"off\">\n								<txp:else />\n									<h4 class=\"item-devis taxe\">\n										<strong class=\"item-devis-title\">5% retenus</strong><span class=\"montant\">\n											<span class=\"montant-taxe\"></span>\n											<span class=\"devise\"><txp:custom_field name=\"Devise\" /></span>\n										</span>\n									</h4>	\n									<h4 class=\"item-devis total-ttc\">\n										<strong class=\"item-devis-title\">Total TTC</strong><span class=\"montant\">\n											<span class=\"montant-total-ttc\"></span>\n											<span class=\"devise\"><txp:custom_field name=\"Devise\" /></span>\n										</span>\n									</h4>	\n								</txp:if_custom_field>\n\n								<!-- \n									Phrase de modalité de paiement \n									- cheque\n									- virement\n								-->\n								<txp:variable name=\"modalite\" value=\"virement\"/>\n								\n								<div class=\"note ref_devis\">\n\n									<p>\n										Merci de régler le montant de \n										<em>\n											<span class=\'montant-total-ht\'></span> \n											<span class=\"devise\"><txp:custom_field name=\"Devise\" /></span>\n										</em> \n										\n										<txp:if_variable name=\"modalite\" value=\"cheque\">\n											par chèque\n										</txp:if_variable>\n										<txp:if_variable name=\"modalite\" value=\"virement\">\n											par virement bancaire\n										</txp:if_variable>\n\n										à l\'attention de Mr <em>JUND Thomas</em>.\n									</p>\n\n									<txp:if_variable name=\"modalite\" value=\"virement\">\n										<txp:output_form form=\'rib\' />\n									</txp:if_variable>\n									\n								</div>\n\n\n							</div> <!-- .total-goupe -->\n						</section>\n					\n							\n									\n					\n	\n					\n					</article>\n				</section>	\n			</txp:rah_repeat>		<!-- End boucle factures	 -->\n			\n		</div> <!-- .site-wrapper -->\n		\n		\n		<script>\n\n		var pageDatas = {\n			site : {\n				siteUrl : \'<txp:site_url />\'\n			},\n			projet : {\n				id	: <txp:article_id />,\n				finance : 1,\n				tauxHoraire : <txp:custom_field name=\"Taux_horaire\" />,\n				devise : \'<txp:custom_field name=\"Devise\" />\',\n				taxe : <txp:if_custom_field name=\"taxe\" value=\"off\">0<txp:else /><txp:custom_field name=\"taxe\" /></txp:if_custom_field>\n			}\n		};\n\n		</script>\n		</txp:article_custom> <!-- END PARENT ARTICLE FORM -->\n		\n	\n	<!-- Javascript bottom -->\n	<!-- chercher Jquery sur le CDN google -->\n	<!-- // <script src=\"http://code.jquery.com/jquery-1.7.2.min.js\"></script> -->\n	<!-- Si le CDN google n\'est pas dispo, utilise Jquery locale -->\n	<!-- // <script>window.jQuery || document.write(\'<script src=\"<txp:site_url />template/js/jquery-1.7.2.min.js\"><\\/script>\')</script> -->\n\n	<script src=\"<txp:site_url />template/js/jquery-1.7.2.min.js\"></script>\n\n	<script src=\"<txp:site_url />template/js/finance.js\" async></script>\n\n	\n</body>\n\n\n</html>','2017-02-17 16:49:23');

/*!40000 ALTER TABLE `txp_page` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table txp_plugin
# ------------------------------------------------------------

CREATE TABLE `txp_plugin` (
  `name` varchar(64) NOT NULL DEFAULT '',
  `status` int(2) NOT NULL DEFAULT '1',
  `author` varchar(128) NOT NULL DEFAULT '',
  `author_uri` varchar(128) NOT NULL DEFAULT '',
  `version` varchar(10) NOT NULL DEFAULT '1.0',
  `description` text NOT NULL,
  `help` text NOT NULL,
  `code` mediumtext NOT NULL,
  `code_restore` mediumtext NOT NULL,
  `code_md5` varchar(32) NOT NULL DEFAULT '',
  `type` int(2) NOT NULL DEFAULT '0',
  `load_order` tinyint(3) unsigned NOT NULL DEFAULT '5',
  `flags` smallint(5) unsigned NOT NULL DEFAULT '0',
  UNIQUE KEY `name` (`name`),
  KEY `status_type_idx` (`status`,`type`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

LOCK TABLES `txp_plugin` WRITE;
/*!40000 ALTER TABLE `txp_plugin` DISABLE KEYS */;

INSERT INTO `txp_plugin` (`name`, `status`, `author`, `author_uri`, `version`, `description`, `help`, `code`, `code_restore`, `code_md5`, `type`, `load_order`, `flags`)
VALUES
	('cnk_versioning',1,'Christian Nowak','http://www.cnowak.de','0.1.7','Autoload Templates','','/*\r\n	v 1.7 modifier avec Tips de Gocom (remove base64_ function)\r\n        http://forum.textpattern.com/viewtopic.php?pid=247485#p247485\r\n*/\r\n\r\nif (!function_exists(\'file_put_contents\')) \r\n{\r\n    function file_put_contents($filename, $data) \r\n    {\r\n        $f = @fopen($filename, \'w\');\r\n        \r\n        if (!$f) \r\n        {\r\n            return false;\r\n        } \r\n        else \r\n        {\r\n            $bytes = fwrite($f, $data);\r\n            fclose($f);\r\n            return $bytes;\r\n        }\r\n    }\r\n}\r\n\r\nglobal $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT, $CNK_VER_EXT_CSS;\r\n\r\n$CNK_VER_OUTPUT_PATH = \'template/\'; //e.g. \'textpattern/_templates/versioning/\'\r\n$CNK_VER_EXT = \'txp\';\r\n$CNK_VER_EXT_CSS = \'css\';\r\n\r\n/*\r\n	DO NOT EDIT BELOW THIS LINE!\r\n*/\r\n\r\n$CNK_VER_OUTPUT_PATH = trim($CNK_VER_OUTPUT_PATH, \'/\').($CNK_VER_OUTPUT_PATH?\'/\':\'\');\r\n\r\nif(@txpinterface == \'admin\') \r\n{\r\n	add_privs(\'cnk_versioning\',\'1,2\');\r\n	register_tab(\'presentation\', \'cnk_versioning\', \"Versioning\");\r\n	register_callback(\'cnk_ver_handler\', \'cnk_versioning\');\r\n	register_callback(\'cnk_ver_disable_online_editing\', \'page\');\r\n	register_callback(\'cnk_ver_disable_online_editing\', \'form\');\r\n	register_callback(\'cnk_ver_disable_online_editing\', \'css\');\r\n}\r\nelse if (@txpinterface == \'public\')\r\n{\r\n	register_callback(\'cnk_ver_textpattern\', \'textpattern\');\r\n}\r\n\r\nfunction cnk_ver_textpattern()\r\n{\r\n	global $production_status, $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT, $CNK_VER_EXT_CSS;\r\n	\r\n	if ($production_status != \'live\')\r\n	{\r\n		$error = false;\r\n		\r\n		// read all files\r\n		$forms = glob($CNK_VER_OUTPUT_PATH.\'forms/*.\'.$CNK_VER_EXT);\r\n		$pages = glob($CNK_VER_OUTPUT_PATH.\'pages/*.\'.$CNK_VER_EXT);\r\n		$css = glob($CNK_VER_OUTPUT_PATH.\'css/*.\'.$CNK_VER_EXT_CSS);\r\n		\r\n		if ($forms !== false) $error = !cnk_ver_push_forms($forms);\r\n		if ($pages !== false) $error = !cnk_ver_push_pages($pages);\r\n		if ($css !== false) $error = !cnk_ver_push_css($css);\r\n		\r\n		if ($error) echo \'Errors while synchronising database and files\';\r\n	}\r\n}\r\n\r\nfunction cnk_ver_push_forms($form_files)\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT;\r\n	\r\n	$forms = array();\r\n\r\n	$rs = safe_rows_start(\'name,type,IFNULL(unix_timestamp(file_mod_time), 0) as mod_time\', \'txp_form\', \'1=1\');\r\n	\r\n	while ($rs && $r = nextRow($rs))\r\n	{\r\n		$forms[$CNK_VER_OUTPUT_PATH.\'forms/\'.$r[\'name\'].\'.\'.$r[\'type\'].\'.\'.$CNK_VER_EXT] = $r[\'mod_time\'];\r\n	}\r\n	\r\n	for ($i=0; $i < count($form_files); $i++)\r\n	{\r\n		if (isset($forms[$form_files[$i]]) && $forms[$form_files[$i]] < filemtime($form_files[$i]))\r\n		{\r\n			cnk_ver_update_form($form_files[$i]);\r\n		}\r\n		else if (!isset($forms[$form_files[$i]]))\r\n		{\r\n			cnk_ver_update_form($form_files[$i], true);\r\n		}\r\n		$forms[$form_files[$i]] = \'processed\';\r\n	}\r\n		\r\n	// delete removed forms\r\n	foreach ($forms as $key => $value)\r\n	{\r\n		if ($value != \'processed\')\r\n		{\r\n			$cols = explode(\'.\', basename($key, \'.\'.$CNK_VER_EXT));\r\n			$name = $cols[0];\r\n			$type = $cols[1];\r\n			\r\n			safe_delete(\'txp_form\', \"name = \'$name\' AND type = \'$type\'\");\r\n		}\r\n	}\r\n\r\n	return true;\r\n}\r\n\r\nfunction cnk_ver_update_form($filename, $create = false)\r\n{\r\n	global $CNK_VER_EXT;\r\n	\r\n	$cols = explode(\'.\', basename($filename, \'.\'.$CNK_VER_EXT));\r\n\r\n	$name = $cols[0];\r\n	$type = $cols[1];\r\n	$form = doSlash(file_get_contents($filename));\r\n	\r\n	if ($create)\r\n	{\r\n		safe_insert(\'txp_form\', \"name = \'$name\', type = \'$type\', form = \'$form\', file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\");\r\n	}\r\n	else\r\n	{\r\n		safe_update(\'txp_form\', \"form = \'$form\', file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\", \"name = \'$name\' AND type = \'$type\'\");\r\n	}\r\n}\r\n\r\nfunction cnk_ver_push_pages($page_files)\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT;\r\n	\r\n	$pages = array();\r\n\r\n	$rs = safe_rows_start(\'name,IFNULL(unix_timestamp(file_mod_time), 0) as mod_time\', \'txp_page\', \'1=1\');\r\n	\r\n	while ($rs && $r = nextRow($rs))\r\n	{\r\n		$pages[$CNK_VER_OUTPUT_PATH.\'pages/\'.$r[\'name\'].\'.\'.$CNK_VER_EXT] = $r[\'mod_time\'];\r\n	}\r\n	\r\n	for ($i=0; $i < count($page_files); $i++)\r\n	{\r\n		if (isset($pages[$page_files[$i]]) && $pages[$page_files[$i]] < filemtime($page_files[$i]))\r\n		{\r\n			cnk_ver_update_page($page_files[$i]);\r\n		}\r\n		else if (!isset($pages[$page_files[$i]]))\r\n		{\r\n			cnk_ver_update_page($page_files[$i], true);\r\n		}\r\n		$pages[$page_files[$i]] = \'processed\';\r\n	}\r\n		\r\n	// delete removed pages\r\n	foreach ($pages as $key => $value)\r\n	{\r\n		if ($value != \'processed\')\r\n		{\r\n			$name = basename($key, \'.\'.$CNK_VER_EXT);\r\n			\r\n			safe_delete(\'txp_page\', \"name = \'$name\'\");\r\n		}\r\n	}\r\n\r\n	return true;\r\n}\r\n\r\nfunction cnk_ver_update_page($filename, $create = false)\r\n{\r\n	global $CNK_VER_EXT;\r\n	\r\n	$name = basename($filename, \'.\'.$CNK_VER_EXT);\r\n	$user_html = doSlash(file_get_contents($filename));\r\n	\r\n	if ($create)\r\n	{\r\n		safe_insert(\'txp_page\', \"name = \'$name\', user_html = \'$user_html\', file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\");\r\n	}\r\n	else\r\n	{\r\n		safe_update(\'txp_page\', \"user_html = \'$user_html\', file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\", \"name = \'$name\'\");\r\n	}\r\n}\r\n\r\nfunction cnk_ver_push_css($css_files)\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT_CSS;\r\n	\r\n	$css = array();\r\n\r\n	$rs = safe_rows_start(\'name,IFNULL(unix_timestamp(file_mod_time), 0) as mod_time\', \'txp_css\', \'1=1\');\r\n	\r\n	while ($rs && $r = nextRow($rs))\r\n	{\r\n		$css[$CNK_VER_OUTPUT_PATH.\'css/\'.$r[\'name\'].\'.\'.$CNK_VER_EXT_CSS] = $r[\'mod_time\'];\r\n	}\r\n	\r\n	for ($i=0; $i < count($css_files); $i++)\r\n	{\r\n		if (isset($css[$css_files[$i]]) && $css[$css_files[$i]] < filemtime($css_files[$i]))\r\n		{\r\n			cnk_ver_update_css($css_files[$i]);\r\n		}\r\n		else if (!isset($css[$css_files[$i]]))\r\n		{\r\n			cnk_ver_update_css($css_files[$i], true);\r\n		}\r\n		$css[$css_files[$i]] = \'processed\';\r\n	}\r\n		\r\n	// delete removed css files\r\n	foreach ($css as $key => $value)\r\n	{\r\n		if ($value != \'processed\')\r\n		{\r\n			$name = basename($key, \'.\'.$CNK_VER_EXT_CSS);\r\n			\r\n			safe_delete(\'txp_css\', \"name = \'$name\'\");\r\n		}\r\n	}\r\n\r\n	return true;\r\n}\r\n\r\nfunction cnk_ver_update_css($filename, $create = false)\r\n{\r\n	global $CNK_VER_EXT_CSS;\r\n	\r\n	$name = basename($filename, \'.\'.$CNK_VER_EXT_CSS);\r\n	$css = doSlash(file_get_contents($filename));\r\n	\r\n	if ($create)\r\n	{\r\n		safe_insert(\'txp_css\', \"name = \'$name\', css = \'$css\', file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\");\r\n	}\r\n	else\r\n	{\r\n		safe_update(\'txp_css\', \"css = \'$css\', file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\", \"name = \'$name\'\");\r\n	}\r\n}\r\n\r\nfunction cnk_ver_handler($event, $step)\r\n{\r\n	if(!$step or !in_array($step, array(\'cnk_ver_menu\',\r\n										\'cnk_ver_pull_all\',\r\n										\'cnk_ver_install\',\r\n										\'cnk_ver_deinstall\')))\r\n	{\r\n		cnk_ver_menu();\r\n	} \r\n	else\r\n	{\r\n		$step();\r\n	}\r\n}\r\n\r\nfunction cnk_ver_disable_online_editing($event, $step)\r\n{\r\n	// clear ob\r\n	ob_end_clean();\r\n	\r\n	// return error message\r\n	\r\n	pagetop(\'Versioning\');\r\n	\r\n	echo \'<div style=\"margin: auto; text-align: center\"><ul>\';\r\n	\r\n	echo \'While cnk_versioning is enabled, this function is disabled.\';\r\n	\r\n	echo \'</div>\';\r\n}\r\n\r\nfunction cnk_ver_menu($message = \'\')\r\n{\r\n	pagetop(\'Versioning\', $message);\r\n	\r\n	echo \'<div style=\"margin: auto; text-align: center\"><ul>\';\r\n	\r\n	echo \'<li><a href=\"?event=cnk_versioning\'.a.\'step=cnk_ver_pull_all\">Write pages & forms to files</a></li>\';\r\n	\r\n	echo \'</ul>\';\r\n	\r\n	echo \'<ul style=\"margin-top: 100px\">\';	\r\n	\r\n	echo \'<li><a href=\"?event=cnk_versioning\'.a.\'step=cnk_ver_install\">Install</a></li>\';\r\n	\r\n	echo \'<li><a href=\"?event=cnk_versioning\'.a.\'step=cnk_ver_deinstall\">Deinstall</a></li>\';\r\n\r\n	echo \'</ul>\';\r\n	\r\n	echo \'</div>\';\r\n}\r\n\r\nfunction cnk_ver_pull_all()\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT, $CNK_VER_EXT_CSS;\r\n	\r\n	pagetop(\'Write to files\', \'\');\r\n	\r\n	echo \'<div style=\"margin: auto; text-align: center\">\';\r\n				\r\n	if (gps(\'do_pull\') || (glob(\'../\'.$CNK_VER_OUTPUT_PATH.\'pages/*.\'.$CNK_VER_EXT) === false && glob(\'../\'.$CNK_VER_OUTPUT_PATH.\'forms/*.\'.$CNK_VER_EXT) === false && glob(\'../\'.$CNK_VER_OUTPUT_PATH.\'css/*.\'.$CNK_VER_EXT_CSS) === false))\r\n	{\r\n		$error = false;\r\n		\r\n		// test if folders exist and have write permissions\r\n		if (@is_writable(\'../\'.$CNK_VER_OUTPUT_PATH.\'forms/\') === false)\r\n		{\r\n			$error = true;\r\n			echo \'Folder \"/forms/\" is not writable.<br /><br />\';\r\n		}\r\n		\r\n		if (@is_writable(\'../\'.$CNK_VER_OUTPUT_PATH.\'pages/\') === false)\r\n		{\r\n			$error = true;\r\n			echo \'Folder \"/pages/\" is not writable.<br /><br />\';\r\n		}\r\n		\r\n		if (@is_writable(\'../\'.$CNK_VER_OUTPUT_PATH.\'css/\') === false)\r\n		{\r\n			$error = true;\r\n			echo \'Folder \"/css/\" is not writable.\';\r\n		}\r\n		\r\n		if (!$error)\r\n		{\r\n				if (cnk_ver_pull_forms())\r\n				{\r\n					echo \'Forms were successfully written to the \"/forms/\" directory.<br /><br />\';\r\n				}\r\n				else\r\n				{\r\n					echo \'There was an error while processing forms.<br /><br />\';\r\n				}\r\n				\r\n				if (cnk_ver_pull_pages())\r\n				{\r\n					echo \'Pages were successfully written to the \"/pages/\" directory.<br /><br />\';\r\n				}\r\n				else\r\n				{\r\n					echo \'There was an error while processing pages.<br /><br />\';\r\n				}\r\n				\r\n				if (cnk_ver_pull_css())\r\n				{\r\n					echo \'Styles were successfully written to the \"/css/\" directory.\';\r\n				}\r\n				else\r\n				{\r\n					echo \'There was an error while processing css.\';\r\n				}\r\n		}\r\n		\r\n		echo \'<br /><br /><a href=\"?event=cnk_versioning\">Back to menu...</a>\';\r\n	}\r\n	else\r\n	{\r\n		echo \'There are already some files in the pages, forms or css directory, which will be overriden. Do you want to continue?<br /><br />\'.\r\n		\r\n		\'<a href=\"?event=cnk_versioning\'.a.\'step=cnk_ver_pull_all\'.a.\'do_pull=1\">Yes, overwrite existing files...</a><br /><br />\'.\r\n		\r\n		\'<a href=\"?event=cnk_versioning\">No, bring me back to the menu...</a>\';\r\n	}\r\n	\r\n	echo \'</div>\';\r\n}\r\n\r\nfunction cnk_ver_pull_forms()\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT;\r\n	\r\n	$rs = safe_rows_start(\'name, type, form\', \'txp_form\', \'1=1\');\r\n	\r\n	while ($rs && $r = nextRow($rs))\r\n	{\r\n		if (@file_put_contents(\'../\'.$CNK_VER_OUTPUT_PATH.\'forms/\'.$r[\'name\'].\'.\'.$r[\'type\'].\'.\'.$CNK_VER_EXT, $r[\'form\']) === false) return false;\r\n	}\r\n	\r\n	safe_update(\'txp_form\', \"file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\", \'1=1\');\r\n	\r\n	return true;\r\n}\r\n\r\nfunction cnk_ver_pull_pages()\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT;\r\n	\r\n	$rs = safe_rows_start(\'name, user_html\', \'txp_page\', \'1=1\');\r\n	\r\n	while ($rs && $r = nextRow($rs))\r\n	{\r\n		if (@file_put_contents(\'../\'.$CNK_VER_OUTPUT_PATH.\'pages/\'.$r[\'name\'].\'.\'.$CNK_VER_EXT, $r[\'user_html\']) === false) return false;\r\n	}\r\n	\r\n	safe_update(\'txp_page\', \"file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\", \'1=1\');\r\n	\r\n	return true;\r\n}\r\n\r\nfunction cnk_ver_pull_css()\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT_CSS;\r\n	\r\n	$rs = safe_rows_start(\'name, css\', \'txp_css\', \'1=1\');\r\n	\r\n	while ($rs && $r = nextRow($rs))\r\n	{\r\n		if (@file_put_contents(\'../\'.$CNK_VER_OUTPUT_PATH.\'css/\'.$r[\'name\'].\'.\'.$CNK_VER_EXT_CSS, $r[\'css\']) === false) return false;\r\n	}\r\n	\r\n	safe_update(\'txp_css\', \"file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\", \'1=1\');\r\n	\r\n	return true;\r\n}\r\n\r\nfunction cnk_ver_install()\r\n{\r\n	pagetop(\'Versioning Plugin Installation\', \'\');\r\n	\r\n	echo \'<div style=\"margin:auto; text-align:center\">\';\r\n	\r\n	if (cnk_ver_do_install())\r\n	{\r\n		echo \'<p>Installation was successful</p>\';\r\n	}\r\n	else\r\n	{\r\n		echo \'<p>Installation aborted</p>\';\r\n	}\r\n\r\n	echo \'</div>\';\r\n}\r\n\r\nfunction cnk_ver_do_install()\r\n{\r\n	$sql = \"ALTER TABLE \".safe_pfx(\'txp_form\').\" ADD `file_mod_time` DATETIME NULL;ALTER TABLE \".safe_pfx(\'txp_page\').\" ADD `file_mod_time` DATETIME NULL;ALTER TABLE \".safe_pfx(\'txp_css\').\" ADD `file_mod_time` DATETIME NULL\";\r\n	\r\n	if (!cnk_ver_batch_query($sql))\r\n	{\r\n		return false;\r\n	}\r\n	else\r\n	{	\r\n		return true;\r\n	}\r\n}\r\n\r\nfunction cnk_ver_deinstall()\r\n{\r\n	pagetop(\'Versioning Plugin Deinstallation\', \'\');\r\n	\r\n	echo \'<div style=\"margin:auto; text-align:center\">\';\r\n	\r\n	if (gps(\'do_deinstall\'))\r\n	{\r\n		if (cnk_ver_do_deinstall())\r\n		{\r\n			echo \'<p>Deinstallation was successful</p>\';\r\n		}\r\n		else\r\n		{\r\n			echo \'<p>Deinstallation aborted</p>\';\r\n		}\r\n	}\r\n	else\r\n	{\r\n		echo \'<a href=\"?event=cnk_versioning\'.a.\'step=cnk_ver_deinstall\'.a.\'do_deinstall=1\">Yes, I really want to deinstall</a>\';\r\n	}\r\n	\r\n	echo \'</div>\';\r\n}\r\n\r\nfunction cnk_ver_do_deinstall()\r\n{\r\n	$sql = \"ALTER TABLE \".safe_pfx(\'txp_form\').\" DROP `file_mod_time`;ALTER TABLE \".safe_pfx(\'txp_page\').\" DROP `file_mod_time`;ALTER TABLE \".safe_pfx(\'txp_css\').\" DROP `file_mod_time`;\";\r\n	\r\n	if (!cnk_ver_batch_query($sql))\r\n	{\r\n		return false;\r\n	}\r\n	else\r\n	{	\r\n		return true;\r\n	}\r\n}\r\n\r\nfunction cnk_ver_batch_query ($p_query, $p_transaction_safe = true) \r\n{\r\n	if ($p_transaction_safe) \r\n	{\r\n		$p_query = \'START TRANSACTION;\' . $p_query . \'; COMMIT;\';\r\n	}\r\n	  \r\n	$query_split = preg_split (\"/[;]+/\", $p_query);\r\n	\r\n	foreach ($query_split as $command_line) \r\n	{\r\n		$command_line = trim($command_line);\r\n	\r\n		if ($command_line != \'\') \r\n		{\r\n			$query_result = safe_query($command_line);\r\n		\r\n			if ($query_result === false) \r\n			{\r\n				break;\r\n			}\r\n		}\r\n	}\r\n	\r\n	return $query_result;\r\n}','if (!function_exists(\'file_put_contents\')) \r\n{\r\n    function file_put_contents($filename, $data) \r\n    {\r\n        $f = @fopen($filename, \'w\');\r\n        \r\n        if (!$f) \r\n        {\r\n            return false;\r\n        } \r\n        else \r\n        {\r\n            $bytes = fwrite($f, $data);\r\n            fclose($f);\r\n            return $bytes;\r\n        }\r\n    }\r\n}\r\n\r\nglobal $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT, $CNK_VER_EXT_CSS;\r\n\r\n$CNK_VER_OUTPUT_PATH = \'\'; //e.g. \'textpattern/_templates/versioning/\'\r\n$CNK_VER_EXT = \'txp\';\r\n$CNK_VER_EXT_CSS = \'css\';\r\n\r\n/*\r\n	DO NOT EDIT BELOW THIS LINE!\r\n*/\r\n\r\n$CNK_VER_OUTPUT_PATH = trim($CNK_VER_OUTPUT_PATH, \'/\').($CNK_VER_OUTPUT_PATH?\'/\':\'\');\r\n\r\nif(@txpinterface == \'admin\') \r\n{\r\n	add_privs(\'cnk_versioning\',\'1,2\');\r\n	register_tab(\'presentation\', \'cnk_versioning\', \"Versioning\");\r\n	register_callback(\'cnk_ver_handler\', \'cnk_versioning\');\r\n	register_callback(\'cnk_ver_disable_online_editing\', \'page\');\r\n	register_callback(\'cnk_ver_disable_online_editing\', \'form\');\r\n	register_callback(\'cnk_ver_disable_online_editing\', \'css\');\r\n}\r\nelse if (@txpinterface == \'public\')\r\n{\r\n	register_callback(\'cnk_ver_textpattern\', \'textpattern\');\r\n}\r\n\r\nfunction cnk_ver_textpattern()\r\n{\r\n	global $production_status, $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT, $CNK_VER_EXT_CSS;\r\n	\r\n	if ($production_status != \'live\')\r\n	{\r\n		$error = false;\r\n		\r\n		// read all files\r\n		$forms = glob($CNK_VER_OUTPUT_PATH.\'forms/*.\'.$CNK_VER_EXT);\r\n		$pages = glob($CNK_VER_OUTPUT_PATH.\'pages/*.\'.$CNK_VER_EXT);\r\n		$css = glob($CNK_VER_OUTPUT_PATH.\'css/*.\'.$CNK_VER_EXT_CSS);\r\n		\r\n		if ($forms !== false) $error = !cnk_ver_push_forms($forms);\r\n		if ($pages !== false) $error = !cnk_ver_push_pages($pages);\r\n		if ($css !== false) $error = !cnk_ver_push_css($css);\r\n		\r\n		if ($error) echo \'Errors while synchronising database and files\';\r\n	}\r\n}\r\n\r\nfunction cnk_ver_push_forms($form_files)\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT;\r\n	\r\n	$forms = array();\r\n\r\n	$rs = safe_rows_start(\'name,type,IFNULL(unix_timestamp(file_mod_time), 0) as mod_time\', \'txp_form\', \'1=1\');\r\n	\r\n	while ($rs && $r = nextRow($rs))\r\n	{\r\n		$forms[$CNK_VER_OUTPUT_PATH.\'forms/\'.$r[\'name\'].\'.\'.$r[\'type\'].\'.\'.$CNK_VER_EXT] = $r[\'mod_time\'];\r\n	}\r\n	\r\n	for ($i=0; $i < count($form_files); $i++)\r\n	{\r\n		if (isset($forms[$form_files[$i]]) && $forms[$form_files[$i]] < filemtime($form_files[$i]))\r\n		{\r\n			cnk_ver_update_form($form_files[$i]);\r\n		}\r\n		else if (!isset($forms[$form_files[$i]]))\r\n		{\r\n			cnk_ver_update_form($form_files[$i], true);\r\n		}\r\n		$forms[$form_files[$i]] = \'processed\';\r\n	}\r\n		\r\n	// delete removed forms\r\n	foreach ($forms as $key => $value)\r\n	{\r\n		if ($value != \'processed\')\r\n		{\r\n			$cols = explode(\'.\', basename($key, \'.\'.$CNK_VER_EXT));\r\n			$name = $cols[0];\r\n			$type = $cols[1];\r\n			\r\n			safe_delete(\'txp_form\', \"name = \'$name\' AND type = \'$type\'\");\r\n		}\r\n	}\r\n\r\n	return true;\r\n}\r\n\r\nfunction cnk_ver_update_form($filename, $create = false)\r\n{\r\n	global $CNK_VER_EXT;\r\n	\r\n	$cols = explode(\'.\', basename($filename, \'.\'.$CNK_VER_EXT));\r\n\r\n	$name = $cols[0];\r\n	$type = $cols[1];\r\n	$form = doSlash(file_get_contents($filename));\r\n	\r\n	if ($create)\r\n	{\r\n		safe_insert(\'txp_form\', \"name = \'$name\', type = \'$type\', form = \'$form\', file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\");\r\n	}\r\n	else\r\n	{\r\n		safe_update(\'txp_form\', \"form = \'$form\', file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\", \"name = \'$name\' AND type = \'$type\'\");\r\n	}\r\n}\r\n\r\nfunction cnk_ver_push_pages($page_files)\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT;\r\n	\r\n	$pages = array();\r\n\r\n	$rs = safe_rows_start(\'name,IFNULL(unix_timestamp(file_mod_time), 0) as mod_time\', \'txp_page\', \'1=1\');\r\n	\r\n	while ($rs && $r = nextRow($rs))\r\n	{\r\n		$pages[$CNK_VER_OUTPUT_PATH.\'pages/\'.$r[\'name\'].\'.\'.$CNK_VER_EXT] = $r[\'mod_time\'];\r\n	}\r\n	\r\n	for ($i=0; $i < count($page_files); $i++)\r\n	{\r\n		if (isset($pages[$page_files[$i]]) && $pages[$page_files[$i]] < filemtime($page_files[$i]))\r\n		{\r\n			cnk_ver_update_page($page_files[$i]);\r\n		}\r\n		else if (!isset($pages[$page_files[$i]]))\r\n		{\r\n			cnk_ver_update_page($page_files[$i], true);\r\n		}\r\n		$pages[$page_files[$i]] = \'processed\';\r\n	}\r\n		\r\n	// delete removed pages\r\n	foreach ($pages as $key => $value)\r\n	{\r\n		if ($value != \'processed\')\r\n		{\r\n			$name = basename($key, \'.\'.$CNK_VER_EXT);\r\n			\r\n			safe_delete(\'txp_page\', \"name = \'$name\'\");\r\n		}\r\n	}\r\n\r\n	return true;\r\n}\r\n\r\nfunction cnk_ver_update_page($filename, $create = false)\r\n{\r\n	global $CNK_VER_EXT;\r\n	\r\n	$name = basename($filename, \'.\'.$CNK_VER_EXT);\r\n	$user_html = doSlash(file_get_contents($filename));\r\n	\r\n	if ($create)\r\n	{\r\n		safe_insert(\'txp_page\', \"name = \'$name\', user_html = \'$user_html\', file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\");\r\n	}\r\n	else\r\n	{\r\n		safe_update(\'txp_page\', \"user_html = \'$user_html\', file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\", \"name = \'$name\'\");\r\n	}\r\n}\r\n\r\nfunction cnk_ver_push_css($css_files)\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT_CSS;\r\n	\r\n	$css = array();\r\n\r\n	$rs = safe_rows_start(\'name,IFNULL(unix_timestamp(file_mod_time), 0) as mod_time\', \'txp_css\', \'1=1\');\r\n	\r\n	while ($rs && $r = nextRow($rs))\r\n	{\r\n		$css[$CNK_VER_OUTPUT_PATH.\'css/\'.$r[\'name\'].\'.\'.$CNK_VER_EXT_CSS] = $r[\'mod_time\'];\r\n	}\r\n	\r\n	for ($i=0; $i < count($css_files); $i++)\r\n	{\r\n		if (isset($css[$css_files[$i]]) && $css[$css_files[$i]] < filemtime($css_files[$i]))\r\n		{\r\n			cnk_ver_update_css($css_files[$i]);\r\n		}\r\n		else if (!isset($css[$css_files[$i]]))\r\n		{\r\n			cnk_ver_update_css($css_files[$i], true);\r\n		}\r\n		$css[$css_files[$i]] = \'processed\';\r\n	}\r\n		\r\n	// delete removed css files\r\n	foreach ($css as $key => $value)\r\n	{\r\n		if ($value != \'processed\')\r\n		{\r\n			$name = basename($key, \'.\'.$CNK_VER_EXT_CSS);\r\n			\r\n			safe_delete(\'txp_css\', \"name = \'$name\'\");\r\n		}\r\n	}\r\n\r\n	return true;\r\n}\r\n\r\nfunction cnk_ver_update_css($filename, $create = false)\r\n{\r\n	global $CNK_VER_EXT_CSS;\r\n	\r\n	$name = basename($filename, \'.\'.$CNK_VER_EXT_CSS);\r\n	$css = doSlash(base64_encode(file_get_contents($filename)));\r\n	\r\n	if ($create)\r\n	{\r\n		safe_insert(\'txp_css\', \"name = \'$name\', css = \'$css\', file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\");\r\n	}\r\n	else\r\n	{\r\n		safe_update(\'txp_css\', \"css = \'$css\', file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\", \"name = \'$name\'\");\r\n	}\r\n}\r\n\r\nfunction cnk_ver_handler($event, $step)\r\n{\r\n	if(!$step or !in_array($step, array(\'cnk_ver_menu\',\r\n										\'cnk_ver_pull_all\',\r\n										\'cnk_ver_install\',\r\n										\'cnk_ver_deinstall\')))\r\n	{\r\n		cnk_ver_menu();\r\n	} \r\n	else\r\n	{\r\n		$step();\r\n	}\r\n}\r\n\r\nfunction cnk_ver_disable_online_editing($event, $step)\r\n{\r\n	// clear ob\r\n	ob_end_clean();\r\n	\r\n	// return error message\r\n	\r\n	pagetop(\'Versioning\');\r\n	\r\n	echo \'<div style=\"margin: auto; text-align: center\"><ul>\';\r\n	\r\n	echo \'While cnk_versioning is enabled, this function is disabled.\';\r\n	\r\n	echo \'</div>\';\r\n}\r\n\r\nfunction cnk_ver_menu($message = \'\')\r\n{\r\n	pagetop(\'Versioning\', $message);\r\n	\r\n	echo \'<div style=\"margin: auto; text-align: center\"><ul>\';\r\n	\r\n	echo \'<li><a href=\"?event=cnk_versioning\'.a.\'step=cnk_ver_pull_all\">Write pages & forms to files</a></li>\';\r\n	\r\n	echo \'</ul>\';\r\n	\r\n	echo \'<ul style=\"margin-top: 100px\">\';	\r\n	\r\n	echo \'<li><a href=\"?event=cnk_versioning\'.a.\'step=cnk_ver_install\">Install</a></li>\';\r\n	\r\n	echo \'<li><a href=\"?event=cnk_versioning\'.a.\'step=cnk_ver_deinstall\">Deinstall</a></li>\';\r\n\r\n	echo \'</ul>\';\r\n	\r\n	echo \'</div>\';\r\n}\r\n\r\nfunction cnk_ver_pull_all()\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT, $CNK_VER_EXT_CSS;\r\n	\r\n	pagetop(\'Write to files\', \'\');\r\n	\r\n	echo \'<div style=\"margin: auto; text-align: center\">\';\r\n				\r\n	if (gps(\'do_pull\') || (glob(\'../\'.$CNK_VER_OUTPUT_PATH.\'pages/*.\'.$CNK_VER_EXT) === false && glob(\'../\'.$CNK_VER_OUTPUT_PATH.\'forms/*.\'.$CNK_VER_EXT) === false && glob(\'../\'.$CNK_VER_OUTPUT_PATH.\'css/*.\'.$CNK_VER_EXT_CSS) === false))\r\n	{\r\n		$error = false;\r\n		\r\n		// test if folders exist and have write permissions\r\n		if (@is_writable(\'../\'.$CNK_VER_OUTPUT_PATH.\'forms/\') === false)\r\n		{\r\n			$error = true;\r\n			echo \'Folder \"/forms/\" is not writable.<br /><br />\';\r\n		}\r\n		\r\n		if (@is_writable(\'../\'.$CNK_VER_OUTPUT_PATH.\'pages/\') === false)\r\n		{\r\n			$error = true;\r\n			echo \'Folder \"/pages/\" is not writable.<br /><br />\';\r\n		}\r\n		\r\n		if (@is_writable(\'../\'.$CNK_VER_OUTPUT_PATH.\'css/\') === false)\r\n		{\r\n			$error = true;\r\n			echo \'Folder \"/css/\" is not writable.\';\r\n		}\r\n		\r\n		if (!$error)\r\n		{\r\n				if (cnk_ver_pull_forms())\r\n				{\r\n					echo \'Forms were successfully written to the \"/forms/\" directory.<br /><br />\';\r\n				}\r\n				else\r\n				{\r\n					echo \'There was an error while processing forms.<br /><br />\';\r\n				}\r\n				\r\n				if (cnk_ver_pull_pages())\r\n				{\r\n					echo \'Pages were successfully written to the \"/pages/\" directory.<br /><br />\';\r\n				}\r\n				else\r\n				{\r\n					echo \'There was an error while processing pages.<br /><br />\';\r\n				}\r\n				\r\n				if (cnk_ver_pull_css())\r\n				{\r\n					echo \'Styles were successfully written to the \"/css/\" directory.\';\r\n				}\r\n				else\r\n				{\r\n					echo \'There was an error while processing css.\';\r\n				}\r\n		}\r\n		\r\n		echo \'<br /><br /><a href=\"?event=cnk_versioning\">Back to menu...</a>\';\r\n	}\r\n	else\r\n	{\r\n		echo \'There are already some files in the pages, forms or css directory, which will be overriden. Do you want to continue?<br /><br />\'.\r\n		\r\n		\'<a href=\"?event=cnk_versioning\'.a.\'step=cnk_ver_pull_all\'.a.\'do_pull=1\">Yes, overwrite existing files...</a><br /><br />\'.\r\n		\r\n		\'<a href=\"?event=cnk_versioning\">No, bring me back to the menu...</a>\';\r\n	}\r\n	\r\n	echo \'</div>\';\r\n}\r\n\r\nfunction cnk_ver_pull_forms()\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT;\r\n	\r\n	$rs = safe_rows_start(\'name, type, form\', \'txp_form\', \'1=1\');\r\n	\r\n	while ($rs && $r = nextRow($rs))\r\n	{\r\n		if (@file_put_contents(\'../\'.$CNK_VER_OUTPUT_PATH.\'forms/\'.$r[\'name\'].\'.\'.$r[\'type\'].\'.\'.$CNK_VER_EXT, $r[\'form\']) === false) return false;\r\n	}\r\n	\r\n	safe_update(\'txp_form\', \"file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\", \'1=1\');\r\n	\r\n	return true;\r\n}\r\n\r\nfunction cnk_ver_pull_pages()\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT;\r\n	\r\n	$rs = safe_rows_start(\'name, user_html\', \'txp_page\', \'1=1\');\r\n	\r\n	while ($rs && $r = nextRow($rs))\r\n	{\r\n		if (@file_put_contents(\'../\'.$CNK_VER_OUTPUT_PATH.\'pages/\'.$r[\'name\'].\'.\'.$CNK_VER_EXT, $r[\'user_html\']) === false) return false;\r\n	}\r\n	\r\n	safe_update(\'txp_page\', \"file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\", \'1=1\');\r\n	\r\n	return true;\r\n}\r\n\r\nfunction cnk_ver_pull_css()\r\n{\r\n	global $CNK_VER_OUTPUT_PATH, $CNK_VER_EXT_CSS;\r\n	\r\n	$rs = safe_rows_start(\'name, css\', \'txp_css\', \'1=1\');\r\n	\r\n	while ($rs && $r = nextRow($rs))\r\n	{\r\n		if (@file_put_contents(\'../\'.$CNK_VER_OUTPUT_PATH.\'css/\'.$r[\'name\'].\'.\'.$CNK_VER_EXT_CSS, base64_decode($r[\'css\'])) === false) return false;\r\n	}\r\n	\r\n	safe_update(\'txp_css\', \"file_mod_time = FROM_UNIXTIME(\'\".time().\"\')\", \'1=1\');\r\n	\r\n	return true;\r\n}\r\n\r\nfunction cnk_ver_install()\r\n{\r\n	pagetop(\'Versioning Plugin Installation\', \'\');\r\n	\r\n	echo \'<div style=\"margin:auto; text-align:center\">\';\r\n	\r\n	if (cnk_ver_do_install())\r\n	{\r\n		echo \'<p>Installation was successful</p>\';\r\n	}\r\n	else\r\n	{\r\n		echo \'<p>Installation aborted</p>\';\r\n	}\r\n\r\n	echo \'</div>\';\r\n}\r\n\r\nfunction cnk_ver_do_install()\r\n{\r\n	$sql = \"ALTER TABLE \".safe_pfx(\'txp_form\').\" ADD `file_mod_time` DATETIME NULL;ALTER TABLE \".safe_pfx(\'txp_page\').\" ADD `file_mod_time` DATETIME NULL;ALTER TABLE \".safe_pfx(\'txp_css\').\" ADD `file_mod_time` DATETIME NULL\";\r\n	\r\n	if (!cnk_ver_batch_query($sql))\r\n	{\r\n		return false;\r\n	}\r\n	else\r\n	{	\r\n		return true;\r\n	}\r\n}\r\n\r\nfunction cnk_ver_deinstall()\r\n{\r\n	pagetop(\'Versioning Plugin Deinstallation\', \'\');\r\n	\r\n	echo \'<div style=\"margin:auto; text-align:center\">\';\r\n	\r\n	if (gps(\'do_deinstall\'))\r\n	{\r\n		if (cnk_ver_do_deinstall())\r\n		{\r\n			echo \'<p>Deinstallation was successful</p>\';\r\n		}\r\n		else\r\n		{\r\n			echo \'<p>Deinstallation aborted</p>\';\r\n		}\r\n	}\r\n	else\r\n	{\r\n		echo \'<a href=\"?event=cnk_versioning\'.a.\'step=cnk_ver_deinstall\'.a.\'do_deinstall=1\">Yes, I really want to deinstall</a>\';\r\n	}\r\n	\r\n	echo \'</div>\';\r\n}\r\n\r\nfunction cnk_ver_do_deinstall()\r\n{\r\n	$sql = \"ALTER TABLE \".safe_pfx(\'txp_form\').\" DROP `file_mod_time`;ALTER TABLE \".safe_pfx(\'txp_page\').\" DROP `file_mod_time`;ALTER TABLE \".safe_pfx(\'txp_css\').\" DROP `file_mod_time`;\";\r\n	\r\n	if (!cnk_ver_batch_query($sql))\r\n	{\r\n		return false;\r\n	}\r\n	else\r\n	{	\r\n		return true;\r\n	}\r\n}\r\n\r\nfunction cnk_ver_batch_query ($p_query, $p_transaction_safe = true) \r\n{\r\n	if ($p_transaction_safe) \r\n	{\r\n		$p_query = \'START TRANSACTION;\' . $p_query . \'; COMMIT;\';\r\n	}\r\n	  \r\n	$query_split = preg_split (\"/[;]+/\", $p_query);\r\n	\r\n	foreach ($query_split as $command_line) \r\n	{\r\n		$command_line = trim($command_line);\r\n	\r\n		if ($command_line != \'\') \r\n		{\r\n			$query_result = safe_query($command_line);\r\n		\r\n			if ($query_result === false) \r\n			{\r\n				break;\r\n			}\r\n		}\r\n	}\r\n	\r\n	return $query_result;\r\n}','c8c17ad5bb8b71a4dc2161e160d154f5',1,5,0),
	('smd_wrap',1,'Stef Dawson','http://stefdawson.com/','0.10','Conditionally transform and wrap stuff with tags and labels','<div id=\"smd_help\">\n\n	<h1>smd_wrap</h1>\n\n	<p>Wrap text with <span class=\"caps\">HTML</span>, class, prefix, suffix, and apply tranforms to it in the process (linkify, format as date, trim, escape, sanitize, etc).</p>\n\n	<p>If the item you are intending to wrap is empty / non-existent then no wrap is applied and nothing is displayed. This makes it an ideal candidate for placing around other tags and saves having to do the &#8220;assign content to <code>&lt;txp:variable&gt;</code>, check if variable exists&#8221; dance. <code>&lt;txp:else /&gt;</code> is supported so you may take action if the contained content is empty.</p>\n\n	<h2>Author / credits</h2>\n\n	<p>Written by <a href=\"http://stefdawson.com/contact\">Stef Dawson</a>. Thanks to the jakob for making a business case for creating this plugin, and of course the adi_wrap plugin for inspiration.</p>\n\n	<h2>Installation / uninstallation</h2>\n\n	<p>Download the plugin from either <a href=\"http://textpattern.org/plugins/1242/smd_wrap\">textpattern.org</a>, or the <a href=\"http://stefdawson.com/sw\">software page</a>, paste the code into the <span class=\"caps\">TXP</span> <em>Admin-&gt;Plugins</em> pane, install and enable the plugin.</p>\n\n	<p>To uninstall the plugin, simply delete the plugin from the <em>Admin-&gt;Plugins</em> page</p>\n\n	<p>Visit the <a href=\"http://forum.textpattern.com/viewtopic.php?id=37167\">forum thread</a> for more info or to report on the success or otherwise of the plugin.</p>\n\n	<h2>Tag: <code>&lt;txp:smd_wrap&gt;</code></h2>\n\n	<p>Wrap the <code>item</code> or tag&#8217;s container with standard Txp <code>wraptag</code> paraphernalia. The content is parsed so you can include other Txp tags. If the results of the parse return nothing, the plugin does nothing, though you may fire an optional <code>&lt;txp:else /&gt;</code> if you wish. The following attributes configure the plugin:</p>\n\n	<dl>\n		<dt><strong>item</strong></dt>\n		<dd>The thing to wrap. Can be text, a tag-in-tag or some <code>{replacement}</code> from other smd_ plugins. If not specifed, the container is used as input.</dd>\n		<dt><strong>wraptag</strong></dt>\n		<dd>Wrap this <span class=\"caps\">HTML</span> tag around the item. Specify it without angle brackets, e.g. <code>wraptag=&quot;span&quot;</code></dd>\n		<dt><strong>class</strong></dt>\n		<dd>Assign this <span class=\"caps\">CSS</span> class to the wraptag. Unused if <code>wraptag</code> is empty.</dd>\n		<dt><strong>html_id</strong></dt>\n		<dd>Assign this <span class=\"caps\">HTML</span> <code>id</code> value to the wraptag. Unused if <code>wraptag</code> is empty.</dd>\n		<dt><strong>attr</strong></dt>\n		<dd>Supply your own name=value pairs to add to the wraptag. For example, <code>attr=&quot;rel|external, title|My useful popup title&quot;</code> would add <code>rel=&quot;external&quot; title=&quot;My useful popup title&quot;</code> as attributes to the wraptag.</dd>\n		<dt><strong>label</strong></dt>\n		<dd>Put this text as a heading / label before the item.</dd>\n		<dt><strong>labeltag</strong></dt>\n		<dd>Wrap the label with this <span class=\"caps\">HTML</span> tag. Specify without angle brackets, e.g. <code>labeltag=&quot;h4&quot;</code></dd>\n		<dt><strong>trim</strong></dt>\n		<dd>Strip leading and trailing whitespace from the item <em>before</em> it has prefix and suffix applied. Use <code>trim=&quot;0&quot;</code> to turn this feature off.</dd>\n		<dd>Default: 1</dd>\n		<dt><strong>prefix</strong></dt>\n		<dd>Put this text before the item. It is prepended <em>prior</em> to the item being passed through any <code>transform</code> chain.</dd>\n		<dt><strong>suffix</strong></dt>\n		<dd>Put this text after the item. It is appended <em>prior</em> to the item being passed through any <code>transform</code> chain.</dd>\n		<dt><strong>transform</strong></dt>\n		<dd>Apply transformations to the item. Transforms can be chained and are applied in order, each one separated by <code>delim</code>. Transform arguments are separated by <code>param_delim</code>. The following transforms are defined (see the <a href=\"#smd_wrap_eg\">examples</a> for more information) :\n	<dl>\n		<dd><strong>add</strong> &#8212; append some text to the item. This is <em>not</em> the same as using prefix / suffix because the <code>add</code> transform can be inserted into the chain at any point. Use the second argument to determine in which position to add the new text; the text itself is the third argument. Here are the positional options:\n	<dl>\n		<dd><strong>before</strong> &#8212; add the text at the start of the item.</dd>\n		<dd><strong>after</strong> &#8212; add the text at the end of the item.</dd>\n		<dd><strong>both</strong> &#8212; add the text at both start and end of the item.</dd>\n	</dl></dd>\n		<dd><strong>case</strong> &#8212; change the case of the item. You may chain case transforms in sequence, e.g. <code>transform=&quot;case|lower|ucfirst&quot;</code>. Choose from:\n	<dl>\n		<dd><strong>upper</strong> &#8212; upper case.</dd>\n		<dd><strong>lower</strong> &#8212; lower case.</dd>\n		<dd><strong>ucfirst</strong> &#8212; upper case first character of sentence.</dd>\n		<dd><strong>ucwords</strong> &#8212; upper case first character of every word.</dd>\n		<dd><strong>title</strong> &#8212; intelligent(ish) version of ucwords that ignores small words and tries to leave intentional first-lower-case words (e.g. iPhone) alone. Works best on English but does support Unicode up to a point. You can specify your own list of words by creating a hidden pref called <strong>smd_wrap_small_words</strong>. List each word separated by a pipe. You may use regex strings if you wish but <em>no sanitization is done</em> so be careful! The default list of ignored short words are: <code>a|an|and|as|at|but|by|en|for|if|in|of|on|or|the|to|vs?[.]?|via</code></dd>\n	</dl></dd>\n		<dd><strong>date</strong> &#8212; treat the item as a date and format it according to the <a href=\"http://php.net/manual/en/function.strftime.php\">strftime()</a> compatible string given as the first argument. The item can either be a numeric (<span class=\"caps\">UNIX</span>) timestamp or an <em>English</em> date string in an acceptable format. For datetime fields you could split the string first just to get the date portion.</dd>\n		<dd><strong>escape</strong> &#8212; run the item through <code>htmlspecialchars()</code>. Use additional parameters to list optional <a href=\"http://php.net/manual/en/function.htmlspecialchars.php\">flags</a> or use any of the following special values:\n	<dl>\n		<dd><strong>no_quotes</strong> &#8212; <code>ENT_NOQUOTES</code></dd>\n		<dd><strong>double_quotes</strong> &#8212; <code>ENT_COMPAT</code></dd>\n		<dd><strong>all_quotes</strong> &#8212; <code>ENT_QUOTES</code></dd>\n	</dl></dd>\n		<dd><strong>fordb</strong> &#8212; run the item through Txp&#8217;s <code>doSlash()</code>. Always consider using this if you are posting the item back to the database (beware that other plugins may do this for you, so be careful not to duplicate it or you&#8217;ll get backslashes where there shouldn&#8217;t be backslashes).</dd>\n		<dd><strong>form</strong> &#8212; pass the item through the nominated forms. Specify each form as an argument, and inside those forms place <code>{smd_wrap_it}</code> where you wish the item to be inserted.</dd>\n		<dd><strong>link</strong> &#8212; turn the item into a clickable <span class=\"caps\">URL</span> anchor. Without an argument, the link text will be the link itself. If you specify an argument, the link text will be set to whatever you choose.</dd>\n		<dd><strong>no_widow</strong> &#8212; whether to allow the last word of the item to word-wrap to the next line. If you specify 0 as the argument, word-wrap will be allowed. Specifying 1 means the last word will never be allowed to wrap on its own. Without an argument, the Advanced Pref determines the behaviour.</dd>\n		<dd><strong>replace</strong> &#8212; find a string or regex and replace it with something else. Additional parameters are:\n	<dl>\n		<dd>1: <strong>type</strong> either <code>string</code> (or omitted) for a regular replace, or <code>regex</code> for a regular expression</dd>\n		<dd>2: <strong>from</strong> the string to search for. If using a regex, you <span class=\"caps\">MUST</span> specify the regular expression delimiters as well or you&#8217;ll get an error</dd>\n		<dd>3: <strong>to</strong> the text with which to replace any found strings. If omited, the found strings will simply be removed</dd>\n	</dl></dd>\n		<dd><strong>sanitize</strong> &#8212; clean the item either for:\n	<dl>\n		<dd><strong>url</strong> &#8212; address bar use.</dd>\n		<dd><strong>file</strong> &#8212; filename use.</dd>\n		<dd><strong>url_title</strong> &#8212; use as a <span class=\"caps\">URL</span> title.</dd>\n	</dl></dd>\n		<dd><strong>split</strong> &#8212; split the item at the given character(s) and return one or more parts, optionally joined by the given characters. Arguments:\n	<dl>\n		<dd>1: <strong>split character(s)</strong></dd>\n		<dd>2: <strong>join character(s)</strong></dd>\n		<dd>3+: which pieces to return, each separated by <code>param_delim</code>. You can either use numeric indices to specify discrete parts, e.g. <code>1|4</code> returns the first and 4th parts. You can specify negative numbers to get parts starting from the end, e.g. <code>-1|-2</code> returns the last and penultimate elements. <code>last</code> is a synonym for <code>-1</code>, <code>all</code> returns every piece, and <code>rand</code> chooses one piece at random. In addition you can also use greater-than and less-than symbols before a value to only return elements  higher or lower than the given value, e.g. <code>&gt;2</code> returns the 3rd, 4th, 5th,&#8230; elements. See <a href=\"#smd_wrap_eg3\">example 3</a> for details.</dd>\n	</dl></dd>\n		<dd><strong>strip_tags</strong> &#8212; remove all <span class=\"caps\">HTML</span> / <span class=\"caps\">PHP</span> tags from the item.</dd>\n		<dd><strong>textile</strong> &#8212; pass the item through the Textile processor.</dd>\n		<dd><strong>trim</strong> &#8212; remove leading and trailing characters from the item. Specify a list of characters as the argument. Without an argument, whitespace will be removed.</dd>\n	</dl></dd>\n		<dt><strong>delim</strong></dt>\n		<dd>The plugin delimiter.</dd>\n		<dd>Default: comma (,)</dd>\n		<dt><strong>param_delim</strong></dt>\n		<dd>The argument delimiter.</dd>\n		<dd>Default: pipe (|)</dd>\n		<dt><strong>debug</strong></dt>\n		<dd>Display the item the tag is trying to wrap.</dd>\n	</dl>\n\n	<h2 id=\"smd_wrap_eg\">Examples</h2>\n\n	<h3 id=\"smd_wrap_eg1\">Example 1: Link anchor</h3>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:variable name=&quot;wiki&quot; value=&quot;http://textpattern.net/wiki&quot; /&gt;\n&lt;txp:smd_wrap wraptag=&quot;div&quot; class=&quot;external&quot;\n     transform=&quot;link|Textpattern documentation&quot;&gt;\n   &lt;txp:variable name=&quot;wiki&quot; /&gt;\n&lt;/txp:smd_wrap&gt;\n</code></pre>\n\n	<h3 id=\"smd_wrap_eg2\">Example 2: Date formatting</h3>\n\n	<p>Notice that because we&#8217;re using a comma in the formatted string, the <code>delim</code> needs to be altered to some other (in this case arbitrary) string:</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_wrap delim=&quot;@&quot;\n     transform=&quot;date|%A, %d %B, %Y %l:%M%p&quot;&gt;\n2011-9-12 05:30:00\n&lt;/txp:smd_wrap&gt;\n</code></pre>\n\n	<h3 id=\"smd_wrap_eg3\">Example 3: Split and join</h3>\n\n	<p>Return a filename extension. Notice no join character is specified in the third argument (although it doesn&#8217;t hurt to include one; it won&#8217;t be used in this case):</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_wrap transform=&quot;split|.||last&quot;\n     item=&quot;/path/to/some/really.big.file.name.jpg&quot; /&gt;\n</code></pre>\n\n	<p>Return the file path and filename extension, separated by colon (<code>last</code> is the same as <code>-1</code>) :</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_wrap transform=&quot;split|.|:|1|-1&quot;&gt;\n/path/to/some/really.big.file.name.jpg\n&lt;/txp:smd_wrap&gt;\n</code></pre>\n\n	<p>Split the date portion of a combined datetime and format it:</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_wrap delim=&quot;@&quot;\n     transform=&quot;split| ||1 @ date|%A, %d %B, %Y&quot;&gt;\n2011-9-12 05:30:00\n&lt;/txp:smd_wrap&gt;\n</code></pre>\n\n	<p>Make an <span class=\"caps\">HTML</span> list from some other markup system:</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_wrap wraptag=&quot;ul&quot;\n     transform=&quot;split|#|&lt;/li&gt;&lt;li&gt;|&gt;1, add|before|&lt;li&gt;, add|after|&lt;/li&gt;&quot;&gt;\n# First\n# Second\n# Third\n# Fourth\n&lt;/txp:smd_wrap&gt;\n</code></pre>\n\n	<p>A couple of things to note about this example:</p>\n\n	<ul>\n		<li>The <code>add</code> transform is used instead of prefix / suffix. This is because the latter pair become part of the item/container and are then split with the <code>transform</code> attribute. In this case we need to add the opening and closing tags afterwards.</li>\n		<li>Splitting at &#8216;#&#8217; renders an empty element before the &#8220;First&#8221; entry, so the transform is instructed to return items <code>&gt;1</code>.</li>\n	</ul>\n\n	<h3 id=\"smd_wrap_eg4\">Example 4: with smd_query {replacements}</h3>\n\n	<p>Wrap the custom_6 value with a div and sanitize it for use in a <span class=\"caps\">URL</span>. If custom_6 is empty, nothing would be displayed.</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query query=&quot;SELECT * FROM wherever&quot;&gt;\n   &lt;txp:smd_wrap item=&quot;{custom_6}&quot; wraptag=&quot;div&quot;\n     transform=&quot;sanitize|url&quot; /&gt;\n&lt;/txp:smd_query&gt;\n</code></pre>\n\n	<p>If you wanted to trap the condition when custom_6 might be empty:</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query query=&quot;SELECT * FROM wherever&quot;&gt;\n   &lt;txp:smd_wrap wraptag=&quot;div&quot; transform=&quot;sanitize|url&quot;&gt;\n      {custom_6}\n   &lt;txp:else /&gt;\n      &lt;p&gt;Sorry, custom_6 is empty&lt;/p&gt;\n   &lt;/txp:smd_wrap&gt;\n&lt;/txp:smd_query&gt;\n</code></pre>\n\n	<h3 id=\"smd_wrap_eg5\">Example 5: find / replace</h3>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_wrap\n     transform=&quot;replace||fox|badger&quot;&gt;\nFarewell my fox, it&#39;s been fun!\n&lt;/txp:smd_wrap&gt;\n</code></pre>\n\n	<p>Note that the 2nd parameter (&#8216;type&#8217;) has been omitted. You could specify &#8216;string&#8217; here if you wished.</p>\n\n	<h2>Changelog</h2>\n\n	<p>22 Nov 2011 | 0.10 | Initial release</p>\n\n</div>\n<!-- *** BEGIN PLUGIN CSS *** -->\n<style type=\"text/css\">\n#smd_help { line-height:1.5 ;}\n#smd_help code { font-weight:bold; font: 105%/130% \"Courier New\", courier, monospace; background-color: #f0e68c; color:#333; }\n#smd_help code.block { font-weight:normal; border:1px dotted #999; display:block; margin:10px 10px 20px; padding:10px; }\n#smd_help h1 { font: 22px Georgia, serif; margin: 0; text-align: center; }\n#smd_help h2 { border-bottom: 1px solid black; padding:10px 0 0; font: 18px Georgia, serif; }\n#smd_help h3 { font: bold 13px Georgia, serif; letter-spacing: 1px; margin: 20px 0 0; text-decoration:underline; }\n#smd_help h4 { font: bold 12px Georgia, serif; letter-spacing: 1px; margin: 10px 0 0; text-transform: uppercase; }\n#smd_help .atnm { font-weight:bold; }\n#smd_help .mand { background:#eee; border:1px dotted #999; }\n#smd_help table { width:90%; text-align:center; padding-bottom:1em; border-collapse:collapse; }\n#smd_help td, #smd_help th { border:1px solid #999; padding:.5em; }\n#smd_help ul { list-style-type:square; }\n#smd_help .important { color:red; }\n#smd_help li { margin:5px 20px 5px 30px; }\n#smd_help .break { margin-top:5px; }\n#smd_help dl dd { margin:2px 15px; }\n#smd_help dl dd:before { content: \"\\2022\\00a0\"; }\n#smd_help dl dd dl { padding: 0 15px; }\n</style>\n<!-- *** END PLUGIN CSS *** -->\n','/**\r\n * smd_wrap\r\n *\r\n * A Textpattern CMS plugin for wrapping content with HTML tags, labels and attributes.\r\n *  -> Adds wraptag / class / html_id / label support round any tag\r\n *  -> Permits a range of formatting options for manipulating the item\r\n *     (e.g. trim, escape, sanitize, change case, linkify, format date,\r\n *     strip tags, split / combine, process with textile, etc).\r\n *  -> If the content is empty, nothing is displayed.\r\n *  -> Supports <txp:else />\r\n *\r\n * @author Stef Dawson\r\n * @link   http://stefdawson.com/\r\n */\r\n\r\n// TODO:\r\n// * Allow hidden pref to determine default transforms?\r\n\r\nfunction smd_wrap($atts, $thing=NULL) {\r\n	global $prefs;\r\n\r\n	extract(lAtts(array(\r\n		\'item\'        => \'\',\r\n		\'wraptag\'     => \'\',\r\n		\'class\'       => \'\',\r\n		\'html_id\'     => \'\',\r\n		\'label\'       => \'\',\r\n		\'labeltag\'    => \'\',\r\n		\'attr\'        => \'\',\r\n		\'prefix\'      => \'\',\r\n		\'suffix\'      => \'\',\r\n		\'format\'      => \'\', // convenience only: same as transform\r\n		\'transform\'   => \'\',\r\n		\'delim\'       => \',\',\r\n		\'param_delim\' => \'|\',\r\n		\'trim\'        => 1,\r\n		\'debug\'       => 0,\r\n	),$atts));\r\n\r\n	// item attribute trumps container\r\n	$thing = ($item) ? $item : $thing;\r\n	$out = \'\';\r\n\r\n	if ($format) {\r\n		trigger_error(\"smd_wrap: format attribute deprecated: use transform attribute instead.\", E_USER_NOTICE);\r\n		$transform = $format;\r\n	}\r\n\r\n	// Grab the true portion of any container\r\n	$truePart = EvalElse($thing, 1);\r\n\r\n	if ($debug) {\r\n		echo \'++ TO WRAP ++\';\r\n		dmp($item);\r\n	}\r\n\r\n	if ($thing) {\r\n		// Handle custom attributes\r\n		if ($attr) {\r\n			$custom_atts = array();\r\n			$attribs = do_list($attr);\r\n			foreach($attribs as $attdef) {\r\n				list($key, $val) = do_list($attdef, $param_delim);\r\n				$custom_atts[] = $key . \'=\"\' . $val . \'\"\';\r\n			}\r\n			$attr = \' \' . join(\' \', $custom_atts);\r\n		}\r\n\r\n		// Run the Txp parser first\r\n		$out = parse($truePart);\r\n		$out = $trim ? trim($out) : $out;\r\n\r\n		if ($out) {\r\n			// Top and tail the output\r\n			$out = $prefix.$out.$suffix;\r\n\r\n			// Reformat the item with any of the following transformations, in the supplied order\r\n			if ($transform) {\r\n				$formats = do_list($transform, $delim);\r\n				foreach ($formats as $xformlist) {\r\n					// Use explode() because do_list() performs a trim() that we don\'t want\r\n					$xform = explode($param_delim, $xformlist);\r\n					$xtype = array_shift($xform);\r\n\r\n					switch ($xtype) {\r\n						case \'add\':\r\n							$pos = array_shift($xform);\r\n							$val = $xform[0];\r\n							$out = (($pos == \'before\' || $pos == \'both\') ? $val : \'\') . $out . (($pos == \'after\' || $pos == \'both\') ? $val : \'\');\r\n						break;\r\n						case \'case\':\r\n							foreach ($xform as $arg) {\r\n								if ($arg == \"upper\") {\r\n									$out = strtoupper($out);\r\n								} else if ($arg == \"lower\") {\r\n									$out = strtolower($out);\r\n								} else if ($arg == \"ucfirst\") {\r\n									$out = ucfirst($out);\r\n								} else if ($arg == \"ucwords\") {\r\n									$out = ucwords($out);\r\n								} else if ($arg == \"title\") {\r\n									// Inelegantly ported + extended for Unicode from David Gouch\'s JS title case script: thanks\r\n									// http://individed.com/code/to-title-case/js/to-title-case.js\r\n									$has_unicode = @preg_match(\'/\\pL/u\', \'a\');\r\n\r\n									$az = ($has_unicode) ? \'\\p{Lu}\' : \'A-Z\';\r\n									$wrd = ($has_unicode) ? \'(?:\\p{L}|\\p{M}|\\p{N}|\\p{Pc})\' : \'\\w\';\r\n									$capsre = \'/[\' . $az . \']+|&|[\' . $wrd . \']+[._][\' . $wrd . \']+/\';\r\n\r\n									$smalls = get_pref(\'smd_wrap_small_words\', \'a(nd?|s|t)?|b(ut|y)|en|for|i[fn]|o[fnr]|t(he|o)|vs?\\.?|via\');\r\n									$smallre = \'/^(\' . $smalls . \')[ \\-]/i\';\r\n\r\n									$pat = \'/([\' . $wrd . \'&`\\\'‘’\"“.@:\\/\\{\\(\\[<>_]+-? *)/\';\r\n									$ret = array();\r\n									preg_match_all($pat, $out, $matches, PREG_PATTERN_ORDER|PREG_OFFSET_CAPTURE);\r\n\r\n									foreach ($matches[0] as $it) {\r\n										$match = $it[0];\r\n										$index = $it[1];\r\n										$idxm2 = $index - 2;\r\n										$length = strlen($match);\r\n										$title = $out; // Copy the original since we\'re working on $out directly\r\n\r\n										// Fudge because substr with negative start counts from end of string in PHP\r\n										$idxm1 = (($index-1) < 0) ? 0 : $index - 1;\r\n										$offset = (($index-1) < 0) ? 1 : 2;\r\n\r\n										if ($index > 0\r\n											&& ( $title{$idxm2} !== \":\" )\r\n											&& ( preg_match($smallre, $match) > 0 )\r\n										) {\r\n											$out = substr($out, 0, $index) . strtolower($match) . substr($out, $index+$length);\r\n											continue;\r\n										}\r\n										if (preg_match(\'/[\\\'\\\"_{(\\[]/\', substr($title, $idxm1, $offset)) > 0) {\r\n											$out = substr($out, 0, $index) . $match{0} . @strtoupper($match{1}) . substr($match, 2). substr($out, $index+$length);\r\n											continue;\r\n										}\r\n										if (\r\n											( preg_match($capsre, substr($match, 1)) > 0 )\r\n											|| ( preg_match(\'/[\\])}]/\', substr($title, $idxm1, $offset)) > 0 )\r\n										) {\r\n											$out = substr($out, 0, $index) . $match . substr($out, $index+$length);\r\n											continue;\r\n										}\r\n										$out = substr($out, 0, $index) . strtoupper($match{0}) . substr($match, 1) . substr($out, $index+$length);\r\n									}\r\n								}\r\n							}\r\n						break;\r\n						case \'date\':\r\n							$nd = (is_numeric($out)) ? $out : strtotime($out);\r\n							if ($nd !== false) {\r\n								$out = strftime($xform[0], $nd);\r\n							}\r\n						break;\r\n						case \'escape\':\r\n							$flags = 0;\r\n							foreach ($xform as $arg) {\r\n								switch ($arg) {\r\n									case \'no_quotes\':\r\n										$flags |= ENT_NOQUOTES;\r\n									break;\r\n									case \'all_quotes\':\r\n										$flags |= ENT_QUOTES;\r\n									break;\r\n									case \'double_quotes\':\r\n										$flags |= ENT_COMPAT;\r\n									break;\r\n									default:\r\n										$flags |= $arg;\r\n									break;\r\n								}\r\n							}\r\n							$out = htmlspecialchars($out, $flags);\r\n						break;\r\n						case \'fordb\':\r\n							$out = doSlash($out);\r\n						break;\r\n						case \'form\':\r\n							foreach ($xform as $arg) {\r\n								$content = fetch_form($arg);\r\n								$reps = array(\r\n									\'{smd_wrap_it}\' => $out,\r\n								);\r\n								$out = parse(strtr($content, $reps));\r\n							}\r\n						break;\r\n						case \'link\':\r\n							// From http://codesnippets.joyent.com/posts/show/2104\r\n							$pat = \"@\\b(https?://)?(([0-9a-zA-Z_!~*\'().&=+$%-]+:)?[0-9a-zA-Z_!~*\'().&=+$%-]+\\@)?(([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-zA-Z_!~*\'()-]+\\.)*([0-9a-zA-Z][0-9a-zA-Z-]{0,61})?[0-9a-zA-Z]\\.[a-zA-Z]{2,6})(:[0-9]{1,4})?((/[0-9a-zA-Z_!~*\'().;?:\\@&=+$,%#-]+)*/?)@\";\r\n							$text = (isset($xform[0]) && $xform[0] != \'\') ? $xform[0] : \'$0\';\r\n							$out = preg_replace($pat, \'<a href=\"$0\">\'.$text.\'</a>\', $out);\r\n						break;\r\n						case \'no_widow\':\r\n							$no_widow = isset($xform[0]) ? $xform[0] : @$prefs[\'title_no_widow\'];\r\n							$out = ($no_widow) ? noWidow($out) : $out;\r\n						break;\r\n						case \'replace\':\r\n							$type = $xform[0] ? $xform[0] : \'string\'; // string / regex\r\n							$from = $xform[1];\r\n							$to = isset($xform[2]) ? $xform[2] : \'\';\r\n							$out = ($type==\'regex\') ? preg_replace($from, $to, $out) : str_replace($from, $to, $out);\r\n						break;\r\n						case \'sanitize\':\r\n							if ($xform[0] == \"url\") {\r\n								$out = sanitizeForUrl($out);\r\n							} else if ($xform[0] == \"file\") {\r\n								$out = sanitizeForFile($out);\r\n							} else if ($xform[0] == \"url_title\") {\r\n								$out = stripSpace($out, 1);\r\n							}\r\n						break;\r\n						case \'split\':\r\n							$parts = explode($xform[0], $out);\r\n							array_shift($xform); // Throw away the split character\r\n							$joinchar = array_shift($xform);\r\n\r\n							// Grab the specified parts to return\r\n							$retstr = array();\r\n							$numParts = count($parts);\r\n							foreach ($xform as $idx) {\r\n								$addit = true;\r\n								if ($idx == \'all\') {\r\n									$retstr = array_merge($retstr, $parts);\r\n									$addit = false;\r\n								} else if ($idx == \'last\') {\r\n									$idx = $numParts;\r\n								} else if ($idx == \'rand\') {\r\n									$idx = mt_rand(1, $numParts);\r\n								} else if (strpos($idx, \'-\') === 0) {\r\n									// Negative offset: count from the end: -1 = last, -2 = penultimate, etc\r\n									// The +1 is to counter the fact we subtract one in a moment. Damn zero indices\r\n									$idx = $numParts - substr($idx, 1) + 1;\r\n								} else if (strpos($idx, \'>\') === 0) {\r\n									$retstr = array_merge($retstr, array_slice($parts, substr($idx, 1)));\r\n									$addit = false;\r\n								} else if (strpos($idx, \'<\') === 0) {\r\n									$retstr = array_merge($retstr, array_slice($parts, 0, substr($idx, 1) - 1 ));\r\n									$addit = false;\r\n								}\r\n								// Subtract one because the input is \'human\'\r\n								// e.g. split|.|+|1|3 == return the 1st and 3rd parts == $parts[0] + $parts[2]\r\n								if ($addit) {\r\n									$retstr[] = $parts[$idx-1];\r\n								}\r\n							}\r\n\r\n							$out = join($joinchar, $retstr);\r\n						break;\r\n						case \'strip_tags\':\r\n							$out = strip_tags($out);\r\n						break;\r\n						case \'textile\':\r\n							include_once txpath.\'/lib/classTextile.php\';\r\n							$textile = new Textile();\r\n							$out = $textile->TextileThis($out);\r\n						break;\r\n						case \'trim\':\r\n							$charlist = isset($xform[0]) ? $xform[0] : \'\';\r\n							$out = ($charlist) ? trim($out, $charlist) : trim($out);\r\n						break;\r\n					}\r\n				}\r\n			}\r\n		} else {\r\n			return parse(EvalElse($thing, 0));\r\n		}\r\n	}\r\n\r\n	return ($out) ? doLabel($label, $labeltag).doTag($out, $wraptag, $class, $attr, $html_id) : \'\';\r\n}','/**\r\n * smd_wrap\r\n *\r\n * A Textpattern CMS plugin for wrapping content with HTML tags, labels and attributes.\r\n *  -> Adds wraptag / class / html_id / label support round any tag\r\n *  -> Permits a range of formatting options for manipulating the item\r\n *     (e.g. trim, escape, sanitize, change case, linkify, format date,\r\n *     strip tags, split / combine, process with textile, etc).\r\n *  -> If the content is empty, nothing is displayed.\r\n *  -> Supports <txp:else />\r\n *\r\n * @author Stef Dawson\r\n * @link   http://stefdawson.com/\r\n */\r\n\r\n// TODO:\r\n// * Allow hidden pref to determine default transforms?\r\n\r\nfunction smd_wrap($atts, $thing=NULL) {\r\n	global $prefs;\r\n\r\n	extract(lAtts(array(\r\n		\'item\'        => \'\',\r\n		\'wraptag\'     => \'\',\r\n		\'class\'       => \'\',\r\n		\'html_id\'     => \'\',\r\n		\'label\'       => \'\',\r\n		\'labeltag\'    => \'\',\r\n		\'attr\'        => \'\',\r\n		\'prefix\'      => \'\',\r\n		\'suffix\'      => \'\',\r\n		\'format\'      => \'\', // convenience only: same as transform\r\n		\'transform\'   => \'\',\r\n		\'delim\'       => \',\',\r\n		\'param_delim\' => \'|\',\r\n		\'trim\'        => 1,\r\n		\'debug\'       => 0,\r\n	),$atts));\r\n\r\n	// item attribute trumps container\r\n	$thing = ($item) ? $item : $thing;\r\n	$out = \'\';\r\n\r\n	if ($format) {\r\n		trigger_error(\"smd_wrap: format attribute deprecated: use transform attribute instead.\", E_USER_NOTICE);\r\n		$transform = $format;\r\n	}\r\n\r\n	// Grab the true portion of any container\r\n	$truePart = EvalElse($thing, 1);\r\n\r\n	if ($debug) {\r\n		echo \'++ TO WRAP ++\';\r\n		dmp($item);\r\n	}\r\n\r\n	if ($thing) {\r\n		// Handle custom attributes\r\n		if ($attr) {\r\n			$custom_atts = array();\r\n			$attribs = do_list($attr);\r\n			foreach($attribs as $attdef) {\r\n				list($key, $val) = do_list($attdef, $param_delim);\r\n				$custom_atts[] = $key . \'=\"\' . $val . \'\"\';\r\n			}\r\n			$attr = \' \' . join(\' \', $custom_atts);\r\n		}\r\n\r\n		// Run the Txp parser first\r\n		$out = parse($truePart);\r\n		$out = $trim ? trim($out) : $out;\r\n\r\n		if ($out) {\r\n			// Top and tail the output\r\n			$out = $prefix.$out.$suffix;\r\n\r\n			// Reformat the item with any of the following transformations, in the supplied order\r\n			if ($transform) {\r\n				$formats = do_list($transform, $delim);\r\n				foreach ($formats as $xformlist) {\r\n					// Use explode() because do_list() performs a trim() that we don\'t want\r\n					$xform = explode($param_delim, $xformlist);\r\n					$xtype = array_shift($xform);\r\n\r\n					switch ($xtype) {\r\n						case \'add\':\r\n							$pos = array_shift($xform);\r\n							$val = $xform[0];\r\n							$out = (($pos == \'before\' || $pos == \'both\') ? $val : \'\') . $out . (($pos == \'after\' || $pos == \'both\') ? $val : \'\');\r\n						break;\r\n						case \'case\':\r\n							foreach ($xform as $arg) {\r\n								if ($arg == \"upper\") {\r\n									$out = strtoupper($out);\r\n								} else if ($arg == \"lower\") {\r\n									$out = strtolower($out);\r\n								} else if ($arg == \"ucfirst\") {\r\n									$out = ucfirst($out);\r\n								} else if ($arg == \"ucwords\") {\r\n									$out = ucwords($out);\r\n								} else if ($arg == \"title\") {\r\n									// Inelegantly ported + extended for Unicode from David Gouch\'s JS title case script: thanks\r\n									// http://individed.com/code/to-title-case/js/to-title-case.js\r\n									$has_unicode = @preg_match(\'/\\pL/u\', \'a\');\r\n\r\n									$az = ($has_unicode) ? \'\\p{Lu}\' : \'A-Z\';\r\n									$wrd = ($has_unicode) ? \'(?:\\p{L}|\\p{M}|\\p{N}|\\p{Pc})\' : \'\\w\';\r\n									$capsre = \'/[\' . $az . \']+|&|[\' . $wrd . \']+[._][\' . $wrd . \']+/\';\r\n\r\n									$smalls = get_pref(\'smd_wrap_small_words\', \'a(nd?|s|t)?|b(ut|y)|en|for|i[fn]|o[fnr]|t(he|o)|vs?\\.?|via\');\r\n									$smallre = \'/^(\' . $smalls . \')[ \\-]/i\';\r\n\r\n									$pat = \'/([\' . $wrd . \'&`\\\'‘’\"“.@:\\/\\{\\(\\[<>_]+-? *)/\';\r\n									$ret = array();\r\n									preg_match_all($pat, $out, $matches, PREG_PATTERN_ORDER|PREG_OFFSET_CAPTURE);\r\n\r\n									foreach ($matches[0] as $it) {\r\n										$match = $it[0];\r\n										$index = $it[1];\r\n										$idxm2 = $index - 2;\r\n										$length = strlen($match);\r\n										$title = $out; // Copy the original since we\'re working on $out directly\r\n\r\n										// Fudge because substr with negative start counts from end of string in PHP\r\n										$idxm1 = (($index-1) < 0) ? 0 : $index - 1;\r\n										$offset = (($index-1) < 0) ? 1 : 2;\r\n\r\n										if ($index > 0\r\n											&& ( $title{$idxm2} !== \":\" )\r\n											&& ( preg_match($smallre, $match) > 0 )\r\n										) {\r\n											$out = substr($out, 0, $index) . strtolower($match) . substr($out, $index+$length);\r\n											continue;\r\n										}\r\n										if (preg_match(\'/[\\\'\\\"_{(\\[]/\', substr($title, $idxm1, $offset)) > 0) {\r\n											$out = substr($out, 0, $index) . $match{0} . @strtoupper($match{1}) . substr($match, 2). substr($out, $index+$length);\r\n											continue;\r\n										}\r\n										if (\r\n											( preg_match($capsre, substr($match, 1)) > 0 )\r\n											|| ( preg_match(\'/[\\])}]/\', substr($title, $idxm1, $offset)) > 0 )\r\n										) {\r\n											$out = substr($out, 0, $index) . $match . substr($out, $index+$length);\r\n											continue;\r\n										}\r\n										$out = substr($out, 0, $index) . strtoupper($match{0}) . substr($match, 1) . substr($out, $index+$length);\r\n									}\r\n								}\r\n							}\r\n						break;\r\n						case \'date\':\r\n							$nd = (is_numeric($out)) ? $out : strtotime($out);\r\n							if ($nd !== false) {\r\n								$out = strftime($xform[0], $nd);\r\n							}\r\n						break;\r\n						case \'escape\':\r\n							$flags = 0;\r\n							foreach ($xform as $arg) {\r\n								switch ($arg) {\r\n									case \'no_quotes\':\r\n										$flags |= ENT_NOQUOTES;\r\n									break;\r\n									case \'all_quotes\':\r\n										$flags |= ENT_QUOTES;\r\n									break;\r\n									case \'double_quotes\':\r\n										$flags |= ENT_COMPAT;\r\n									break;\r\n									default:\r\n										$flags |= $arg;\r\n									break;\r\n								}\r\n							}\r\n							$out = htmlspecialchars($out, $flags);\r\n						break;\r\n						case \'fordb\':\r\n							$out = doSlash($out);\r\n						break;\r\n						case \'form\':\r\n							foreach ($xform as $arg) {\r\n								$content = fetch_form($arg);\r\n								$reps = array(\r\n									\'{smd_wrap_it}\' => $out,\r\n								);\r\n								$out = parse(strtr($content, $reps));\r\n							}\r\n						break;\r\n						case \'link\':\r\n							// From http://codesnippets.joyent.com/posts/show/2104\r\n							$pat = \"@\\b(https?://)?(([0-9a-zA-Z_!~*\'().&=+$%-]+:)?[0-9a-zA-Z_!~*\'().&=+$%-]+\\@)?(([0-9]{1,3}\\.){3}[0-9]{1,3}|([0-9a-zA-Z_!~*\'()-]+\\.)*([0-9a-zA-Z][0-9a-zA-Z-]{0,61})?[0-9a-zA-Z]\\.[a-zA-Z]{2,6})(:[0-9]{1,4})?((/[0-9a-zA-Z_!~*\'().;?:\\@&=+$,%#-]+)*/?)@\";\r\n							$text = (isset($xform[0]) && $xform[0] != \'\') ? $xform[0] : \'$0\';\r\n							$out = preg_replace($pat, \'<a href=\"$0\">\'.$text.\'</a>\', $out);\r\n						break;\r\n						case \'no_widow\':\r\n							$no_widow = isset($xform[0]) ? $xform[0] : @$prefs[\'title_no_widow\'];\r\n							$out = ($no_widow) ? noWidow($out) : $out;\r\n						break;\r\n						case \'replace\':\r\n							$type = $xform[0] ? $xform[0] : \'string\'; // string / regex\r\n							$from = $xform[1];\r\n							$to = isset($xform[2]) ? $xform[2] : \'\';\r\n							$out = ($type==\'regex\') ? preg_replace($from, $to, $out) : str_replace($from, $to, $out);\r\n						break;\r\n						case \'sanitize\':\r\n							if ($xform[0] == \"url\") {\r\n								$out = sanitizeForUrl($out);\r\n							} else if ($xform[0] == \"file\") {\r\n								$out = sanitizeForFile($out);\r\n							} else if ($xform[0] == \"url_title\") {\r\n								$out = stripSpace($out, 1);\r\n							}\r\n						break;\r\n						case \'split\':\r\n							$parts = explode($xform[0], $out);\r\n							array_shift($xform); // Throw away the split character\r\n							$joinchar = array_shift($xform);\r\n\r\n							// Grab the specified parts to return\r\n							$retstr = array();\r\n							$numParts = count($parts);\r\n							foreach ($xform as $idx) {\r\n								$addit = true;\r\n								if ($idx == \'all\') {\r\n									$retstr = array_merge($retstr, $parts);\r\n									$addit = false;\r\n								} else if ($idx == \'last\') {\r\n									$idx = $numParts;\r\n								} else if ($idx == \'rand\') {\r\n									$idx = mt_rand(1, $numParts);\r\n								} else if (strpos($idx, \'-\') === 0) {\r\n									// Negative offset: count from the end: -1 = last, -2 = penultimate, etc\r\n									// The +1 is to counter the fact we subtract one in a moment. Damn zero indices\r\n									$idx = $numParts - substr($idx, 1) + 1;\r\n								} else if (strpos($idx, \'>\') === 0) {\r\n									$retstr = array_merge($retstr, array_slice($parts, substr($idx, 1)));\r\n									$addit = false;\r\n								} else if (strpos($idx, \'<\') === 0) {\r\n									$retstr = array_merge($retstr, array_slice($parts, 0, substr($idx, 1) - 1 ));\r\n									$addit = false;\r\n								}\r\n								// Subtract one because the input is \'human\'\r\n								// e.g. split|.|+|1|3 == return the 1st and 3rd parts == $parts[0] + $parts[2]\r\n								if ($addit) {\r\n									$retstr[] = $parts[$idx-1];\r\n								}\r\n							}\r\n\r\n							$out = join($joinchar, $retstr);\r\n						break;\r\n						case \'strip_tags\':\r\n							$out = strip_tags($out);\r\n						break;\r\n						case \'textile\':\r\n							include_once txpath.\'/lib/classTextile.php\';\r\n							$textile = new Textile();\r\n							$out = $textile->TextileThis($out);\r\n						break;\r\n						case \'trim\':\r\n							$charlist = isset($xform[0]) ? $xform[0] : \'\';\r\n							$out = ($charlist) ? trim($out, $charlist) : trim($out);\r\n						break;\r\n					}\r\n				}\r\n			}\r\n		} else {\r\n			return parse(EvalElse($thing, 0));\r\n		}\r\n	}\r\n\r\n	return ($out) ? doLabel($label, $labeltag).doTag($out, $wraptag, $class, $attr, $html_id) : \'\';\r\n}','b63c47825128dd020f0315681ea6448b',0,5,0),
	('bot_admin_body_class',0,'redbot','www.redbot.it','0.1','Hide and style admin items on a per user or privileges level basis via css.','	<h2>bot_admin_body_class</h2>\n\n	<p>This micro-plugin let&#8217;s you hide items in  txp backend based  on the logged user name and privilege level, via css.<br />\nOnce activated it simply adds two classes to the body tag of each tab via jquery:</p>\n\n	<ul>\n		<li>One indicates the user group of the current logged user</li>\n		<li>Another indicates the logged user</li>\n	</ul>\n\n	<p>For example if I log in as &#8220;Donald Swain&#8221; with  &#8220;managing editor&#8221; privileges, the &#8220;body&#8221; tag for every txp admin page will now have two more classes: &#8220;managing_editor&#8221; and &#8220;donald_swain&#8221;.<br />\nPlease note that the user name will be lowercased and spaces will be replaced with an underscore.</p>\n\n	<p>Privileges can be one of the following:</p>\n\n	<ul>\n		<li>publisher</li>\n		<li>managing_editor</li>\n		<li>copy_editor</li>\n		<li>staff_writer</li>\n		<li>freelancer</li>\n		<li>designer</li>\n		<li>none</li>\n	</ul>\n\n	<p>Once done that, you can easily hide items in  the admin adding dome css rules in your textpattern.css file.</p>\n\n	<p>For example:</p>\n\n<pre><code>body.managing_editor .override-form {display:none;}\n</code></pre>\n\n	<p>will hide the &#8220;override form&#8221; field for each user logged as managing editor.<br />\nIn the same vein</p>\n\n<pre><code>body.donald_swain .override-form {display:none;}\n</code></pre>\n\n	<p>Will do the same but only if you are logged in as Donald Swain.</p>\n\n	<p>The idea for this plugin comes from <a href=\"http://forum.textpattern.com/viewtopic.php?pid=241718#p241718\">sacripant</a></p>','//<?php\r\nif( @txpinterface === \'admin\' ){\r\n	register_callback(\'bot_body_class\',\'admin_side\',\'head_end\');\r\n}\r\n\r\nfunction bot_body_class(){\r\n	\r\n	global $txp_user, $txp_groups ;\r\n	$privilege = fetch(\'privs\', \'txp_users\', \'name\', $txp_user);\r\n	$level = $txp_groups[$privilege];\r\n	$user = strtolower(str_replace(\' \', \'_\', $txp_user)); // Lowercases and replaces spaces with \'_\'\r\n	\r\n	echo <<<JS_CODE\r\n	\r\n	<script type=\"text/javascript\">\r\n	    $(document).ready(function() {\r\n			$(\"body\").addClass(\"$level $user\");\r\n	    });\r\n	</script>\r\n	\r\nJS_CODE;\r\n}\r\n\r\n','//<?php\r\nif( @txpinterface === \'admin\' ){\r\n	register_callback(\'bot_body_class\',\'admin_side\',\'head_end\');\r\n}\r\n\r\nfunction bot_body_class(){\r\n	\r\n	global $txp_user, $txp_groups ;\r\n	$privilege = fetch(\'privs\', \'txp_users\', \'name\', $txp_user);\r\n	$level = $txp_groups[$privilege];\r\n	$user = strtolower(str_replace(\' \', \'_\', $txp_user)); // Lowercases and replaces spaces with \'_\'\r\n	\r\n	echo <<<JS_CODE\r\n	\r\n	<script type=\"text/javascript\">\r\n	    $(document).ready(function() {\r\n			$(\"body\").addClass(\"$level $user\");\r\n	    });\r\n	</script>\r\n	\r\nJS_CODE;\r\n}\r\n\r\n','2cf2f719b770236b35c403c154224dc8',3,5,0),
	('zem_contact_reborn',0,'TXP Community','http://forum.textpattern.com/viewtopic.php?id=23728','4.0.3.20','Form mailer for Textpattern',' <style>\n   li code {font-weight: bold;}\n   pre {padding: 0.5em 1em; background: #eee; border: 1px dashed #ccc;}\n   h1, h2, h3, h3 code {font-family: sans-serif; font-weight: bold;}\n   h1, h2, h3 {margin-left: -1em;}\n   h2, h3 {margin-top: 2em;}\n   h1 {font-size: 3em;}\n   h2 {font-size: 2em;}\n   h3 {font-size: 1.5em;}\n   li a code {font-weight: normal;}\n   .required, .warning {color:red;}\n </style>\n\n	<h1 id=\"top\">Zem Contact Reborn</h1>\n\n	<p>Please reports bugs and problems with this plugin in <a href=\"http://forum.textpattern.com/viewtopic.php?id=23728\">this forum thread</a>.</p>\n\n	<p class=\"required\">This plugin requires a separate language plugin called <code>zem_contact_lang</code> to be installed and activated to work properly.</p>\n\n	<h2 id=\"contents\">Contents</h2>\n\n	<ul>\n		<li><a href=\"#features\">Features</a></li>\n		<li><a href=\"#start\">Getting started</a>\n	<ul>\n		<li><a href=\"#contactform\">Contact form</a></li>\n		<li><a href=\"#sendarticle\">Send article</a></li>\n	</ul></li>\n		<li><a href=\"#tags\">Tags</a>\n	<ul>\n		<li><a href=\"#zc\"> <code>&#60;txp:zem_contact /&#62;</code> </a></li>\n		<li><a href=\"#zc_text\"> <code>&#60;txp:zem_contact_text /&#62;</code> </a></li>\n		<li><a href=\"#zc_email\"> <code>&#60;txp:zem_contact_email /&#62;</code> </a></li>\n		<li><a href=\"#zc_textarea\"> <code>&#60;txp:zem_contact_textarea /&#62;</code> </a></li>\n		<li><a href=\"#zc_submit\"> <code>&#60;txp:zem_contact_submit /&#62;</code> </a></li>\n		<li><a href=\"#zc_select\"> <code>&#60;txp:zem_contact_select /&#62;</code> </a></li>\n		<li><a href=\"#zc_checkbox\"> <code>&#60;txp:zem_contact_checkbox /&#62;</code> </a></li>\n		<li><a href=\"#zc_radio\"> <code>&#60;txp:zem_contact_radio /&#62;</code> </a></li>\n		<li><a href=\"#zc_secret\"> <code>&#60;txp:zem_contact_secret /&#62;</code> </a></li>\n		<li><a href=\"#zc_server_info\"> <code>&#60;txp:zem_contact_serverinfo /&#62;</code> </a></li>\n		<li><a href=\"#zc_send_article\"> <code>&#60;txp:zem_contact_send_article /&#62;</code> </a></li>\n	</ul></li>\n		<li><a href=\"#advanced\">Advanced examples</a>\n	<ul>\n		<li><a href=\"#show_error\">Separate input and error forms</a></li>\n		<li><a href=\"#subject_form\">User selectable subject field</a></li>\n		<li><a href=\"#to_form\">User selectable recipient, without showing email addresses</a></li>\n	</ul></li>\n		<li><a href=\"#styling\">Styling</a></li>\n		<li><a href=\"#history\">History</a></li>\n		<li><a href=\"#credits\">Credits</a></li>\n		<li><a href=\"#api\">Plugin <span class=\"caps\"><span class=\"caps\">API</span></span> and callback events</a></li>\n	</ul>\n\n	<h2 id=\"features\">Features</h2>\n\n	<ul>\n		<li>Arbitrary text fields can be specified, with min/max/required settings for validation.</li>\n		<li>Email address validation, including a check for a valid MX record (Unix only).</li>\n		<li>Safe escaping of input data.</li>\n		<li>UTF-8 safe.</li>\n		<li>Accessible form layout, including <code>&#60;label&#62;</code>, <code>&#60;legend&#62;</code> and <code>&#60;fieldset&#62;</code> tags.</li>\n		<li>Various classes and ids to allow easy styling of all parts of the form.</li>\n		<li>A separate language plug-in to enable easy localisation.</li>\n		<li>Spam prevention <span class=\"caps\"><span class=\"caps\">API</span></span> (used by Tranquillo&#8217;s <code>pap_contact_cleaner</code> plugin).</li>\n	</ul>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h2 id=\"start\">Getting started</h2>\n\n	<h3 id=\"contactform\">Contact form</h3>\n\n	<p>The simplest form is shown below, which produces a default form with Name, Email and Message fields. Email will be delivered to recipient@example.com, with the user&#8217;s supplied email as the &#8220;From:&#8221; address.</p>\n\n<pre><code>&#60;txp:zem_contact to=&#34;recipient@example.com&#34; /&#62;\n</code></pre>\n\n	<p>To specify fields explicitly, use something like this:</p>\n\n<pre><code>&#60;txp:zem_contact to=&#34;recipient@example.com&#34;&#62;\n  &#60;txp:zem_contact_email /&#62;\n  &#60;txp:zem_contact_text label=&#34;Phone&#34; min=7 max=15/&#62;\n  &#60;txp:zem_contact_textarea label=&#34;Your question&#34; /&#62;\n  &#60;txp:zem_contact_submit label=&#34;Send&#34; /&#62;\n&#60;/txp:zem_contact&#62;\n</code></pre>\n\n	<p>Alternatively, place the field specifications in a Textpattern form, and call it like this:</p>\n\n<pre><code>&#60;txp:zem_contact to=&#34;recipient@example.com&#34; form=&#34;mycontactform&#34; /&#62;\n</code></pre>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"sendarticle\">Send article</h3>\n\n	<p>Within the context of an individual article, this plugin can be used to send the article (or excerpt, if it exists) to an email address specified by the visitor. This requires at least two tags:\n	<ul>\n		<li><code>zem_contact</code>, to create form that is initially hidden by setting the <code>send_article</code> attribute.</li>\n		<li><code>zem_contact_send_article</code>, to create a &#8216;send article&#8217; link which reveals the aforementioned form when clicked.</li>\n	</ul></p>\n\n<pre><code>&#60;txp:zem_contact send_article=&#34;1&#34; /&#62;\n&#60;txp:zem_contact_send_article /&#62;\n</code></pre>\n\n	<p>By default the form contains fields for your name and email address, the recipient&#8217;s email address and a personal message, but similar to contact forms you can create your own form layout. Some things you need to know:\n	<ul>\n		<li>Set the <code>send_article</code> attribute to <code>1</code> in the <code>zem_contact</code> tag.</li>\n		<li>Use a <code>zem_contact_email</code> tag with the <code>send_article</code> attribute set to <code>1</code>. This field will be used as the recipient email address.</li>\n	</ul></p>\n\n<pre><code>&#60;txp:zem_contact to=&#34;you@example.com&#34; send_article=&#34;1&#34;&#62;\n  &#60;txp:zem_contact_email label=&#34;Recipient Email&#34; send_article=&#34;1&#34; /&#62;\n  &#60;txp:zem_contact_email label=&#34;Your Email&#34; /&#62;\n  &#60;txp:zem_contact_submit label=&#34;Send Article&#34; /&#62;\n&#60;/txp:zem_contact&#62;\n</code>\n<code>&#60;txp:zem_contact_send_article /&#62;\n</code></pre>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h2 id=\"tags\">Tags</h2>\n\n	<p><a href=\"#zc\"><code>&#60;txp:zem_contact /&#62;</code></a> produces a flexible, customisable email contact form. It is intended for use as an enquiry form for commercial and private sites, and includes several features to help reduce common problems with such forms (invalid email addresses, missing information).</p>\n\n	<p><a href=\"#zc_send_article\"><code>&#60;txp:zem_contact_send_article /&#62;</code></a> can be used to create a &#8220;send article&#8221; link within an article form, connecting it to the contact form.</p>\n\n	<p>All other tags provided by this plugin can only be used inside a <code>&#60;txp:zem_contact&#62;</code> &#8230; <code>&#60;/txp:zem_contact&#62;</code> container tag or in a Textpattern form used as the <code>form</code> attribute in the <code>&#60;txp:zem_contact /&#62;</code> tag.</p>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"zc\"><code>&#60;txp:zem_contact /&#62;</code></h3>\n\n	<p>May be used as a self-closing or container tag. Place this where you want the input form to go. Status and error messages, if any, will be displayed before the form.</p>\n\n	<h4>Attributes</h4>\n\n	<ul>\n		<li><code>to=&#34;email address&#34;</code> <span class=\"required\">required</span><br />\nRecipient email address.</li>\n		<li><code>to_form=&#34;form name&#34;</code><br />\nUse specified form (overrides <strong>to</strong> attribute).</li>\n	</ul>\n\n	<ul>\n		<li><code>from=&#34;email address&#34;</code><br />\nEmail address used in the &#8220;From:&#8221; field when sending email. Defaults to the sender&#8217;s email address. If specified, the sender&#8217;s email address will be placed in the &#8220;Reply-To:&#8221; field instead.</li>\n		<li><code>from_form=&#34;form name&#34;</code><br />\nUse specified form (overrides <strong>from</strong> attribute).</li>\n	</ul>\n\n	<ul>\n		<li><code>subject=&#34;subject text&#34;</code><br />\nSubject used when sending an email. Default is the site name.</li>\n		<li><code>subject_form=&#34;form name&#34;</code><br />\nUse specified form (overrides <strong>subject</strong> attribute).</li>\n	</ul>\n\n	<ul>\n		<li><code>thanks=&#34;text&#34;</code><br />\nMessage shown after successfully submitting a message. Default is <strong>Thank you, your message has been sent</strong>.</li>\n		<li><code>thanks_form=&#34;form name&#34;</code><br />\nUse specified form (overrides <strong>thanks</strong> attribute).</li>\n		<li><code>redirect=&#34;URL&#34;</code><br />\nRedirect to specified <span class=\"caps\"><span class=\"caps\">URL</span></span> (overrides <strong>thanks</strong> and <strong>thanks_form</strong> attributes). <span class=\"caps\"><span class=\"caps\">URL</span></span> must be relative to the Textpattern Site <span class=\"caps\"><span class=\"caps\">URL</span></span>. Example: <em>redirect=&#8220;monkey&#8221;</em> would redirect to http://example.com/monkey.</li>\n	</ul>\n\n	<ul>\n		<li><code>label=&#34;text&#34;</code><br />\nLabel for the contact form. If set to an empty string, display of the fieldset and legend tags will be suppressed. Default is <strong>Contact</strong>.</li>\n		<li><code>send_article=&#34;boolean&#34;</code><br />\nWhether to use this form to <a href=\"#article\">send an article</a>. Available values: <strong>1</strong> (yes), <strong>0</strong> (no). Default is <strong>0</strong> (no).</li>\n		<li><code>copysender=&#34;boolean&#34;</code><br />\nWhether to send a copy of the email to the sender&#8217;s address. Available values: <strong>1</strong> (yes), <strong>0</strong> (no). Default is <strong>0</strong> (no).</li>\n	</ul>\n\n	<ul>\n		<li><code>form=&#34;form name&#34;</code><br />\nUse specified form, containing the layout of the contact form fields.</li>\n		<li><code>show_input=&#34;boolean&#34;</code><br />\n Whether to display the form input fields. Available values: <strong>1</strong> (yes), <strong>0</strong> (no). Default is <strong>1</strong> (yes).</li>\n		<li><code>show_error=&#34;boolean&#34;</code><br />\n Whether to display error and status messages. Available values: <strong>1</strong> (yes), <strong>0</strong> (no). Default is <strong>1</strong> (yes).</li>\n	</ul>\n\n	<h4>Examples</h4>\n\n	<p>See <a href=\"#contactform\">Getting started</a> and <a href=\"#advanced\">Advanced examples</a>.</p>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"zc_text\"><code>&#60;txp:zem_contact_text /&#62;</code></h3>\n\n	<p>Creates a text input field and corresponding <code>&#60;label&#62;</code> tag. The input value will be included in the email, preceded by the label.</p>\n\n	<h4>Attributes</h4>\n\n	<ul>\n		<li><code>label=&#34;text&#34;</code><br />\nText label displayed to the user. Default is <strong>Text</strong>.</li>\n		<li><code>name=&#34;value&#34;</code><br />\nField name, as used in the <span class=\"caps\"><span class=\"caps\">HTML</span></span> input tag.</li>\n		<li><code>break=&#34;tag&#34;</code><br />\nBreak tag between the label and input field. Default is <code>&#60;br /&#62;</code>. Use <code>break=&#34;&#34;</code> to put the label and input field on the same line.</li>\n		<li><code>default=&#34;value&#34;</code><br />\nDefault value when no input is provided.</li>\n		<li><code>min=&#34;integer&#34;</code><br />\nMinimum input length in characters. Default is <strong>0</strong>.</li>\n		<li><code>max=&#34;integer&#34;</code><br />\nMaximum input length in characters. Default is <strong>100</strong>.</li>\n		<li><code>size=&#34;integer&#34;</code><br />\nSize of the input field as displayed to the user.</li>\n		<li><code>required=&#34;boolean&#34;</code><br />\nWhether this text field must be filled out. Available values: <strong>1</strong> (yes), <strong>0</strong> (no). Default is <strong>1</strong> (yes).</li>\n	</ul>\n\n	<h4>Example</h4>\n\n<pre><code>&#60;txp:zem_contact_text label=&#34;Your name&#34; /&#62;\n</code></pre>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"zc_email\"><code>&#60;txp:zem_contact_email /&#62;</code></h3>\n\n	<p>Input field for user&#8217;s email address.</p>\n\n	<p>The entered email address will automatically be validated to make sure it is of the form &#8220;abc@xxx.yyy[.zzz]&#8221;. On non-Windows servers, a test will be done to verify that an A or MX record exists for the domain. Neither test prevents spam, but it does help detecting accidental typing errors.</p>\n\n	<h4>Attributes</h4>\n\n	<ul>\n		<li><code>label=&#34;text&#34;</code><br />\nText label displayed to the user. Default is <strong>Email</strong>.</li>\n		<li><code>name=&#34;value&#34;</code><br />\nField name, as used in the <span class=\"caps\"><span class=\"caps\">HTML</span></span> input tag.</li>\n		<li><code>break=&#34;tag&#34;</code><br />\nBreak tag between the label and input field. Default is <code>&#60;br /&#62;</code>. Use <code>break=&#34;&#34;</code> to put the label and input field on the same line.</li>\n		<li><code>default=&#34;value&#34;</code><br />\nDefault value when no input is provided.</li>\n		<li><code>min=&#34;integer&#34;</code><br />\nMinimum input length in characters. Default is <strong>0</strong>.</li>\n		<li><code>max=&#34;integer&#34;</code><br />\nMaximum input length in characters. Default is <strong>100</strong>.</li>\n		<li><code>size=&#34;integer&#34;</code><br />\nSize of the input field as displayed to the user.</li>\n		<li><code>required=&#34;boolean&#34;</code><br />\nWhether this text field must be filled out. Available values: <strong>1</strong> (yes), <strong>0</strong> (no). Default is <strong>1</strong> (yes).</li>\n		<li><code>send_article=&#34;boolean&#34;</code><br />\nWhether this field is used as the recipient email address when using the send_article function. Available values: <strong>1</strong> (yes), <strong>0</strong> (no). Default is <strong>0</strong> (no).</li>\n	</ul>\n\n	<h4>Example</h4>\n\n<pre><code>&#60;txp:zem_contact_email label=&#34;Your email address&#34; /&#62;\n</code></pre>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"zc_textarea\"><code>&#60;txp:zem_contact_textarea /&#62;</code></h3>\n\n	<p>Creates a textarea.</p>\n\n	<h4>Attributes</h4>\n\n	<ul>\n		<li><code>label=&#34;text&#34;</code><br />\nText label displayed to the user. Default is <strong>Message</strong>.</li>\n		<li><code>name=&#34;value&#34;</code><br />\nField name, as used in the <span class=\"caps\"><span class=\"caps\">HTML</span></span> input tag.</li>\n		<li><code>break=&#34;tag&#34;</code><br />\nBreak tag between the label and input field. Default is <code>&#60;br /&#62;</code>. Use <code>break=&#34;&#34;</code> to put the label and input field on the same line.</li>\n		<li><code>default=&#34;value&#34;</code><br />\nDefault value when no input is provided.</li>\n		<li><code>cols=&#34;integer&#34;</code><br />\nColumn width. Default is <strong>58</strong>.</li>\n		<li><code>rows=&#34;integer&#34;</code><br />\nRow height. Default is <strong>8</strong>.</li>\n		<li><code>min=&#34;integer&#34;</code><br />\nMinimum input length in characters. Default is <strong>0</strong>.</li>\n		<li><code>max=&#34;integer&#34;</code><br />\nMaximum input length in characters. Default is <strong>10000</strong>.</li>\n		<li><code>required=&#34;boolean&#34;</code><br />\nWhether this text field must be filled out. Available values: <strong>1</strong> (yes), <strong>0</strong> (no). Default is <strong>1</strong> (yes).</li>\n	</ul>\n\n	<h4>Example</h4>\n\n	<p>Textarea that is 40 chars wide, 10 lines high, with a customized label:</p>\n\n<pre><code>&#60;txp:zem_contact_textarea cols=&#34;40&#34; rows=&#34;10&#34; label=&#34;Your question&#34; /&#62;\n</code></pre>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"zc_submit\"><code>&#60;txp:zem_contact_submit /&#62;</code></h3>\n\n	<p>Creates a submit button.<br />\nWhen used as a container tag, a &#8220;button&#8221; element will be used instead of an &#8220;input&#8221; element.</p>\n\n	<h4>Attributes:</h4>\n\n	<ul>\n		<li><code>label=&#34;text&#34;</code><br />\nText shown on the submit button. Default is &#8220;Send&#8221;.</li>\n		<li><code>button=&#34;boolean&#34;</code><br />\n<em>Deprecated. Use a container tag if you want a button element.</em></li>\n	</ul>\n\n	<h4>Examples</h4>\n\n	<p>Standard submit button:</p>\n\n<pre><code>&#60;txp:zem_contact_submit /&#62;\n</code></pre>\n\n	<p>Submit button with your own text:</p>\n\n<pre><code>&#60;txp:zem_contact_submit label=&#34;Send&#34; /&#62;\n</code></pre>\n\n	<p>Usage as a container tag, which allows you to use Textpattern tags and <span class=\"caps\">HTML</span> markup in the submit button:</p>\n\n<pre><code>&#60;txp:zem_contact_submit&#62;&#60;strong&#62;Send&#60;/strong&#62; question&#60;/txp:zem_contact_submit&#62;\n</code></pre>\n\n<pre><code>&#60;txp:zem_contact_submit&#62;&#60;img src=&#34;path/to/img.png&#34; alt=&#34;submit&#34;&#62;&#60;/txp:zem_contact_submit&#62;\n</code></pre>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"zc_select\"><code>&#60;txp:zem_contact_select /&#62;</code></h3>\n\n	<p>Creates a drop-down selection list.</p>\n\n	<h4>Attributes</h4>\n\n	<ul>\n		<li><code>list=&#34;comma-separated values&#34;</code> <span class=\"required\">required</span><br />\nList of items to show in the select box.</li>\n		<li><code>selected=&#34;value&#34;</code><br />\nList item that is selected by default.</li>\n		<li><code>label=&#34;text&#34;</code><br />\nText label displayed to the user. Default is <strong>Option</strong>.</li>\n		<li><code>name=&#34;value&#34;</code><br />\nField name, as used in the <span class=\"caps\"><span class=\"caps\">HTML</span></span> input tag.</li>\n		<li><code>break=&#34;tag&#34;</code><br />\nBreak tag between the label and input field. Default is <code>&#60;br /&#62;</code>. Use <code>break=&#34;&#34;</code> to put the label and input field on the same line.</li>\n		<li><code>delimiter=&#34;character&#34;</code><br />\nSeparator character used in the <strong>list</strong> attribute. Default is <strong>,</strong> (comma).</li>\n		<li><code>required=&#34;boolean&#34;</code><br />\nWhether a non-empty option must be selected. Available values: <strong>1</strong> (yes), <strong>0</strong> (no). Default is <strong>1</strong> (yes).</li>\n	</ul>\n\n	<h4>Examples</h4>\n\n	<p>Select list labeled &#8216;Department&#8217;, containing three options and a blank option (due to the comma before &#8216;Marketing&#8217;) shown by default, forcing the user to make a selection.</p>\n\n<pre><code>&#60;txp:zem_contact_select label=&#34;Department&#34; list=&#34;,Marketing,Sales,Support&#34; /&#62;\n</code></pre>\n\n	<p>Select list containing three options with &#8216;Marketing&#8217; selected by default.</p>\n\n<pre><code>&#60;txp:zem_contact_select list=&#34;Marketing,Sales,Support&#34; selected=&#34;Marketing&#34; /&#62;\n</code></pre>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"zc_checkbox\"><code>&#60;txp:zem_contact_checkbox /&#62;</code></h3>\n\n	<p>Creates a check box.</p>\n\n	<h4>Attributes</h4>\n\n	<ul>\n		<li><code>label=&#34;text&#34;</code><br />\nText label displayed to the user. Default is <strong>Checkbox</strong>.</li>\n		<li><code>name=&#34;value&#34;</code><br />\nField name, as used in the <span class=\"caps\"><span class=\"caps\">HTML</span></span> input tag.</li>\n		<li><code>break=&#34;tag&#34;</code><br />\nBreak tag between the label and input field. Default is <code>&#60;br /&#62;</code>. Use <code>break=&#34;&#34;</code> to put the label and input field on the same line.</li>\n		<li><code>checked=&#34;boolean&#34;</code><br />\nWhether this box is checked when first displayed. Available values: <strong>1</strong> (yes), <strong>0</strong> (no). Default is &#8220;0&#8221; (no).</li>\n		<li><code>required=&#34;boolean&#34;</code><br />\nWhether this checkbox must be filled out. Available values: <strong>1</strong> (yes), <strong>0</strong> (no). Default is <strong>1</strong> (yes).</li>\n	</ul>\n\n	<h4>Examples</h4>\n\n	<p>Shrink-wrap agreement which must be checked by the user before the email will be sent.</p>\n\n<pre><code>&#60;txp:zem_contact_checkbox label=&#34;I accept the terms and conditions&#34; /&#62;\n</code></pre>\n\n	<p>Optional checkboxes:</p>\n\n<pre><code>Select which operating systems are you familiar with:&#60;br /&#62;\n&#60;txp:zem_contact_checkbox label=&#34;Windows&#34; required=&#34;0&#34; /&#62;&#60;br /&#62;\n&#60;txp:zem_contact_checkbox label=&#34;Unix/Linux/BSD&#34; required=&#34;0&#34; /&#62;&#60;br /&#62;\n&#60;txp:zem_contact_checkbox label=&#34;MacOS&#34; required=&#34;0&#34; /&#62;&#60;br /&#62;\n</code></pre>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"zc_radio\"><code>&#60;txp:zem_contact_radio /&#62;</code></h3>\n\n	<p>Creates a radio button.</p>\n\n	<h4>Attributes</h4>\n\n	<ul>\n		<li><code>group=&#34;text&#34;</code> <span class=\"required\">required</span><br />\nText used in the email to describe this group of radio buttons. This attribute value is remembered for subsequent radio buttons, so you only have to set it on the first radio button of a group. Default is <strong>Radio</strong>.</li>\n		<li><code>label=&#34;text&#34;</code> <span class=\"required\">required</span><br />\nText label displayed to the user as radio button option.</li>\n		<li><code>name=&#34;value&#34;</code><br />\nField name, as used in the <span class=\"caps\"><span class=\"caps\">HTML</span></span> input tag. This attribute value is remembered for subsequent radio buttons, so you only have to set it on the first radio button of a group. If it hasn&#8217;t been set at all, it will be derived from the <code>group</code> attribute.</li>\n		<li><code>break=&#34;tag&#34;</code><br />\nBreak tag between the label and field. Default is a space.</li>\n		<li><code>checked=&#34;boolean&#34;</code><br />\nWhether this radio option is checked when the form is first displayed. Available values: <strong>1</strong> (yes), <strong>0</strong> (no). Default is <strong>0</strong> (no).</li>\n	</ul>\n\n	<h4>Example</h4>\n\n	<p>Group mutually exclusive radio buttons by setting the <code>group</code> attribute on the first radio button in a group. Only the chosen radio button from each group will be used in the email message. The message will be output in the form <strong>group: label</strong> for each of the chosen radio buttons.</p>\n\n<pre><code>&#60;txp:zem_contact_radio label=&#34;Medium&#34; group=&#34;I like my steak&#34; /&#62;\n&#60;txp:zem_contact_radio label=&#34;Rare&#34; /&#62;\n&#60;txp:zem_contact_radio label=&#34;Well done&#34; /&#62;\n</code>\n<code>&#60;txp:zem_contact_radio label=&#34;Wine&#34; group=&#34;With a glass of&#34; /&#62;\n&#60;txp:zem_contact_radio label=&#34;Beer&#34; /&#62;\n&#60;txp:zem_contact_radio label=&#34;Water&#34; /&#62;\n</code></pre>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"zc_secret\"><code>&#60;txp:zem_contact_secret /&#62;</code></h3>\n\n	<p>This tag has no effect on the form or <span class=\"caps\">HTML</span> output, but will include additional information in the email. It can be used as a self-closing tag or as a container tag.</p>\n\n	<h4>Attributes</h4>\n\n	<ul>\n		<li><code>name=&#34;text&#34;</code><br />\nUsed internally. Set this only if you have multiple &#8216;secret&#8217; form elements with identical labels.</li>\n		<li><code>label=&#34;text&#34;</code><br />\nUsed to identify the field in the email. Default is <strong>Secret</strong>.</li>\n		<li><code>value=&#34;value&#34;</code><br />\nSome text you want to add to the email.</li>\n	</ul>\n\n	<h4>Examples</h4>\n\n	<p>Usage as a self-closing tag</p>\n\n<pre><code>&#60;txp:zem_contact_secret value=&#34;The answer is 42&#34; /&#62;\n</code></pre>\n\n	<p>Usage as a container tag</p>\n\n<pre><code>&#60;txp:zem_contact_secret label=&#34;Dear user&#34;&#62;\n  Please provide a useful example for this tag!\n&#60;/txp:zem_contact_secret&#62;\n</code></pre>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"zc_serverinfo\"><code>&#60;txp:zem_contact_serverinfo /&#62;</code></h3>\n\n	<p>This tag has no effect on the form or <span class=\"caps\">HTML</span> output, but will include additional information in the email based on the <span class=\"caps\">PHP</span> $_SERVER variable.</p>\n\n	<h4>Attributes</h4>\n\n	<ul>\n		<li><code>name=&#34;value&#34;</code> <span class=\"required\">required</span><br />\nName of the server variable. See the <a href=\"http://php.net/manual/reserved.variables.php#reserved.variables.server\"><span class=\"caps\">PHP</span> manual</a> for a full list.</li>\n		<li><code>label=&#34;text&#34;</code><br />\nUsed to identify the field in the email. Defaults to the value of the <strong>name</strong> attribute.</li>\n	</ul>\n\n	<h4>Examples</h4>\n\n	<p>Add the IP address of the visitor to the email</p>\n\n<pre><code>&#60;txp:zem_contact_serverinfo name=&#34;REMOTE_ADDR&#34; label=&#34;IP number&#34; /&#62;\n</code></pre>\n\n	<p>Add the name of the visitor&#8217;s browser to the email</p>\n\n<pre><code>&#60;txp:zem_contact_serverinfo name=&#34;HTTP_USER_AGENT&#34; label=&#34;Browser&#34; /&#62;\n</code></pre>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"zc_send_article\"><code>&#60;txp:zem_contact_send_article /&#62;</code></h3>\n\n	<p>Use this tag in your individual article form, where you want the &#8220;send article&#8221; link to be displayed.</p>\n\n	<h4>Attributes:</h4>\n\n	<ul>\n		<li><code>linktext=&#34;text&#34;</code><br />\nText displayed for the link. Default is <strong>send article</strong></li>\n	</ul>\n\n	<h4>Examples:</h4>\n\n	<p>See <a href=\"#sendarticle\">Getting started</a></p>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h2 id=\"advanced\">Advanced examples</h2>\n\n	<h3 id=\"show_error\">Separate input and error forms</h3>\n\n	<p>Using <code>show_input</code> and <code>show_error</code> to display the form and error messages on different parts of a page. A form is used to make sure the contents of both forms are identical, otherwise they would be seen as two independent forms. The first form only shows errors (no input), the second form only shows the input fields (no errors).</p>\n\n<pre><code>&#60;div id=&#34;error&#34;&#62;\n  &#60;txp:zem_contact form=&#34;contact_form&#34; show_input=&#34;0&#34; /&#62;\n&#60;/div&#62;\n</code>\n<code>&#60;div id=&#34;inputform&#34;&#62;\n  &#60;txp:zem_contact form=&#34;contact_form&#34; show_error=&#34;0&#34; /&#62;\n&#60;/div&#62;\n</code></pre>\n\n	<p>Apart from the <code>show_error</code> and <code>show_input</code> attributes, all other attributes must be 100% identical in both forms, otherwise they would be seen as two unrelated forms.</p>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"subject_form\">User selectable subject field</h3>\n\n	<p>Specify the <code>subject_form</code> attribute and create a form which includes a <code>zem_contact_select</code> tag:</p>\n\n<pre><code>&#60;txp:zem_contact to=&#34;you@example.com&#34; subject_form=&#34;my_subject_form&#34; /&#62;\n  &#60;txp:zem_contact_text label=&#34;Name&#34; /&#62;&#60;br /&#62;\n  &#60;txp:zem_contact_email /&#62;&#60;br /&#62;\n  &#60;txp:zem_contact_select label=&#34;Choose Subject&#34; list=&#34;,Question,Feedback&#34; /&#62;&#60;br /&#62;\n  &#60;txp:zem_contact_textarea label=&#34;Message&#34; /&#62;&#60;br /&#62;\n&#60;/txp:zem_contact&#62;\n</code></pre>\n\n	<p>Create a Textpattern form called &#8220;my_subject_form&#8221;, containing:</p>\n\n<pre><code>&#60;txp:php&#62;\n  global $zem_contact_form;\n  echo $zem_contact_form[&#39;Choose Subject&#39;];\n&#60;/txp:php&#62;\n</code></pre>\n\n	<p>The <code>label</code> used in the <code>zem_contact_select</code> tag must be identical to the corresponding variable in the <code>subject_form</code>. Here we used <code>Choose subject</code>.</p>\n\n	<p>If you&#8217;d prefer to add a common prefix for all subjects, use a <code>subject_form</code> containing:</p>\n\n<pre><code>&#60;txp:php&#62;\n  global $zem_contact_form;\n  echo &#39;My common prefix - &#39; . $zem_contact_form[&#39;Choose Subject&#39;];\n&#60;/txp:php&#62;\n</code></pre>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h3 id=\"to_form\">User selectable recipient, without showing email address</h3>\n\n	<p>Specify the <code>to_form</code> attribute and create a form which includes a <code>zem_contact_select</code> tag:</p>\n\n<pre><code>&#60;txp:zem_contact to_form=&#34;my_zem_contact_to_form&#34;&#62;\n  &#60;txp:zem_contact_text label=&#34;Name&#34; /&#62;&#60;br /&#62;\n  &#60;txp:zem_contact_email /&#62;&#60;br /&#62;\n  &#60;txp:zem_contact_select label=&#34;Department&#34; list=&#34;,Support,Sales&#34; /&#62;&#60;br /&#62;\n  &#60;txp:zem_contact_textarea label=&#34;Message&#34; /&#62;&#60;br /&#62;\n&#60;/txp:zem_contact&#62;\n</code></pre>\n\n	<p>Create a Textpattern form called &#8220;my_zem_contact_to_form&#8221;, containing:</p>\n\n<pre><code>&#60;txp:php&#62;\n  global $zem_contact_form;\n  switch($zem_contact_form[&#39;Department&#39;])\n  {\n    case &#39;Support&#39;:\n      echo &#39;crew@example.com&#39;;\n      break;\n    case &#39;Sales&#39;:\n      echo &#39;showmethemoney@example.com&#39;;\n      break;\n    default:\n      echo &#39;someone@example.com&#39;;\n  }\n&#60;/txp:php&#62;\n</code></pre>\n\n	<p>The <code>label</code> used in the <code>zem_contact_select</code> tag must be identical to the corresponsing variable in the <code>to_form</code>. Here we used <code>Department</code>.</p>\n\n	<p>A &#8216;default&#8217; email address in the <code>to_form</code> is specified to ensure that a valid email address is used in cases where you add or change a select/radio option and forget to update the <code>to_form</code>.</p>\n\n	<p class=\"warning\">Never use tags like <code>zem_contact_text</code>, <code>zem_contact_email</code> or <code>zem_contact_textarea</code> for setting the recipient address, otherwise your form can be abused to send spam to any email address!</p>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h2 id=\"styling\">Styling</h2>\n\n	<p>The form itself has a class <strong>zemContactForm</strong> set on the <code>FORM</code> <span class=\"caps\">HTML</span> tag.</p>\n\n	<p>The list of error messages (if any) has a class <strong>zemError</strong> set on the <code>UL</code> <span class=\"caps\">HTML</span> tag that encloses the list of errors.</p>\n\n	<p>All form elements and corresponding labels have the following classes (or ids set):\n	<ol>\n		<li>One of <strong>zemText</strong>, <strong>zemTextarea</strong>, <strong>zemSelect</strong>, <strong>zemRadio</strong>, <strong>zemCheckbox</strong>, <strong>zemSubmit</strong>. It should be obvious which class is used for which form element (and corresponding label).</li>\n		<li><strong>zemRequired</strong> or <strong>errorElement</strong> or <strong>zemRequirederrorElement</strong>, depending on whether the form element is required, an error was found in whatever the visitor entered&#8230; or both.</li>\n		<li>An individual &#8220;id&#8221; or &#8220;class&#8221; set to the value of the <code>name</code> attribute of the corresponding tag. When styling forms based on this class, you should explicitly set the <code>name</code> attribute because automatically generated names may change in newer zem_contact_reborn versions.</li>\n	</ol></p>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h2 id=\"history\">History</h2>\n\n	<p>Only the changes that may affect people who upgrade are detailed below.<br />\nTo save space, links to forum topics that detail all the changes in each version have been added.</p>\n\n	<ul>\n		<li>14 feb 2007: <strong>version 4.0.3.19</strong> <a href=\"http://forum.textpattern.com/viewtopic.php?id=21144\">changelog</a>\n	<ul>\n		<li><a href=\"#sendarticle\">send_article</a> functionality revised, requiring changes when upgrading from earlier versions</li>\n		<li>New language strings: &#8216;send_article&#8217; and &#8216;recipient&#8217; (replaces &#8216;receiver&#8217;)</li>\n		<li>Sets of radio buttons require the new <a href=\"#zc_radio\">group</a> attribute</li>\n		<li>Yes/No values deprecated in favor for the <span class=\"caps\"><span class=\"caps\">TXP</span></span> standard 1/0 values (yes/no still work in this version)</li>\n	</ul></li>\n		<li>20 nov 2006: <strong>version 4.0.3.18</strong> <a href=\"http://forum.textpattern.com/viewtopic.php?id=19823\">changelog</a>\n	<ul>\n		<li>IDs &#8216;zemContactForm&#8217; and &#8216;zemSubmit&#8217; have changed to classes to allow multiple forms per page</li>\n		<li>New language strings: &#8216;form_used&#8217;, &#8216;invalid_utf8&#8217;, &#8216;max_warning&#8217;, &#8216;name&#8217;, &#8216;refresh&#8217;, &#8216;secret&#8217;</li>\n	</ul></li>\n		<li>12 mar 2006: <strong>version 4.0.3.17</strong> <a href=\"http://forum.textpattern.com/viewtopic.php?id=13416\">changelog</a></li>\n		<li>11 feb 2006: <strong>version .16</strong></li>\n		<li>06 feb 2006: <strong>version .15</strong></li>\n		<li>03 feb 2006: <strong>version .14</strong>\n	<ul>\n		<li>Requires separate zem_contact_lang plugin</li>\n	</ul></li>\n		<li>29 jan 2006: <strong>version .12</strong></li>\n		<li>27 jan 2006: <strong>version .11</strong></li>\n		<li>23 jan 2006: <strong>version .09 and .10</strong></li>\n		<li>23 jan 2006: <strong>version .08</strong></li>\n		<li>17 jan 2006: <strong>version .07</strong></li>\n		<li>16 jan 2006: <strong>version .05 and .06</strong></li>\n		<li>15 jan 2006: <strong>version .04</strong></li>\n		<li>10 jan 2006: <strong>version .03</strong></li>\n		<li>19 dec 2005: <strong>version .02</strong></li>\n	</ul>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h2 id=\"credits\">Credits</h2>\n\n	<ul>\n		<li><strong>zem</strong> wrote the zem_contact 0.6 plugin on which this plugin was initially based.</li>\n		<li><strong>Mary</strong> completely revised the plugin code.</li>\n		<li><strong>Stuart</strong> Turned it into a plugin, added a revised help text and additional code. Maintained all plugin versions till 4.0.3.17.</li>\n		<li><strong>wet</strong> added the zem_contact_radio tag.</li>\n		<li><strong>Tranquillo</strong> added the anti-spam <span class=\"caps\"><span class=\"caps\">API</span></span> and zem_contact_send_article functionality.</li>\n		<li><strong>aslsw66</strong>, <strong>jdykast</strong> and others (?) provided additional code</li>\n		<li><strong>Ruud</strong> cleaned up and audited the code to weed out bugs and completely revised the help text. Maintainer of versions 4.0.3.18 and up.</li>\n		<li>Supported and tested to destruction by the Textpattern community.</li>\n	</ul>\n\n	<p><a href=\"#top\">Back to top</a></p>\n\n	<h2 id=\"api\">Zem Contact Reborn&#8217;s <span class=\"caps\">API</span></h2>\n\n	<p>The plugin <span class=\"caps\">API</span> of zem contact, developed by Tranquillo, is similar to the comments <span class=\"caps\">API</span> of Textpattern, which is explained in the Textbook <a href=\"http://textpattern.net/wiki/index.php?title=Plugin_Development_Topics\">Plugin Development Topics</a> and <a href=\"http://textpattern.net/wiki/index.php?title=Combat_Comment_Spam\">Combat Comment Spam</a>.</p>\n\n	<p>Two callback events exist in zem_contact_reborn:\n	<ul>\n		<li><code>zemcontact.submit</code> is called after the form is submitted and the values are checked if empty or valid email addresses, but before the mail is sent.</li>\n		<li><code>zemcontact.form</code> let&#8217;s you insert content in the contact form as displayed to the visitor.</li>\n	</ul></p>\n\n	<p>For reference here are the commands that will be interesting to plugin developers:</p>\n\n<pre><code>// This will call your function before the form is submitted\n// So you can analyse the submitted data\nregister_callback(&#39;abc_myfunction&#39;,&#39;zemcontact.submit&#39;);\n</code>\n<code>// This will call your function and add the output (use return $mystuff)\n// to the contact-form.\nregister_callback(&#39;abc_myotherfunction2&#39;,&#39;zemcontact.form&#39;);\n</code>\n<code>// To get hold of the form-variables you can use\nglobal zem_contact_form;\n</code>\n<code>// With the following two lines you can tell zem_contact if your\n// plugin found spam\n$evaluator =&#38; get_zemcontact_evaluator();\n</code>\n<code>// The passed value must be non-zero to mark the content as spam.\n// Value must be a number between 0 and 1.\n$evaluator -&#62; add_zemcontact_status(1);\n</code></pre>\n\n	<p>Multiple plugins can be active at the same time and each of them can mark the submitted content as spam and prevent the form from being submitted.</p>\n\n	<p><strong>An example of a plug-in connecting to Zem Contact Reborn&#8217;s API:</strong></p>\n\n<pre><code>register_callback(&#39;pap_zemcontact_form&#39;,&#39;zemcontact.form&#39;);\nregister_callback(&#39;pap_zemcontact_submit&#39;,&#39;zemcontact.submit&#39;);\n</code>\n<code>function pap_zemcontact_form() {\n  $field = &#39;&#60;div style=&#34;display:none&#34;&#62;&#39;.\n    finput(&#39;text&#39;,&#39;phone&#39;,ps(&#39;phone&#39;),&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;phone&#39;).&#39;&#60;br /&#62;&#39;.\n    finput(&#39;text&#39;,&#39;mail&#39;,ps(&#39;mail&#39;),&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;mail&#39;).&#39;&#60;/div&#62;&#39;;\n  return $field;&#60;/code&#62;\n}\n</code>\n<code>function pap_zemcontact_submit() {\n  $checking_mail_field = trim(ps(&#39;mail&#39;));\n  $checking_phone_field = trim(ps(&#39;phone&#39;));\n</code>\n<code>  $evaluation =&#38; get_zemcontact_evaluator();\n</code>\n<code>  // If the hidden fields are filled out, the contact form won&#39;t be submitted!\n  if ($checking_mail_field != &#39;&#39; or $checking_phone_field != &#39;&#39;) {\n    $evaluation -&#62; add_zemcontact_status(1);\n  }\n  return;\n}\n</code></pre>\n\n	<p><a href=\"#top\">Back to top</a></p>','\nfunction zem_contact($atts, $thing = \'\')\n{\n	global $sitename, $prefs, $production_status, $zem_contact_from,\n		$zem_contact_recipient, $zem_contact_error, $zem_contact_submit,\n		$zem_contact_form, $zem_contact_labels, $zem_contact_values;\n\n	extract(zem_contact_lAtts(array(\n		\'copysender\'	=> 0,\n		\'form\'		=> \'\',\n		\'from\'		=> \'\',\n		\'from_form\'	=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'contact\'),\n		\'redirect\'	=> \'\',\n		\'show_error\'	=> 1,\n		\'show_input\'	=> 1,\n		\'send_article\'	=> 0,\n		\'subject\'	=> zem_contact_gTxt(\'email_subject\', html_entity_decode($sitename,ENT_QUOTES)),\n		\'subject_form\'	=> \'\',\n		\'to\'		=> \'\',\n		\'to_form\'	=> \'\',\n		\'thanks\'	=> graf(zem_contact_gTxt(\'email_thanks\')),\n		\'thanks_form\'	=> \'\'\n	), $atts));\n\n	unset($atts[\'show_error\'], $atts[\'show_input\']);\n	$zem_contact_form_id = md5(serialize($atts).preg_replace(\'/[\\t\\s\\r\\n]/\',\'\',$thing));\n	$zem_contact_submit = (ps(\'zem_contact_form_id\') == $zem_contact_form_id);\n\n	if (!is_callable(\'mail\'))\n	{\n		return ($production_status == \'live\') ?\n			zem_contact_gTxt(\'mail_sorry\') :\n			gTxt(\'warn_mail_unavailable\');\n	}\n\n	static $headers_sent = false;\n	if (!$headers_sent) {\n		header(\'Last-Modified: \'.gmdate(\'D, d M Y H:i:s\',time()-3600*24*7).\' GMT\');\n		header(\'Expires: \'.gmdate(\'D, d M Y H:i:s\',time()+600).\' GMT\');\n		header(\'Cache-Control: no-cache, must-revalidate\');\n		$headers_sent = true;\n	}\n\n	$nonce   = mysql_real_escape_string(ps(\'zem_contact_nonce\'));\n	$renonce = false;\n\n	if ($zem_contact_submit)\n	{\n		safe_delete(\'txp_discuss_nonce\', \'issue_time < date_sub(now(), interval 10 minute)\');\n		if ($rs = safe_row(\'used\', \'txp_discuss_nonce\', \"nonce = \'$nonce\'\"))\n		{\n			if ($rs[\'used\'])\n			{\n				unset($zem_contact_error);\n				$zem_contact_error[] = zem_contact_gTxt(\'form_used\');\n				$renonce = true;\n				$_POST = array();\n				$_POST[\'zem_contact_submit\'] = TRUE;\n				$_POST[\'zem_contact_form_id\'] = $zem_contact_form_id;\n				$_POST[\'zem_contact_nonce\'] = $nonce;\n			}\n		}\n		else\n		{\n			$zem_contact_error[] = zem_contact_gTxt(\'form_expired\');\n			$renonce = true;\n		}\n	}\n\n	if ($zem_contact_submit and $nonce and !$renonce)\n	{\n		$zem_contact_nonce = $nonce;\n	}\n\n	elseif (!$show_error or $show_input)\n	{\n		$zem_contact_nonce = md5(uniqid(rand(), true));\n		safe_insert(\'txp_discuss_nonce\', \"issue_time = now(), nonce = \'$zem_contact_nonce\'\");\n	}\n\n	$form = ($form) ? fetch_form($form) : $thing;\n\n	if (empty($form))\n	{\n		$form = \'\n<txp:zem_contact_text label=\"\'.zem_contact_gTxt(\'name\').\'\" /><br />\n<txp:zem_contact_email /><br />\'.\n($send_article ? \'<txp:zem_contact_email send_article=\"1\" label=\"\'.zem_contact_gTxt(\'recipient\').\'\" /><br />\' : \'\').\n\'<txp:zem_contact_textarea /><br />\n<txp:zem_contact_submit />\n\';\n	}\n\n	$form = parse($form);\n\n	if ($to_form)\n	{\n		$to = parse(fetch_form($to_form));\n	}\n\n	if (!$to and !$send_article)\n	{\n		return zem_contact_gTxt(\'to_missing\');\n	}\n\n	$out = \'\';\n\n	if (!$zem_contact_submit) {\n	  # don\'t show errors or send mail\n	}\n\n	elseif (!empty($zem_contact_error))\n	{\n		if ($show_error or !$show_input)\n		{\n			$out .= n.\'<ul class=\"zemError\">\';\n\n			foreach (array_unique($zem_contact_error) as $error)\n			{\n				$out .= n.t.\'<li>\'.$error.\'</li>\';\n			}\n\n			$out .= n.\'</ul>\';\n\n			if (!$show_input) return $out;\n		}\n	}\n\n	elseif ($show_input and is_array($zem_contact_form))\n	{\n		/// load and check spam plugins/\n		callback_event(\'zemcontact.submit\');\n		$evaluation =& get_zemcontact_evaluator();\n		$clean = $evaluation->get_zemcontact_status();\n		if ($clean != 0) {\n			return zem_contact_gTxt(\'spam\');\n		}\n\n		if ($from_form)\n		{\n			$from = parse(fetch_form($from_form));\n		}\n\n		if ($subject_form)\n		{\n			$subject = parse(fetch_form($subject_form));\n		}\n\n		$sep = !is_windows() ? \"\\n\" : \"\\r\\n\";\n\n		$msg = array();\n\n		foreach ($zem_contact_labels as $name => $label)\n		{\n			if (!trim($zem_contact_values[$name])) continue;\n			$msg[] = $label.\': \'.$zem_contact_values[$name];\n		}\n\n		if ($send_article)\n		{\n			global $thisarticle;\n			$subject = str_replace(\'&#38;\', \'&\', $thisarticle[\'title\']);\n			$msg[] = permlinkurl($thisarticle);\n			$msg[] = $subject;\n			$s_ar = array(\'&#8216;\', \'&#8217;\', \'&#8220;\', \'&#8221;\', \'&#8217;\', \'&#8242;\', \'&#8243;\', \'&#8230;\', \'&#8211;\', \'&#8212;\', \'&#215;\', \'&#8482;\', \'&#174;\', \'&#169;\', \'&lt;\', \'&gt;\', \'&quot;\', \'&amp;\', \'&#38;\', \"\\t\", \'<p\');\n			if ($prefs[\'override_emailcharset\'] and is_callable(\'utf8_decode\')) {\n				$r_ar = array(\"\'\", \"\'\", \'\"\', \'\"\', \"\'\", \"\'\", \'\"\', \'...\', \'-\', \'--\', \'x\', \'[tm]\', \'(r)\', \'(c)\', \'<\', \'>\', \'\"\', \'&\', \'&\', \' \', \"\\n<p\");\n			}\n			else\n			{\n				$r_ar = array(\'‘\', \'’\', \'“\', \'”\', \'’\', \'′\', \'″\', \'…\', \'–\', \'—\', \'×\', \'™\', \'®\', \'©\', \'<\', \'>\', \'\"\', \'&\', \'&\', \' \', \"\\n<p\");\n			}\n			$msg[] = trim(strip_tags(str_replace($s_ar,$r_ar,(trim(strip_tags($thisarticle[\'excerpt\'])) ? $thisarticle[\'excerpt\'] : $thisarticle[\'body\']))));\n			if (empty($zem_contact_recipient))\n			{\n				return zem_contact_gTxt(\'field_missing\', zem_contact_gTxt(\'recipient\'));\n			}\n			else\n			{\n				$to = $zem_contact_recipient;\n			}\n		}\n\n		$msg = join(\"\\n\\n\", $msg);\n		$msg = str_replace(\"\\r\\n\", \"\\n\", $msg);\n		$msg = str_replace(\"\\r\", \"\\n\", $msg);\n		$msg = str_replace(\"\\n\", $sep, $msg);\n\n		if ($from)\n		{\n			$reply = $zem_contact_from;\n		}\n\n		else\n		{\n			$from = $zem_contact_from;\n			$reply = \'\';\n		}\n\n		$from    = zem_contact_strip($from);\n		$to      = zem_contact_strip($to);\n		$subject = zem_contact_strip($subject);\n		$reply   = zem_contact_strip($reply);\n		$msg     = zem_contact_strip($msg, FALSE);\n\n		if ($prefs[\'override_emailcharset\'] and is_callable(\'utf8_decode\'))\n		{\n			$charset = \'ISO-8859-1\';\n			$subject = utf8_decode($subject);\n			$msg     = utf8_decode($msg);\n		}\n\n		else\n		{\n			$charset = \'UTF-8\';\n		}\n\n		$subject = zem_contact_mailheader($subject, \'text\');\n\n		$headers = \'From: \'.$from.\n			($reply ? ($sep.\'Reply-To: \'.$reply) : \'\').\n			$sep.\'X-Mailer: Textpattern (zem_contact_reborn)\'.\n			$sep.\'X-Originating-IP: \'.zem_contact_strip((!empty($_SERVER[\'HTTP_X_FORWARDED_FOR\']) ? $_SERVER[\'HTTP_X_FORWARDED_FOR\'].\' via \' : \'\').$_SERVER[\'REMOTE_ADDR\']).\n			$sep.\'Content-Transfer-Encoding: 8bit\'.\n			$sep.\'Content-Type: text/plain; charset=\"\'.$charset.\'\"\';\n\n		safe_update(\'txp_discuss_nonce\', \"used = \'1\', issue_time = now()\", \"nonce = \'$nonce\'\");\n\n		if (mail($to, $subject, $msg, $headers))\n		{\n			$_POST = array();\n\n			if ($copysender and $zem_contact_from)\n			{\n				mail(zem_contact_strip($zem_contact_from), $subject, $msg, $headers);\n			}\n\n			if ($redirect)\n			{\n				while (@ob_end_clean());\n				$uri = hu.ltrim($redirect,\'/\');\n				if (empty($_SERVER[\'FCGI_ROLE\']) and empty($_ENV[\'FCGI_ROLE\']))\n				{\n					txp_status_header(\'303 See Other\');\n					header(\'Location: \'.$uri);\n					header(\'Connection: close\');\n					header(\'Content-Length: 0\');\n				}\n				else\n				{\n					$uri = htmlspecialchars($uri);\n					$refresh = zem_contact_gTxt(\'refresh\');\n					echo <<<END\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n	<title>$sitename</title>\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n	<meta http-equiv=\"refresh\" content=\"0;url=$uri\" />\n</head>\n<body>\n<a href=\"$uri\">$refresh</a>\n</body>\n</html>\nEND;\n				}\n				exit;\n			}\n\n			else\n			{\n				return \'<div class=\"zemThanks\" id=\"zcr\'.$zem_contact_form_id.\'\">\' .\n					($thanks_form ? fetch_form($thanks_form) : $thanks) .\n					\'</div>\';\n			}\n		}\n\n		else\n		{\n			$out .= graf(zem_contact_gTxt(\'mail_sorry\'));\n		}\n	}\n\n	if ($show_input and !$send_article or gps(\'zem_contact_send_article\'))\n	{\n		return \'<form method=\"post\"\'.((!$show_error and $zem_contact_error) ? \'\' : \' id=\"zcr\'.$zem_contact_form_id.\'\"\').\' class=\"zemContactForm\" action=\"\'.htmlspecialchars(serverSet(\'REQUEST_URI\')).\'#zcr\'.$zem_contact_form_id.\'\">\'.\n			( $label ? n.\'<fieldset>\' : n.\'<div>\' ).\n			( $label ? n.\'<legend>\'.htmlspecialchars($label).\'</legend>\' : \'\' ).\n			$out.\n			n.\'<input type=\"hidden\" name=\"zem_contact_nonce\" value=\"\'.$zem_contact_nonce.\'\" />\'.\n			n.\'<input type=\"hidden\" name=\"zem_contact_form_id\" value=\"\'.$zem_contact_form_id.\'\" />\'.\n			$form.\n			callback_event(\'zemcontact.form\').\n			( $label ? (n.\'</fieldset>\') : (n.\'</div>\') ).\n			n.\'</form>\';\n	}\n\n	return \'\';\n}\n\nfunction zem_contact_strip($str, $header = TRUE) {\n	if ($header) $str = strip_rn($str);\n	return preg_replace(\'/[\\x00]/\', \' \', $str);\n}\n\nfunction zem_contact_text($atts)\n{\n	global $zem_contact_error, $zem_contact_submit;\n\n	extract(zem_contact_lAtts(array(\n		\'break\'		=> br,\n		\'default\'	=> \'\',\n		\'isError\'	=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'text\'),\n		\'max\'		=> 100,\n		\'min\'		=> 0,\n		\'name\'		=> \'\',\n		\'required\'	=> 1,\n		\'size\'		=> \'\'\n	), $atts));\n\n	$min = intval($min);\n	$max = intval($max);\n	$size = intval($size);\n\n	if (empty($name)) $name = zem_contact_label2name($label);\n\n	if ($zem_contact_submit)\n	{\n		$value = trim(ps($name));\n		$utf8len = preg_match_all(\"/./su\", $value, $utf8ar);\n		$hlabel = htmlspecialchars($label);\n\n		if (strlen($value))\n		{\n			if (!$utf8len)\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'invalid_utf8\', $hlabel);\n				$isError = \"errorElement\";\n			}\n\n			elseif ($min and $utf8len < $min)\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'min_warning\', $hlabel, $min);\n				$isError = \"errorElement\";\n			}\n\n			elseif ($max and $utf8len > $max)\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'max_warning\', $hlabel, $max);\n				$isError = \"errorElement\";\n				#$value = join(\'\',array_slice($ar[0],0,$max));\n			}\n\n			else\n			{\n				zem_contact_store($name, $label, $value);\n			}\n		}\n		elseif ($required)\n		{\n			$zem_contact_error[] = zem_contact_gTxt(\'field_missing\', $hlabel);\n			$isError = \"errorElement\";\n		}\n	}\n\n	else\n	{\n		$value = $default;\n	}\n\n	$size = ($size) ? \' size=\"\'.$size.\'\"\' : \'\';\n	$maxlength = ($max) ? \' maxlength=\"\'.$max.\'\"\' : \'\';\n\n	$zemRequired = $required ? \'zemRequired\' : \'\';\n\n        return \'<label for=\"\'.$name.\'\" class=\"zemText \'.$zemRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break.\n		\'<input type=\"text\" id=\"\'.$name.\'\" class=\"zemText \'.$zemRequired.$isError.\'\" name=\"\'.$name.\'\" value=\"\'.htmlspecialchars($value).\'\"\'.$size.$maxlength.\' />\';\n}\n\nfunction zem_contact_textarea($atts)\n{\n	global $zem_contact_error, $zem_contact_submit;\n\n	extract(zem_contact_lAtts(array(\n		\'break\'		=> br,\n		\'cols\'		=> 58,\n		\'default\'	=> \'\',\n		\'isError\'	=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'message\'),\n		\'max\'		=> 10000,\n		\'min\'		=> 0,\n		\'name\'		=> \'\',\n		\'required\'	=> 1,\n		\'rows\'		=> 8\n	), $atts));\n\n	$min = intval($min);\n	$max = intval($max);\n	$cols = intval($cols);\n	$rows = intval($rows);\n\n	if (empty($name)) $name = zem_contact_label2name($label);\n\n	if ($zem_contact_submit)\n	{\n		$value = preg_replace(\'/^\\s*[\\r\\n]/\', \'\', rtrim(ps($name)));\n		$utf8len = preg_match_all(\"/./su\", ltrim($value), $utf8ar);\n		$hlabel = htmlspecialchars($label);\n\n		if (strlen(ltrim($value)))\n		{\n			if (!$utf8len)\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'invalid_utf8\', $hlabel);\n				$isError = \"errorElement\";\n			}\n\n			elseif ($min and $utf8len < $min)\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'min_warning\', $hlabel, $min);\n				$isError = \"errorElement\";\n			}\n\n			elseif ($max and $utf8len > $max)\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'max_warning\', $hlabel, $max);\n				$isError = \"errorElement\";\n				#$value = join(\'\',array_slice($utf8ar[0],0,$max));\n			}\n\n			else\n			{\n				zem_contact_store($name, $label, $value);\n			}\n		}\n\n		elseif ($required)\n		{\n			$zem_contact_error[] = zem_contact_gTxt(\'field_missing\', $hlabel);\n			$isError = \"errorElement\";\n		}\n	}\n\n	else\n	{\n		$value = $default;\n	}\n\n	$zemRequired = $required ? \'zemRequired\' : \'\';\n\n	return \'<label for=\"\'.$name.\'\" class=\"zemTextarea \'.$zemRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break.\n		\'<textarea id=\"\'.$name.\'\" class=\"zemTextarea \'.$zemRequired.$isError.\'\" name=\"\'.$name.\'\" cols=\"\'.$cols.\'\" rows=\"\'.$rows.\'\">\'.htmlspecialchars($value).\'</textarea>\';\n}\n\nfunction zem_contact_email($atts)\n{\n	global $zem_contact_error, $zem_contact_submit, $zem_contact_from, $zem_contact_recipient;\n\n	extract(zem_contact_lAtts(array(\n		\'default\'	=> \'\',\n		\'isError\'	=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'email\'),\n		\'max\'		=> 100,\n		\'min\'		=> 0,\n		\'name\'		=> \'\',\n		\'required\'	=> 1,\n		\'break\'		=> br,\n		\'size\'		=> \'\',\n		\'send_article\'	=> 0\n	), $atts));\n\n	if (empty($name)) $name = zem_contact_label2name($label);\n\n	$email = $zem_contact_submit ? trim(ps($name)) : $default;\n\n	if ($zem_contact_submit and strlen($email))\n	{\n		if (!is_valid_email($email))\n		{\n			$zem_contact_error[] = zem_contact_gTxt(\'invalid_email\', htmlspecialchars($email));\n			$isError = \"errorElement\";\n		}\n\n		else\n		{\n			preg_match(\"/@(.+)$/\", $email, $match);\n			$domain = $match[1];\n\n			if (is_callable(\'checkdnsrr\') and checkdnsrr(\'textpattern.com.\',\'A\') and !checkdnsrr($domain.\'.\',\'MX\') and !checkdnsrr($domain.\'.\',\'A\'))\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'invalid_host\', htmlspecialchars($domain));\n				$isError = \"errorElement\";\n			}\n\n			else\n			{\n				if ($send_article) {\n					$zem_contact_recipient = $email;\n				}\n				else {\n					$zem_contact_from = $email;\n				}\n			}\n		}\n	}\n\n	return zem_contact_text(array(\n		\'default\'	=> $email,\n		\'isError\'	=> $isError,\n		\'label\'		=> $label,\n		\'max\'		=> $max,\n		\'min\'		=> $min,\n		\'name\'		=> $name,\n		\'required\'	=> $required,\n		\'break\'		=> $break,\n		\'size\'		=> $size\n	));\n}\n\nfunction zem_contact_select($atts)\n{\n	global $zem_contact_error, $zem_contact_submit;\n\n	extract(zem_contact_lAtts(array(\n		\'name\'		=> \'\',\n		\'break\'		=> \' \',\n		\'delimiter\'	=> \',\',\n		\'isError\'	=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'option\'),\n		\'list\'		=> zem_contact_gTxt(\'general_inquiry\'),\n		\'required\'	=> 1,\n		\'selected\'	=> \'\'\n	), $atts));\n\n	if (empty($name)) $name = zem_contact_label2name($label);\n\n	$list = array_map(\'trim\', split($delimiter, preg_replace(\'/[\\r\\n\\t\\s]+/\', \' \',$list)));\n\n	if ($zem_contact_submit)\n	{\n		$value = trim(ps($name));\n\n		if (strlen($value))\n		{\n			if (in_array($value, $list))\n			{\n				zem_contact_store($name, $label, $value);\n			}\n\n			else\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'invalid_value\', htmlspecialchars($label), htmlspecialchars($value));\n				$isError = \"errorElement\";\n			}\n		}\n\n		elseif ($required)\n		{\n			$zem_contact_error[] = zem_contact_gTxt(\'field_missing\', htmlspecialchars($label));\n			$isError = \"errorElement\";\n		}\n	}\n	else\n	{\n		$value = $selected;\n	}\n\n	$out = \'\';\n\n	foreach ($list as $item)\n	{\n		$out .= n.t.\'<option\'.($item == $value ? \' selected=\"selected\">\' : \'>\').(strlen($item) ? htmlspecialchars($item) : \' \').\'</option>\';\n	}\n\n	$zemRequired = $required ? \'zemRequired\' : \'\';\n\n	return \'<label for=\"\'.$name.\'\" class=\"zemSelect \'.$zemRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break.\n		n.\'<select id=\"\'.$name.\'\" name=\"\'.$name.\'\" class=\"zemSelect \'.$zemRequired.$isError.\'\">\'.\n			$out.\n		n.\'</select>\';\n}\n\nfunction zem_contact_checkbox($atts)\n{\n	global $zem_contact_error, $zem_contact_submit;\n\n	extract(zem_contact_lAtts(array(\n		\'break\'		=> \' \',\n		\'checked\'	=> 0,\n		\'isError\'	=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'checkbox\'),\n		\'name\'		=> \'\',\n		\'required\'	=> 1\n	), $atts));\n\n	if (empty($name)) $name = zem_contact_label2name($label);\n\n	if ($zem_contact_submit)\n	{\n		$value = (bool) ps($name);\n\n		if ($required and !$value)\n		{\n			$zem_contact_error[] = zem_contact_gTxt(\'field_missing\', htmlspecialchars($label));\n			$isError = \"errorElement\";\n		}\n\n		else\n		{\n			zem_contact_store($name, $label, $value ? gTxt(\'yes\') : gTxt(\'no\'));\n		}\n	}\n\n	else {\n		$value = $checked;\n	}\n\n	$zemRequired = $required ? \'zemRequired\' : \'\';\n\n	return \'<input type=\"checkbox\" id=\"\'.$name.\'\" class=\"zemCheckbox \'.$zemRequired.$isError.\'\" name=\"\'.$name.\'\"\'.\n		($value ? \' checked=\"checked\"\' : \'\').\' />\'.$break.\n		\'<label for=\"\'.$name.\'\" class=\"zemCheckbox \'.$zemRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\';\n}\n\nfunction zem_contact_serverinfo($atts)\n{\n	global $zem_contact_submit;\n\n	extract(zem_contact_lAtts(array(\n		\'label\'		=> \'\',\n		\'name\'		=> \'\'\n	), $atts));\n\n	if (empty($name)) $name = zem_contact_label2name($label);\n\n	if (strlen($name) and $zem_contact_submit)\n	{\n		if (!$label) $label = $name;\n		zem_contact_store($name, $label, serverSet($name));\n	}\n}\n\nfunction zem_contact_secret($atts, $thing = \'\')\n{\n	global $zem_contact_submit;\n\n	extract(zem_contact_lAtts(array(\n		\'name\'	=> \'\',\n		\'label\'	=> zem_contact_gTxt(\'secret\'),\n		\'value\'	=> \'\'\n	), $atts));\n\n	$name = zem_contact_label2name($name ? $name : $label);\n\n	if ($zem_contact_submit)\n	{\n		if ($thing) $value = trim(parse($thing));\n		zem_contact_store($name, $label, $value);\n	}\n\n	return \'\';\n}\n\nfunction zem_contact_radio($atts)\n{\n	global $zem_contact_error, $zem_contact_submit, $zem_contact_values;\n\n	extract(zem_contact_lAtts(array(\n		\'break\'		=> \' \',\n		\'checked\'	=> 0,\n		\'group\'		=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'option\'),\n		\'name\'		=> \'\'\n	), $atts));\n\n	static $cur_name = \'\';\n	static $cur_group = \'\';\n\n	if (!$name and !$group and !$cur_name and !$cur_group) {\n		$cur_group = zem_contact_gTxt(\'radio\');\n		$cur_name = $cur_group;\n	}\n	if ($group and !$name and $group != $cur_group) $name = $group;\n\n	if ($name) $cur_name = $name;\n	else $name = $cur_name;\n\n	if ($group) $cur_group = $group;\n	else $group = $cur_group;\n\n	$id   = \'q\'.md5($name.\'=>\'.$label);\n	$name = zem_contact_label2name($name);\n\n	if ($zem_contact_submit)\n	{\n		$is_checked = (ps($name) == $id);\n\n		if ($is_checked or $checked and !isset($zem_contact_values[$name]))\n		{\n			zem_contact_store($name, $group, $label);\n		}\n	}\n\n	else\n	{\n		$is_checked = $checked;\n	}\n\n	return \'<input value=\"\'.$id.\'\" type=\"radio\" id=\"\'.$id.\'\" class=\"zemRadio \'.$name.\'\" name=\"\'.$name.\'\"\'.\n		( $is_checked ? \' checked=\"checked\" />\' : \' />\').$break.\n		\'<label for=\"\'.$id.\'\" class=\"zemRadio \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\';\n}\n\nfunction zem_contact_send_article($atts)\n{\n	if (!isset($_REQUEST[\'zem_contact_send_article\'])) {\n		$linktext = (empty($atts[\'linktext\'])) ? zem_contact_gTxt(\'send_article\') : $atts[\'linktext\'];\n		$join = (empty($_SERVER[\'QUERY_STRING\'])) ? \'?\' : \'&\';\n		$href = $_SERVER[\'REQUEST_URI\'].$join.\'zem_contact_send_article=yes\';\n		return \'<a href=\"\'.htmlspecialchars($href).\'\">\'.htmlspecialchars($linktext).\'</a>\';\n	}\n	return;\n}\n\nfunction zem_contact_submit($atts, $thing)\n{\n	extract(zem_contact_lAtts(array(\n		\'button\'	=> 0,\n		\'label\'		=> zem_contact_gTxt(\'send\')\n	), $atts));\n\n	$label = htmlspecialchars($label);\n\n	if ($button or strlen($thing))\n	{\n		return \'<button type=\"submit\" class=\"zemSubmit\" name=\"zem_contact_submit\" value=\"\'.$label.\'\">\'.($thing ? trim(parse($thing)) : $label).\'</button>\';\n	}\n	else\n	{\n		return \'<input type=\"submit\" class=\"zemSubmit\" name=\"zem_contact_submit\" value=\"\'.$label.\'\" />\';\n	}\n}\n\nfunction zem_contact_lAtts($arr, $atts)\n{\n	foreach(array(\'button\', \'copysender\', \'checked\', \'required\', \'send_article\', \'show_input\', \'show_error\') as $key)\n	{\n		if (isset($atts[$key]))\n		{\n			$atts[$key] = ($atts[$key] === \'yes\' or intval($atts[$key])) ? 1 : 0;\n		}\n	}\n	if (isset($atts[\'break\']) and $atts[\'break\'] == \'br\') $atts[\'break\'] = \'<br />\';\n	return lAtts($arr, $atts);\n}\n\nclass zemcontact_evaluation\n{\n	var $status;\n\n	function zemcontact_evaluation() {\n		$this->status = 0;\n	}\n\n	function add_zemcontact_status($check) {\n		$this->status += $check;\n	}\n\n	function get_zemcontact_status() {\n		return $this->status;\n	}\n}\n\nfunction &get_zemcontact_evaluator()\n{\n	static $instance;\n\n	if(!isset($instance)) {\n		$instance = new zemcontact_evaluation();\n	}\n	return $instance;\n}\n\nfunction zem_contact_label2name($label)\n{\n	$label = trim($label);\n	if (strlen($label) == 0) return \'invalid\';\n	if (strlen($label) <= 32 and preg_match(\'/^[a-zA-Z][A-Za-z0-9:_-]*$/\', $label)) return $label;\n	else return \'q\'.md5($label);\n}\n\nfunction zem_contact_store($name, $label, $value)\n{\n	global $zem_contact_form, $zem_contact_labels, $zem_contact_values;\n	$zem_contact_form[$label] = $value;\n	$zem_contact_labels[$name] = $label;\n	$zem_contact_values[$name] = $value;\n}\n\nfunction zem_contact_mailheader($string, $type)\n{\n	global $prefs;\n	if (!strstr($string,\'=?\') and !preg_match(\'/[\\x00-\\x1F\\x7F-\\xFF]/\', $string)) {\n		if (\"phrase\" == $type) {\n			if (preg_match(\'/[][()<>@,;:\".\\x5C]/\', $string)) {\n				$string = \'\"\'. strtr($string, array(\"\\\\\" => \"\\\\\\\\\", \'\"\' => \'\\\"\')) . \'\"\';\n			}\n		}\n		elseif (\"text\" != $type) {\n			trigger_error(\'Unknown encode_mailheader type\', E_USER_WARNING);\n		}\n		return $string;\n	}\n	if ($prefs[\'override_emailcharset\']) {\n		$start = \'=?ISO-8859-1?B?\';\n		$pcre  = \'/.{1,42}/s\';\n	}\n	else {\n		$start = \'=?UTF-8?B?\';\n		$pcre  = \'/.{1,45}(?=[\\x00-\\x7F\\xC0-\\xFF]|$)/s\';\n	}\n	$end = \'?=\';\n	$sep = is_windows() ? \"\\r\\n\" : \"\\n\";\n	preg_match_all($pcre, $string, $matches);\n	return $start . join($end.$sep.\' \'.$start, array_map(\'base64_encode\',$matches[0])) . $end;\n}\n','\nfunction zem_contact($atts, $thing = \'\')\n{\n	global $sitename, $prefs, $production_status, $zem_contact_from,\n		$zem_contact_recipient, $zem_contact_error, $zem_contact_submit,\n		$zem_contact_form, $zem_contact_labels, $zem_contact_values;\n\n	extract(zem_contact_lAtts(array(\n		\'copysender\'	=> 0,\n		\'form\'		=> \'\',\n		\'from\'		=> \'\',\n		\'from_form\'	=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'contact\'),\n		\'redirect\'	=> \'\',\n		\'show_error\'	=> 1,\n		\'show_input\'	=> 1,\n		\'send_article\'	=> 0,\n		\'subject\'	=> zem_contact_gTxt(\'email_subject\', html_entity_decode($sitename,ENT_QUOTES)),\n		\'subject_form\'	=> \'\',\n		\'to\'		=> \'\',\n		\'to_form\'	=> \'\',\n		\'thanks\'	=> graf(zem_contact_gTxt(\'email_thanks\')),\n		\'thanks_form\'	=> \'\'\n	), $atts));\n\n	unset($atts[\'show_error\'], $atts[\'show_input\']);\n	$zem_contact_form_id = md5(serialize($atts).preg_replace(\'/[\\t\\s\\r\\n]/\',\'\',$thing));\n	$zem_contact_submit = (ps(\'zem_contact_form_id\') == $zem_contact_form_id);\n\n	if (!is_callable(\'mail\'))\n	{\n		return ($production_status == \'live\') ?\n			zem_contact_gTxt(\'mail_sorry\') :\n			gTxt(\'warn_mail_unavailable\');\n	}\n\n	static $headers_sent = false;\n	if (!$headers_sent) {\n		header(\'Last-Modified: \'.gmdate(\'D, d M Y H:i:s\',time()-3600*24*7).\' GMT\');\n		header(\'Expires: \'.gmdate(\'D, d M Y H:i:s\',time()+600).\' GMT\');\n		header(\'Cache-Control: no-cache, must-revalidate\');\n		$headers_sent = true;\n	}\n\n	$nonce   = mysql_real_escape_string(ps(\'zem_contact_nonce\'));\n	$renonce = false;\n\n	if ($zem_contact_submit)\n	{\n		safe_delete(\'txp_discuss_nonce\', \'issue_time < date_sub(now(), interval 10 minute)\');\n		if ($rs = safe_row(\'used\', \'txp_discuss_nonce\', \"nonce = \'$nonce\'\"))\n		{\n			if ($rs[\'used\'])\n			{\n				unset($zem_contact_error);\n				$zem_contact_error[] = zem_contact_gTxt(\'form_used\');\n				$renonce = true;\n				$_POST = array();\n				$_POST[\'zem_contact_submit\'] = TRUE;\n				$_POST[\'zem_contact_form_id\'] = $zem_contact_form_id;\n				$_POST[\'zem_contact_nonce\'] = $nonce;\n			}\n		}\n		else\n		{\n			$zem_contact_error[] = zem_contact_gTxt(\'form_expired\');\n			$renonce = true;\n		}\n	}\n\n	if ($zem_contact_submit and $nonce and !$renonce)\n	{\n		$zem_contact_nonce = $nonce;\n	}\n\n	elseif (!$show_error or $show_input)\n	{\n		$zem_contact_nonce = md5(uniqid(rand(), true));\n		safe_insert(\'txp_discuss_nonce\', \"issue_time = now(), nonce = \'$zem_contact_nonce\'\");\n	}\n\n	$form = ($form) ? fetch_form($form) : $thing;\n\n	if (empty($form))\n	{\n		$form = \'\n<txp:zem_contact_text label=\"\'.zem_contact_gTxt(\'name\').\'\" /><br />\n<txp:zem_contact_email /><br />\'.\n($send_article ? \'<txp:zem_contact_email send_article=\"1\" label=\"\'.zem_contact_gTxt(\'recipient\').\'\" /><br />\' : \'\').\n\'<txp:zem_contact_textarea /><br />\n<txp:zem_contact_submit />\n\';\n	}\n\n	$form = parse($form);\n\n	if ($to_form)\n	{\n		$to = parse(fetch_form($to_form));\n	}\n\n	if (!$to and !$send_article)\n	{\n		return zem_contact_gTxt(\'to_missing\');\n	}\n\n	$out = \'\';\n\n	if (!$zem_contact_submit) {\n	  # don\'t show errors or send mail\n	}\n\n	elseif (!empty($zem_contact_error))\n	{\n		if ($show_error or !$show_input)\n		{\n			$out .= n.\'<ul class=\"zemError\">\';\n\n			foreach (array_unique($zem_contact_error) as $error)\n			{\n				$out .= n.t.\'<li>\'.$error.\'</li>\';\n			}\n\n			$out .= n.\'</ul>\';\n\n			if (!$show_input) return $out;\n		}\n	}\n\n	elseif ($show_input and is_array($zem_contact_form))\n	{\n		/// load and check spam plugins/\n		callback_event(\'zemcontact.submit\');\n		$evaluation =& get_zemcontact_evaluator();\n		$clean = $evaluation->get_zemcontact_status();\n		if ($clean != 0) {\n			return zem_contact_gTxt(\'spam\');\n		}\n\n		if ($from_form)\n		{\n			$from = parse(fetch_form($from_form));\n		}\n\n		if ($subject_form)\n		{\n			$subject = parse(fetch_form($subject_form));\n		}\n\n		$sep = !is_windows() ? \"\\n\" : \"\\r\\n\";\n\n		$msg = array();\n\n		foreach ($zem_contact_labels as $name => $label)\n		{\n			if (!trim($zem_contact_values[$name])) continue;\n			$msg[] = $label.\': \'.$zem_contact_values[$name];\n		}\n\n		if ($send_article)\n		{\n			global $thisarticle;\n			$subject = str_replace(\'&#38;\', \'&\', $thisarticle[\'title\']);\n			$msg[] = permlinkurl($thisarticle);\n			$msg[] = $subject;\n			$s_ar = array(\'&#8216;\', \'&#8217;\', \'&#8220;\', \'&#8221;\', \'&#8217;\', \'&#8242;\', \'&#8243;\', \'&#8230;\', \'&#8211;\', \'&#8212;\', \'&#215;\', \'&#8482;\', \'&#174;\', \'&#169;\', \'&lt;\', \'&gt;\', \'&quot;\', \'&amp;\', \'&#38;\', \"\\t\", \'<p\');\n			if ($prefs[\'override_emailcharset\'] and is_callable(\'utf8_decode\')) {\n				$r_ar = array(\"\'\", \"\'\", \'\"\', \'\"\', \"\'\", \"\'\", \'\"\', \'...\', \'-\', \'--\', \'x\', \'[tm]\', \'(r)\', \'(c)\', \'<\', \'>\', \'\"\', \'&\', \'&\', \' \', \"\\n<p\");\n			}\n			else\n			{\n				$r_ar = array(\'‘\', \'’\', \'“\', \'”\', \'’\', \'′\', \'″\', \'…\', \'–\', \'—\', \'×\', \'™\', \'®\', \'©\', \'<\', \'>\', \'\"\', \'&\', \'&\', \' \', \"\\n<p\");\n			}\n			$msg[] = trim(strip_tags(str_replace($s_ar,$r_ar,(trim(strip_tags($thisarticle[\'excerpt\'])) ? $thisarticle[\'excerpt\'] : $thisarticle[\'body\']))));\n			if (empty($zem_contact_recipient))\n			{\n				return zem_contact_gTxt(\'field_missing\', zem_contact_gTxt(\'recipient\'));\n			}\n			else\n			{\n				$to = $zem_contact_recipient;\n			}\n		}\n\n		$msg = join(\"\\n\\n\", $msg);\n		$msg = str_replace(\"\\r\\n\", \"\\n\", $msg);\n		$msg = str_replace(\"\\r\", \"\\n\", $msg);\n		$msg = str_replace(\"\\n\", $sep, $msg);\n\n		if ($from)\n		{\n			$reply = $zem_contact_from;\n		}\n\n		else\n		{\n			$from = $zem_contact_from;\n			$reply = \'\';\n		}\n\n		$from    = zem_contact_strip($from);\n		$to      = zem_contact_strip($to);\n		$subject = zem_contact_strip($subject);\n		$reply   = zem_contact_strip($reply);\n		$msg     = zem_contact_strip($msg, FALSE);\n\n		if ($prefs[\'override_emailcharset\'] and is_callable(\'utf8_decode\'))\n		{\n			$charset = \'ISO-8859-1\';\n			$subject = utf8_decode($subject);\n			$msg     = utf8_decode($msg);\n		}\n\n		else\n		{\n			$charset = \'UTF-8\';\n		}\n\n		$subject = zem_contact_mailheader($subject, \'text\');\n\n		$headers = \'From: \'.$from.\n			($reply ? ($sep.\'Reply-To: \'.$reply) : \'\').\n			$sep.\'X-Mailer: Textpattern (zem_contact_reborn)\'.\n			$sep.\'X-Originating-IP: \'.zem_contact_strip((!empty($_SERVER[\'HTTP_X_FORWARDED_FOR\']) ? $_SERVER[\'HTTP_X_FORWARDED_FOR\'].\' via \' : \'\').$_SERVER[\'REMOTE_ADDR\']).\n			$sep.\'Content-Transfer-Encoding: 8bit\'.\n			$sep.\'Content-Type: text/plain; charset=\"\'.$charset.\'\"\';\n\n		safe_update(\'txp_discuss_nonce\', \"used = \'1\', issue_time = now()\", \"nonce = \'$nonce\'\");\n\n		if (mail($to, $subject, $msg, $headers))\n		{\n			$_POST = array();\n\n			if ($copysender and $zem_contact_from)\n			{\n				mail(zem_contact_strip($zem_contact_from), $subject, $msg, $headers);\n			}\n\n			if ($redirect)\n			{\n				while (@ob_end_clean());\n				$uri = hu.ltrim($redirect,\'/\');\n				if (empty($_SERVER[\'FCGI_ROLE\']) and empty($_ENV[\'FCGI_ROLE\']))\n				{\n					txp_status_header(\'303 See Other\');\n					header(\'Location: \'.$uri);\n					header(\'Connection: close\');\n					header(\'Content-Length: 0\');\n				}\n				else\n				{\n					$uri = htmlspecialchars($uri);\n					$refresh = zem_contact_gTxt(\'refresh\');\n					echo <<<END\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n	<title>$sitename</title>\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n	<meta http-equiv=\"refresh\" content=\"0;url=$uri\" />\n</head>\n<body>\n<a href=\"$uri\">$refresh</a>\n</body>\n</html>\nEND;\n				}\n				exit;\n			}\n\n			else\n			{\n				return \'<div class=\"zemThanks\" id=\"zcr\'.$zem_contact_form_id.\'\">\' .\n					($thanks_form ? fetch_form($thanks_form) : $thanks) .\n					\'</div>\';\n			}\n		}\n\n		else\n		{\n			$out .= graf(zem_contact_gTxt(\'mail_sorry\'));\n		}\n	}\n\n	if ($show_input and !$send_article or gps(\'zem_contact_send_article\'))\n	{\n		return \'<form method=\"post\"\'.((!$show_error and $zem_contact_error) ? \'\' : \' id=\"zcr\'.$zem_contact_form_id.\'\"\').\' class=\"zemContactForm\" action=\"\'.htmlspecialchars(serverSet(\'REQUEST_URI\')).\'#zcr\'.$zem_contact_form_id.\'\">\'.\n			( $label ? n.\'<fieldset>\' : n.\'<div>\' ).\n			( $label ? n.\'<legend>\'.htmlspecialchars($label).\'</legend>\' : \'\' ).\n			$out.\n			n.\'<input type=\"hidden\" name=\"zem_contact_nonce\" value=\"\'.$zem_contact_nonce.\'\" />\'.\n			n.\'<input type=\"hidden\" name=\"zem_contact_form_id\" value=\"\'.$zem_contact_form_id.\'\" />\'.\n			$form.\n			callback_event(\'zemcontact.form\').\n			( $label ? (n.\'</fieldset>\') : (n.\'</div>\') ).\n			n.\'</form>\';\n	}\n\n	return \'\';\n}\n\nfunction zem_contact_strip($str, $header = TRUE) {\n	if ($header) $str = strip_rn($str);\n	return preg_replace(\'/[\\x00]/\', \' \', $str);\n}\n\nfunction zem_contact_text($atts)\n{\n	global $zem_contact_error, $zem_contact_submit;\n\n	extract(zem_contact_lAtts(array(\n		\'break\'		=> br,\n		\'default\'	=> \'\',\n		\'isError\'	=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'text\'),\n		\'max\'		=> 100,\n		\'min\'		=> 0,\n		\'name\'		=> \'\',\n		\'required\'	=> 1,\n		\'size\'		=> \'\'\n	), $atts));\n\n	$min = intval($min);\n	$max = intval($max);\n	$size = intval($size);\n\n	if (empty($name)) $name = zem_contact_label2name($label);\n\n	if ($zem_contact_submit)\n	{\n		$value = trim(ps($name));\n		$utf8len = preg_match_all(\"/./su\", $value, $utf8ar);\n		$hlabel = htmlspecialchars($label);\n\n		if (strlen($value))\n		{\n			if (!$utf8len)\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'invalid_utf8\', $hlabel);\n				$isError = \"errorElement\";\n			}\n\n			elseif ($min and $utf8len < $min)\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'min_warning\', $hlabel, $min);\n				$isError = \"errorElement\";\n			}\n\n			elseif ($max and $utf8len > $max)\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'max_warning\', $hlabel, $max);\n				$isError = \"errorElement\";\n				#$value = join(\'\',array_slice($ar[0],0,$max));\n			}\n\n			else\n			{\n				zem_contact_store($name, $label, $value);\n			}\n		}\n		elseif ($required)\n		{\n			$zem_contact_error[] = zem_contact_gTxt(\'field_missing\', $hlabel);\n			$isError = \"errorElement\";\n		}\n	}\n\n	else\n	{\n		$value = $default;\n	}\n\n	$size = ($size) ? \' size=\"\'.$size.\'\"\' : \'\';\n	$maxlength = ($max) ? \' maxlength=\"\'.$max.\'\"\' : \'\';\n\n	$zemRequired = $required ? \'zemRequired\' : \'\';\n\n        return \'<label for=\"\'.$name.\'\" class=\"zemText \'.$zemRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break.\n		\'<input type=\"text\" id=\"\'.$name.\'\" class=\"zemText \'.$zemRequired.$isError.\'\" name=\"\'.$name.\'\" value=\"\'.htmlspecialchars($value).\'\"\'.$size.$maxlength.\' />\';\n}\n\nfunction zem_contact_textarea($atts)\n{\n	global $zem_contact_error, $zem_contact_submit;\n\n	extract(zem_contact_lAtts(array(\n		\'break\'		=> br,\n		\'cols\'		=> 58,\n		\'default\'	=> \'\',\n		\'isError\'	=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'message\'),\n		\'max\'		=> 10000,\n		\'min\'		=> 0,\n		\'name\'		=> \'\',\n		\'required\'	=> 1,\n		\'rows\'		=> 8\n	), $atts));\n\n	$min = intval($min);\n	$max = intval($max);\n	$cols = intval($cols);\n	$rows = intval($rows);\n\n	if (empty($name)) $name = zem_contact_label2name($label);\n\n	if ($zem_contact_submit)\n	{\n		$value = preg_replace(\'/^\\s*[\\r\\n]/\', \'\', rtrim(ps($name)));\n		$utf8len = preg_match_all(\"/./su\", ltrim($value), $utf8ar);\n		$hlabel = htmlspecialchars($label);\n\n		if (strlen(ltrim($value)))\n		{\n			if (!$utf8len)\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'invalid_utf8\', $hlabel);\n				$isError = \"errorElement\";\n			}\n\n			elseif ($min and $utf8len < $min)\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'min_warning\', $hlabel, $min);\n				$isError = \"errorElement\";\n			}\n\n			elseif ($max and $utf8len > $max)\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'max_warning\', $hlabel, $max);\n				$isError = \"errorElement\";\n				#$value = join(\'\',array_slice($utf8ar[0],0,$max));\n			}\n\n			else\n			{\n				zem_contact_store($name, $label, $value);\n			}\n		}\n\n		elseif ($required)\n		{\n			$zem_contact_error[] = zem_contact_gTxt(\'field_missing\', $hlabel);\n			$isError = \"errorElement\";\n		}\n	}\n\n	else\n	{\n		$value = $default;\n	}\n\n	$zemRequired = $required ? \'zemRequired\' : \'\';\n\n	return \'<label for=\"\'.$name.\'\" class=\"zemTextarea \'.$zemRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break.\n		\'<textarea id=\"\'.$name.\'\" class=\"zemTextarea \'.$zemRequired.$isError.\'\" name=\"\'.$name.\'\" cols=\"\'.$cols.\'\" rows=\"\'.$rows.\'\">\'.htmlspecialchars($value).\'</textarea>\';\n}\n\nfunction zem_contact_email($atts)\n{\n	global $zem_contact_error, $zem_contact_submit, $zem_contact_from, $zem_contact_recipient;\n\n	extract(zem_contact_lAtts(array(\n		\'default\'	=> \'\',\n		\'isError\'	=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'email\'),\n		\'max\'		=> 100,\n		\'min\'		=> 0,\n		\'name\'		=> \'\',\n		\'required\'	=> 1,\n		\'break\'		=> br,\n		\'size\'		=> \'\',\n		\'send_article\'	=> 0\n	), $atts));\n\n	if (empty($name)) $name = zem_contact_label2name($label);\n\n	$email = $zem_contact_submit ? trim(ps($name)) : $default;\n\n	if ($zem_contact_submit and strlen($email))\n	{\n		if (!is_valid_email($email))\n		{\n			$zem_contact_error[] = zem_contact_gTxt(\'invalid_email\', htmlspecialchars($email));\n			$isError = \"errorElement\";\n		}\n\n		else\n		{\n			preg_match(\"/@(.+)$/\", $email, $match);\n			$domain = $match[1];\n\n			if (is_callable(\'checkdnsrr\') and checkdnsrr(\'textpattern.com.\',\'A\') and !checkdnsrr($domain.\'.\',\'MX\') and !checkdnsrr($domain.\'.\',\'A\'))\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'invalid_host\', htmlspecialchars($domain));\n				$isError = \"errorElement\";\n			}\n\n			else\n			{\n				if ($send_article) {\n					$zem_contact_recipient = $email;\n				}\n				else {\n					$zem_contact_from = $email;\n				}\n			}\n		}\n	}\n\n	return zem_contact_text(array(\n		\'default\'	=> $email,\n		\'isError\'	=> $isError,\n		\'label\'		=> $label,\n		\'max\'		=> $max,\n		\'min\'		=> $min,\n		\'name\'		=> $name,\n		\'required\'	=> $required,\n		\'break\'		=> $break,\n		\'size\'		=> $size\n	));\n}\n\nfunction zem_contact_select($atts)\n{\n	global $zem_contact_error, $zem_contact_submit;\n\n	extract(zem_contact_lAtts(array(\n		\'name\'		=> \'\',\n		\'break\'		=> \' \',\n		\'delimiter\'	=> \',\',\n		\'isError\'	=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'option\'),\n		\'list\'		=> zem_contact_gTxt(\'general_inquiry\'),\n		\'required\'	=> 1,\n		\'selected\'	=> \'\'\n	), $atts));\n\n	if (empty($name)) $name = zem_contact_label2name($label);\n\n	$list = array_map(\'trim\', split($delimiter, preg_replace(\'/[\\r\\n\\t\\s]+/\', \' \',$list)));\n\n	if ($zem_contact_submit)\n	{\n		$value = trim(ps($name));\n\n		if (strlen($value))\n		{\n			if (in_array($value, $list))\n			{\n				zem_contact_store($name, $label, $value);\n			}\n\n			else\n			{\n				$zem_contact_error[] = zem_contact_gTxt(\'invalid_value\', htmlspecialchars($label), htmlspecialchars($value));\n				$isError = \"errorElement\";\n			}\n		}\n\n		elseif ($required)\n		{\n			$zem_contact_error[] = zem_contact_gTxt(\'field_missing\', htmlspecialchars($label));\n			$isError = \"errorElement\";\n		}\n	}\n	else\n	{\n		$value = $selected;\n	}\n\n	$out = \'\';\n\n	foreach ($list as $item)\n	{\n		$out .= n.t.\'<option\'.($item == $value ? \' selected=\"selected\">\' : \'>\').(strlen($item) ? htmlspecialchars($item) : \' \').\'</option>\';\n	}\n\n	$zemRequired = $required ? \'zemRequired\' : \'\';\n\n	return \'<label for=\"\'.$name.\'\" class=\"zemSelect \'.$zemRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break.\n		n.\'<select id=\"\'.$name.\'\" name=\"\'.$name.\'\" class=\"zemSelect \'.$zemRequired.$isError.\'\">\'.\n			$out.\n		n.\'</select>\';\n}\n\nfunction zem_contact_checkbox($atts)\n{\n	global $zem_contact_error, $zem_contact_submit;\n\n	extract(zem_contact_lAtts(array(\n		\'break\'		=> \' \',\n		\'checked\'	=> 0,\n		\'isError\'	=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'checkbox\'),\n		\'name\'		=> \'\',\n		\'required\'	=> 1\n	), $atts));\n\n	if (empty($name)) $name = zem_contact_label2name($label);\n\n	if ($zem_contact_submit)\n	{\n		$value = (bool) ps($name);\n\n		if ($required and !$value)\n		{\n			$zem_contact_error[] = zem_contact_gTxt(\'field_missing\', htmlspecialchars($label));\n			$isError = \"errorElement\";\n		}\n\n		else\n		{\n			zem_contact_store($name, $label, $value ? gTxt(\'yes\') : gTxt(\'no\'));\n		}\n	}\n\n	else {\n		$value = $checked;\n	}\n\n	$zemRequired = $required ? \'zemRequired\' : \'\';\n\n	return \'<input type=\"checkbox\" id=\"\'.$name.\'\" class=\"zemCheckbox \'.$zemRequired.$isError.\'\" name=\"\'.$name.\'\"\'.\n		($value ? \' checked=\"checked\"\' : \'\').\' />\'.$break.\n		\'<label for=\"\'.$name.\'\" class=\"zemCheckbox \'.$zemRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\';\n}\n\nfunction zem_contact_serverinfo($atts)\n{\n	global $zem_contact_submit;\n\n	extract(zem_contact_lAtts(array(\n		\'label\'		=> \'\',\n		\'name\'		=> \'\'\n	), $atts));\n\n	if (empty($name)) $name = zem_contact_label2name($label);\n\n	if (strlen($name) and $zem_contact_submit)\n	{\n		if (!$label) $label = $name;\n		zem_contact_store($name, $label, serverSet($name));\n	}\n}\n\nfunction zem_contact_secret($atts, $thing = \'\')\n{\n	global $zem_contact_submit;\n\n	extract(zem_contact_lAtts(array(\n		\'name\'	=> \'\',\n		\'label\'	=> zem_contact_gTxt(\'secret\'),\n		\'value\'	=> \'\'\n	), $atts));\n\n	$name = zem_contact_label2name($name ? $name : $label);\n\n	if ($zem_contact_submit)\n	{\n		if ($thing) $value = trim(parse($thing));\n		zem_contact_store($name, $label, $value);\n	}\n\n	return \'\';\n}\n\nfunction zem_contact_radio($atts)\n{\n	global $zem_contact_error, $zem_contact_submit, $zem_contact_values;\n\n	extract(zem_contact_lAtts(array(\n		\'break\'		=> \' \',\n		\'checked\'	=> 0,\n		\'group\'		=> \'\',\n		\'label\'		=> zem_contact_gTxt(\'option\'),\n		\'name\'		=> \'\'\n	), $atts));\n\n	static $cur_name = \'\';\n	static $cur_group = \'\';\n\n	if (!$name and !$group and !$cur_name and !$cur_group) {\n		$cur_group = zem_contact_gTxt(\'radio\');\n		$cur_name = $cur_group;\n	}\n	if ($group and !$name and $group != $cur_group) $name = $group;\n\n	if ($name) $cur_name = $name;\n	else $name = $cur_name;\n\n	if ($group) $cur_group = $group;\n	else $group = $cur_group;\n\n	$id   = \'q\'.md5($name.\'=>\'.$label);\n	$name = zem_contact_label2name($name);\n\n	if ($zem_contact_submit)\n	{\n		$is_checked = (ps($name) == $id);\n\n		if ($is_checked or $checked and !isset($zem_contact_values[$name]))\n		{\n			zem_contact_store($name, $group, $label);\n		}\n	}\n\n	else\n	{\n		$is_checked = $checked;\n	}\n\n	return \'<input value=\"\'.$id.\'\" type=\"radio\" id=\"\'.$id.\'\" class=\"zemRadio \'.$name.\'\" name=\"\'.$name.\'\"\'.\n		( $is_checked ? \' checked=\"checked\" />\' : \' />\').$break.\n		\'<label for=\"\'.$id.\'\" class=\"zemRadio \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\';\n}\n\nfunction zem_contact_send_article($atts)\n{\n	if (!isset($_REQUEST[\'zem_contact_send_article\'])) {\n		$linktext = (empty($atts[\'linktext\'])) ? zem_contact_gTxt(\'send_article\') : $atts[\'linktext\'];\n		$join = (empty($_SERVER[\'QUERY_STRING\'])) ? \'?\' : \'&\';\n		$href = $_SERVER[\'REQUEST_URI\'].$join.\'zem_contact_send_article=yes\';\n		return \'<a href=\"\'.htmlspecialchars($href).\'\">\'.htmlspecialchars($linktext).\'</a>\';\n	}\n	return;\n}\n\nfunction zem_contact_submit($atts, $thing)\n{\n	extract(zem_contact_lAtts(array(\n		\'button\'	=> 0,\n		\'label\'		=> zem_contact_gTxt(\'send\')\n	), $atts));\n\n	$label = htmlspecialchars($label);\n\n	if ($button or strlen($thing))\n	{\n		return \'<button type=\"submit\" class=\"zemSubmit\" name=\"zem_contact_submit\" value=\"\'.$label.\'\">\'.($thing ? trim(parse($thing)) : $label).\'</button>\';\n	}\n	else\n	{\n		return \'<input type=\"submit\" class=\"zemSubmit\" name=\"zem_contact_submit\" value=\"\'.$label.\'\" />\';\n	}\n}\n\nfunction zem_contact_lAtts($arr, $atts)\n{\n	foreach(array(\'button\', \'copysender\', \'checked\', \'required\', \'send_article\', \'show_input\', \'show_error\') as $key)\n	{\n		if (isset($atts[$key]))\n		{\n			$atts[$key] = ($atts[$key] === \'yes\' or intval($atts[$key])) ? 1 : 0;\n		}\n	}\n	if (isset($atts[\'break\']) and $atts[\'break\'] == \'br\') $atts[\'break\'] = \'<br />\';\n	return lAtts($arr, $atts);\n}\n\nclass zemcontact_evaluation\n{\n	var $status;\n\n	function zemcontact_evaluation() {\n		$this->status = 0;\n	}\n\n	function add_zemcontact_status($check) {\n		$this->status += $check;\n	}\n\n	function get_zemcontact_status() {\n		return $this->status;\n	}\n}\n\nfunction &get_zemcontact_evaluator()\n{\n	static $instance;\n\n	if(!isset($instance)) {\n		$instance = new zemcontact_evaluation();\n	}\n	return $instance;\n}\n\nfunction zem_contact_label2name($label)\n{\n	$label = trim($label);\n	if (strlen($label) == 0) return \'invalid\';\n	if (strlen($label) <= 32 and preg_match(\'/^[a-zA-Z][A-Za-z0-9:_-]*$/\', $label)) return $label;\n	else return \'q\'.md5($label);\n}\n\nfunction zem_contact_store($name, $label, $value)\n{\n	global $zem_contact_form, $zem_contact_labels, $zem_contact_values;\n	$zem_contact_form[$label] = $value;\n	$zem_contact_labels[$name] = $label;\n	$zem_contact_values[$name] = $value;\n}\n\nfunction zem_contact_mailheader($string, $type)\n{\n	global $prefs;\n	if (!strstr($string,\'=?\') and !preg_match(\'/[\\x00-\\x1F\\x7F-\\xFF]/\', $string)) {\n		if (\"phrase\" == $type) {\n			if (preg_match(\'/[][()<>@,;:\".\\x5C]/\', $string)) {\n				$string = \'\"\'. strtr($string, array(\"\\\\\" => \"\\\\\\\\\", \'\"\' => \'\\\"\')) . \'\"\';\n			}\n		}\n		elseif (\"text\" != $type) {\n			trigger_error(\'Unknown encode_mailheader type\', E_USER_WARNING);\n		}\n		return $string;\n	}\n	if ($prefs[\'override_emailcharset\']) {\n		$start = \'=?ISO-8859-1?B?\';\n		$pcre  = \'/.{1,42}/s\';\n	}\n	else {\n		$start = \'=?UTF-8?B?\';\n		$pcre  = \'/.{1,45}(?=[\\x00-\\x7F\\xC0-\\xFF]|$)/s\';\n	}\n	$end = \'?=\';\n	$sep = is_windows() ? \"\\r\\n\" : \"\\n\";\n	preg_match_all($pcre, $string, $matches);\n	return $start . join($end.$sep.\' \'.$start, array_map(\'base64_encode\',$matches[0])) . $end;\n}\n','cb772f305727a9e9e5fd7d1616f56996',0,5,0),
	('zem_contact_lang',0,'TXP Community','http://forum.textpattern.com/viewtopic.php?id=21144','4.0.3.6','Language plug-in for Zem Contact Reborn','<div style=\"text-align:center;font-weight:bold;font-size:24px;text-decoration:underline;\">Zem Contact Lang</div>\n\n	<p>This is a separate language plug-in for use with Zem Contact Reborn. Both plug-ins need to be installed and activated in order to work properly.</p>\n\n	<p>Separating the language in this way will enable non-english users to update the main plug-in without affecting their &#8220;localisation&#8221;.</p>\n\n<div id=\"local\" style=\"text-align:center;font-weight:bold;font-size:24px;text-decoration:underline;\">Localisation</div>\n\n	<p>Throughout the <code>zem_contact_reborn</code> plug-in, use has been made of a separate <code>gTxt</code> function which you can see in this plug-in&#8217;s code by clicking on the &#8220;Edit&#8221; button.</p>\n\n	<p>If you are using the plug-in for a non-english site you can make use of this to localise text outputs for your preferred language.</p>\n\n	<p>You should only edit text that appears after the <code>=&#62;</code> sign.</p>\n\n	<p>If you have a dual-language site and the languages use separate &#8220;sections&#8221;, you can use the <txp:if_section> tag to enable different translations. An example of this usage is shown in the <strong>&#8220;forum thread&#8221;:http://forum.textpattern.com/viewtopic.php?id=13416</strong>. Our thanks to Els (doggiez) for this example.</p>\n\n <br />\n','function zem_contact_gTxt($what, $var1 = \'\', $var2 = \'\')\r\n{\r\n	$lang = array(\r\n		\'checkbox\'			=> \'Checkbox\',\r\n		\'contact\'			=> \'Contact\',\r\n		\'email\'				=> \'Email\',\r\n		\'email_subject\'		=> \"$var1 > Inquiry\",\r\n		\'email_thanks\'		=> \"Merci, votre message a été envoyé.\",\r\n		\'field_missing\'		=> \"Le champ, &#8220;<strong>$var1</strong>&#8221; doit être rempli.\",\r\n		\'form_expired\'		=> \'Le formulaire a expiré, merci d&#8217;en remplir un nouveau.\',\r\n		\'form_used\'			=> \"Ce formulaire a déjà été envoyé, merci d&#8217;en remplir un nouveau.\",\r\n		\'general_inquiry\'	=> \'General inquiry\',\r\n		\'invalid_email\'		=> \"&#8220;<strong>$var1</strong>&#8221; n&rsquo;est pas une adresse valide.\",\r\n		\'invalid_host\'		=> \"&#8220;<strong>$var1</strong>&#8221; n&rsquo;est pas une adresse valide.\",\r\n		\'invalid_utf8\'		=> \"&#8220;<strong>$var1</strong>&#8221; contient des caractères invalides.\",\r\n		\'invalid_value\'		=> \"Invalid value for &#8220;<strong>$var1</strong>&#8221;, &#8220;<strong>$var2</strong>&#8221; is not one of the available options.\",\r\n		\'mail_sorry\'		=> \'Désolé, l&rsquo;envoi de l&rsquo;email est impossible.\',\r\n		\'message\'			=> \'Message\',\r\n		\'min_warning\'		=> \"&#8220;<strong>$var1</strong>&#8221; doit contenir au moins $var2 caractère(s).\",\r\n		\'max_warning\'		=> \"&#8220;<strong>$var1</strong>&#8221; doit contenir plus de $var2 caractère(s).\",\r\n		\'name\'				=> \'Nom\',\r\n		\'option\'			=> \'Option\',\r\n		\'radio\'				=> \'Radio\',\r\n		\'recipient\'			=> \'Recipient\',\r\n		\'refresh\'			=> \'Veuillez suivre ce lien si la page ne s&rsquo;actualise pas automatiquement.\',\r\n		\'secret\'			=> \'Secret\',\r\n		\'send\'				=> \'Envoyer &rarr;\',\r\n		\'send_article\'		=> \'Send article\',\r\n		\'spam\'				=> \'Les spams ne sont pas acceptés, merci&nbsp;!\',\r\n		\'text\'				=> \'Text\',\r\n		\'to_missing\'		=> \'&#8220;<strong>À</strong>&#8221; L&#8217;adresse Email du destinataire est manquante.\',\r\n		\'version\'			=> \'4.0.3.6\'\r\n	);\r\n	return $lang[$what];\r\n}','\nfunction zem_contact_gTxt($what, $var1 = \'\', $var2 = \'\')\n{\n	$lang = array(\n		\'checkbox\'		=> \'Checkbox\',\n		\'contact\'		=> \'Contact\',\n		\'email\'			=> \'Email\',\n		\'email_subject\'		=> \"$var1 > Inquiry\",\n		\'email_thanks\'		=> \'Thank you, your message has been sent.\',\n		\'field_missing\'		=> \"Required field, &#8220;<strong>$var1</strong>&#8221;, is missing.\",\n		\'form_expired\'		=> \'The form has expired, please try again.\',\n		\'form_used\'		=> \'The form was already submitted, please fill out a new form.\',\n		\'general_inquiry\'	=> \'General inquiry\',\n		\'invalid_email\'		=> \"&#8220;<strong>$var1</strong>&#8221; is not a valid email address.\",\n		\'invalid_host\'		=> \"&#8220;<strong>$var1</strong>&#8221; is not a valid email host.\",\n		\'invalid_utf8\'		=> \"&#8220;<strong>$var1</strong>&#8221; contains invalid UTF-8 characters.\",\n		\'invalid_value\'		=> \"Invalid value for &#8220;<strong>$var1</strong>&#8221;, &#8220;<strong>$var2</strong>&#8221; is not one of the available options.\",\n		\'mail_sorry\'		=> \'Sorry, unable to send email.\',\n		\'message\'		=> \'Message\',\n		\'min_warning\'		=> \"&#8220;<strong>$var1</strong>&#8221; must contain at least $var2 characters.\",\n		\'max_warning\'		=> \"&#8220;<strong>$var1</strong>&#8221; must not contain more than $var2 characters.\",\n		\'name\'			=> \'Name\',\n		\'option\'		=> \'Option\',\n		\'radio\'			=> \'Radio\',\n		\'recipient\'		=> \'Recipient\',\n		\'refresh\'		=> \'Follow this link if the page does not refresh automatically.\',\n		\'secret\'		=> \'Secret\',\n		\'send\'			=> \'Send\',\n		\'send_article\'		=> \'Send article\',\n		\'spam\'			=> \'We do not accept spam, thank you!\',\n		\'text\'			=> \'Text\',\n		\'to_missing\'		=> \'&#8220;<strong>To</strong>&#8221; email address is missing.\',\n		\'version\'		=> \'4.0.3.6\'\n	);\n\n	return $lang[$what];\n}\n','552fe2e408499f9fd92ab620fa0e15f6',0,5,0),
	('adi_prefs',0,'Adi Gilbert','http://www.greatoceanmedia.com.au/','0.2','Preference Sets','	<h1><strong>adi_prefs</strong> &#8211; Preference Sets</h1>\n\n	<p>This plugin gives you a new tab under Admin where you can define different sets of preference values and apply them at will.</p>\n\n	<h2><strong>Installation</strong></h2>\n\n	<p>After installing the plugin in the normal way, visit the <em>Preference Sets</em> tab under the Admin tab and click on the <em>Install adi_prefs</em> button.</p>\n\n	<h2><strong>The Preference Sets tab</strong></h2>\n\n	<p>Users with sufficient privileges will see the <em>Preference Sets</em> tab, under Admin. This gives you a view of the different sets of preference values:</p>\n\n	<ul>\n		<li>Current</li>\n		<li>Default</li>\n		<li>Local</li>\n		<li>Staging</li>\n		<li>Testing</li>\n		<li>Live</li>\n	</ul>\n\n	<p>The <strong>Current</strong> set is the actual preference values in use by Textpattern on your site.</p>\n\n	<p>The <strong>Default</strong> set is a snapshot of the preference values taken when <strong>adi_prefs</strong> was installed.  This can be seen as a view of how things were when you started, e.g. a &#8220;fallback&#8221; position.</p>\n\n	<p>The <strong>Local</strong>, <strong>Staging</strong>, <strong>Testing</strong> &amp; <strong>Live</strong> sets may be modified.  The list of preferences of interest may be changed (i.e. added to or subtracted from) and the individual values may be altered.</p>\n\n	<p>The titles of the sets may be changed to whatever you like.</p>\n\n	<p>Hover over anything with a dotted underline to get more information.</p>\n\n	<h2><strong>Adding or removing preferences</strong></h2>\n\n	<p>You can add preferences to the sets by selecting them from the popup list and clicking <em>Add pref</em>. The initial value of a new preference is taken from the current value.</p>\n\n	<p>You can remove preferences from the sets by clicking on the &#8216;X&#8217; button. All set values of deleted preferences will be forgotten. Deleting a preference does not affect it&#8217;s value in the actual website.</p>\n\n	<h2><strong>Applying the preference sets</strong></h2>\n\n	<p>You can individually apply the <strong>Default</strong>, <strong>Local</strong>, <strong>Staging</strong>, <strong>Testing</strong> &amp; <strong>Live</strong> sets &#8211; i.e. the values contained in these sets are then used on your website for real.</p>\n\n	<h2><strong>A word of caution</strong></h2>\n\n	<p>No validation of &#8220;free-format&#8221; preference values is performed, so ensure that the values you enter are valid for use &#8211; otherwise you might break your site!  If things go pear-shaped try applying the <strong>Default</strong> set.</p>\n\n	<h2><strong>Uninstalling</strong></h2>\n\n	<p>Simply click on the <em>Uninstall adi_prefs</em> button in the <em>Preference sets</em> tab and delete the plugin.</p>\n\n	<h2><strong>Additional information</strong></h2>\n\n	<p>Support and further information can be obtained from the <a href=\"http://forum.textpattern.com/viewtopic.php?id=34532\" rel=\"nofollow\">Textpattern support forum</a>. A copy of this help is also available <a href=\"http://www.greatoceanmedia.com.au/txp/?plugin=adi_prefs\" rel=\"nofollow\">online</a>.  More adi_plugins can be found <a href=\"http://www.greatoceanmedia.com.au/txp/\" rel=\"nofollow\">here</a>.</p>','\n/*\n	adi_prefs - Preference Sets\n\n	Written by Adi Gilbert\n\n	Released under the GNU General Public License\n\n	Version history:\n	0.1		- initial release\n	0.2		- enhancement: added new set \"Testing\" (for Maniqui)\n			- enhancement: preference set visibility\n\n*/\n\nglobal $myevent,$mytab;\n\nif (@txpinterface == \'admin\') {\n	$myevent = \'adi_prefs_admin\';\n	$mytab = \'Preference Sets\';\n\n	$adi_prefs_privs = \'1,6\';\n\n	// set the privilege levels\n	add_privs($myevent,$adi_prefs_privs);\n\n	// add new tab under \'Admin\'\n	register_tab(\'admin\', $myevent, $mytab);\n\n	// callbacks\n	register_callback(\"adi_prefs_admin\", $myevent);	// adi_prefs admin tab\n	register_callback(\'adi_prefs_style\',\'admin_side\',\'head_end\');	// style for admin\n\n}\n\nfunction adi_prefs_admin($event, $step) {\n// adi_prefs admin tab\n\n	global $adi_prefs_default_list,$adi_prefs_exclude_list,$adi_prefs_list,$mytab,$debug,$adi_prefs_set_list,$adi_prefs_default_set_list,$h,$current_prefs,$txp420,$plugin_status;\n\n	$debug = 0; // display admin debug info\n\n	// default list of prefs\n	$adi_prefs_default_list = \'siteurl,production_status,file_base_path,tempdir,rss_dbbk_path,rss_dbbk_mysql,rss_dbbk_dump,xxx\';\n\n	// list of prefs to exclude\n	$adi_prefs_exclude_list = \"dbupdatetime,gmtoffset,lastmod,prefs_id,timeoffset,timezone_key,version\";\n	$adi_prefs_exclude_list = explode(\',\',$adi_prefs_exclude_list);\n\n	// default pref set titles\n	$adi_prefs_default_set_list = array(\n		\'current\' => array(\'title\' => \'Current\'),\n		\'def\' => array(\'title\' => \'Default\'),\n		\'dev\' => array(\'title\' => \'Local\'),\n		\'demo\' => array(\'title\' => \'Staging\'),\n		\'test\' => array(\'title\' => \'Testing\'),\n		\'live\' => array(\'title\' => \'Live\'),\n	);\n\n	// replace set titles with user defined, if any\n	foreach ($adi_prefs_default_set_list as $set_name => $value) {\n		$this_set_pref = \'adi_prefs_title_\'.$set_name;\n		$val = safe_field(\'val\', \'txp_prefs\', \"name=\'$this_set_pref\'\");\n		if (empty($val)) // use default set title\n			$adi_prefs_set_list[$set_name][\'title\'] = $adi_prefs_default_set_list[$set_name][\'title\'];\n		else // read set title from database\n			$adi_prefs_set_list[$set_name][\'title\'] = $val;\n	}\n\n	// get current active prefs\n	$current_prefs = get_prefs();\n\n	$installed = adi_prefs_installed(\'adi_prefs\');\n\n	if ($installed) {\n		// get stored prefs\n		$adi_prefs_list = adi_prefs_get_list();\n		// database upgrade required?\n		// version 0.2 add test set (find out if test set column exists)\n		$rs = safe_query(\'SELECT * FROM \'.safe_pfx(\'adi_prefs\'));\n		$a = nextRow($rs);\n		$found = array_key_exists(\'test\', $a);\n		if (!$found) $step = \'upgrade\';\n		if ($debug) {\n			echo \'<b>$adi_prefs_list:</b><br/>\';\n			dmp($adi_prefs_list);\n		}\n	}\n\n	// tooltip help information\n	$h[\'current\'] = \"The preference values which are currently in use on the website\";\n	$h[\'def\'] = \"The default set of preference values, recorded when adi_prefs was first installed\";\n	$h[\'dev\'] = $h[\'demo\'] = $h[\'test\'] = $h[\'live\'] = \"A user-defined set of preference values\";\n	$h[\'pref_sets\'] = \"The current values of preferences in the sets\";\n	$h[\'add_pref\'] = \"Add a new preference to the sets\";\n	$h[\'pref_set_titles\'] = \"User-friendly names for preference sets\";\n	$h[\'pref_set_visibility\'] = \"Specify whether user-defined preference sets should be displayed or not\";\n\n	$something = gps(\'something\');\n\n	if ($debug) echo \'<p><b>Event:</b> \'.$event.\'&nbsp;&nbsp;<b>Step:</b> \'.$step.\'&nbsp;&nbsp;<b>Something:</b> \'.$something.\'</p>\';\n\n	if ($step == \'update\') {\n		foreach ($adi_prefs_list as $pref_name => $value) {\n			$this_pref = ps($pref_name);\n			foreach ($adi_prefs_set_list as $set_name => $value)\n				if (($set_name != \'def\') && ($set_name != \'current\')) { // ignore \'def\' & \'current\' because they\'re for display only\n					if ($debug) echo \'<p><b>\'.$pref_name.\'[\'.$set_name.\']</b> = \'.$this_pref[$set_name];\n					adi_prefs_set($pref_name,$set_name,$this_pref[$set_name]);\n				}\n		}\n		$message = \'Preference sets updated\';\n	}\n	else if ($step == \'apply\') {\n		if ($something) { // i.e. set name\n			$result = TRUE;\n			foreach ($adi_prefs_list as $pref_name => $value) // apply \"set\" to the TXP database\n				$result = $result && safe_update(\'txp_prefs\',\"val = \'\".adi_prefs_get($pref_name,$something).\"\'\",\"name = \'\".doSlash($pref_name).\"\'\");\n			$result ? $message = \'<b>\'.$adi_prefs_set_list[$something][\'title\'].\'</b> preference set applied\' : $message = \'Unable to apply \'.$adi_prefs_set_list[$something][\'title\'].\' preference set\';\n		}\n		else\n			$message = \'No preference set selected!\';\n	}\n	else if ($step == \'add\') {\n		if ($something) { // $something = new pref from list\n			if ($something == \'none\')\n				$message = \'No new preference not selected\';\n			else {\n				if (array_key_exists($something,$current_prefs)) { // can\'t add what doesn\'t exist!\n					$result = TRUE;\n					$current_value = $current_prefs[$something];\n					foreach ($adi_prefs_default_set_list as $set_name => $set_title) // all set to current value\n						if ($set_name != \'current\') $result = $result && safe_upsert(\'adi_prefs\',\"$set_name=\'\".$current_value.\"\'\",\"name=\'$something\'\",$debug);\n				}\n				$result ? $message = \'<b>\'.$something.\'</b> preference added\' : $message = \'Unable to add <b>\'.$something.\'</b> preference\';\n			}\n		}\n		else\n			$message = \'No new preference selected!\';\n	}\n	else if ($step == \'remove\') {\n		if ($something) { // $something = the pref to remove\n			$result = safe_delete(\'adi_prefs\',\"name=\'$something\'\",$debug); // remove pref from database\n			//safe_repair(\'adi_prefs\'); // free up deleted space, so that new prefs go at end of list\n			$result ? $message = \'<b>\'.$something.\'</b> preference removed\' : $message = \'Unable to remove <b>\'.$something.\'</b> preference\';\n		}\n		else\n			$message = \'No preference selected for removal!\';\n	}\n	else if ($step == \'change_title\') {\n		if ($something) {\n			$result = TRUE;\n			foreach ($something as $set_name => $value) {\n				if (empty($value)) $value = $adi_prefs_default_set_list[$set_name][\'title\']; // revert to default title if blank\n				$adi_prefs_set_list[$set_name][\'title\'] = $value; // update sets array\n				$this_set_pref = \'adi_prefs_title_\'.$set_name;\n				set_pref($this_set_pref,$value,\'adi_prefs_admin\',2); // set\'s title pref\n			}\n			$result ? $message = \'Set titles updated\' : $message = \'Unable to update set titles\';\n		}\n		else\n			$message = \'No set title to change!\';\n	}\n	else if ($step == \'visibility\') {\n		$visibility = \'current,def\'; // always visible\n		$result = TRUE;\n		if ($something) {\n			foreach ($something as $set_name => $value)\n				if ($value) $visibility .= \',\'.$set_name;\n		}\n		$result = set_pref(\'adi_prefs_visibility\',$visibility,\'adi_prefs_admin\',2); // visibility preference\n		$result ? $message = \'Set visibility updated\' : $message = \'Unable to update set visibility\';\n	}\n	else if ($step == \'admin\') {\n		if ($something == \'install\') {\n			$result = adi_prefs_install();\n			$result ? $message = \'adi_prefs installed successfully\' : $message = \'Unable to install adi_prefs\';\n		}\n		else if ($something == \'uninstall\') {\n			$result = adi_prefs_uninstall();\n			$result ? $message = \'adi_prefs uninstalled successfully\' : $message = \'Unable to install adi_prefs\';\n		}\n		else if ($something == \'\')\n			$message = \'Nothing to do!\';\n		else\n			$message = \'Unknown admin function: \'.$something;\n	}\n	else if ($step == \'upgrade\') {\n		$result = adi_prefs_upgrade();\n		$result ? $message = \'adi_prefs upgraded successfully\' : $message = \'Unable to upgrade adi_prefs\';\n	}\n	else\n		$message = \'\';\n\n	if (($step == \'add\') || ($step == \'remove\') || ($step == \'update\'))\n		safe_repair(\'adi_prefs\'); // free up deleted space, so that new prefs go at end of list\n\n	pagetop(\"$mytab Admin\",$message);\n\n	$installed = adi_prefs_installed(\'adi_prefs\');\n\n	if ($installed) {\n\n		// read visibility from preference & store in general set array\n		$visibility = safe_field(\'val\', \'txp_prefs\', \"name=\'adi_prefs_visibility\'\");\n		foreach ($adi_prefs_set_list as $set_name => $value) {\n			$pos = strpos($visibility, $set_name);\n			$adi_prefs_set_list[$set_name][\'visible\'] = !($pos === false);\n		}\n\n		// get stored prefs\n		$adi_prefs_list = adi_prefs_get_list();\n\n		// get current active prefs\n		$current_prefs = get_prefs();\n\n		// find & display matching sets\n		$matches = adi_prefs_set_match();\n		foreach ($adi_prefs_set_list as $set_name => $value) // remove invisible sets from list\n			if (!$value[\'visible\']) {\n				$key = array_search($set_name, $matches);\n				if (!($key === FALSE))\n					unset($matches[$key]);\n			}\n		if (count($matches) == 0)\n			echo tag(\'No sets match the current preferences\',\'p\',\' class=\"adi_prefs_message\"\');\n		else if (count($matches) == 1)\n			echo tag(\'The <b>\'.$adi_prefs_set_list[$matches[0]][\'title\'].\'</b> set matches the current preferences\',\'p\',\' class=\"adi_prefs_message\"\');\n		else {\n			end($matches);\n			$last_index = key($matches);\n			$match_list = \'\';\n			foreach ($matches as $index => $set_name) {\n				($index == $last_index) ? $glue = \' &amp; \' : $glue = \', \';\n				$index ? $match_list .= $glue.$adi_prefs_set_list[$set_name][\'title\'] : $match_list .= $adi_prefs_set_list[$set_name][\'title\'];\n			}\n			echo tag(\'The <b>\'.$match_list.\'</b> sets match the current preferences\',\'p\',\' class=\"adi_prefs_message\"\');\n		}\n\n		// apply radio buttons\n		$set_radios = \'\';\n		foreach ($adi_prefs_set_list as $set_name => $value)\n			if ($set_name != \'current\') { // don\'t need to apply current!\n				if ($adi_prefs_set_list[$set_name][\'visible\'])\n					$set_radios .= tag($value[\'title\'],\'span\',adi_prefs_tooltip($set_name)).\' \'\n						.fInput(\"radio\", \"something\", $set_name, \"edit\", \"\", \"\", \"20\", \"1\").\'&nbsp;&nbsp;&nbsp;\';\n			}\n	    echo form(\n			$set_radios\n			.fInput(\"submit\", \"do_something\", \"Apply set\", \"publish\",\"\",\'return verify(\\\'\'.gTxt(\'are_you_sure\').\'\\\')\')\n			.eInput(\"adi_prefs_admin\").sInput(\"apply\")\n			,\'\',\'\',\'post\',\'adi_prefs_form\'\n		);\n\n		// preference table\n		$set_headings = \'\';\n		foreach ($adi_prefs_set_list as $set_name => $value) {\n			if ($adi_prefs_set_list[$set_name][\'visible\'])\n				$class = \'\';\n			else\n				$class = \' class=\"adi_prefs_invisible\"\';\n			$set_headings .= hcell(tag($value[\'title\'],\'span\',adi_prefs_tooltip($set_name)),\'\',$class);\n		}\n		echo form(\n			tag(tag(\'Preference Sets\',\'span\',adi_prefs_tooltip(\'pref_sets\')),\'h2\',\' class=\"adi_prefs_heading\"\')\n			.startTable(\'list\',\'\',\'adi_prefs_table\')\n			.tr(\n				hcell(\'Preference\')\n				.$set_headings\n				.hcell(\'&nbsp;\')\n			)\n			.adi_prefs_display_prefs()\n			.endTable()\n			.tag(\n				fInput(\"submit\", \"update\", \'Update sets\', \"smallerbox\")\n				.eInput(\"adi_prefs_admin\").sInput(\"update\"),\n				\'p\',\n				\' class=\"adi_prefs_button\"\'\n			)\n			,\'\',\'\',\'post\',\'adi_prefs_form\'\n		);\n\n		// add new preference\n	    echo form(\n			tag(tag(\'Add Preference\',\'span\',adi_prefs_tooltip(\'add_pref\')),\"h2\",\' class=\"adi_prefs_heading\"\')\n			.adi_prefs_select_pref().\'&nbsp;&nbsp;&nbsp;\'\n			.fInput(\"submit\", \"do_something\", \'Add pref\', \"smallerbox\")\n			.eInput(\"adi_prefs_admin\").sInput(\"add\")\n			,\'\',\'\',\'post\',\'adi_prefs_form\'\n		);\n\n		// user defined set titles\n		echo tag(tag(\'Preference Set Titles\',\'span\',adi_prefs_tooltip(\'pref_set_titles\')),\'h2\',\' class=\"adi_prefs_heading\"\');\n		//$set_titles = tda(tag(tag(\'Preference Set Titles:\',\'span\',adi_prefs_tooltip(\'pref_set_titles\')),\'h2\'));\n		$set_titles = \'\';\n		foreach ($adi_prefs_set_list as $set_name => $value)\n			if ($adi_prefs_set_list[$set_name][\'visible\'])\n				$set_titles .= tda(fInput(\"text\",\"something[$set_name]\",$value[\'title\'],\'\',\'\',\'\',25));\n	    echo form(\n			startTable(\'edit\',\'\',\'adi_prefs_set_titles\') // use table so that titles vaguely line up with main prefs table\n			.tr($set_titles)\n			.endTable()\n			.tag(\n				fInput(\"submit\", \"do_something\", \"Update titles\", \"smallerbox\")\n				.eInput(\"adi_prefs_admin\").sInput(\"change_title\"),\n				\'p\',\n				\' class=\"adi_prefs_button\"\'\n			)\n			,\'\',\'\',\'post\',\'adi_prefs_form\'\n		);\n\n		// preference set visibility\n		$visibility = safe_field(\'val\', \'txp_prefs\', \"name=\'adi_prefs_visibility\'\"); // read actual preference again, just in case\n		$set_checkboxes = \'\';\n		foreach ($adi_prefs_set_list as $set_name => $value)\n			if (($set_name != \'current\') && ($set_name != \'def\')) { // you can\'t hide these ones\n				$pos = strpos($visibility, $set_name);\n				$checked = !($pos === false);\n				$set_checkboxes .= tag($value[\'title\'],\'span\',adi_prefs_tooltip($set_name)).\' \'\n					.checkbox(\"something[$set_name]\", TRUE, $checked).\'&nbsp;&nbsp;&nbsp;\';\n			}\n		echo tag(tag(\'Preference Set Visibility\',\'span\',adi_prefs_tooltip(\'pref_set_visibility\')),\'h2\',\' class=\"adi_prefs_heading\"\');\n	    echo form(\n			$set_checkboxes\n			.fInput(\"submit\", \"do_something\", \"Update visibility\", \"smallerbox\")\n			.eInput(\"adi_prefs_admin\").sInput(\"visibility\")\n			,\'\',\'\',\'post\',\'adi_prefs_form\'\n		);\n\n		// uninstall button\n	    echo form(\n			hInput(\'something\',\'uninstall\')\n			.fInput(\"submit\", \"do_something\", \"Uninstall adi_prefs\", \"publish\",\"\",\'return verify(\\\'\'.gTxt(\'are_you_sure\').\'\\\')\')\n			.eInput(\"adi_prefs_admin\").sInput(\"admin\")\n			,\'\',\'\',\'post\',\'adi_prefs_form adi_prefs_nstall_button\'\n		);\n	}\n	else { // not installed\n		// install button\n	    echo form(\n			hInput(\'something\',\'install\')\n			.fInput(\"submit\", \"do_something\", \"Install adi_prefs\", \"publish\",\"\",\'return verify(\\\'\'.gTxt(\'are_you_sure\').\'\\\')\')\n			.eInput(\"adi_prefs_admin\").sInput(\"admin\")\n			,\'\',\'\',\'post\',\'adi_prefs_form adi_prefs_nstall_button\'\n		);\n	}\n\n	if ($debug) {\n		echo \'<hr/><b>SET LIST:</b><br/>\';\n		dmp($adi_prefs_set_list);\n		echo \'<hr/><b>PREFERENCE LIST:</b><br/>\';\n		foreach ($adi_prefs_list as $pref_name => $value)\n			echo \'<b>\'.$pref_name.\'</b> - \'.$value[\'title\'].\' - \'.$value[\'html\'].\'<br/>\';\n		echo \'<hr/><b>STORED PREFERENCES:</b><br/>\';\n		foreach ($adi_prefs_list as $pref_name => $value)\n			foreach ($adi_prefs_set_list as $set_name => $value)\n			if ($set_name != \'current\')\n				echo \'<b>\'.$pref_name.\' (\'.$set_name.\')</b> = \'.adi_prefs_get($pref_name,$set_name).\'<br/>\';\n		echo \'<hr/><b>CURRENT PREFERENCES:</b><br/>\';\n		foreach ($adi_prefs_list as $name => $value)\n			echo \'<b>\'.$name.\'</b>: \'.$current_prefs[$name].\'<br/>\';\n		echo \'</p>\';\n	}\n}\n\nfunction adi_prefs_installed($table) {\n// test if supplied table is present\n	$rs = safe_query(\"SHOW TABLES LIKE \'\".safe_pfx($table).\"\'\");\n	$a = nextRow($rs);\n	if ($a)\n		return TRUE;\n	else\n		return FALSE;\n}\n\nfunction adi_prefs_install() {\n// create adi_prefs database table\n	global $adi_prefs_default_list,$adi_prefs_default_set_list,$current_prefs,$debug;\n	// create list of \"set\" columns\n	$set_cols = \'\';\n	foreach ($adi_prefs_default_set_list as $set_name => $set_title)\n		if ($set_name != \'current\') $set_cols .= \', \'.\"`$set_name` varchar(255) NOT NULL default \'\'\";\n	// create database table\n	$res = safe_query(\n		\"CREATE TABLE IF NOT EXISTS \".safe_pfx(\'adi_prefs\').\" (\n		`name` varchar(255) NOT NULL\"\n		.$set_cols\n		.\");\"\n		,$debug);\n	// add default list of prefs & initialise with current values\n	$pref_list = explode(\',\',$adi_prefs_default_list);\n	foreach ($pref_list as $index => $pref_name) {\n		if (array_key_exists($pref_name,$current_prefs)) { // check that default pref actually exists\n			$current_value = $current_prefs[$pref_name];\n			foreach ($adi_prefs_default_set_list as $set_name => $set_title)\n				if ($set_name != \'current\') $res = $res && safe_upsert(\'adi_prefs\',\"$set_name=\'\".$current_value.\"\'\",\"name=\'$pref_name\'\",$debug);\n		}\n	}\n	// set titles in preferences\n	foreach ($adi_prefs_default_set_list as $set_name => $set)\n		$res = $res && set_pref(\'adi_prefs_title_\'.$set_name,$set[\'title\'],\'adi_prefs_admin\',2);\n	$res = $res && set_pref(\'adi_prefs_visibility\',implode(\',\',array_keys($adi_prefs_default_set_list)),\'adi_prefs_admin\',2);\n 	return $res;\n}\n\nfunction adi_prefs_upgrade() {\n// check for presence of supplied set in adi_prefs table\n	global $adi_prefs_default_set_list,$adi_prefs_list,$current_prefs,$debug;\n	// version 0.2 - add \'test\' set\n	$res = safe_query(\"ALTER TABLE \".safe_pfx(\"adi_prefs\").\" ADD test VARCHAR(255) NOT NULL default \'\';\");\n	// initialise prefs with current values\n	foreach ($adi_prefs_list as $pref_name => $value) {\n		if (array_key_exists($pref_name,$current_prefs)) { // check that pref actually exists (possibly pointless here?)\n			$current_value = $current_prefs[$pref_name];\n			$res = $res && safe_upsert(\'adi_prefs\',\"test=\'\".$current_value.\"\'\",\"name=\'$pref_name\'\",$debug);\n		}\n	}\n	// set title preference\n	$res = $res && set_pref(\'adi_prefs_title_test\',$adi_prefs_default_set_list[\'test\'][\'title\'],\'adi_prefs_admin\',2);\n	$set_list = $adi_prefs_default_set_list;\n	unset($set_list[\'test\']); // Testing set invisible by default\n	$res = $res && set_pref(\'adi_prefs_visibility\',implode(\',\',array_keys($set_list)),\'adi_prefs_admin\',2);\n 	return $res;\n}\n\nfunction adi_prefs_uninstall() {\n// drop adi_prefs table\n	global $adi_prefs_default_set_list,$debug;\n	$res = safe_query(\"DROP TABLE \".safe_pfx(\'adi_prefs\').\";\",$debug);\n	// delete set title preferences\n	foreach ($adi_prefs_default_set_list as $set_name => $set)\n		if (safe_row(\"*\",\'txp_prefs\',\"name = \'adi_prefs_title_$set_name\'\",$debug))\n			$res = $res && safe_delete(\'txp_prefs\',\"name = \'adi_prefs_title_$set_name\'\",$debug);\n	$res = $res && safe_delete(\'txp_prefs\',\"name = \'adi_prefs_visibility\'\",$debug);\n	return $res;\n}\n\nfunction adi_prefs_get_list() {\n// create preferences array - indexed by pref name, containing pref title & input control\n	$pref_list = array();\n	$rs = safe_query(\"SELECT name FROM \".safe_pfx(\'adi_prefs\'));\n	while ($a = nextRow($rs)) {\n		extract($a); // so $name contains pref name\n		$b = safe_row(\"*\",\'txp_prefs\',\"name = \'$name\'\"); // read pref from txp_prefs table\n		if (!empty($b)) { // create array \'pref_name\' => array(\'html\' => input control)\n			$pref_list[$name][\'title\'] = gTxt($b[\'name\']);\n			$pref_list[$name][\'html\'] = $b[\'html\'];\n		}\n	}\n	//asort($pref_list);\n	return $pref_list;\n}\n\nfunction adi_prefs_display_prefs() {\n// generate table rows in admin tab\n	global $adi_prefs_list,$h,$adi_prefs_set_list,$current_prefs;\n	$out = \'\';\n	foreach ($adi_prefs_list as $pref_name => $pref_value) {\n		$site_prefs =\'\';\n		foreach ($adi_prefs_set_list as $set_name => $value) {\n			if ($adi_prefs_set_list[$set_name][\'visible\'])\n				$class = \'\';\n			else\n				$class = \' class=\"adi_prefs_invisible\"\';\n			if ($set_name == \'def\')\n				$site_prefs .= tda(adi_prefs_display(adi_prefs_get($pref_name,$set_name),$pref_value[\'html\']));\n			else if ($set_name == \'current\')\n				$site_prefs .= tda(adi_prefs_display($current_prefs[$pref_name],$pref_value[\'html\']));\n			else\n				$site_prefs .= tda(adi_prefs_input($pref_name.\"[$set_name]\",adi_prefs_get($pref_name,$set_name),$pref_value[\'html\']),$class);\n		}\n		$out .= tr(\n			tda($adi_prefs_list[$pref_name][\'title\'])\n			.$site_prefs\n			.tda(adi_prefs_delete_button($pref_name))\n		);\n	}\n	return $out;\n}\n\nfunction adi_prefs_set($name=\'\',$set=\'\',$new_value=\'\') {\n// set preference\n	global $current_prefs,$adi_prefs_list,$debug;\n	if ($name && $set) { // need pref name and set name\n		safe_update(\'adi_prefs\',\"$set = \'$new_value\'\",\"name = \'$name\'\",$debug);\n	}\n}\n\nfunction adi_prefs_get($name=\'\',$set=\'\') {\n// read preference\n	$a = safe_row($set,\'adi_prefs\',\"name = \'$name\'\"); // read preference from TXP database\n	if ($a)\n		return $a[$set];\n}\n\nfunction adi_prefs_input($name,$value,$input_control) {\n// display pref value in human form\n	if ($name == \'\')\n		return \'blank input name\'; // better display something!\n	else {\n		$func = \'adi_prefs_\'.$input_control; // translate input control into function name - adi_prefs_prod_levels, adi_prefs_yesnoradio etc\n		if (is_callable($func))\n			return call_user_func($func,$name,$value);\n		else // no specific function for input control, so use text input\n			return finput(\"text\",$name,$value,\'\',\'\',\'\',25);\n	}\n}\n\nfunction adi_prefs_display($value,$input_control) {\n// display pref value in human form\n	if ($value == \'\')\n		return \'&nbsp;\'; // don\'t want table cell collapsing!\n	else {\n		$func = \'adi_prefs_\'.$input_control; // translate input control into function name - adi_prefs_prod_levels, adi_prefs_yesnoradio etc\n		if (is_callable($func))\n			return call_user_func($func,\'\',$value);\n		else // no specific function for input control, so just display value\n			return $value;\n	}\n}\n\nfunction adi_prefs_style() {\n// some style for the page\n	echo\n		\'<style type=\"text/css\">\n			.adi_prefs_tip { border-bottom:1px dashed black }\n			.adi_prefs_button { margin-top:1em; text-align:center }\n			.adi_prefs_form { text-align:center }\n			.adi_prefs_heading { margin-top:2em; text-align:center }\n			.adi_prefs_message { text-align:center }\n			.adi_prefs_invisible { display:none }\n			.adi_prefs_nstall_button { margin-top:3em }\n		</style>\';\n}\n\nfunction adi_prefs_tooltip($help) {\n// admin tooltips (i.e. \'title\' attributes)\n	global $admin_style,$h;\n	$atts = \'\';\n	if ($help) {\n		if (isset($h[$help])) {\n			$atts .= \' title=\"\'.$h[$help].\'\"\';\n			$atts .= \' class=\"adi_prefs_tip\"\';\n		}\n	}\n	return $atts;\n}\n\nfunction adi_prefs_select_pref() {\n// create select list from txp_prefs - ignoring adi_prefs prefs, prefs in exclude list and prefs already in preference sets\n	global $myevent,$adi_prefs_list,$adi_prefs_exclude_list;\n	$event = substr($myevent,0,12); // event name truncated to 12 chars in database\n	$pref_select_list = array();\n	$pref_select_list[\'none\'] = \'Select preference ...\';\n	$rs = safe_rows_start(\'*\', \'txp_prefs\', \"event != \'$event\' and prefs_id = 1 order by name\");\n	while ($a = nextRow($rs)) {\n		extract($a);\n		if (!array_key_exists($name,$adi_prefs_list)) // don\'t show prefs already in $adi_prefs_list\n			if (array_search($name,$adi_prefs_exclude_list) === FALSE) // check exclude list\n				$pref_select_list[$name] = strip_tags(gTxt($name)); // get rid of embedded HTML tags from titles\n	}\n	return selectInput(\'something\', $pref_select_list,\'\');\n}\n\nfunction adi_prefs_delete_button($pref) {\n// X marks the delete spot\n	global $myevent;\n	$step = \'remove\';\n	$url = \'?event=\'.$myevent.a.\'step=\'.$step.a.\'something=\'.$pref;\n	return\n		\'<a href=\"\'\n		.$url\n		.\'\" class=\"dlink\" title=\"Remove pref?\" onclick=\"return verify(\\\'\'\n		.\'Remove \'.$pref.\' from preference sets?\'\n		.\'\\\')\">&#215;</a>\';\n}\n\nfunction adi_prefs_set_match() {\n// create list of sets whose pref values match the current values\n	global $current_prefs,$adi_prefs_list,$adi_prefs_set_list;\n	$matches = array();\n	foreach ($adi_prefs_set_list as $set_name => $value) {\n		$set_match = TRUE;\n		if ($set_name != \'current\') {\n			foreach ($adi_prefs_list as $pref_name => $value) {\n				$set_match = $set_match && adi_prefs_get($pref_name,$set_name) == $current_prefs[$pref_name];\n			}\n			if ($set_match)\n				$matches[] = $set_name;\n		}\n	}\n	return $matches;\n}\n\n/*\n	Input control functions copied from standard TXP\n	- renamed\n	- modified\n		- to just return value of <input> name is blank\n		- removed <input> IDs\n*/\n\nfunction adi_prefs_prod_levels($name,$val) {\n// based on prod_levels() from txp_prefs.php\n	$vals = array(\n		\'debug\'		=> gTxt(\'production_debug\'),\n		\'testing\' => gTxt(\'production_test\'),\n		\'live\'		=> gTxt(\'production_live\'),\n	);\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_yesnoradio($field,$var) {\n// based on yesnoradio() and radioSet() from txplib_forms()\n	$vals = array(\n		\'0\' => gTxt(\'no\'),\n		\'1\' => gTxt(\'yes\')\n	);\n	if ($field) { // input name supplied\n		$out = array();\n		foreach ($vals as $a => $b) {\n			$out[] = \'<input type=\"radio\" name=\"\'.$field.\'\" value=\"\'.$a.\'\" class=\"radio\"\';\n			$out[] = ($a == $var) ? \' checked=\"checked\"\' : \'\';\n			$out[] = \' /><label>\'.$b.\'</label> \';\n		}\n		return join(\'\', $out);\n	}\n	else // display only\n		return $vals[$var];\n}\n\nfunction adi_prefs_commentmode($name,$val) {\n// based on commentmode() from txp_prefs.php\n	$vals = array(\n		\'0\' => gTxt(\'nopopup\'),\n		\'1\' => gTxt(\'popup\')\n	);\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_weeks($name,$val) {\n// based on weeks() from txp_prefs.php\n	$weeks = gTxt(\'weeks\');\n	$vals = array(\n		\'0\' => gTxt(\'never\'),\n		7	=> \'1 \'.gTxt(\'week\'),\n		14	=> \'2 \'.$weeks,\n		21	=> \'3 \'.$weeks,\n		28	=> \'4 \'.$weeks,\n		35	=> \'5 \'.$weeks,\n		42	=> \'6 \'.$weeks\n	);\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val, \'\', \'\', $name);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_logging($name,$val) {\n// based on logging() from txp_prefs.php\n	$vals = array(\n		\'all\'	=> gTxt(\'all_hits\'),\n		\'refer\' => gTxt(\'referrers_only\'),\n		\'none\'	=> gTxt(\'none\')\n	);\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_dateformats($name,$val) {\n// based on dateformats() from txp_prefs.php\n	$dayname = \'%A\';\n	$dayshort = \'%a\';\n	$daynum = is_numeric(@strftime(\'%e\')) ? \'%e\' : \'%d\';\n	$daynumlead = \'%d\';\n	$daynumord = is_numeric(substr(trim(@strftime(\'%Oe\')), 0, 1)) ? \'%Oe\' : $daynum;\n	$monthname = \'%B\';\n	$monthshort = \'%b\';\n	$monthnum = \'%m\';\n	$year = \'%Y\';\n	$yearshort = \'%y\';\n	$time24 = \'%H:%M\';\n	$time12 = @strftime(\'%p\') ? \'%I:%M %p\' : $time24;\n	$date = @strftime(\'%x\') ? \'%x\' : \'%Y-%m-%d\';\n	$formats = array(\n            \"$monthshort $daynumord, $time12\",\n            \"$daynum.$monthnum.$yearshort\",\n            \"$daynumord $monthname, $time12\",\n            \"$yearshort.$monthnum.$daynumlead, $time12\",\n            \"$dayshort $monthshort $daynumord, $time12\",\n            \"$dayname $monthname $daynumord, $year\",\n            \"$monthshort $daynumord\",\n            \"$daynumord $monthname $yearshort\",\n            \"$daynumord $monthnum $year - $time24\",\n            \"$daynumord $monthname $year\",\n            \"$daynumord $monthname $year, $time24\",\n            \"$daynumord. $monthname $year\",\n            \"$daynumord. $monthname $year, $time24\",\n            \"$year-$monthnum-$daynumlead\",\n            \"$year-$daynumlead-$monthnum\",\n            \"$date $time12\",\n            \"$date\",\n            \"$time24\",\n            \"$time12\",\n            \"$year-$monthnum-$daynumlead $time24\",\n	);\n	$ts = time();\n	$vals = array();\n	foreach ($formats as $f) {\n		if ($d = safe_strftime($f, $ts)) {\n			$vals[$f] = $d;\n		}\n	}\n	$vals[\'since\'] = gTxt(\'hours_days_ago\');\n	if ($name) // input name supplied\n		return selectInput($name, array_unique($vals), $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_commentsendmail($name,$val) {\n// based on commentsendmail() from txp_prefs.php\n	$vals = array(\n	\'1\'	=> gTxt(\'all\'),\n	\'0\' => gTxt(\'none\'),\n	\'2\'	=> gTxt(\'ham\')\n	);\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_permlinkmodes($name,$val) {\n// based on permlinkmodes() from txp_prefs.php\n	$vals = array(\n		\'messy\' => gTxt(\'messy\'),\n		\'id_title\' => gTxt(\'id_title\'),\n		\'section_id_title\' => gTxt(\'section_id_title\'),\n		\'year_month_day_title\' => gTxt(\'year_month_day_title\'),\n		\'section_title\' => gTxt(\'section_title\'),\n		\'title_only\' => gTxt(\'title_only\'),\n		// \'category_subcategory\' => gTxt(\'category_subcategory\')\n        );\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_gmtoffset_select($name,$val) {\n// based on gmtoffset_select() from txp_prefs.php\n	$key = safe_field(\'val\', \'txp_prefs\', \"name=\'timezone_key\'\");\n	$tz = new timezone;\n	$ui = $tz->selectInput(\'timezone_key\', $key, true, \'\', \'gmtoffset\');\n	$tzd = $tz->details();\n	if ($name) // input name supplied\n		return $ui;\n	else // display only\n		return $tzd[$key][\'offset\']; // TO BE FIXED UP\n}\n\nfunction adi_prefs_themename($name,$val) {\n// based on themename() from txp_prefs.php\n	$themes = theme::names();\n	foreach ($themes as $t) {\n		$theme = theme::factory($t);\n		if ($theme) {\n			$m = $theme->manifest();\n			$title = empty($m[\'title\']) ? ucwords($theme->name) : $m[\'title\'];\n			$vals[$t] = $title;\n			unset($theme);\n		}\n	}\n	asort($vals, SORT_STRING);\n	if ($name)\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_languages($name,$val) {\n// based on languages() from txp_prefs.php\n	$installed_langs = safe_column(\'lang\', \'txp_lang\', \"1 = 1 group by lang\");\n	$vals = array();\n	foreach ($installed_langs as $lang) {\n		$vals[$lang] = safe_field(\'data\', \'txp_lang\', \"name = \'\".doSlash($lang).\"\' AND lang = \'\".doSlash($lang).\"\'\");\n		if (trim($vals[$lang]) == \'\')\n			$vals[$lang] = $lang;\n	}\n	asort($vals);\n	reset($vals);\n	$out = n.\'<select name=\"\'.$name.\'\" class=\"list\">\';\n	foreach ($vals as $avalue => $alabel) {\n		$selected = ($avalue == $val || $alabel == $val) ?\n		\' selected=\"selected\"\' :\n		\'\';\n		$out .= n.t.\'<option value=\"\'.htmlspecialchars($avalue).\'\"\'.$selected.\'>\'.htmlspecialchars($alabel).\'</option>\'.n;\n	}\n	$out .= n.\'</select>\';\n	if ($name) // input name supplied\n		return $out;\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_pref_text($name,$val) {\n// based on pref_text() from txplib_html.php\n	$vals = array(\n		USE_TEXTILE          => gTxt(\'use_textile\'),\n		CONVERT_LINEBREAKS   => gTxt(\'convert_linebreaks\'),\n		LEAVE_TEXT_UNTOUCHED => gTxt(\'leave_text_untouched\')\n	);\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_default_event($name,$val) {\n// based on default_event() from txp_prefs.php\n	$vals = areas();\n	$out = array();\n	foreach ($vals as $a => $b) {\n		if (count($b) > 0) {\n			$out[] = n.t.\'<optgroup label=\"\'.gTxt(\'tab_\'.$a).\'\">\';\n			foreach ($b as $c => $d) {\n				$out[] = n.t.t.\'<option value=\"\'.$d.\'\"\'.( $val == $d ? \' selected=\"selected\"\' : \'\' ).\'>\'.$c.\'</option>\';\n				if ($val == $d) $this_event = $c; // note the event\n			}\n			$out[] = n.t.\'</optgroup>\';\n		}\n	}\n	if ($name) // input name supplied\n		return n.\'<select name=\"\'.$name.\'\" class=\"list\">\'. join(\'\', $out). n.\'</select>\';\n	else // display only\n		return $this_event;\n}\n\nfunction adi_prefs_is_dst($name,$val) {\n// original does some sexy javascript - gloss over for now!\n	return adi_prefs_yesnoradio($name,$val);\n}\n','\n/*\n	adi_prefs - Preference Sets\n\n	Written by Adi Gilbert\n\n	Released under the GNU General Public License\n\n	Version history:\n	0.1		- initial release\n	0.2		- enhancement: added new set \"Testing\" (for Maniqui)\n			- enhancement: preference set visibility\n\n*/\n\nglobal $myevent,$mytab;\n\nif (@txpinterface == \'admin\') {\n	$myevent = \'adi_prefs_admin\';\n	$mytab = \'Preference Sets\';\n\n	$adi_prefs_privs = \'1,6\';\n\n	// set the privilege levels\n	add_privs($myevent,$adi_prefs_privs);\n\n	// add new tab under \'Admin\'\n	register_tab(\'admin\', $myevent, $mytab);\n\n	// callbacks\n	register_callback(\"adi_prefs_admin\", $myevent);	// adi_prefs admin tab\n	register_callback(\'adi_prefs_style\',\'admin_side\',\'head_end\');	// style for admin\n\n}\n\nfunction adi_prefs_admin($event, $step) {\n// adi_prefs admin tab\n\n	global $adi_prefs_default_list,$adi_prefs_exclude_list,$adi_prefs_list,$mytab,$debug,$adi_prefs_set_list,$adi_prefs_default_set_list,$h,$current_prefs,$txp420,$plugin_status;\n\n	$debug = 0; // display admin debug info\n\n	// default list of prefs\n	$adi_prefs_default_list = \'siteurl,production_status,file_base_path,tempdir,rss_dbbk_path,rss_dbbk_mysql,rss_dbbk_dump,xxx\';\n\n	// list of prefs to exclude\n	$adi_prefs_exclude_list = \"dbupdatetime,gmtoffset,lastmod,prefs_id,timeoffset,timezone_key,version\";\n	$adi_prefs_exclude_list = explode(\',\',$adi_prefs_exclude_list);\n\n	// default pref set titles\n	$adi_prefs_default_set_list = array(\n		\'current\' => array(\'title\' => \'Current\'),\n		\'def\' => array(\'title\' => \'Default\'),\n		\'dev\' => array(\'title\' => \'Local\'),\n		\'demo\' => array(\'title\' => \'Staging\'),\n		\'test\' => array(\'title\' => \'Testing\'),\n		\'live\' => array(\'title\' => \'Live\'),\n	);\n\n	// replace set titles with user defined, if any\n	foreach ($adi_prefs_default_set_list as $set_name => $value) {\n		$this_set_pref = \'adi_prefs_title_\'.$set_name;\n		$val = safe_field(\'val\', \'txp_prefs\', \"name=\'$this_set_pref\'\");\n		if (empty($val)) // use default set title\n			$adi_prefs_set_list[$set_name][\'title\'] = $adi_prefs_default_set_list[$set_name][\'title\'];\n		else // read set title from database\n			$adi_prefs_set_list[$set_name][\'title\'] = $val;\n	}\n\n	// get current active prefs\n	$current_prefs = get_prefs();\n\n	$installed = adi_prefs_installed(\'adi_prefs\');\n\n	if ($installed) {\n		// get stored prefs\n		$adi_prefs_list = adi_prefs_get_list();\n		// database upgrade required?\n		// version 0.2 add test set (find out if test set column exists)\n		$rs = safe_query(\'SELECT * FROM \'.safe_pfx(\'adi_prefs\'));\n		$a = nextRow($rs);\n		$found = array_key_exists(\'test\', $a);\n		if (!$found) $step = \'upgrade\';\n		if ($debug) {\n			echo \'<b>$adi_prefs_list:</b><br/>\';\n			dmp($adi_prefs_list);\n		}\n	}\n\n	// tooltip help information\n	$h[\'current\'] = \"The preference values which are currently in use on the website\";\n	$h[\'def\'] = \"The default set of preference values, recorded when adi_prefs was first installed\";\n	$h[\'dev\'] = $h[\'demo\'] = $h[\'test\'] = $h[\'live\'] = \"A user-defined set of preference values\";\n	$h[\'pref_sets\'] = \"The current values of preferences in the sets\";\n	$h[\'add_pref\'] = \"Add a new preference to the sets\";\n	$h[\'pref_set_titles\'] = \"User-friendly names for preference sets\";\n	$h[\'pref_set_visibility\'] = \"Specify whether user-defined preference sets should be displayed or not\";\n\n	$something = gps(\'something\');\n\n	if ($debug) echo \'<p><b>Event:</b> \'.$event.\'&nbsp;&nbsp;<b>Step:</b> \'.$step.\'&nbsp;&nbsp;<b>Something:</b> \'.$something.\'</p>\';\n\n	if ($step == \'update\') {\n		foreach ($adi_prefs_list as $pref_name => $value) {\n			$this_pref = ps($pref_name);\n			foreach ($adi_prefs_set_list as $set_name => $value)\n				if (($set_name != \'def\') && ($set_name != \'current\')) { // ignore \'def\' & \'current\' because they\'re for display only\n					if ($debug) echo \'<p><b>\'.$pref_name.\'[\'.$set_name.\']</b> = \'.$this_pref[$set_name];\n					adi_prefs_set($pref_name,$set_name,$this_pref[$set_name]);\n				}\n		}\n		$message = \'Preference sets updated\';\n	}\n	else if ($step == \'apply\') {\n		if ($something) { // i.e. set name\n			$result = TRUE;\n			foreach ($adi_prefs_list as $pref_name => $value) // apply \"set\" to the TXP database\n				$result = $result && safe_update(\'txp_prefs\',\"val = \'\".adi_prefs_get($pref_name,$something).\"\'\",\"name = \'\".doSlash($pref_name).\"\'\");\n			$result ? $message = \'<b>\'.$adi_prefs_set_list[$something][\'title\'].\'</b> preference set applied\' : $message = \'Unable to apply \'.$adi_prefs_set_list[$something][\'title\'].\' preference set\';\n		}\n		else\n			$message = \'No preference set selected!\';\n	}\n	else if ($step == \'add\') {\n		if ($something) { // $something = new pref from list\n			if ($something == \'none\')\n				$message = \'No new preference not selected\';\n			else {\n				if (array_key_exists($something,$current_prefs)) { // can\'t add what doesn\'t exist!\n					$result = TRUE;\n					$current_value = $current_prefs[$something];\n					foreach ($adi_prefs_default_set_list as $set_name => $set_title) // all set to current value\n						if ($set_name != \'current\') $result = $result && safe_upsert(\'adi_prefs\',\"$set_name=\'\".$current_value.\"\'\",\"name=\'$something\'\",$debug);\n				}\n				$result ? $message = \'<b>\'.$something.\'</b> preference added\' : $message = \'Unable to add <b>\'.$something.\'</b> preference\';\n			}\n		}\n		else\n			$message = \'No new preference selected!\';\n	}\n	else if ($step == \'remove\') {\n		if ($something) { // $something = the pref to remove\n			$result = safe_delete(\'adi_prefs\',\"name=\'$something\'\",$debug); // remove pref from database\n			//safe_repair(\'adi_prefs\'); // free up deleted space, so that new prefs go at end of list\n			$result ? $message = \'<b>\'.$something.\'</b> preference removed\' : $message = \'Unable to remove <b>\'.$something.\'</b> preference\';\n		}\n		else\n			$message = \'No preference selected for removal!\';\n	}\n	else if ($step == \'change_title\') {\n		if ($something) {\n			$result = TRUE;\n			foreach ($something as $set_name => $value) {\n				if (empty($value)) $value = $adi_prefs_default_set_list[$set_name][\'title\']; // revert to default title if blank\n				$adi_prefs_set_list[$set_name][\'title\'] = $value; // update sets array\n				$this_set_pref = \'adi_prefs_title_\'.$set_name;\n				set_pref($this_set_pref,$value,\'adi_prefs_admin\',2); // set\'s title pref\n			}\n			$result ? $message = \'Set titles updated\' : $message = \'Unable to update set titles\';\n		}\n		else\n			$message = \'No set title to change!\';\n	}\n	else if ($step == \'visibility\') {\n		$visibility = \'current,def\'; // always visible\n		$result = TRUE;\n		if ($something) {\n			foreach ($something as $set_name => $value)\n				if ($value) $visibility .= \',\'.$set_name;\n		}\n		$result = set_pref(\'adi_prefs_visibility\',$visibility,\'adi_prefs_admin\',2); // visibility preference\n		$result ? $message = \'Set visibility updated\' : $message = \'Unable to update set visibility\';\n	}\n	else if ($step == \'admin\') {\n		if ($something == \'install\') {\n			$result = adi_prefs_install();\n			$result ? $message = \'adi_prefs installed successfully\' : $message = \'Unable to install adi_prefs\';\n		}\n		else if ($something == \'uninstall\') {\n			$result = adi_prefs_uninstall();\n			$result ? $message = \'adi_prefs uninstalled successfully\' : $message = \'Unable to install adi_prefs\';\n		}\n		else if ($something == \'\')\n			$message = \'Nothing to do!\';\n		else\n			$message = \'Unknown admin function: \'.$something;\n	}\n	else if ($step == \'upgrade\') {\n		$result = adi_prefs_upgrade();\n		$result ? $message = \'adi_prefs upgraded successfully\' : $message = \'Unable to upgrade adi_prefs\';\n	}\n	else\n		$message = \'\';\n\n	if (($step == \'add\') || ($step == \'remove\') || ($step == \'update\'))\n		safe_repair(\'adi_prefs\'); // free up deleted space, so that new prefs go at end of list\n\n	pagetop(\"$mytab Admin\",$message);\n\n	$installed = adi_prefs_installed(\'adi_prefs\');\n\n	if ($installed) {\n\n		// read visibility from preference & store in general set array\n		$visibility = safe_field(\'val\', \'txp_prefs\', \"name=\'adi_prefs_visibility\'\");\n		foreach ($adi_prefs_set_list as $set_name => $value) {\n			$pos = strpos($visibility, $set_name);\n			$adi_prefs_set_list[$set_name][\'visible\'] = !($pos === false);\n		}\n\n		// get stored prefs\n		$adi_prefs_list = adi_prefs_get_list();\n\n		// get current active prefs\n		$current_prefs = get_prefs();\n\n		// find & display matching sets\n		$matches = adi_prefs_set_match();\n		foreach ($adi_prefs_set_list as $set_name => $value) // remove invisible sets from list\n			if (!$value[\'visible\']) {\n				$key = array_search($set_name, $matches);\n				if (!($key === FALSE))\n					unset($matches[$key]);\n			}\n		if (count($matches) == 0)\n			echo tag(\'No sets match the current preferences\',\'p\',\' class=\"adi_prefs_message\"\');\n		else if (count($matches) == 1)\n			echo tag(\'The <b>\'.$adi_prefs_set_list[$matches[0]][\'title\'].\'</b> set matches the current preferences\',\'p\',\' class=\"adi_prefs_message\"\');\n		else {\n			end($matches);\n			$last_index = key($matches);\n			$match_list = \'\';\n			foreach ($matches as $index => $set_name) {\n				($index == $last_index) ? $glue = \' &amp; \' : $glue = \', \';\n				$index ? $match_list .= $glue.$adi_prefs_set_list[$set_name][\'title\'] : $match_list .= $adi_prefs_set_list[$set_name][\'title\'];\n			}\n			echo tag(\'The <b>\'.$match_list.\'</b> sets match the current preferences\',\'p\',\' class=\"adi_prefs_message\"\');\n		}\n\n		// apply radio buttons\n		$set_radios = \'\';\n		foreach ($adi_prefs_set_list as $set_name => $value)\n			if ($set_name != \'current\') { // don\'t need to apply current!\n				if ($adi_prefs_set_list[$set_name][\'visible\'])\n					$set_radios .= tag($value[\'title\'],\'span\',adi_prefs_tooltip($set_name)).\' \'\n						.fInput(\"radio\", \"something\", $set_name, \"edit\", \"\", \"\", \"20\", \"1\").\'&nbsp;&nbsp;&nbsp;\';\n			}\n	    echo form(\n			$set_radios\n			.fInput(\"submit\", \"do_something\", \"Apply set\", \"publish\",\"\",\'return verify(\\\'\'.gTxt(\'are_you_sure\').\'\\\')\')\n			.eInput(\"adi_prefs_admin\").sInput(\"apply\")\n			,\'\',\'\',\'post\',\'adi_prefs_form\'\n		);\n\n		// preference table\n		$set_headings = \'\';\n		foreach ($adi_prefs_set_list as $set_name => $value) {\n			if ($adi_prefs_set_list[$set_name][\'visible\'])\n				$class = \'\';\n			else\n				$class = \' class=\"adi_prefs_invisible\"\';\n			$set_headings .= hcell(tag($value[\'title\'],\'span\',adi_prefs_tooltip($set_name)),\'\',$class);\n		}\n		echo form(\n			tag(tag(\'Preference Sets\',\'span\',adi_prefs_tooltip(\'pref_sets\')),\'h2\',\' class=\"adi_prefs_heading\"\')\n			.startTable(\'list\',\'\',\'adi_prefs_table\')\n			.tr(\n				hcell(\'Preference\')\n				.$set_headings\n				.hcell(\'&nbsp;\')\n			)\n			.adi_prefs_display_prefs()\n			.endTable()\n			.tag(\n				fInput(\"submit\", \"update\", \'Update sets\', \"smallerbox\")\n				.eInput(\"adi_prefs_admin\").sInput(\"update\"),\n				\'p\',\n				\' class=\"adi_prefs_button\"\'\n			)\n			,\'\',\'\',\'post\',\'adi_prefs_form\'\n		);\n\n		// add new preference\n	    echo form(\n			tag(tag(\'Add Preference\',\'span\',adi_prefs_tooltip(\'add_pref\')),\"h2\",\' class=\"adi_prefs_heading\"\')\n			.adi_prefs_select_pref().\'&nbsp;&nbsp;&nbsp;\'\n			.fInput(\"submit\", \"do_something\", \'Add pref\', \"smallerbox\")\n			.eInput(\"adi_prefs_admin\").sInput(\"add\")\n			,\'\',\'\',\'post\',\'adi_prefs_form\'\n		);\n\n		// user defined set titles\n		echo tag(tag(\'Preference Set Titles\',\'span\',adi_prefs_tooltip(\'pref_set_titles\')),\'h2\',\' class=\"adi_prefs_heading\"\');\n		//$set_titles = tda(tag(tag(\'Preference Set Titles:\',\'span\',adi_prefs_tooltip(\'pref_set_titles\')),\'h2\'));\n		$set_titles = \'\';\n		foreach ($adi_prefs_set_list as $set_name => $value)\n			if ($adi_prefs_set_list[$set_name][\'visible\'])\n				$set_titles .= tda(fInput(\"text\",\"something[$set_name]\",$value[\'title\'],\'\',\'\',\'\',25));\n	    echo form(\n			startTable(\'edit\',\'\',\'adi_prefs_set_titles\') // use table so that titles vaguely line up with main prefs table\n			.tr($set_titles)\n			.endTable()\n			.tag(\n				fInput(\"submit\", \"do_something\", \"Update titles\", \"smallerbox\")\n				.eInput(\"adi_prefs_admin\").sInput(\"change_title\"),\n				\'p\',\n				\' class=\"adi_prefs_button\"\'\n			)\n			,\'\',\'\',\'post\',\'adi_prefs_form\'\n		);\n\n		// preference set visibility\n		$visibility = safe_field(\'val\', \'txp_prefs\', \"name=\'adi_prefs_visibility\'\"); // read actual preference again, just in case\n		$set_checkboxes = \'\';\n		foreach ($adi_prefs_set_list as $set_name => $value)\n			if (($set_name != \'current\') && ($set_name != \'def\')) { // you can\'t hide these ones\n				$pos = strpos($visibility, $set_name);\n				$checked = !($pos === false);\n				$set_checkboxes .= tag($value[\'title\'],\'span\',adi_prefs_tooltip($set_name)).\' \'\n					.checkbox(\"something[$set_name]\", TRUE, $checked).\'&nbsp;&nbsp;&nbsp;\';\n			}\n		echo tag(tag(\'Preference Set Visibility\',\'span\',adi_prefs_tooltip(\'pref_set_visibility\')),\'h2\',\' class=\"adi_prefs_heading\"\');\n	    echo form(\n			$set_checkboxes\n			.fInput(\"submit\", \"do_something\", \"Update visibility\", \"smallerbox\")\n			.eInput(\"adi_prefs_admin\").sInput(\"visibility\")\n			,\'\',\'\',\'post\',\'adi_prefs_form\'\n		);\n\n		// uninstall button\n	    echo form(\n			hInput(\'something\',\'uninstall\')\n			.fInput(\"submit\", \"do_something\", \"Uninstall adi_prefs\", \"publish\",\"\",\'return verify(\\\'\'.gTxt(\'are_you_sure\').\'\\\')\')\n			.eInput(\"adi_prefs_admin\").sInput(\"admin\")\n			,\'\',\'\',\'post\',\'adi_prefs_form adi_prefs_nstall_button\'\n		);\n	}\n	else { // not installed\n		// install button\n	    echo form(\n			hInput(\'something\',\'install\')\n			.fInput(\"submit\", \"do_something\", \"Install adi_prefs\", \"publish\",\"\",\'return verify(\\\'\'.gTxt(\'are_you_sure\').\'\\\')\')\n			.eInput(\"adi_prefs_admin\").sInput(\"admin\")\n			,\'\',\'\',\'post\',\'adi_prefs_form adi_prefs_nstall_button\'\n		);\n	}\n\n	if ($debug) {\n		echo \'<hr/><b>SET LIST:</b><br/>\';\n		dmp($adi_prefs_set_list);\n		echo \'<hr/><b>PREFERENCE LIST:</b><br/>\';\n		foreach ($adi_prefs_list as $pref_name => $value)\n			echo \'<b>\'.$pref_name.\'</b> - \'.$value[\'title\'].\' - \'.$value[\'html\'].\'<br/>\';\n		echo \'<hr/><b>STORED PREFERENCES:</b><br/>\';\n		foreach ($adi_prefs_list as $pref_name => $value)\n			foreach ($adi_prefs_set_list as $set_name => $value)\n			if ($set_name != \'current\')\n				echo \'<b>\'.$pref_name.\' (\'.$set_name.\')</b> = \'.adi_prefs_get($pref_name,$set_name).\'<br/>\';\n		echo \'<hr/><b>CURRENT PREFERENCES:</b><br/>\';\n		foreach ($adi_prefs_list as $name => $value)\n			echo \'<b>\'.$name.\'</b>: \'.$current_prefs[$name].\'<br/>\';\n		echo \'</p>\';\n	}\n}\n\nfunction adi_prefs_installed($table) {\n// test if supplied table is present\n	$rs = safe_query(\"SHOW TABLES LIKE \'\".safe_pfx($table).\"\'\");\n	$a = nextRow($rs);\n	if ($a)\n		return TRUE;\n	else\n		return FALSE;\n}\n\nfunction adi_prefs_install() {\n// create adi_prefs database table\n	global $adi_prefs_default_list,$adi_prefs_default_set_list,$current_prefs,$debug;\n	// create list of \"set\" columns\n	$set_cols = \'\';\n	foreach ($adi_prefs_default_set_list as $set_name => $set_title)\n		if ($set_name != \'current\') $set_cols .= \', \'.\"`$set_name` varchar(255) NOT NULL default \'\'\";\n	// create database table\n	$res = safe_query(\n		\"CREATE TABLE IF NOT EXISTS \".safe_pfx(\'adi_prefs\').\" (\n		`name` varchar(255) NOT NULL\"\n		.$set_cols\n		.\");\"\n		,$debug);\n	// add default list of prefs & initialise with current values\n	$pref_list = explode(\',\',$adi_prefs_default_list);\n	foreach ($pref_list as $index => $pref_name) {\n		if (array_key_exists($pref_name,$current_prefs)) { // check that default pref actually exists\n			$current_value = $current_prefs[$pref_name];\n			foreach ($adi_prefs_default_set_list as $set_name => $set_title)\n				if ($set_name != \'current\') $res = $res && safe_upsert(\'adi_prefs\',\"$set_name=\'\".$current_value.\"\'\",\"name=\'$pref_name\'\",$debug);\n		}\n	}\n	// set titles in preferences\n	foreach ($adi_prefs_default_set_list as $set_name => $set)\n		$res = $res && set_pref(\'adi_prefs_title_\'.$set_name,$set[\'title\'],\'adi_prefs_admin\',2);\n	$res = $res && set_pref(\'adi_prefs_visibility\',implode(\',\',array_keys($adi_prefs_default_set_list)),\'adi_prefs_admin\',2);\n 	return $res;\n}\n\nfunction adi_prefs_upgrade() {\n// check for presence of supplied set in adi_prefs table\n	global $adi_prefs_default_set_list,$adi_prefs_list,$current_prefs,$debug;\n	// version 0.2 - add \'test\' set\n	$res = safe_query(\"ALTER TABLE \".safe_pfx(\"adi_prefs\").\" ADD test VARCHAR(255) NOT NULL default \'\';\");\n	// initialise prefs with current values\n	foreach ($adi_prefs_list as $pref_name => $value) {\n		if (array_key_exists($pref_name,$current_prefs)) { // check that pref actually exists (possibly pointless here?)\n			$current_value = $current_prefs[$pref_name];\n			$res = $res && safe_upsert(\'adi_prefs\',\"test=\'\".$current_value.\"\'\",\"name=\'$pref_name\'\",$debug);\n		}\n	}\n	// set title preference\n	$res = $res && set_pref(\'adi_prefs_title_test\',$adi_prefs_default_set_list[\'test\'][\'title\'],\'adi_prefs_admin\',2);\n	$set_list = $adi_prefs_default_set_list;\n	unset($set_list[\'test\']); // Testing set invisible by default\n	$res = $res && set_pref(\'adi_prefs_visibility\',implode(\',\',array_keys($set_list)),\'adi_prefs_admin\',2);\n 	return $res;\n}\n\nfunction adi_prefs_uninstall() {\n// drop adi_prefs table\n	global $adi_prefs_default_set_list,$debug;\n	$res = safe_query(\"DROP TABLE \".safe_pfx(\'adi_prefs\').\";\",$debug);\n	// delete set title preferences\n	foreach ($adi_prefs_default_set_list as $set_name => $set)\n		if (safe_row(\"*\",\'txp_prefs\',\"name = \'adi_prefs_title_$set_name\'\",$debug))\n			$res = $res && safe_delete(\'txp_prefs\',\"name = \'adi_prefs_title_$set_name\'\",$debug);\n	$res = $res && safe_delete(\'txp_prefs\',\"name = \'adi_prefs_visibility\'\",$debug);\n	return $res;\n}\n\nfunction adi_prefs_get_list() {\n// create preferences array - indexed by pref name, containing pref title & input control\n	$pref_list = array();\n	$rs = safe_query(\"SELECT name FROM \".safe_pfx(\'adi_prefs\'));\n	while ($a = nextRow($rs)) {\n		extract($a); // so $name contains pref name\n		$b = safe_row(\"*\",\'txp_prefs\',\"name = \'$name\'\"); // read pref from txp_prefs table\n		if (!empty($b)) { // create array \'pref_name\' => array(\'html\' => input control)\n			$pref_list[$name][\'title\'] = gTxt($b[\'name\']);\n			$pref_list[$name][\'html\'] = $b[\'html\'];\n		}\n	}\n	//asort($pref_list);\n	return $pref_list;\n}\n\nfunction adi_prefs_display_prefs() {\n// generate table rows in admin tab\n	global $adi_prefs_list,$h,$adi_prefs_set_list,$current_prefs;\n	$out = \'\';\n	foreach ($adi_prefs_list as $pref_name => $pref_value) {\n		$site_prefs =\'\';\n		foreach ($adi_prefs_set_list as $set_name => $value) {\n			if ($adi_prefs_set_list[$set_name][\'visible\'])\n				$class = \'\';\n			else\n				$class = \' class=\"adi_prefs_invisible\"\';\n			if ($set_name == \'def\')\n				$site_prefs .= tda(adi_prefs_display(adi_prefs_get($pref_name,$set_name),$pref_value[\'html\']));\n			else if ($set_name == \'current\')\n				$site_prefs .= tda(adi_prefs_display($current_prefs[$pref_name],$pref_value[\'html\']));\n			else\n				$site_prefs .= tda(adi_prefs_input($pref_name.\"[$set_name]\",adi_prefs_get($pref_name,$set_name),$pref_value[\'html\']),$class);\n		}\n		$out .= tr(\n			tda($adi_prefs_list[$pref_name][\'title\'])\n			.$site_prefs\n			.tda(adi_prefs_delete_button($pref_name))\n		);\n	}\n	return $out;\n}\n\nfunction adi_prefs_set($name=\'\',$set=\'\',$new_value=\'\') {\n// set preference\n	global $current_prefs,$adi_prefs_list,$debug;\n	if ($name && $set) { // need pref name and set name\n		safe_update(\'adi_prefs\',\"$set = \'$new_value\'\",\"name = \'$name\'\",$debug);\n	}\n}\n\nfunction adi_prefs_get($name=\'\',$set=\'\') {\n// read preference\n	$a = safe_row($set,\'adi_prefs\',\"name = \'$name\'\"); // read preference from TXP database\n	if ($a)\n		return $a[$set];\n}\n\nfunction adi_prefs_input($name,$value,$input_control) {\n// display pref value in human form\n	if ($name == \'\')\n		return \'blank input name\'; // better display something!\n	else {\n		$func = \'adi_prefs_\'.$input_control; // translate input control into function name - adi_prefs_prod_levels, adi_prefs_yesnoradio etc\n		if (is_callable($func))\n			return call_user_func($func,$name,$value);\n		else // no specific function for input control, so use text input\n			return finput(\"text\",$name,$value,\'\',\'\',\'\',25);\n	}\n}\n\nfunction adi_prefs_display($value,$input_control) {\n// display pref value in human form\n	if ($value == \'\')\n		return \'&nbsp;\'; // don\'t want table cell collapsing!\n	else {\n		$func = \'adi_prefs_\'.$input_control; // translate input control into function name - adi_prefs_prod_levels, adi_prefs_yesnoradio etc\n		if (is_callable($func))\n			return call_user_func($func,\'\',$value);\n		else // no specific function for input control, so just display value\n			return $value;\n	}\n}\n\nfunction adi_prefs_style() {\n// some style for the page\n	echo\n		\'<style type=\"text/css\">\n			.adi_prefs_tip { border-bottom:1px dashed black }\n			.adi_prefs_button { margin-top:1em; text-align:center }\n			.adi_prefs_form { text-align:center }\n			.adi_prefs_heading { margin-top:2em; text-align:center }\n			.adi_prefs_message { text-align:center }\n			.adi_prefs_invisible { display:none }\n			.adi_prefs_nstall_button { margin-top:3em }\n		</style>\';\n}\n\nfunction adi_prefs_tooltip($help) {\n// admin tooltips (i.e. \'title\' attributes)\n	global $admin_style,$h;\n	$atts = \'\';\n	if ($help) {\n		if (isset($h[$help])) {\n			$atts .= \' title=\"\'.$h[$help].\'\"\';\n			$atts .= \' class=\"adi_prefs_tip\"\';\n		}\n	}\n	return $atts;\n}\n\nfunction adi_prefs_select_pref() {\n// create select list from txp_prefs - ignoring adi_prefs prefs, prefs in exclude list and prefs already in preference sets\n	global $myevent,$adi_prefs_list,$adi_prefs_exclude_list;\n	$event = substr($myevent,0,12); // event name truncated to 12 chars in database\n	$pref_select_list = array();\n	$pref_select_list[\'none\'] = \'Select preference ...\';\n	$rs = safe_rows_start(\'*\', \'txp_prefs\', \"event != \'$event\' and prefs_id = 1 order by name\");\n	while ($a = nextRow($rs)) {\n		extract($a);\n		if (!array_key_exists($name,$adi_prefs_list)) // don\'t show prefs already in $adi_prefs_list\n			if (array_search($name,$adi_prefs_exclude_list) === FALSE) // check exclude list\n				$pref_select_list[$name] = strip_tags(gTxt($name)); // get rid of embedded HTML tags from titles\n	}\n	return selectInput(\'something\', $pref_select_list,\'\');\n}\n\nfunction adi_prefs_delete_button($pref) {\n// X marks the delete spot\n	global $myevent;\n	$step = \'remove\';\n	$url = \'?event=\'.$myevent.a.\'step=\'.$step.a.\'something=\'.$pref;\n	return\n		\'<a href=\"\'\n		.$url\n		.\'\" class=\"dlink\" title=\"Remove pref?\" onclick=\"return verify(\\\'\'\n		.\'Remove \'.$pref.\' from preference sets?\'\n		.\'\\\')\">&#215;</a>\';\n}\n\nfunction adi_prefs_set_match() {\n// create list of sets whose pref values match the current values\n	global $current_prefs,$adi_prefs_list,$adi_prefs_set_list;\n	$matches = array();\n	foreach ($adi_prefs_set_list as $set_name => $value) {\n		$set_match = TRUE;\n		if ($set_name != \'current\') {\n			foreach ($adi_prefs_list as $pref_name => $value) {\n				$set_match = $set_match && adi_prefs_get($pref_name,$set_name) == $current_prefs[$pref_name];\n			}\n			if ($set_match)\n				$matches[] = $set_name;\n		}\n	}\n	return $matches;\n}\n\n/*\n	Input control functions copied from standard TXP\n	- renamed\n	- modified\n		- to just return value of <input> name is blank\n		- removed <input> IDs\n*/\n\nfunction adi_prefs_prod_levels($name,$val) {\n// based on prod_levels() from txp_prefs.php\n	$vals = array(\n		\'debug\'		=> gTxt(\'production_debug\'),\n		\'testing\' => gTxt(\'production_test\'),\n		\'live\'		=> gTxt(\'production_live\'),\n	);\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_yesnoradio($field,$var) {\n// based on yesnoradio() and radioSet() from txplib_forms()\n	$vals = array(\n		\'0\' => gTxt(\'no\'),\n		\'1\' => gTxt(\'yes\')\n	);\n	if ($field) { // input name supplied\n		$out = array();\n		foreach ($vals as $a => $b) {\n			$out[] = \'<input type=\"radio\" name=\"\'.$field.\'\" value=\"\'.$a.\'\" class=\"radio\"\';\n			$out[] = ($a == $var) ? \' checked=\"checked\"\' : \'\';\n			$out[] = \' /><label>\'.$b.\'</label> \';\n		}\n		return join(\'\', $out);\n	}\n	else // display only\n		return $vals[$var];\n}\n\nfunction adi_prefs_commentmode($name,$val) {\n// based on commentmode() from txp_prefs.php\n	$vals = array(\n		\'0\' => gTxt(\'nopopup\'),\n		\'1\' => gTxt(\'popup\')\n	);\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_weeks($name,$val) {\n// based on weeks() from txp_prefs.php\n	$weeks = gTxt(\'weeks\');\n	$vals = array(\n		\'0\' => gTxt(\'never\'),\n		7	=> \'1 \'.gTxt(\'week\'),\n		14	=> \'2 \'.$weeks,\n		21	=> \'3 \'.$weeks,\n		28	=> \'4 \'.$weeks,\n		35	=> \'5 \'.$weeks,\n		42	=> \'6 \'.$weeks\n	);\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val, \'\', \'\', $name);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_logging($name,$val) {\n// based on logging() from txp_prefs.php\n	$vals = array(\n		\'all\'	=> gTxt(\'all_hits\'),\n		\'refer\' => gTxt(\'referrers_only\'),\n		\'none\'	=> gTxt(\'none\')\n	);\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_dateformats($name,$val) {\n// based on dateformats() from txp_prefs.php\n	$dayname = \'%A\';\n	$dayshort = \'%a\';\n	$daynum = is_numeric(@strftime(\'%e\')) ? \'%e\' : \'%d\';\n	$daynumlead = \'%d\';\n	$daynumord = is_numeric(substr(trim(@strftime(\'%Oe\')), 0, 1)) ? \'%Oe\' : $daynum;\n	$monthname = \'%B\';\n	$monthshort = \'%b\';\n	$monthnum = \'%m\';\n	$year = \'%Y\';\n	$yearshort = \'%y\';\n	$time24 = \'%H:%M\';\n	$time12 = @strftime(\'%p\') ? \'%I:%M %p\' : $time24;\n	$date = @strftime(\'%x\') ? \'%x\' : \'%Y-%m-%d\';\n	$formats = array(\n            \"$monthshort $daynumord, $time12\",\n            \"$daynum.$monthnum.$yearshort\",\n            \"$daynumord $monthname, $time12\",\n            \"$yearshort.$monthnum.$daynumlead, $time12\",\n            \"$dayshort $monthshort $daynumord, $time12\",\n            \"$dayname $monthname $daynumord, $year\",\n            \"$monthshort $daynumord\",\n            \"$daynumord $monthname $yearshort\",\n            \"$daynumord $monthnum $year - $time24\",\n            \"$daynumord $monthname $year\",\n            \"$daynumord $monthname $year, $time24\",\n            \"$daynumord. $monthname $year\",\n            \"$daynumord. $monthname $year, $time24\",\n            \"$year-$monthnum-$daynumlead\",\n            \"$year-$daynumlead-$monthnum\",\n            \"$date $time12\",\n            \"$date\",\n            \"$time24\",\n            \"$time12\",\n            \"$year-$monthnum-$daynumlead $time24\",\n	);\n	$ts = time();\n	$vals = array();\n	foreach ($formats as $f) {\n		if ($d = safe_strftime($f, $ts)) {\n			$vals[$f] = $d;\n		}\n	}\n	$vals[\'since\'] = gTxt(\'hours_days_ago\');\n	if ($name) // input name supplied\n		return selectInput($name, array_unique($vals), $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_commentsendmail($name,$val) {\n// based on commentsendmail() from txp_prefs.php\n	$vals = array(\n	\'1\'	=> gTxt(\'all\'),\n	\'0\' => gTxt(\'none\'),\n	\'2\'	=> gTxt(\'ham\')\n	);\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_permlinkmodes($name,$val) {\n// based on permlinkmodes() from txp_prefs.php\n	$vals = array(\n		\'messy\' => gTxt(\'messy\'),\n		\'id_title\' => gTxt(\'id_title\'),\n		\'section_id_title\' => gTxt(\'section_id_title\'),\n		\'year_month_day_title\' => gTxt(\'year_month_day_title\'),\n		\'section_title\' => gTxt(\'section_title\'),\n		\'title_only\' => gTxt(\'title_only\'),\n		// \'category_subcategory\' => gTxt(\'category_subcategory\')\n        );\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_gmtoffset_select($name,$val) {\n// based on gmtoffset_select() from txp_prefs.php\n	$key = safe_field(\'val\', \'txp_prefs\', \"name=\'timezone_key\'\");\n	$tz = new timezone;\n	$ui = $tz->selectInput(\'timezone_key\', $key, true, \'\', \'gmtoffset\');\n	$tzd = $tz->details();\n	if ($name) // input name supplied\n		return $ui;\n	else // display only\n		return $tzd[$key][\'offset\']; // TO BE FIXED UP\n}\n\nfunction adi_prefs_themename($name,$val) {\n// based on themename() from txp_prefs.php\n	$themes = theme::names();\n	foreach ($themes as $t) {\n		$theme = theme::factory($t);\n		if ($theme) {\n			$m = $theme->manifest();\n			$title = empty($m[\'title\']) ? ucwords($theme->name) : $m[\'title\'];\n			$vals[$t] = $title;\n			unset($theme);\n		}\n	}\n	asort($vals, SORT_STRING);\n	if ($name)\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_languages($name,$val) {\n// based on languages() from txp_prefs.php\n	$installed_langs = safe_column(\'lang\', \'txp_lang\', \"1 = 1 group by lang\");\n	$vals = array();\n	foreach ($installed_langs as $lang) {\n		$vals[$lang] = safe_field(\'data\', \'txp_lang\', \"name = \'\".doSlash($lang).\"\' AND lang = \'\".doSlash($lang).\"\'\");\n		if (trim($vals[$lang]) == \'\')\n			$vals[$lang] = $lang;\n	}\n	asort($vals);\n	reset($vals);\n	$out = n.\'<select name=\"\'.$name.\'\" class=\"list\">\';\n	foreach ($vals as $avalue => $alabel) {\n		$selected = ($avalue == $val || $alabel == $val) ?\n		\' selected=\"selected\"\' :\n		\'\';\n		$out .= n.t.\'<option value=\"\'.htmlspecialchars($avalue).\'\"\'.$selected.\'>\'.htmlspecialchars($alabel).\'</option>\'.n;\n	}\n	$out .= n.\'</select>\';\n	if ($name) // input name supplied\n		return $out;\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_pref_text($name,$val) {\n// based on pref_text() from txplib_html.php\n	$vals = array(\n		USE_TEXTILE          => gTxt(\'use_textile\'),\n		CONVERT_LINEBREAKS   => gTxt(\'convert_linebreaks\'),\n		LEAVE_TEXT_UNTOUCHED => gTxt(\'leave_text_untouched\')\n	);\n	if ($name) // input name supplied\n		return selectInput($name, $vals, $val);\n	else // display only\n		return $vals[$val];\n}\n\nfunction adi_prefs_default_event($name,$val) {\n// based on default_event() from txp_prefs.php\n	$vals = areas();\n	$out = array();\n	foreach ($vals as $a => $b) {\n		if (count($b) > 0) {\n			$out[] = n.t.\'<optgroup label=\"\'.gTxt(\'tab_\'.$a).\'\">\';\n			foreach ($b as $c => $d) {\n				$out[] = n.t.t.\'<option value=\"\'.$d.\'\"\'.( $val == $d ? \' selected=\"selected\"\' : \'\' ).\'>\'.$c.\'</option>\';\n				if ($val == $d) $this_event = $c; // note the event\n			}\n			$out[] = n.t.\'</optgroup>\';\n		}\n	}\n	if ($name) // input name supplied\n		return n.\'<select name=\"\'.$name.\'\" class=\"list\">\'. join(\'\', $out). n.\'</select>\';\n	else // display only\n		return $this_event;\n}\n\nfunction adi_prefs_is_dst($name,$val) {\n// original does some sexy javascript - gloss over for now!\n	return adi_prefs_yesnoradio($name,$val);\n}\n','a38ba668573390bfbaa60d3599614446',1,5,0),
	('bot_write_tab_customize',1,'redbot','http://www.redbot.it/txp','0.7.2','Rearrange and style items in the write tab','<h2>Write tab customize help</h2>\n\n\n\n  <h3>Overview</h3>\n\n  <p>This plugin aims to be an all-in-one solution for the \"write\" tab customization. It allows to  rearrange items, hide them on a per-section basis,  remove some sections from the <em>sections </em>dropdown and much more. By combining   its features you can get a totally different <em>write</em> tab arrangement depending on which section you choose in the <em>sections</em> dropdown.  Used alone or togheter with other plugins (glz_custom_fields and  bot_admin_body_class to name a few)  it will help you customize the site  backend   for your clients quickly and easily. </p>\n\n\n  <h3>Features</h3>\n\n  <ul>\n    <li>Single items (custom fields, body, excerpt etc.) or whole columns can be moved around relative to other single items or columns</li>\n    <li>Items can be hidden on a per-section basis</li>\n    <li>Sections can be removed from the \"write\" tab sections dropdown (for static sections like \"about us\" or \"search\") </li>\n    <li>A custom css class can be set for each item. This let\'s you define   classes for items that normally couldn\'t be targeted with simple css  (i.e. a &lt;p&gt; surrounding a specific custom field and his label - if  you are using glz_custom_fields). This feature has now a reduced  importance with txp 3.0 since a lot more page elements can be directly  targeted by css.  Nonetheless it can still prove useful in some cases</li>\n\n    <li>Javascript code can be set directly throught the plugin interface.  Particularly useful  for use with an external jquery plugin and in  conjunction with the ability to add a css class to any item on the page.  The script will be executed only in the <em>write</em> tab </li>\n    <li>Advanced preferences allows for multiple items hiding and class  attribution,  speeding up the customization process if a lot of custom  fields are set. </li>\n    <li>Compatible with glz_custom_fields, rah_section_titles and              rah_write_each_section </li>\n  </ul>\n  <p>Note that the rearrange capability    is mainly intended to be  an  intermediate step in the  customization process. To to fine-tune your  customization  you <em>may</em> need to  modify  the \"textpattern.css\" file.</p>\n\n\n  <h3>A simple example</h3>\n\n  <p>Suppose you want a  custom field called \"Files\" to be the first item at the top left corner of the <em>write</em> tab.<br/>\n    Quite easy:  set the rule \"Files\" before \"advanced Options \".</p>\n  <p>Ok, now you want it to show only in section \"Media\".<br/>\n\n    Easy too: in the \"hide in\" column check all sections <em>but</em> the \"Media\" section.</p>\n  <p>But wait. You now want it to have a different look compared to other  custom fields and you are using glz_custom_fields (which applies to all  cfs a generic  \"glz_custom_field\" class removing the default  more-specific default class).    In this case set an arbitrary class for the item  and, in the  textpattern.css, set a corresponding css rule, or - if you are in a rush  - define the rule directly in the js box.</p>\n  <p>That\'s not enough? Maybe you want the field to perform an animation using a jquery plugin when you hover on it?<br/>\n    Then again, set a class for the item,  reference the plugin and write the appropriate code in the js box like this:</p>\n  <p><code>&lt;script type=\"text/javascript\" src= \"../js/your_jquery_animations_plugin.js\"&gt;&lt;/script&gt;<br/>\n\n    &lt;script language=\"javascript\" type=\"text/javascript\"&gt;<br/>\n    $(document).ready(function() {<br/>\n    $(\".animate\").your_jquery_animations_plugin();<br/>\n    });<br/>\n    &lt;/script&gt;</code></p>\n\n\n  <h3>A little tip </h3>\n\n  <p>Textpattern 4.3 brought a lot of cool enhancements to the \"write\" tab but also a few drawbacks.</p>\n  <p>On the \'enhancement\' side almost every item has now an id or a class.  This means a snappier jquery execution and, above all, the possibility  to hide these elements with simple css. Unfortunately there are some  little drawbacks in the way the page is designed (IMHO). I\'m referring  to the 	several collapsible groups which crowd the \'write\' tab. </p>\n  <p> The issue here is while you can easily hide a group <em>label</em> (well, actually it isn\'t an html label but an h3) with css, this may  lead to trouble if the group is already collapsed. In this case a user  will not be able to expand it anymore being there nothing to be clicked.<br/>\n    Of course this is nothing dramatic and can be fixed inserting a tiny jquery rule in the js box. Something like:</p>\n\n  <p><code>&lt;script type=\"text/javascript\"&gt;<br/>\n    $(document).ready(function() {<br/>\n    $(\".toggle\").show();<br/>\n    });<br/>\n    &lt;/script&gt;</code></p>\n  <p>will keep everything expanded so you can safely hide any <em>label</em> with css (in your textpattern.css file</p>\n\n\n  <h3>Upgrade notes </h3>\n\n  <p> The plugin should take care of updating the data stored in the db on activation, anyway I strongly reccommend - especially if you have a lot of rules set - to  backup your db before upgrading in case something goes wrong. </p>\n\n\n  <h3>Notes</h3>\n\n  <ul>\n    <li>The order in which the rules for moving items are inserted <strong>does</strong> matter. Rules execution goes from top to bottom so in case the sequence  gets garbled it\'s advisable to delete all and start over </li>\n\n    <li>Class names must be inserted <strong>without</strong> the dot</li>\n    <li>If you want to hide an item in <strong>all </strong>sections   set a rule directly in your textpattern css file.      For example: .override-form {display:none;} Is <strong>a lot</strong> more efficient than hiding the item in each section using this plugin.</li>\n    <li>This plugin may not function properly if you have the Suhosing  module (a security-related module for PHP) installed. In this case  follow <a href=\"http://forum.textpattern.com/viewtopic.php?pid=243861#p243861\">these instructions</a> (thanks maniqui!) </li>\n\n  </ul>\n\n\n  <h3>Installation</h3>\n\n  <p> Paste the code into the  Admin &gt; Plugins tab, install and enable the plugin. Visit the \"Extensions\" tab and click the <em>Install </em> button.</p>\n\n\n  <h3>Changelog</h3>\n\n\n  <p>v 7.1</p>\n  <ul>\n    <li>  fixed <a href=\"http://forum.textpattern.com/viewtopic.php?pid=245511#p245511\">issue with multiselect and checkboxes</a> cfs</li>\n    <li>  fixed deprecated jquery</li>\n    <li> changed \'sections\' field <a href=\"http://forum.textpattern.com/viewtopic.php?pid=254132#p254132\">from varchar to text</a></li>\n\n    <li>  added missing semicolon at the end of line 903</li>\n    <li>  removed deprecated language attribute from \'script\' tag</li>\n    <li>  updated help</li>\n    <li>  cleaned up code</li>','//<?\nif(@txpinterface == \'admin\') {\n	add_privs(\'bot_wtc_tab\', \'1,2\');\n	register_tab(\'extensions\', \'bot_wtc_tab\', \'Write tab customize\');\n	register_callback(\'bot_wtc_tab\', \'bot_wtc_tab\');\n	register_callback(\'bot_wtc_css\',\'admin_side\',\'head_end\');\n	register_callback(\'bot_wtc\', \'article\');\n	register_callback(\'bot_hide_per_section\', \'article\');\n	register_callback(\'bot_hidden_sections\', \'article\');\n	register_callback(\'bot_wtc_update\',\'plugin_lifecycle.bot_write_tab_customize\', \'enabled\');\n}\n\n\n\n// ===========================================\n\n\n\n\n$bot_arr_selectors = array(\n    \'textile_help\' => \'$(\"#textile_group\")\',\n    \'advanced_options\' => \'$(\"#advanced_group\")\',\n    \'article_markup\' => \'$(\".markup-body\")\',\n    \'excerpt_markup\' => \'$(\".markup-excerpt\")\',\n    \'override_default_form\' => \'$(\".override-form\")\',\n    \'custom\' => \'$(\"#custom_field_group\")\',\n    \'article_image\' => \'$(\"#image_group\")\',\n    \'meta\' => \'$(\"#meta_group\")\',\n    \'keywords\' => \'$(\".keywords\")\',\n    \'url_title\' => \'$(\".url-title\")\',\n    \'recent_articles\' => \'$(\"#recent_group\")\',\n\n    \'title\' => \'$(\".title\")\',\n    \'body\' => \'$(\".body\")\',\n    \'excerpt\' => \'$(\".excerpt\")\',\n\n    \'create_new\' => \'$(\".action-create\")\',\n    \'page_article_nav_hed\' => \'$(\".nav-tertiary\")\',\n    \'status\' => \'$(\"#write-status\")\',\n    \'sort_display\' => \'$(\"#write-sort\")\',\n    \'category1\' => \'$(\".category-1\")\',\n    \'category2\' => \'$(\".category-2\")\',\n    \'section\' => \'$(\".section\")\',\n    \'date_settings\' => \'$(\"#dates_group\")\',\n    \'comments\' => \'$(\"#comments_group\")\',\n    \'timestamp\' => \'$(\"#write-timestamp\")\',\n    \'expires\' => \'$(\"#write-expires\")\',\n    \'publish\' => \'$(\"#write-publish\")\',\n    \'save\' => \'$(\"#write-save\")\',\n\n    \'logged_in_as\' => \'$(\"#moniker\")\',\n\n    \'TD Column 1\' => \'$(\"#article-col-1\")\',\n    \'TD Column 2\' => \'$(\"#article-col-2\")\',\n    \'TD Main column\' => \'$(\"#article-main\")\',\n    \'TD !bot!preview!bot! etc.\' => \'$(\"#article-tabs\")\',\n);\n\n// creates the translated main plugins array ($bot_items)\nglobal $bot_items;\nforeach ( $bot_arr_selectors as $title => $selector ) {\n    bot_wtc_insert_in_main_array($title, $selector);\n}\nnatcasesort($bot_items);\n\n\n\n// ===========================================================\n// Helper functions\n// ===========================================================\n\n\n\nfunction bot_wtc_gTxt($what) {\n\n	global $language;\n\n	$en_us = array(\n		\'install_message\' => \'bot_wtc is not yet properly initialized.  Use the button below to create the preferences table.\',\n		\'upgrade_message\' => \'bot_wtc must be upgraded. Use the button below to add the new fields to the preferences table.\',\n		\'uninstall\' => \'Uninstall\',\n		\'uninstall_message\' => \'Using the button below will remove all preferences from the db. <br />Use before a complete uninstall or to reset all preferences. \',\n		\'uninstall_confirm\' => \'Are you sure you want to delete the preferences table?\',\n		\'td_warning\' => \'Columns cannot be moved relative to single items and vice-versa\',\n		\'same_item_warning\' => \'Oops! You are trying to move an item relative to itself\',\n		\'combo_warning\' => \'Oops! You tried to insert an incomplete rule\',\n		);\n\n	$lang = array(\n		\'en-us\' => $en_us\n		);\n\n		$language = (isset($lang[$language])) ? $language : \'en-us\';\n		$msg = (isset($lang[$language][$what])) ? $lang[$language][$what] : $what;\n		return $msg;\n}\n\n\n\n// ===========================================\n\n\n\nfunction bot_wtc_insert_in_main_array ($title, $selector) // helps build the main array\n{\n	global $bot_items;\n	if (strpos($title, \'!bot!\'))\n	{\n		$split_titles = explode(\"!bot!\", $title);\n		$title = \'\';\n		for ($i = 0; $i < count($split_titles); $i++)\n		{\n			$title .= gTxt($split_titles[$i]); // split and build translated title\n		}\n	}\n	else\n	{\n		$title = gTxt($title);// gets the title to allow translation\n	}\n	$bot_items [$selector] = gTxt($title);\n	return $bot_items;\n}\n\n\n\n// ===========================================\n\n\n\nfunction bot_wtc_fetch_db() // creates an array of values extracted from the database\n{\n	if(bot_wtc_check_install()){\n		$out = safe_rows(\'id, item, position, destination, sections, class\', \'bot_wtc \',\'1=1\');\n		return $out;\n	}\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_get_cfs() // creates an array of all cfs for selectInput\n{\n	$r = safe_rows_start(\'name, val, html\', \'txp_prefs\',\'event = \"custom\" AND val != \"\"\');\n	if ($r) {\n		global $arr_custom_fields;\n		while ($a = nextRow($r)) {\n			$name = str_replace(\'_set\', \'\', $a[\'name\']);\n			$html = $a[\'html\'];\n			if ($html == \'checkbox\' || $html == \'multi-select\') {\n				$selector = \'$(\"p:has(*[name=\\\'\'.$name.\'[]\\\'])\")\';\n			}\n			else\n			{\n				$selector = \'$(\"p:has(*[name=\\\'\'.$name.\'\\\'])\")\';\n			}\n			$val = $a[\'val\'];\n			$arr_custom_fields[$selector] = $val;\n		}\n	}\n	if ($arr_custom_fields) {\n 	natcasesort($arr_custom_fields); // sort cfs - used instead of asort because is case-insensitive\n	return $arr_custom_fields;\n    }\n};\n\n\n\n// ===========================================================\n\n\n\nfunction bot_get_sections() // creates an array of all sections for selectInput\n{\n	$r = safe_rows_start(\'name, title\', \'txp_section\',\'1=1\');\n	if ($r) {\n		while ($a = nextRow($r)) {\n			$name = $a[\'name\'];\n			$title = $a[\'title\'];\n			$sections[$name] = $title;\n		}\n	}\n    natcasesort($sections);\n    return $sections;\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_update_button()\n{\n	return n.\'<div class=\"bot_update_button\">\' // update button\n		.n.eInput(\'bot_wtc_tab\')\n		.n.sInput(\'update\')\n		.n.fInput(\'submit\', \'update\', \'Update\', \'publish\')\n		.\'</div>\';\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_wtc_is_td($item) // checks if item is a table td\n{\n    $item = get_magic_quotes_gpc() ? $item : mysql_real_escape_string($item) ;\n\n	if($item == \'$(\\\"#article-col-1\\\")\'\n	|| $item == \'$(\\\"#article-col-2\\\")\'\n	|| $item == \'$(\\\"#article-main\\\")\'\n	|| $item == \'$(\\\"#article-tabs\\\")\'\n	)\n	{\n		return 1;\n	}\n	return 0;\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_warning($warning) // outputs html for warnings\n{\n	return graf(hed(bot_wtc_gTxt($warning),\'3\', \' id=\"bot_warning\"\'));\n};\n\n\n\n//===========================================\n\n\n\nfunction bot_wtc_install()\n{\n	// figure out what MySQL version we are using (from _update.php)\n	$mysqlversion = mysql_get_server_info();\n	$tabletype = (intval($mysqlversion[0]) >= 5 || preg_match(\'#^4\\.(0\\.[2-9]|(1[89]))|(1\\.[2-9])#\',$mysqlversion))\n		? \" ENGINE=MyISAM \"\n		: \" TYPE=MyISAM \";\n	if (isset($txpcfg[\'dbcharset\']) && (intval($mysqlversion[0]) >= 5 || preg_match(\'#^4\\.[1-9]#\',$mysqlversion))) {\n		$tabletype .= \" CHARACTER SET = \". $txpcfg[\'dbcharset\'] .\" \";\n	}\n\n	// Create the bot_wtc table\n	$bot_wtc = safe_query(\"CREATE TABLE `\".PFX.\"bot_wtc` (\n		`id` INT NOT NULL AUTO_INCREMENT,\n		`item` VARCHAR(255) NOT NULL,\n		`position` VARCHAR(255)  NOT NULL,\n		`destination` VARCHAR(255)  NOT NULL,\n		`sections` TEXT  NOT NULL,\n		`class` VARCHAR(255)  NOT NULL,\n		PRIMARY KEY (`id`)\n		) $tabletype\");\n\n	set_pref (\'bot_wtc_script\',\'\', \'bot_wtc_\',\'2\'); // entry in txp_prefs table\n	set_pref (\'bot_wtc_static_sections\',\'\', \'bot_wtc_\', \'2\'); // entry in txp_prefs table\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_wtc_update() // updates cfs selectors in db | introduced in bot_wtc 0.7.1\n{ \n	if (!bot_wtc_check_install()) { // poceeds only if plugin is already installed\n		return;\n	}\n	safe_alter(\'bot_wtc\', \'CHANGE sections sections TEXT\',1);\n	$db_values = bot_wtc_fetch_db(); // array\n	for ($i =0; $i < count($db_values); $i++) {\n		$id = $db_values[$i][\'id\'];\n		$item = $db_values[$i][\'item\'];\n		$destination = $db_values[$i][\'destination\'];\n		// updates cfs\n    	if (strpos($item,\'custom\')) { // if item contains the substring \'custom\'\n			$cf_number = preg_replace(\"/[^0-9]/\", \'\', $item); // ditch anything that is not a number\n			$type = safe_field(\'html\', \'txp_prefs\', \'name = \"custom_\'.$cf_number.\'_set\"\'); // retrieve cfs type\n			if ($type == \'checkbox\' || $type == \'multi-select\') {\n				$selector = \'$(\"p:has(*[name=\\\'custom_\'.$cf_number.\'[]\\\'])\")\'; // adds the \'[]\' part\n			}\n			else\n			{\n				$selector = \'$(\"p:has(*[name=\\\'custom_\'.$cf_number.\'\\\'])\")\';\n			}\n			safe_update(\'bot_wtc\', \'item = \"\'.doslash($selector).\'\"\', \'id = \"\'.$id.\'\"\');\n     	}\n    	if (strpos($destination,\'custom\')) { // if destination contains the substring \'custom\'\n			$cf_number = preg_replace(\"/[^0-9]/\", \'\', $destination); // ditch anything that is not a number\n			$type = safe_field(\'html\', \'txp_prefs\', \'name = \"custom_\'.$cf_number.\'_set\"\'); // retrieve cfs type\n			if ($type == \'checkbox\' || $type == \'multi-select\') {\n				$selector = \'$(\"p:has(*[name=\\\'custom_\'.$cf_number.\'[]\\\'])\")\'; // adds the \'[]\' part\n			}\n			else\n			{\n				$selector = \'$(\"p:has(*[name=\\\'custom_\'.$cf_number.\'\\\'])\")\';\n			}\n			safe_update(\'bot_wtc\', \'destination = \"\'.doslash($selector).\'\"\', \'id = \"\'.$id.\'\"\');\n     	}\n    }\n}\n\n\n// ===========================================================\n\n\n\nfunction bot_wtc_check_install()\n{\n	// Check if the bot_wtc table exists\n	if (getThings(\"Show tables like \'\".PFX.\"bot_wtc\'\")) {\n		return true;\n	}\n	return false;\n}\n\n\n\n//===========================================\n\n\n\nfunction bot_all_items_selectinput() // outputs all items for selectInput() (used for destination dropdown)\n{\n	global $bot_items;\n	$cfs = bot_get_cfs(); // get cfs array in the form: cf_selector => cf_name\n	// final values for the txp function selectInput (including cfs if any)\n	if (is_array($cfs)) { // if there is at least one custom field set adds cfs to $bot_items array\n		$all_items_select = array_merge($cfs, $bot_items);\n	}\n	else {\n		$all_items_select = $bot_items;\n	}\n	return $all_items_select;\n	natcasesort($all_items_select);\n}\n\n\n//===========================================\n\n\n\nfunction bot_contextual_selectinput($current = \"\") // outputs only \'yet-not-used\' items for selectInput() (used for items dropdown)\n{\n	global $bot_items;\n	$db_values = bot_wtc_fetch_db(); // array of values from the db\n	$all_items = bot_all_items_selectinput();\n	if (bot_wtc_check_install()) {\n		$used_items = safe_column(\'item\', \'bot_wtc\', \'1=1\'); // numeric array of item values from the db\n		foreach ($all_items as $item => $title) {\n	   		if (!in_array($item, $used_items)) {\n	 			$items_selectInput[$item] = $title;\n	 		}\n		}\n	}\n	else {\n		$items_selectInput = $all_items;\n	}\n    if ($current) { // if the parameter is given adds current value to array\n    	$items_selectInput[$current] = $all_items[$current];\n    }\n	return  $items_selectInput;\n}\n\n\n\n// ===========================================================\n// bot_wtc tab\n// ===========================================================\n\n\n\nfunction bot_wtc_output_rows() // outputs the rows for the html table in the bot_wtc_tab\n{\n	global $bot_items;\n\n	$selectInput_for_position = array(\'insertBefore\'=>\'before\',\'insertAfter\'=>\'after\'); // position values for the txp function selectInput\n	$db_values = bot_wtc_fetch_db(); // array of values from the db\n\n    $destination_selectInput = bot_all_items_selectinput();\n	$items_selectInput = bot_contextual_selectinput();\n\n	// builds rows for new item sections list\n	$sections= bot_get_sections(); // get sections array\n	$new_item_sections_rows = \'\';\n	foreach ($sections as $key => $value) {\n		$new_item_sections_row = \'<label>\'.checkbox(\'new_item_sections[]\', $key, \'0\').$value.\'</label><br />\';\n		$new_item_sections_rows .= $new_item_sections_row;\n    }\n    $new_item_sections_rows .= \'<p ><a href=\"#\" class=\"bot_all\">\'.gTxt(\"all\").\'</a> | <a href=\"#\" class=\"bot_none\">\'.gTxt(\"none\").\'</a></p>\'; // hide all/none\n\n	// new item insertion\n	$rows = \"\";\n	$input_row = tr(\n		td(selectInput(\'new_item\',bot_contextual_selectinput(), \'\', \'1\'), \'\', \'bot_hilight\')\n		.td(selectInput(\'new_item_position\', $selectInput_for_position, \'\', \'1\'))\n		.td(selectInput(\'new_item_destination\',bot_all_items_selectinput(), \'\', \'1\'))\n		.td(\'<p><a href=\"#\" class=\"bot_push\">\'.gTxt(\"tag_section_list\").\'</a></p><div class=\"bot_collapse\">\'.$new_item_sections_rows.\'</div>\')\n		.td(finput(\'text\',\'new_item_class\', \'\'))\n		.td()\n		);\n		$rows .= $input_row;\n\n	// other rows - output if at least one record was already set\n	if ($db_values){\n		for ($i = 0; $i < count( $db_values ); $i++){\n			// data for \"sections to show\" selectinput - decides wether a section is checked or not\n			$bot_hide_in_this_sections_array = explode(\'|\', $db_values[$i][\'sections\']);\n			$item_sections_rows = \'\';\n			foreach ($sections as $key => $value) { // if section is in db mark as checked\n			    $checked = in_array($key, $bot_hide_in_this_sections_array) ? \'1\': \'0\';\n				$item_sections_row =  \'<label>\'.checkbox(\'bot_wtc_sections_for_id_\'.$db_values[$i][\'id\'].\'[]\', $key, $checked).$value.\'</label><br />\';\n				$item_sections_rows .= $item_sections_row;\n		    }\n		    $item_sections_rows .= \'<p><a href=\"#\" class=\"bot_all\">\'.gTxt(\"all\").\'</a> | <a href=\"#\" class=\"bot_none\">\'.gTxt(\"none\").\'</a></p>\'; // hide all/none\n			$single_row = tr(\n			td(selectInput(\'item[]\',bot_contextual_selectinput($db_values[$i][\'item\']), $db_values[$i][\'item\'],\'0\'), \'\', \'bot_hilight\')\n			.td(selectInput(\'item_position[]\', $selectInput_for_position, $db_values[$i][\'position\'], \'1\'))\n			.td(selectInput(\'item_destination[]\',bot_all_items_selectinput(), $db_values[$i][\'destination\'],\'1\'))\n 			.td(\'<p><a href=\"#\" class=\"bot_push\">\'.gTxt(\"tag_section_list\").\'</a></p><div class=\"bot_collapse\">\'.$item_sections_rows.\'</div>\')\n			.td(finput(\'text\', \'item_class[]\', $db_values[$i][\'class\']))\n			.td(checkbox(\'bot_delete_id[]\', $db_values[$i][\'id\'], \'0\').\'<label for=\"bot_delete_id\"> \'.gTxt(\'delete\').\'</label>\'))\n			.hInput(\'bot_wtc_id[]\', $db_values[$i][\'id\']);\n\n			$rows .= $single_row;\n		}\n	};\n	return $rows;\n}\n\n\n\n//===========================================\n\n\n\nfunction bot_wtc_static_sections_select()\n{\n	// builds rows for sections list\n	$sections= bot_get_sections(); // get sections array\n	$static_sections = safe_field(\'val\', \'txp_prefs\', \'name = \"bot_wtc_static_sections\"\'); //  fetch prefs value for bot_wtc_static_sections\n	$static_sections = explode(\'|\', $static_sections); // creates an array of statica sections from the string in txp_prefs\n    $static_sections_rows = \'\';\n	foreach ($sections as $key => $value) {\n	    // if section is in db mark as checked\n	    $checked = in_array($key, $static_sections) ? \'1\': \'0\';\n		$static_sections_row = \'<label>\'.checkbox(\'static_sections[]\', $key, $checked).$value.\'</label><br />\';\n		$static_sections_rows .= $static_sections_row;\n    }\n    return $static_sections_rows;\n}\n\n\n\n//===========================================\n\n\nfunction bot_advanced()\n{\n    global $bot_items;\n    $items = bot_all_items_selectinput(); // get items array\n    $item_rows = \'\';\n    foreach ($items as $key => $value) {\n		$item_row = \'<label>\'.checkbox(\'bot_adv_items[]\', htmlspecialchars($key), \'0\').$value.\'</label><br />\';\n		$item_rows .= $item_row;\n    $sections= bot_get_sections(); // get sections array\n    }\n	$sections_rows = \'\';\n	foreach ($sections as $key => $value) {\n		$sections_row = \'<label>\'.checkbox(\'bot_adv_sections[]\', $key, \'0\').$value.\'</label><br />\';\n		$sections_rows .= $sections_row;\n    }\n    return \'<div id=\"bot_advanced\">\'\n        .n.\'<h3>Advanced/Multiple selection</h3>\'\n        .n.form(n.bot_update_button()\n        .n.\'<div id=\"bot_adv_items\"><h4>Items</h4>\'.$item_rows.\'</div>\' // items list\n        .n.\'<div  id=\"bot_adv_hide\"><h4>Hide in sections</h4>\'.$sections_rows.\'<p><a href=\"#\" class=\"bot_all\">\'.gTxt(\"all\").\'</a> | <a href=\"#\" class=\"bot_none\">\'.gTxt(\"none\").\'</a></p></div>\' // sections list\n        .n.\'<div  id=\"bot_adv_class\"><h4>Set css class</h4>\'.finput(\'text\',\'bot_adv_class\', \'\').\'</div>\' // class\n        .n.bot_update_button()\n        .n.\'</div>\'\n    );\n}\n\n\n//===========================================\n\n\n\nfunction bot_wtc_tab($event, $step)\n{\n	global $bot_items;\n	$cfs = bot_get_cfs();\n\n	pagetop(\'Write tab customize \'.gTxt(\'preferences\'), ($step == \'update\' ? gTxt(\'preferences_saved\') : \'\'));\n	echo hed(\'Write tab customize\',\'2\');\n\n	if ($step == \'install\'){\n		// Install the preferences table.\n		bot_wtc_install();\n	}\n\n	if ($step == \'uninstall\'){\n		//remove table\n		safe_query(\"DROP TABLE \".PFX.\"bot_wtc\");\n		safe_delete(\'txp_prefs\', \'event = \"bot_wtc_\"\' );\n	}\n\n	if ($step == \'update\'){\n	    // set function variables\n		$new_item = ps(\'new_item\'); //variable\n		$new_item_position = ps(\'new_item_position\'); //variable\n		$new_item_destination = ps(\'new_item_destination\'); //variable\n		$new_item_sections = ps(\'new_item_sections\'); //array\n		$new_item_class = ps(\'new_item_class\'); //variable\n		$bot_wtc_script = ps(\'bot_wtc_script\'); //variable\n		$static_sections = ps(\'static_sections\'); //variable\n		$item = ps(\'item\'); //array\n		$item_position = ps(\'item_position\'); //array\n		$item_destination = ps(\'item_destination\'); //array\n		$item_class = ps(\'item_class\'); //array\n		$bot_wtc_id = ps(\'bot_wtc_id\'); //array\n		$delete_id = ps(\'bot_delete_id\'); //array\n		$bot_adv_items = ps(\'bot_adv_items\'); //array\n		$bot_adv_sections = ps(\'bot_adv_sections\'); //array\n		$bot_adv_class = ps(\'bot_adv_class\'); //variable\n\n		// db update for existing items\n		if ($item){ // if at least a saved item exists\n\n           	$db_values = bot_wtc_fetch_db(); // array of values from the db\n			for ($i = 0; $i < count($item); $i++){\n			    // builds the posted variable name for current item sections\n			    $item_posted_sections_name = \'bot_wtc_sections_for_id_\'.$db_values[$i][\'id\'];\n			    $item_sections = isset($_POST[$item_posted_sections_name]) ? $_POST[$item_posted_sections_name] : \'\'; //array\n                // builds sections string for current item\n				$item_sections_string = $item_sections ? implode(\'|\', $item_sections): \'\';\n				// allowed input data combinations\n				if (($item[$i] && $item_destination[$i] && $item_position[$i])\n				|| ($item[$i] && $item_class[$i] && !$item_destination[$i] && !$item_position[$i])\n				|| ($item[$i] && $item_sections_string && !$item_destination[$i] && !$item_position[$i])) {\n					// check if a column is linked with a non-column item BUT ONLY IF both items are set (otherwise couldn\'t apply i.e. class to a single td)\n					if (!((bot_wtc_is_td($item[$i]) XOR bot_wtc_is_td($item_destination[$i])) && $item_destination[$i])){\n  					    // check if item is different from destination\n						if($item[$i] != $item_destination[$i]){\n       						safe_update(\"bot_wtc\",\n							\"position = \'\"\n							.doslash($item_position[$i])\n							.\"\', destination = \'\"\n							.doslash($item_destination[$i])\n							.\"\', item = \'\"\n							.doslash($item[$i])\n							.\"\', sections = \'\"\n							.doslash($item_sections_string)\n							.\"\', class = \'\"\n							.doslash($item_class[$i])\n							.\"\'\", \"id = \'\".$bot_wtc_id[$i].\"\'\");\n						}\n						else {\n							echo bot_warning(\'same_item_warning\');\n						}\n					}\n					else {\n						echo bot_warning(\'td_warning\');\n					}\n				}\n				else {\n					echo bot_warning(\'combo_warning\');\n				}\n			}\n		}\n\n		// db insert for new item\n		// allowed input combinations\n		if (($new_item && $new_item_destination && $new_item_position)\n		|| ($new_item && $new_item_class && !$new_item_destination && !$new_item_position)\n		|| ($new_item && $new_item_sections && !$new_item_destination && !$new_item_position)){\n			// check if a column is linked with a non-column item\n			if (!((bot_wtc_is_td($new_item) XOR bot_wtc_is_td($new_item_destination)) &&  $new_item_destination)){\n				// check items are not the same\n				if($new_item != $new_item_destination){\n                    // transforms the sections array in a string\n                    $new_item_sections_string = $new_item_sections ? implode(\'|\', $new_item_sections) : \'\';\n					safe_insert(\"bot_wtc\",\n					\"position = \'\"\n					.doslash($new_item_position)\n					.\"\', destination = \'\"\n					.doslash($new_item_destination)\n					.\"\', class = \'\"\n					.doslash($new_item_class)\n					.\"\', sections = \'\"\n					.doslash($new_item_sections_string)\n					.\"\', item = \'\"\n					.doslash($new_item)\n					.\"\'\");\n				}\n				else {\n					echo bot_warning(\'same_item_warning\');\n				}\n			}\n			else {\n				echo bot_warning(\'td_warning\');\n			}\n		}\n\n		elseif ($new_item || $new_item_destination || $new_item_position || $new_item_class || $new_item_sections){\n			echo bot_warning(\'combo_warning\');\n		}\n\n		if ($delete_id){ // checks if there is something to delete\n			foreach ($delete_id as $id) {\n				safe_delete(\'bot_wtc\', \'id =\"\'.$id.\'\"\' );\n			}\n		}\n\n\n		// update advanced prefereces\n        if ($bot_adv_items AND ($bot_adv_sections || $bot_adv_class)) { // check if item AND section OR class is selected\n\n            $db_values = bot_wtc_fetch_db(); // first array: all values from db\n\n            if ($bot_adv_sections) {\n            	$bot_db_sections = array(); // more specific array: only item => sections\n                for ($i =0; $i < count($db_values); $i++) {\n                	$bot_db_sections[$db_values[$i][\'item\']] = $db_values[$i][\'sections\'];\n                }\n\n                foreach ($bot_adv_items as $item) { // iterates posted items\n                    // fetch -if any- existing sections from db for current item and merges arrays eliminating duplicates\n                    if (is_array($bot_db_sections) AND array_key_exists($item, $bot_db_sections)) {\n                       	$db_sect_array = explode(\'|\', $bot_db_sections[$item]);\n                        $final_array = array_unique(array_merge($db_sect_array, $bot_adv_sections));\n                        $bot_adv_sections_string = implode(\'|\', $final_array); // new sections string\n                    }\n                    else {\n                    	$bot_adv_sections_string = implode(\'|\', $bot_adv_sections);\n                    }\n                    safe_upsert(\n                        \"bot_wtc\",\n    					\"sections = \'\"\n    					.doslash($bot_adv_sections_string)\n    					.\"\'\",\n                        \"item = \'\".doslash($item).\"\'\"\n                    );\n            	}\n            }\n\n            if ($bot_adv_class) {\n                $bot_db_classes = array(); // more specific array: only item => classes\n                for ($i =0; $i < count($db_values); $i++) {\n                	$bot_db_classes[$db_values[$i][\'item\']] = $db_values[$i][\'class\'];\n                }\n\n                foreach ($bot_adv_items as $item) { // iterates posted items\n                    // fetch -if any- existing class from db for current item and merges arrays eliminating duplicates\n                    if (is_array($bot_db_classes) AND array_key_exists($item, $bot_db_classes)) {\n                       	$db_class_array = explode(\' \', $bot_db_classes[$item]);\n                       	$posted_class_array = explode(\' \', $bot_adv_class);\n                        $final_array = array_unique(array_merge($db_class_array, $posted_class_array));\n                        $bot_adv_classes_string = implode(\' \', $final_array); // new sections string\n                    }\n                    else {\n                    	$bot_adv_classes_string = $bot_adv_class;\n                    }\n                    safe_upsert(\n                        \"bot_wtc\",\n    					\"class = \'\"\n    					.doslash($bot_adv_classes_string)\n    					.\"\'\",\n                        \"item = \'\".doslash($item).\"\'\"\n                    );\n            	}\n            }\n        }\n        elseif ($bot_adv_sections || $bot_adv_class) {\n        	echo bot_warning(\'Warning: at least an item must be selected\');\n        }\n\n\n		// updates static sections prefs\n        if ($static_sections) {\n        	$static_sections_string = implode(\'|\', $static_sections);\n			safe_update(\'txp_prefs\', \'val= \"\'.doslash($static_sections_string).\'\", html=\"text_input\" \', \'name = \"bot_wtc_static_sections\"\' );\n        }\n\n        // updates script prefs\n		if ($bot_wtc_script) {\n	  		safe_update(\'txp_prefs\', \'val= \\\'\'.doslash($bot_wtc_script).\'\\\', html=\\\'textarea\\\' \', \'name = \\\'bot_wtc_script\\\'\' );\n		}\n	}\n\n	if (bot_wtc_check_install()) { // what to show when accessing tab\n\n		$bot_wtc_script = safe_field(\'val\', \'txp_prefs\', \'name = \"bot_wtc_script\"\'); // fetch prefs value for bot_wtc_script\n\n		echo \'<div id=\"bot_controls\">\n            <a id=\"bot_expand_all\" href=\"#\">Expand all</a> |\n            <a id=\"bot_collapse_all\" href=\"#\">Collapse all</a> |\n            <a id=\"bot_advanced_open\" href=\"#\">Toggle advanced</a>\n            </div>\';\n		echo n.t.bot_advanced();\n		echo n.t.\'<div id=\"bot_main\">\'; // main div\n\n		echo form( // beginning of the form\n 			\'<table id=\"bot_wtc_table\">\' // beginning of the table\n			.tr(td(strong(gTxt(\'Item\')))\n			.td(strong(gTxt(\'Position\')))\n			.td(strong(gTxt(\'Destination\')))\n			.td(strong(gTxt(\'Hide in:\')))\n			.td(strong(gTxt(\'Class\')))\n			.td() // collapse all/show all)\n			)\n			.bot_wtc_output_rows() // html rows generated by \"bot_wtc_output_rows()\"\n			.\'</table>\' // end of the table\n\n            .bot_update_button()\n\n			.n.\'<div id=\"bot_static_sections\">\'  // static sections\n			.n.graf(\'<a class=\"bot_push\" href=\"#\">Hide sections in sections dropdown</a>\')\n			.n.\'<div class=\"bot_collapse\">\'\n			.bot_wtc_static_sections_select()\n			.n.\'</div>\'\n			.n.\'</div>\'\n\n			.bot_update_button()\n\n			.n.\'<div id=\"bot_js_box\">\' // js code box\n			.n.graf(\'<a class=\"bot_push\" href=\"#\">Additional js code</a>\'.\' | <a id=\"bot_js_link\" href=\"#\">Add external script</a> | <a id=\"bot_jq_link\" href=\"#\">Add Jquery script</a>\')\n			.n.\'<div class=\"bot_collapse\">\'\n			.n.\'<textarea id=\"bot_wtc_script\" name=\"bot_wtc_script\" cols=\"60\" rows=\"10\">\'.$bot_wtc_script.\'</textarea>\' // script textarea\n			.n.\'</div>\'\n			.n.\'</div>\'\n\n			.n.bot_update_button()\n		);\n\n		echo n.t.\'<div id=\"bot_uninstall\">\'. // uninstall button\n			n.hed(bot_wtc_gTxt(\'uninstall\'), \'1\').\n			n.t.t.graf(bot_wtc_gTxt(\'uninstall_message\')).\n			n.n.form(\n			n.eInput(\'bot_wtc_tab\').\n			n.sInput(\'uninstall\').\n			n.n.fInput(\'submit\', \'uninstall\', \'Uninstall \', \'smallerbox\'),\"\",\"confirm(\'\".bot_wtc_gTxt(\'uninstall_confirm\').\"\')\"\n			)\n			.\'</div></div>\';\n	}\n\n	else { // install button\n		echo n.t.\'<div  id=\"bot_install\">\'.\n			n.t.t.hed(gTxt(\'install\'), \'1\').\n			n.graf(bot_wtc_gTxt(\'install_message\')).\n			n.n.form(\n				n.eInput(\'bot_wtc_tab\').\n				n.sInput(\'install\').\n				n.n.fInput(\'submit\', \'install\', \'Install \', \'publish\')\n				).\n			\'</div>\';\n	}\n\n	// snippets to insert in the script box\n	$bot_jquery_snippet = \'<script type=\\\"text/javascript\\\">\\n    $(document).ready(function() {\\n        //your code here\\n    });\\n<\\/script>\\n\';\n	$bot_js_snippet = \'<script type=\\\"text/javascript\\\" src=\\\"path_to_script\\\"><\\/script>\\n\';\n\n	echo // add some jquery action\n	\'<script  type=\"text/javascript\">\'.n.\n	\'	$(document).ready(function() {\'.n.\n			\'$(\"div.bot_collapse\").hide()\'.n.\n			\'$(\"div#bot_advanced\").hide()\'.n.\n			\'$(\"a.bot_push\").click(function(){\'.n.\n			\'  $(this).toggleClass(\"bot_arrow\").parent().next().slideToggle();\'.n.\n			\'  return false;\'.n.\n			\'});\'.n.\n			\'$(\"#bot_collapse_all\").click(function(){\'.n.\n			\'  $(\"div.bot_collapse\").slideUp();\'.n.\n			\'  return false;\'.n.\n  			 \'});\'.n.\n			\'$(\"#bot_expand_all\").click(function(){\'.n.\n			\'  $(\"div.bot_collapse\").slideDown();\'.n.\n			\'  return false;\'.n.\n  			 \'});\'.n.\n			\'$(\"#bot_advanced_open\").click(function(){\'.n.\n			\'  $(\"div#bot_advanced\").slideToggle();\'.n.\n			\'  $(\"div#bot_main\").toggle();\'.n.\n			\'  return false;\'.n.\n  			 \'});\'.n.\n			\'$(\"a.bot_all\").click(function(){\'.n.\n			\'  $(this).parent().parent().find(\"input\").attr(\"checked\", true);\'.n.\n			\'  return false;\'.n.\n			\'});\'.n.\n			\'$(\"a.bot_none\").click(function(){\'.n.\n			\'  $(this).parent().parent().find(\"input\").attr(\"checked\", false);\'.n.\n			\'  return false;\'.n.\n			\'});\'.n.\n			\'$(\"#bot_jq_link\").click(function(){\'.n.\n			\'  var areaValue = $(\"#bot_wtc_script\").val();\'.n.\n			\'  $(\"#bot_wtc_script\").val(areaValue + \"\'.$bot_jquery_snippet.\'\");\'.n.\n			\'  return(false);\'.n.\n  			\'});\'.n.\n			\'$(\"#bot_js_link\").click(function(){\'.n.\n			\'  var areaValue = $(\"#bot_wtc_script\").val();\'.n.\n			\'  $(\"#bot_wtc_script\").val(areaValue + \"\'.$bot_js_snippet.\'\");\'.n.\n			\'  return(false);\'.n.\n  			\'});\'.n.\n	\'	});\'.n.\n	\'</script>\';\n}\n\n\n\n// ===========================================================\n// plugins output\n// ===========================================================\n\n\n\nfunction bot_wtc_css() { // css for the plugin tab under extensions\n\n	global $event;\n	if($event != \'bot_wtc_tab\') { // Outputs css only in \'bot_wtc\' extensions tab.\n		return;\n	}\n\n	echo \'<style type=\"text/css\">\n			#bot_main {\n				margin: auto; width:800px;\n			}\n			#page-bot_wtc_tab h2 {\n				text-align: center;	margin:20px auto; padding-bottom:10px;\n			}\n			#bot_controls {\n				margin: 10px auto; width:800px;\n			}\n			#bot_expand_all,\n			#bot_collapse_all,\n			#bot_advanced_open {\n				font-size:10px;\n			}\n			#bot_wtc_table {\n			 	padding:10px 0 20px; margin-left:0;\n			}\n			#bot_wtc_table td {\n				padding:10px; white-space:nowrap;\n			}\n			#bot_advanced {\n				margin: 10px auto; width:780px;	padding:10px 10px 0; border:dotted #ccc 1px;\n			}\n			#bot_adv_items,\n			#bot_adv_hide,\n			#bot_adv_class\n			{\n				width:260px; float:left; margin-bottom:20px;\n			}\n			#bot_static_sections,\n			#bot_js_box {\n				padding:20px 0 0; border-top:dotted #ccc 1px;\n			}\n			#bot_wtc_script {\n				width:100%; border:dotted #ccc 1px;\n			}\n			.bot_update_button {\n				margin:20px 0; clear:both;\n			}\n			#bot_uninstall {\n				padding:20px 0; border-top:dotted #ccc 1px\n			}\n			#bot_install {\n				margin: auto; width:800px;\n			}\n			.bot_hilight {\n				background:#eaeaea\n			}\n			a.bot_push {\n				font-weight:bold; background: url(txp_img/arrowupdn.gif) no-repeat right bottom; padding-right:13px;\n			}\n			#bot_warning {\n				text-align:center; background:#990000; color:#fff; margin: 20px auto; padding:10px; text-shadow:none;\n			}\n		</style>\';\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_hide_per_section_array(){ // builds array of sections to hide\n\n	$db_values = bot_wtc_fetch_db();  // array of values from the db\n\n	for ($i =0; $i<count($db_values); $i++) {\n		if ($db_values[$i][\'sections\']) {\n		    $sections_to_hide = explode(\'|\', $db_values[$i][\'sections\']);\n		    foreach ($sections_to_hide as $section) {\n				$bot_hide_per_section[$section][] = $db_values[$i][\'item\'];\n			}\n	    }\n	}\n	if (isset($bot_hide_per_section)) { // return array only if values exist\n 		return $bot_hide_per_section;\n 	}\n}\n\n\n\n// ===========================================================\n\n\n\n\nfunction bot_wtc_jquery_hide_sections_rows(){ // js rows dealing with items to hide on section change AND on page load\n\n	$bot_hide_per_section = bot_hide_per_section_array();\n	foreach ($bot_hide_per_section as $section => $fields) {\n		echo n.\'			if (value==\"\'.$section.\'\"){\'.n;\n        for ($i =0; $i<count($fields); $i++) {\n			echo \'				\'.$fields[$i].\'.hide();\'.n;\n        }\n		echo \'			}\'.n;\n	}\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_wtc_jquery_restore_rows(){ // js rows to restore every previously hidden item on section change\n\n	$bot_hide_per_section = bot_hide_per_section_array();\n	foreach ($bot_hide_per_section as $section => $fields) {\n        for ($i =0; $i<count($fields); $i++) {\n			$out[] = $fields[$i];\n        }\n	}\n	$out = array_unique($out);\n	foreach ($out as $value) {\n	echo \'			\'.$value.\'.show();\'.n;\n	}\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_hide_per_section(){ //  builds the script\n\n    $bot_hide_per_section = bot_hide_per_section_array();\n	if ($bot_hide_per_section) { // output js only if values exist\n		 	echo\n				\'<script  type=\"text/javascript\">\'.n.\n				\'	$(document).ready(function() {\'.n;\n			echo\n				\'		$(\"select#section\").change(function(){\'.n;\n							bot_wtc_jquery_restore_rows();\n			echo\n				\'			var value = $(\"select#section\").val();\';\n							bot_wtc_jquery_hide_sections_rows();\n			echo\n				\'		}).change();\'.n.\n				\'	});\'.n.\n				\'</script>\';\n		}\n	}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_hidden_sections(){ // invisible sections in section list\n\n	$bot_hidden_sections = safe_field(\'val\', \'txp_prefs\', \'name = \"bot_wtc_static_sections\"\'); // fetch prefs value for bot_wtc_static_sections\n	if ($bot_hidden_sections) { // output js only if values exist\n		$sections = explode(\"|\", $bot_hidden_sections);\n		echo\n		\'<script  type=\"text/javascript\">\'.n.\n		\'	$(document).ready(function() {\'.n;\n		foreach ($sections as $value) {\n			echo    \'           $(\"select#section option:not(:selected)[value=\\\'\'.$value.\'\\\']\").remove();\'.n;\n		}\n		echo\n		\'	});\'.n.\n		\'</script>\';\n	}\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_wtc_jquery_rows()\n{\n	global $bot_items;\n	$db_values = bot_wtc_fetch_db();  // array of values from the db\n\n	$rows = \'\';\n	for ($i = 0; $i <count($db_values); $i++)\n	{\n		$item = ($db_values[$i][\'item\'] != \'\') ? $db_values[$i][\'item\'] : \'\';\n		$position = ($db_values[$i][\'position\'] != \'\') ? \'.\'.$db_values[$i][\'position\'] : \'\';\n		$destination = ($db_values[$i][\'destination\'] != \'\') ? \'(\'.$db_values[$i][\'destination\'].\')\' : \'\';\n		$class = ($db_values[$i][\'class\'] != \'\') ? \'.addClass(\"\'.$db_values[$i][\'class\'].\'\")\' : \'\';\n  		$row = $item.$position.$destination.$class.\';\'.n;\n		$rows .= $row;\n	}\n	return $rows;\n};\n\n\n\n// ===========================================================\n\n\n\nfunction bot_wtc()\n{\n\n	$bot_wtc_script = safe_field(\'val\', \'txp_prefs\', \'name = \"bot_wtc_script\"\'); // fetch prefs value for bot_wtc_script\n 	$position = safe_column(\'position\', \'bot_wtc\', \'1=1\'); // fetch \'position\' from db to check if a move is saved\n 	$class = safe_column(\'class\', \'bot_wtc\', \'1=1\'); // fetch \'class\' from db to check if a class is saved\n\n	if(isset($position) || isset($class)){ // output code only if a preference is saved\n		echo\n		\'<script  type=\"text/javascript\">\'.n.\n		\'	$(document).ready(function() {\'.n.\n				bot_wtc_jquery_rows().n.\n		\'	});\'.n.\n		\'</script>\';\n	}\n	if ($bot_wtc_script) {\n		echo n.$bot_wtc_script.n;\n	};\n\n}\n','//<?\nif(@txpinterface == \'admin\') {\n	add_privs(\'bot_wtc_tab\', \'1,2\');\n	register_tab(\'extensions\', \'bot_wtc_tab\', \'Write tab customize\');\n	register_callback(\'bot_wtc_tab\', \'bot_wtc_tab\');\n	register_callback(\'bot_wtc_css\',\'admin_side\',\'head_end\');\n	register_callback(\'bot_wtc\', \'article\');\n	register_callback(\'bot_hide_per_section\', \'article\');\n	register_callback(\'bot_hidden_sections\', \'article\');\n	register_callback(\'bot_wtc_update\',\'plugin_lifecycle.bot_write_tab_customize\', \'enabled\');\n}\n\n\n\n// ===========================================\n\n\n\n\n$bot_arr_selectors = array(\n    \'textile_help\' => \'$(\"#textile_group\")\',\n    \'advanced_options\' => \'$(\"#advanced_group\")\',\n    \'article_markup\' => \'$(\".markup-body\")\',\n    \'excerpt_markup\' => \'$(\".markup-excerpt\")\',\n    \'override_default_form\' => \'$(\".override-form\")\',\n    \'custom\' => \'$(\"#custom_field_group\")\',\n    \'article_image\' => \'$(\"#image_group\")\',\n    \'meta\' => \'$(\"#meta_group\")\',\n    \'keywords\' => \'$(\".keywords\")\',\n    \'url_title\' => \'$(\".url-title\")\',\n    \'recent_articles\' => \'$(\"#recent_group\")\',\n\n    \'title\' => \'$(\".title\")\',\n    \'body\' => \'$(\".body\")\',\n    \'excerpt\' => \'$(\".excerpt\")\',\n\n    \'create_new\' => \'$(\".action-create\")\',\n    \'page_article_nav_hed\' => \'$(\".nav-tertiary\")\',\n    \'status\' => \'$(\"#write-status\")\',\n    \'sort_display\' => \'$(\"#write-sort\")\',\n    \'category1\' => \'$(\".category-1\")\',\n    \'category2\' => \'$(\".category-2\")\',\n    \'section\' => \'$(\".section\")\',\n    \'date_settings\' => \'$(\"#dates_group\")\',\n    \'comments\' => \'$(\"#comments_group\")\',\n    \'timestamp\' => \'$(\"#write-timestamp\")\',\n    \'expires\' => \'$(\"#write-expires\")\',\n    \'publish\' => \'$(\"#write-publish\")\',\n    \'save\' => \'$(\"#write-save\")\',\n\n    \'logged_in_as\' => \'$(\"#moniker\")\',\n\n    \'TD Column 1\' => \'$(\"#article-col-1\")\',\n    \'TD Column 2\' => \'$(\"#article-col-2\")\',\n    \'TD Main column\' => \'$(\"#article-main\")\',\n    \'TD !bot!preview!bot! etc.\' => \'$(\"#article-tabs\")\',\n);\n\n// creates the translated main plugins array ($bot_items)\nglobal $bot_items;\nforeach ( $bot_arr_selectors as $title => $selector ) {\n    bot_wtc_insert_in_main_array($title, $selector);\n}\nnatcasesort($bot_items);\n\n\n\n// ===========================================================\n// Helper functions\n// ===========================================================\n\n\n\nfunction bot_wtc_gTxt($what) {\n\n	global $language;\n\n	$en_us = array(\n		\'install_message\' => \'bot_wtc is not yet properly initialized.  Use the button below to create the preferences table.\',\n		\'upgrade_message\' => \'bot_wtc must be upgraded. Use the button below to add the new fields to the preferences table.\',\n		\'uninstall\' => \'Uninstall\',\n		\'uninstall_message\' => \'Using the button below will remove all preferences from the db. <br />Use before a complete uninstall or to reset all preferences. \',\n		\'uninstall_confirm\' => \'Are you sure you want to delete the preferences table?\',\n		\'td_warning\' => \'Columns cannot be moved relative to single items and vice-versa\',\n		\'same_item_warning\' => \'Oops! You are trying to move an item relative to itself\',\n		\'combo_warning\' => \'Oops! You tried to insert an incomplete rule\',\n		);\n\n	$lang = array(\n		\'en-us\' => $en_us\n		);\n\n		$language = (isset($lang[$language])) ? $language : \'en-us\';\n		$msg = (isset($lang[$language][$what])) ? $lang[$language][$what] : $what;\n		return $msg;\n}\n\n\n\n// ===========================================\n\n\n\nfunction bot_wtc_insert_in_main_array ($title, $selector) // helps build the main array\n{\n	global $bot_items;\n	if (strpos($title, \'!bot!\'))\n	{\n		$split_titles = explode(\"!bot!\", $title);\n		$title = \'\';\n		for ($i = 0; $i < count($split_titles); $i++)\n		{\n			$title .= gTxt($split_titles[$i]); // split and build translated title\n		}\n	}\n	else\n	{\n		$title = gTxt($title);// gets the title to allow translation\n	}\n	$bot_items [$selector] = gTxt($title);\n	return $bot_items;\n}\n\n\n\n// ===========================================\n\n\n\nfunction bot_wtc_fetch_db() // creates an array of values extracted from the database\n{\n	if(bot_wtc_check_install()){\n		$out = safe_rows(\'id, item, position, destination, sections, class\', \'bot_wtc \',\'1=1\');\n		return $out;\n	}\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_get_cfs() // creates an array of all cfs for selectInput\n{\n	$r = safe_rows_start(\'name, val, html\', \'txp_prefs\',\'event = \"custom\" AND val != \"\"\');\n	if ($r) {\n		global $arr_custom_fields;\n		while ($a = nextRow($r)) {\n			$name = str_replace(\'_set\', \'\', $a[\'name\']);\n			$html = $a[\'html\'];\n			if ($html == \'checkbox\' || $html == \'multi-select\') {\n				$selector = \'$(\"p:has(*[name=\\\'\'.$name.\'[]\\\'])\")\';\n			}\n			else\n			{\n				$selector = \'$(\"p:has(*[name=\\\'\'.$name.\'\\\'])\")\';\n			}\n			$val = $a[\'val\'];\n			$arr_custom_fields[$selector] = $val;\n		}\n	}\n	if ($arr_custom_fields) {\n 	natcasesort($arr_custom_fields); // sort cfs - used instead of asort because is case-insensitive\n	return $arr_custom_fields;\n    }\n};\n\n\n\n// ===========================================================\n\n\n\nfunction bot_get_sections() // creates an array of all sections for selectInput\n{\n	$r = safe_rows_start(\'name, title\', \'txp_section\',\'1=1\');\n	if ($r) {\n		while ($a = nextRow($r)) {\n			$name = $a[\'name\'];\n			$title = $a[\'title\'];\n			$sections[$name] = $title;\n		}\n	}\n    natcasesort($sections);\n    return $sections;\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_update_button()\n{\n	return n.\'<div class=\"bot_update_button\">\' // update button\n		.n.eInput(\'bot_wtc_tab\')\n		.n.sInput(\'update\')\n		.n.fInput(\'submit\', \'update\', \'Update\', \'publish\')\n		.\'</div>\';\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_wtc_is_td($item) // checks if item is a table td\n{\n    $item = get_magic_quotes_gpc() ? $item : mysql_real_escape_string($item) ;\n\n	if($item == \'$(\\\"#article-col-1\\\")\'\n	|| $item == \'$(\\\"#article-col-2\\\")\'\n	|| $item == \'$(\\\"#article-main\\\")\'\n	|| $item == \'$(\\\"#article-tabs\\\")\'\n	)\n	{\n		return 1;\n	}\n	return 0;\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_warning($warning) // outputs html for warnings\n{\n	return graf(hed(bot_wtc_gTxt($warning),\'3\', \' id=\"bot_warning\"\'));\n};\n\n\n\n//===========================================\n\n\n\nfunction bot_wtc_install()\n{\n	// figure out what MySQL version we are using (from _update.php)\n	$mysqlversion = mysql_get_server_info();\n	$tabletype = (intval($mysqlversion[0]) >= 5 || preg_match(\'#^4\\.(0\\.[2-9]|(1[89]))|(1\\.[2-9])#\',$mysqlversion))\n		? \" ENGINE=MyISAM \"\n		: \" TYPE=MyISAM \";\n	if (isset($txpcfg[\'dbcharset\']) && (intval($mysqlversion[0]) >= 5 || preg_match(\'#^4\\.[1-9]#\',$mysqlversion))) {\n		$tabletype .= \" CHARACTER SET = \". $txpcfg[\'dbcharset\'] .\" \";\n	}\n\n	// Create the bot_wtc table\n	$bot_wtc = safe_query(\"CREATE TABLE `\".PFX.\"bot_wtc` (\n		`id` INT NOT NULL AUTO_INCREMENT,\n		`item` VARCHAR(255) NOT NULL,\n		`position` VARCHAR(255)  NOT NULL,\n		`destination` VARCHAR(255)  NOT NULL,\n		`sections` TEXT  NOT NULL,\n		`class` VARCHAR(255)  NOT NULL,\n		PRIMARY KEY (`id`)\n		) $tabletype\");\n\n	set_pref (\'bot_wtc_script\',\'\', \'bot_wtc_\',\'2\'); // entry in txp_prefs table\n	set_pref (\'bot_wtc_static_sections\',\'\', \'bot_wtc_\', \'2\'); // entry in txp_prefs table\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_wtc_update() // updates cfs selectors in db | introduced in bot_wtc 0.7.1\n{ \n	if (!bot_wtc_check_install()) { // poceeds only if plugin is already installed\n		return;\n	}\n	safe_alter(\'bot_wtc\', \'CHANGE sections sections TEXT\',1);\n	$db_values = bot_wtc_fetch_db(); // array\n	for ($i =0; $i < count($db_values); $i++) {\n		$id = $db_values[$i][\'id\'];\n		$item = $db_values[$i][\'item\'];\n		$destination = $db_values[$i][\'destination\'];\n		// updates cfs\n    	if (strpos($item,\'custom\')) { // if item contains the substring \'custom\'\n			$cf_number = preg_replace(\"/[^0-9]/\", \'\', $item); // ditch anything that is not a number\n			$type = safe_field(\'html\', \'txp_prefs\', \'name = \"custom_\'.$cf_number.\'_set\"\'); // retrieve cfs type\n			if ($type == \'checkbox\' || $type == \'multi-select\') {\n				$selector = \'$(\"p:has(*[name=\\\'custom_\'.$cf_number.\'[]\\\'])\")\'; // adds the \'[]\' part\n			}\n			else\n			{\n				$selector = \'$(\"p:has(*[name=\\\'custom_\'.$cf_number.\'\\\'])\")\';\n			}\n			safe_update(\'bot_wtc\', \'item = \"\'.doslash($selector).\'\"\', \'id = \"\'.$id.\'\"\');\n     	}\n    	if (strpos($destination,\'custom\')) { // if destination contains the substring \'custom\'\n			$cf_number = preg_replace(\"/[^0-9]/\", \'\', $destination); // ditch anything that is not a number\n			$type = safe_field(\'html\', \'txp_prefs\', \'name = \"custom_\'.$cf_number.\'_set\"\'); // retrieve cfs type\n			if ($type == \'checkbox\' || $type == \'multi-select\') {\n				$selector = \'$(\"p:has(*[name=\\\'custom_\'.$cf_number.\'[]\\\'])\")\'; // adds the \'[]\' part\n			}\n			else\n			{\n				$selector = \'$(\"p:has(*[name=\\\'custom_\'.$cf_number.\'\\\'])\")\';\n			}\n			safe_update(\'bot_wtc\', \'destination = \"\'.doslash($selector).\'\"\', \'id = \"\'.$id.\'\"\');\n     	}\n    }\n}\n\n\n// ===========================================================\n\n\n\nfunction bot_wtc_check_install()\n{\n	// Check if the bot_wtc table exists\n	if (getThings(\"Show tables like \'\".PFX.\"bot_wtc\'\")) {\n		return true;\n	}\n	return false;\n}\n\n\n\n//===========================================\n\n\n\nfunction bot_all_items_selectinput() // outputs all items for selectInput() (used for destination dropdown)\n{\n	global $bot_items;\n	$cfs = bot_get_cfs(); // get cfs array in the form: cf_selector => cf_name\n	// final values for the txp function selectInput (including cfs if any)\n	if (is_array($cfs)) { // if there is at least one custom field set adds cfs to $bot_items array\n		$all_items_select = array_merge($cfs, $bot_items);\n	}\n	else {\n		$all_items_select = $bot_items;\n	}\n	return $all_items_select;\n	natcasesort($all_items_select);\n}\n\n\n//===========================================\n\n\n\nfunction bot_contextual_selectinput($current = \"\") // outputs only \'yet-not-used\' items for selectInput() (used for items dropdown)\n{\n	global $bot_items;\n	$db_values = bot_wtc_fetch_db(); // array of values from the db\n	$all_items = bot_all_items_selectinput();\n	if (bot_wtc_check_install()) {\n		$used_items = safe_column(\'item\', \'bot_wtc\', \'1=1\'); // numeric array of item values from the db\n		foreach ($all_items as $item => $title) {\n	   		if (!in_array($item, $used_items)) {\n	 			$items_selectInput[$item] = $title;\n	 		}\n		}\n	}\n	else {\n		$items_selectInput = $all_items;\n	}\n    if ($current) { // if the parameter is given adds current value to array\n    	$items_selectInput[$current] = $all_items[$current];\n    }\n	return  $items_selectInput;\n}\n\n\n\n// ===========================================================\n// bot_wtc tab\n// ===========================================================\n\n\n\nfunction bot_wtc_output_rows() // outputs the rows for the html table in the bot_wtc_tab\n{\n	global $bot_items;\n\n	$selectInput_for_position = array(\'insertBefore\'=>\'before\',\'insertAfter\'=>\'after\'); // position values for the txp function selectInput\n	$db_values = bot_wtc_fetch_db(); // array of values from the db\n\n    $destination_selectInput = bot_all_items_selectinput();\n	$items_selectInput = bot_contextual_selectinput();\n\n	// builds rows for new item sections list\n	$sections= bot_get_sections(); // get sections array\n	$new_item_sections_rows = \'\';\n	foreach ($sections as $key => $value) {\n		$new_item_sections_row = \'<label>\'.checkbox(\'new_item_sections[]\', $key, \'0\').$value.\'</label><br />\';\n		$new_item_sections_rows .= $new_item_sections_row;\n    }\n    $new_item_sections_rows .= \'<p ><a href=\"#\" class=\"bot_all\">\'.gTxt(\"all\").\'</a> | <a href=\"#\" class=\"bot_none\">\'.gTxt(\"none\").\'</a></p>\'; // hide all/none\n\n	// new item insertion\n	$rows = \"\";\n	$input_row = tr(\n		td(selectInput(\'new_item\',bot_contextual_selectinput(), \'\', \'1\'), \'\', \'bot_hilight\')\n		.td(selectInput(\'new_item_position\', $selectInput_for_position, \'\', \'1\'))\n		.td(selectInput(\'new_item_destination\',bot_all_items_selectinput(), \'\', \'1\'))\n		.td(\'<p><a href=\"#\" class=\"bot_push\">\'.gTxt(\"tag_section_list\").\'</a></p><div class=\"bot_collapse\">\'.$new_item_sections_rows.\'</div>\')\n		.td(finput(\'text\',\'new_item_class\', \'\'))\n		.td()\n		);\n		$rows .= $input_row;\n\n	// other rows - output if at least one record was already set\n	if ($db_values){\n		for ($i = 0; $i < count( $db_values ); $i++){\n			// data for \"sections to show\" selectinput - decides wether a section is checked or not\n			$bot_hide_in_this_sections_array = explode(\'|\', $db_values[$i][\'sections\']);\n			$item_sections_rows = \'\';\n			foreach ($sections as $key => $value) { // if section is in db mark as checked\n			    $checked = in_array($key, $bot_hide_in_this_sections_array) ? \'1\': \'0\';\n				$item_sections_row =  \'<label>\'.checkbox(\'bot_wtc_sections_for_id_\'.$db_values[$i][\'id\'].\'[]\', $key, $checked).$value.\'</label><br />\';\n				$item_sections_rows .= $item_sections_row;\n		    }\n		    $item_sections_rows .= \'<p><a href=\"#\" class=\"bot_all\">\'.gTxt(\"all\").\'</a> | <a href=\"#\" class=\"bot_none\">\'.gTxt(\"none\").\'</a></p>\'; // hide all/none\n			$single_row = tr(\n			td(selectInput(\'item[]\',bot_contextual_selectinput($db_values[$i][\'item\']), $db_values[$i][\'item\'],\'0\'), \'\', \'bot_hilight\')\n			.td(selectInput(\'item_position[]\', $selectInput_for_position, $db_values[$i][\'position\'], \'1\'))\n			.td(selectInput(\'item_destination[]\',bot_all_items_selectinput(), $db_values[$i][\'destination\'],\'1\'))\n 			.td(\'<p><a href=\"#\" class=\"bot_push\">\'.gTxt(\"tag_section_list\").\'</a></p><div class=\"bot_collapse\">\'.$item_sections_rows.\'</div>\')\n			.td(finput(\'text\', \'item_class[]\', $db_values[$i][\'class\']))\n			.td(checkbox(\'bot_delete_id[]\', $db_values[$i][\'id\'], \'0\').\'<label for=\"bot_delete_id\"> \'.gTxt(\'delete\').\'</label>\'))\n			.hInput(\'bot_wtc_id[]\', $db_values[$i][\'id\']);\n\n			$rows .= $single_row;\n		}\n	};\n	return $rows;\n}\n\n\n\n//===========================================\n\n\n\nfunction bot_wtc_static_sections_select()\n{\n	// builds rows for sections list\n	$sections= bot_get_sections(); // get sections array\n	$static_sections = safe_field(\'val\', \'txp_prefs\', \'name = \"bot_wtc_static_sections\"\'); //  fetch prefs value for bot_wtc_static_sections\n	$static_sections = explode(\'|\', $static_sections); // creates an array of statica sections from the string in txp_prefs\n    $static_sections_rows = \'\';\n	foreach ($sections as $key => $value) {\n	    // if section is in db mark as checked\n	    $checked = in_array($key, $static_sections) ? \'1\': \'0\';\n		$static_sections_row = \'<label>\'.checkbox(\'static_sections[]\', $key, $checked).$value.\'</label><br />\';\n		$static_sections_rows .= $static_sections_row;\n    }\n    return $static_sections_rows;\n}\n\n\n\n//===========================================\n\n\nfunction bot_advanced()\n{\n    global $bot_items;\n    $items = bot_all_items_selectinput(); // get items array\n    $item_rows = \'\';\n    foreach ($items as $key => $value) {\n		$item_row = \'<label>\'.checkbox(\'bot_adv_items[]\', htmlspecialchars($key), \'0\').$value.\'</label><br />\';\n		$item_rows .= $item_row;\n    $sections= bot_get_sections(); // get sections array\n    }\n	$sections_rows = \'\';\n	foreach ($sections as $key => $value) {\n		$sections_row = \'<label>\'.checkbox(\'bot_adv_sections[]\', $key, \'0\').$value.\'</label><br />\';\n		$sections_rows .= $sections_row;\n    }\n    return \'<div id=\"bot_advanced\">\'\n        .n.\'<h3>Advanced/Multiple selection</h3>\'\n        .n.form(n.bot_update_button()\n        .n.\'<div id=\"bot_adv_items\"><h4>Items</h4>\'.$item_rows.\'</div>\' // items list\n        .n.\'<div  id=\"bot_adv_hide\"><h4>Hide in sections</h4>\'.$sections_rows.\'<p><a href=\"#\" class=\"bot_all\">\'.gTxt(\"all\").\'</a> | <a href=\"#\" class=\"bot_none\">\'.gTxt(\"none\").\'</a></p></div>\' // sections list\n        .n.\'<div  id=\"bot_adv_class\"><h4>Set css class</h4>\'.finput(\'text\',\'bot_adv_class\', \'\').\'</div>\' // class\n        .n.bot_update_button()\n        .n.\'</div>\'\n    );\n}\n\n\n//===========================================\n\n\n\nfunction bot_wtc_tab($event, $step)\n{\n	global $bot_items;\n	$cfs = bot_get_cfs();\n\n	pagetop(\'Write tab customize \'.gTxt(\'preferences\'), ($step == \'update\' ? gTxt(\'preferences_saved\') : \'\'));\n	echo hed(\'Write tab customize\',\'2\');\n\n	if ($step == \'install\'){\n		// Install the preferences table.\n		bot_wtc_install();\n	}\n\n	if ($step == \'uninstall\'){\n		//remove table\n		safe_query(\"DROP TABLE \".PFX.\"bot_wtc\");\n		safe_delete(\'txp_prefs\', \'event = \"bot_wtc_\"\' );\n	}\n\n	if ($step == \'update\'){\n	    // set function variables\n		$new_item = ps(\'new_item\'); //variable\n		$new_item_position = ps(\'new_item_position\'); //variable\n		$new_item_destination = ps(\'new_item_destination\'); //variable\n		$new_item_sections = ps(\'new_item_sections\'); //array\n		$new_item_class = ps(\'new_item_class\'); //variable\n		$bot_wtc_script = ps(\'bot_wtc_script\'); //variable\n		$static_sections = ps(\'static_sections\'); //variable\n		$item = ps(\'item\'); //array\n		$item_position = ps(\'item_position\'); //array\n		$item_destination = ps(\'item_destination\'); //array\n		$item_class = ps(\'item_class\'); //array\n		$bot_wtc_id = ps(\'bot_wtc_id\'); //array\n		$delete_id = ps(\'bot_delete_id\'); //array\n		$bot_adv_items = ps(\'bot_adv_items\'); //array\n		$bot_adv_sections = ps(\'bot_adv_sections\'); //array\n		$bot_adv_class = ps(\'bot_adv_class\'); //variable\n\n		// db update for existing items\n		if ($item){ // if at least a saved item exists\n\n           	$db_values = bot_wtc_fetch_db(); // array of values from the db\n			for ($i = 0; $i < count($item); $i++){\n			    // builds the posted variable name for current item sections\n			    $item_posted_sections_name = \'bot_wtc_sections_for_id_\'.$db_values[$i][\'id\'];\n			    $item_sections = isset($_POST[$item_posted_sections_name]) ? $_POST[$item_posted_sections_name] : \'\'; //array\n                // builds sections string for current item\n				$item_sections_string = $item_sections ? implode(\'|\', $item_sections): \'\';\n				// allowed input data combinations\n				if (($item[$i] && $item_destination[$i] && $item_position[$i])\n				|| ($item[$i] && $item_class[$i] && !$item_destination[$i] && !$item_position[$i])\n				|| ($item[$i] && $item_sections_string && !$item_destination[$i] && !$item_position[$i])) {\n					// check if a column is linked with a non-column item BUT ONLY IF both items are set (otherwise couldn\'t apply i.e. class to a single td)\n					if (!((bot_wtc_is_td($item[$i]) XOR bot_wtc_is_td($item_destination[$i])) && $item_destination[$i])){\n  					    // check if item is different from destination\n						if($item[$i] != $item_destination[$i]){\n       						safe_update(\"bot_wtc\",\n							\"position = \'\"\n							.doslash($item_position[$i])\n							.\"\', destination = \'\"\n							.doslash($item_destination[$i])\n							.\"\', item = \'\"\n							.doslash($item[$i])\n							.\"\', sections = \'\"\n							.doslash($item_sections_string)\n							.\"\', class = \'\"\n							.doslash($item_class[$i])\n							.\"\'\", \"id = \'\".$bot_wtc_id[$i].\"\'\");\n						}\n						else {\n							echo bot_warning(\'same_item_warning\');\n						}\n					}\n					else {\n						echo bot_warning(\'td_warning\');\n					}\n				}\n				else {\n					echo bot_warning(\'combo_warning\');\n				}\n			}\n		}\n\n		// db insert for new item\n		// allowed input combinations\n		if (($new_item && $new_item_destination && $new_item_position)\n		|| ($new_item && $new_item_class && !$new_item_destination && !$new_item_position)\n		|| ($new_item && $new_item_sections && !$new_item_destination && !$new_item_position)){\n			// check if a column is linked with a non-column item\n			if (!((bot_wtc_is_td($new_item) XOR bot_wtc_is_td($new_item_destination)) &&  $new_item_destination)){\n				// check items are not the same\n				if($new_item != $new_item_destination){\n                    // transforms the sections array in a string\n                    $new_item_sections_string = $new_item_sections ? implode(\'|\', $new_item_sections) : \'\';\n					safe_insert(\"bot_wtc\",\n					\"position = \'\"\n					.doslash($new_item_position)\n					.\"\', destination = \'\"\n					.doslash($new_item_destination)\n					.\"\', class = \'\"\n					.doslash($new_item_class)\n					.\"\', sections = \'\"\n					.doslash($new_item_sections_string)\n					.\"\', item = \'\"\n					.doslash($new_item)\n					.\"\'\");\n				}\n				else {\n					echo bot_warning(\'same_item_warning\');\n				}\n			}\n			else {\n				echo bot_warning(\'td_warning\');\n			}\n		}\n\n		elseif ($new_item || $new_item_destination || $new_item_position || $new_item_class || $new_item_sections){\n			echo bot_warning(\'combo_warning\');\n		}\n\n		if ($delete_id){ // checks if there is something to delete\n			foreach ($delete_id as $id) {\n				safe_delete(\'bot_wtc\', \'id =\"\'.$id.\'\"\' );\n			}\n		}\n\n\n		// update advanced prefereces\n        if ($bot_adv_items AND ($bot_adv_sections || $bot_adv_class)) { // check if item AND section OR class is selected\n\n            $db_values = bot_wtc_fetch_db(); // first array: all values from db\n\n            if ($bot_adv_sections) {\n            	$bot_db_sections = array(); // more specific array: only item => sections\n                for ($i =0; $i < count($db_values); $i++) {\n                	$bot_db_sections[$db_values[$i][\'item\']] = $db_values[$i][\'sections\'];\n                }\n\n                foreach ($bot_adv_items as $item) { // iterates posted items\n                    // fetch -if any- existing sections from db for current item and merges arrays eliminating duplicates\n                    if (is_array($bot_db_sections) AND array_key_exists($item, $bot_db_sections)) {\n                       	$db_sect_array = explode(\'|\', $bot_db_sections[$item]);\n                        $final_array = array_unique(array_merge($db_sect_array, $bot_adv_sections));\n                        $bot_adv_sections_string = implode(\'|\', $final_array); // new sections string\n                    }\n                    else {\n                    	$bot_adv_sections_string = implode(\'|\', $bot_adv_sections);\n                    }\n                    safe_upsert(\n                        \"bot_wtc\",\n    					\"sections = \'\"\n    					.doslash($bot_adv_sections_string)\n    					.\"\'\",\n                        \"item = \'\".doslash($item).\"\'\"\n                    );\n            	}\n            }\n\n            if ($bot_adv_class) {\n                $bot_db_classes = array(); // more specific array: only item => classes\n                for ($i =0; $i < count($db_values); $i++) {\n                	$bot_db_classes[$db_values[$i][\'item\']] = $db_values[$i][\'class\'];\n                }\n\n                foreach ($bot_adv_items as $item) { // iterates posted items\n                    // fetch -if any- existing class from db for current item and merges arrays eliminating duplicates\n                    if (is_array($bot_db_classes) AND array_key_exists($item, $bot_db_classes)) {\n                       	$db_class_array = explode(\' \', $bot_db_classes[$item]);\n                       	$posted_class_array = explode(\' \', $bot_adv_class);\n                        $final_array = array_unique(array_merge($db_class_array, $posted_class_array));\n                        $bot_adv_classes_string = implode(\' \', $final_array); // new sections string\n                    }\n                    else {\n                    	$bot_adv_classes_string = $bot_adv_class;\n                    }\n                    safe_upsert(\n                        \"bot_wtc\",\n    					\"class = \'\"\n    					.doslash($bot_adv_classes_string)\n    					.\"\'\",\n                        \"item = \'\".doslash($item).\"\'\"\n                    );\n            	}\n            }\n        }\n        elseif ($bot_adv_sections || $bot_adv_class) {\n        	echo bot_warning(\'Warning: at least an item must be selected\');\n        }\n\n\n		// updates static sections prefs\n        if ($static_sections) {\n        	$static_sections_string = implode(\'|\', $static_sections);\n			safe_update(\'txp_prefs\', \'val= \"\'.doslash($static_sections_string).\'\", html=\"text_input\" \', \'name = \"bot_wtc_static_sections\"\' );\n        }\n\n        // updates script prefs\n		if ($bot_wtc_script) {\n	  		safe_update(\'txp_prefs\', \'val= \\\'\'.doslash($bot_wtc_script).\'\\\', html=\\\'textarea\\\' \', \'name = \\\'bot_wtc_script\\\'\' );\n		}\n	}\n\n	if (bot_wtc_check_install()) { // what to show when accessing tab\n\n		$bot_wtc_script = safe_field(\'val\', \'txp_prefs\', \'name = \"bot_wtc_script\"\'); // fetch prefs value for bot_wtc_script\n\n		echo \'<div id=\"bot_controls\">\n            <a id=\"bot_expand_all\" href=\"#\">Expand all</a> |\n            <a id=\"bot_collapse_all\" href=\"#\">Collapse all</a> |\n            <a id=\"bot_advanced_open\" href=\"#\">Toggle advanced</a>\n            </div>\';\n		echo n.t.bot_advanced();\n		echo n.t.\'<div id=\"bot_main\">\'; // main div\n\n		echo form( // beginning of the form\n 			\'<table id=\"bot_wtc_table\">\' // beginning of the table\n			.tr(td(strong(gTxt(\'Item\')))\n			.td(strong(gTxt(\'Position\')))\n			.td(strong(gTxt(\'Destination\')))\n			.td(strong(gTxt(\'Hide in:\')))\n			.td(strong(gTxt(\'Class\')))\n			.td() // collapse all/show all)\n			)\n			.bot_wtc_output_rows() // html rows generated by \"bot_wtc_output_rows()\"\n			.\'</table>\' // end of the table\n\n            .bot_update_button()\n\n			.n.\'<div id=\"bot_static_sections\">\'  // static sections\n			.n.graf(\'<a class=\"bot_push\" href=\"#\">Hide sections in sections dropdown</a>\')\n			.n.\'<div class=\"bot_collapse\">\'\n			.bot_wtc_static_sections_select()\n			.n.\'</div>\'\n			.n.\'</div>\'\n\n			.bot_update_button()\n\n			.n.\'<div id=\"bot_js_box\">\' // js code box\n			.n.graf(\'<a class=\"bot_push\" href=\"#\">Additional js code</a>\'.\' | <a id=\"bot_js_link\" href=\"#\">Add external script</a> | <a id=\"bot_jq_link\" href=\"#\">Add Jquery script</a>\')\n			.n.\'<div class=\"bot_collapse\">\'\n			.n.\'<textarea id=\"bot_wtc_script\" name=\"bot_wtc_script\" cols=\"60\" rows=\"10\">\'.$bot_wtc_script.\'</textarea>\' // script textarea\n			.n.\'</div>\'\n			.n.\'</div>\'\n\n			.n.bot_update_button()\n		);\n\n		echo n.t.\'<div id=\"bot_uninstall\">\'. // uninstall button\n			n.hed(bot_wtc_gTxt(\'uninstall\'), \'1\').\n			n.t.t.graf(bot_wtc_gTxt(\'uninstall_message\')).\n			n.n.form(\n			n.eInput(\'bot_wtc_tab\').\n			n.sInput(\'uninstall\').\n			n.n.fInput(\'submit\', \'uninstall\', \'Uninstall \', \'smallerbox\'),\"\",\"confirm(\'\".bot_wtc_gTxt(\'uninstall_confirm\').\"\')\"\n			)\n			.\'</div></div>\';\n	}\n\n	else { // install button\n		echo n.t.\'<div  id=\"bot_install\">\'.\n			n.t.t.hed(gTxt(\'install\'), \'1\').\n			n.graf(bot_wtc_gTxt(\'install_message\')).\n			n.n.form(\n				n.eInput(\'bot_wtc_tab\').\n				n.sInput(\'install\').\n				n.n.fInput(\'submit\', \'install\', \'Install \', \'publish\')\n				).\n			\'</div>\';\n	}\n\n	// snippets to insert in the script box\n	$bot_jquery_snippet = \'<script type=\\\"text/javascript\\\">\\n    $(document).ready(function() {\\n        //your code here\\n    });\\n<\\/script>\\n\';\n	$bot_js_snippet = \'<script type=\\\"text/javascript\\\" src=\\\"path_to_script\\\"><\\/script>\\n\';\n\n	echo // add some jquery action\n	\'<script  type=\"text/javascript\">\'.n.\n	\'	$(document).ready(function() {\'.n.\n			\'$(\"div.bot_collapse\").hide()\'.n.\n			\'$(\"div#bot_advanced\").hide()\'.n.\n			\'$(\"a.bot_push\").click(function(){\'.n.\n			\'  $(this).toggleClass(\"bot_arrow\").parent().next().slideToggle();\'.n.\n			\'  return false;\'.n.\n			\'});\'.n.\n			\'$(\"#bot_collapse_all\").click(function(){\'.n.\n			\'  $(\"div.bot_collapse\").slideUp();\'.n.\n			\'  return false;\'.n.\n  			 \'});\'.n.\n			\'$(\"#bot_expand_all\").click(function(){\'.n.\n			\'  $(\"div.bot_collapse\").slideDown();\'.n.\n			\'  return false;\'.n.\n  			 \'});\'.n.\n			\'$(\"#bot_advanced_open\").click(function(){\'.n.\n			\'  $(\"div#bot_advanced\").slideToggle();\'.n.\n			\'  $(\"div#bot_main\").toggle();\'.n.\n			\'  return false;\'.n.\n  			 \'});\'.n.\n			\'$(\"a.bot_all\").click(function(){\'.n.\n			\'  $(this).parent().parent().find(\"input\").attr(\"checked\", true);\'.n.\n			\'  return false;\'.n.\n			\'});\'.n.\n			\'$(\"a.bot_none\").click(function(){\'.n.\n			\'  $(this).parent().parent().find(\"input\").attr(\"checked\", false);\'.n.\n			\'  return false;\'.n.\n			\'});\'.n.\n			\'$(\"#bot_jq_link\").click(function(){\'.n.\n			\'  var areaValue = $(\"#bot_wtc_script\").val();\'.n.\n			\'  $(\"#bot_wtc_script\").val(areaValue + \"\'.$bot_jquery_snippet.\'\");\'.n.\n			\'  return(false);\'.n.\n  			\'});\'.n.\n			\'$(\"#bot_js_link\").click(function(){\'.n.\n			\'  var areaValue = $(\"#bot_wtc_script\").val();\'.n.\n			\'  $(\"#bot_wtc_script\").val(areaValue + \"\'.$bot_js_snippet.\'\");\'.n.\n			\'  return(false);\'.n.\n  			\'});\'.n.\n	\'	});\'.n.\n	\'</script>\';\n}\n\n\n\n// ===========================================================\n// plugins output\n// ===========================================================\n\n\n\nfunction bot_wtc_css() { // css for the plugin tab under extensions\n\n	global $event;\n	if($event != \'bot_wtc_tab\') { // Outputs css only in \'bot_wtc\' extensions tab.\n		return;\n	}\n\n	echo \'<style type=\"text/css\">\n			#bot_main {\n				margin: auto; width:800px;\n			}\n			#page-bot_wtc_tab h2 {\n				text-align: center;	margin:20px auto; padding-bottom:10px;\n			}\n			#bot_controls {\n				margin: 10px auto; width:800px;\n			}\n			#bot_expand_all,\n			#bot_collapse_all,\n			#bot_advanced_open {\n				font-size:10px;\n			}\n			#bot_wtc_table {\n			 	padding:10px 0 20px; margin-left:0;\n			}\n			#bot_wtc_table td {\n				padding:10px; white-space:nowrap;\n			}\n			#bot_advanced {\n				margin: 10px auto; width:780px;	padding:10px 10px 0; border:dotted #ccc 1px;\n			}\n			#bot_adv_items,\n			#bot_adv_hide,\n			#bot_adv_class\n			{\n				width:260px; float:left; margin-bottom:20px;\n			}\n			#bot_static_sections,\n			#bot_js_box {\n				padding:20px 0 0; border-top:dotted #ccc 1px;\n			}\n			#bot_wtc_script {\n				width:100%; border:dotted #ccc 1px;\n			}\n			.bot_update_button {\n				margin:20px 0; clear:both;\n			}\n			#bot_uninstall {\n				padding:20px 0; border-top:dotted #ccc 1px\n			}\n			#bot_install {\n				margin: auto; width:800px;\n			}\n			.bot_hilight {\n				background:#eaeaea\n			}\n			a.bot_push {\n				font-weight:bold; background: url(txp_img/arrowupdn.gif) no-repeat right bottom; padding-right:13px;\n			}\n			#bot_warning {\n				text-align:center; background:#990000; color:#fff; margin: 20px auto; padding:10px; text-shadow:none;\n			}\n		</style>\';\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_hide_per_section_array(){ // builds array of sections to hide\n\n	$db_values = bot_wtc_fetch_db();  // array of values from the db\n\n	for ($i =0; $i<count($db_values); $i++) {\n		if ($db_values[$i][\'sections\']) {\n		    $sections_to_hide = explode(\'|\', $db_values[$i][\'sections\']);\n		    foreach ($sections_to_hide as $section) {\n				$bot_hide_per_section[$section][] = $db_values[$i][\'item\'];\n			}\n	    }\n	}\n	if (isset($bot_hide_per_section)) { // return array only if values exist\n 		return $bot_hide_per_section;\n 	}\n}\n\n\n\n// ===========================================================\n\n\n\n\nfunction bot_wtc_jquery_hide_sections_rows(){ // js rows dealing with items to hide on section change AND on page load\n\n	$bot_hide_per_section = bot_hide_per_section_array();\n	foreach ($bot_hide_per_section as $section => $fields) {\n		echo n.\'			if (value==\"\'.$section.\'\"){\'.n;\n        for ($i =0; $i<count($fields); $i++) {\n			echo \'				\'.$fields[$i].\'.hide();\'.n;\n        }\n		echo \'			}\'.n;\n	}\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_wtc_jquery_restore_rows(){ // js rows to restore every previously hidden item on section change\n\n	$bot_hide_per_section = bot_hide_per_section_array();\n	foreach ($bot_hide_per_section as $section => $fields) {\n        for ($i =0; $i<count($fields); $i++) {\n			$out[] = $fields[$i];\n        }\n	}\n	$out = array_unique($out);\n	foreach ($out as $value) {\n	echo \'			\'.$value.\'.show();\'.n;\n	}\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_hide_per_section(){ //  builds the script\n\n    $bot_hide_per_section = bot_hide_per_section_array();\n	if ($bot_hide_per_section) { // output js only if values exist\n		 	echo\n				\'<script  type=\"text/javascript\">\'.n.\n				\'	$(document).ready(function() {\'.n;\n			echo\n				\'		$(\"select#section\").change(function(){\'.n;\n							bot_wtc_jquery_restore_rows();\n			echo\n				\'			var value = $(\"select#section\").val();\';\n							bot_wtc_jquery_hide_sections_rows();\n			echo\n				\'		}).change();\'.n.\n				\'	});\'.n.\n				\'</script>\';\n		}\n	}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_hidden_sections(){ // invisible sections in section list\n\n	$bot_hidden_sections = safe_field(\'val\', \'txp_prefs\', \'name = \"bot_wtc_static_sections\"\'); // fetch prefs value for bot_wtc_static_sections\n	if ($bot_hidden_sections) { // output js only if values exist\n		$sections = explode(\"|\", $bot_hidden_sections);\n		echo\n		\'<script  type=\"text/javascript\">\'.n.\n		\'	$(document).ready(function() {\'.n;\n		foreach ($sections as $value) {\n			echo    \'           $(\"select#section option:not(:selected)[value=\\\'\'.$value.\'\\\']\").remove();\'.n;\n		}\n		echo\n		\'	});\'.n.\n		\'</script>\';\n	}\n}\n\n\n\n// ===========================================================\n\n\n\nfunction bot_wtc_jquery_rows()\n{\n	global $bot_items;\n	$db_values = bot_wtc_fetch_db();  // array of values from the db\n\n	$rows = \'\';\n	for ($i = 0; $i <count($db_values); $i++)\n	{\n		$item = ($db_values[$i][\'item\'] != \'\') ? $db_values[$i][\'item\'] : \'\';\n		$position = ($db_values[$i][\'position\'] != \'\') ? \'.\'.$db_values[$i][\'position\'] : \'\';\n		$destination = ($db_values[$i][\'destination\'] != \'\') ? \'(\'.$db_values[$i][\'destination\'].\')\' : \'\';\n		$class = ($db_values[$i][\'class\'] != \'\') ? \'.addClass(\"\'.$db_values[$i][\'class\'].\'\")\' : \'\';\n  		$row = $item.$position.$destination.$class.\';\'.n;\n		$rows .= $row;\n	}\n	return $rows;\n};\n\n\n\n// ===========================================================\n\n\n\nfunction bot_wtc()\n{\n\n	$bot_wtc_script = safe_field(\'val\', \'txp_prefs\', \'name = \"bot_wtc_script\"\'); // fetch prefs value for bot_wtc_script\n 	$position = safe_column(\'position\', \'bot_wtc\', \'1=1\'); // fetch \'position\' from db to check if a move is saved\n 	$class = safe_column(\'class\', \'bot_wtc\', \'1=1\'); // fetch \'class\' from db to check if a class is saved\n\n	if(isset($position) || isset($class)){ // output code only if a preference is saved\n		echo\n		\'<script  type=\"text/javascript\">\'.n.\n		\'	$(document).ready(function() {\'.n.\n				bot_wtc_jquery_rows().n.\n		\'	});\'.n.\n		\'</script>\';\n	}\n	if ($bot_wtc_script) {\n		echo n.$bot_wtc_script.n;\n	};\n\n}\n','590fffa3b8d960267f7adb438f8785d6',3,5,2);

INSERT INTO `txp_plugin` (`name`, `status`, `author`, `author_uri`, `version`, `description`, `help`, `code`, `code_restore`, `code_md5`, `type`, `load_order`, `flags`)
VALUES
	('smd_browse_by',1,'Stef Dawson','http://stefdawson.com/','0.11','Browse by Category (+article Section) in admin side','<div id=\"smd_help\">\n\n	<h1>smd_browse_by</h1>\n\n	<p>Browse your articles/images/files/links via a quick dropdown menu of category (or in the case of articles: section as well). Just install, activate, done.</p>\n\n	<h2>Author / credits</h2>\n\n	<p>Written by <a href=\"http://stefdawson.com/contact\">Stef Dawson</a>. Original plugin by Steve Lam.</p>\n\n	<h2>Installation / uninstallation</h2>\n\n	<p class=\"important\">Requires <span class=\"caps\">TXP</span> 4.4.1+</p>\n\n	<p>Download the plugin from either <a href=\"http://textpattern.org/plugins/1239/smd_browse_by\">textpattern.org</a>, or the <a href=\"http://stefdawson.com/sw\">software page</a>, paste the code into the <span class=\"caps\">TXP</span> <em>Admin-&gt;Plugins</em> pane, install and enable the plugin.</p>\n\n	<p>To uninstall the plugin, delete from the <em>Admin-&gt;Plugins</em> page.</p>\n\n	<p>Visit the <a href=\"http://forum.textpattern.com/viewtopic.php?id=36784\">forum thread</a> for more info or to report on the success or otherwise of the plugin.</p>\n\n	<h2>Configuration</h2>\n\n	<p>The plugin can be controlled with a few hidden preference values (the smd_prefalizer plugin can help here). Any prefs you create should have the following items set, in addition to the preference-specific name and value given later:</p>\n\n	<ul>\n		<li>Visibility: <strong>Hidden</strong></li>\n		<li>Event: <strong>smd_browse</strong></li>\n		<li>User: <em>your login name</em> if you wish the preference to only apply to your login, or leave it empty to apply it for all users</li>\n	</ul>\n\n	<p>The preferences are:</p>\n\n	<h3>Browse using</h3>\n\n	<p>By default you can browse by category on all main content types and additionally by section with articles. If you wish to only offer browsing on certain tabs, set this preference. Comma-separate any of the following values to build the interface to your choosing:</p>\n\n	<ul>\n		<li>Name: <strong>smd_browse_by</strong></li>\n		<li>Value:\n	<ul>\n		<li><em>empty</em> : none (!) : remove all browsable lists added by the plugin</li>\n		<li><strong><span class=\"caps\">SMD</span>_ALL</strong> : browse on every tab &#8212; this has the same effect as completely removing the preference value</li>\n		<li><strong>article</strong>: browse by category and section lists on the Articles tab</li>\n		<li><strong>article_cat</strong>: browse by category on the Articles tab</li>\n		<li><strong>article_sec</strong>: browse by section on the Articles tab</li>\n		<li><strong>image</strong>: browse by category on the Images tab</li>\n		<li><strong>file</strong>: browse by category on the Files tab</li>\n		<li><strong>link</strong>: browse by category on the Links tab</li>\n	</ul></li>\n	</ul>\n\n	<h3>Go button</h3>\n\n	<p>By default the select lists submit automatically when the entry is changed. If you wish to add a &#8216;Go&#8217; button next to the lists, set this preference:</p>\n\n	<ul>\n		<li>Name: <strong>smd_browse_by_go_button</strong></li>\n		<li>Value:\n	<ul>\n		<li>0 (auto-submit)</li>\n		<li>1 (Go button)</li>\n	</ul></li>\n	</ul>\n\n	<h2><span class=\"caps\">API</span></h2>\n\n	<p>If you wish to alter the output of any of the lists that appear on the screen you may do so by registering a callback to be notified when one or all of the select lists are displayed. Here are the relevant events and steps you can use:</p>\n\n	<ul>\n		<li>Event: <code>smd_browse_by_ui</code></li>\n		<li>Step: call your plugin at the following times:\n	<ul>\n		<li><em>empty</em> : all select lists</li>\n		<li><code>article_cat</code>: when the Article category list is displayed</li>\n		<li><code>article_sec</code>: when the Article section list is displayed</li>\n		<li><code>image</code>: when the Image category list is displayed</li>\n		<li><code>file</code>: when the File category list is displayed</li>\n		<li><code>link</code>: when the Link category list is displayed</li>\n	</ul></li>\n	</ul>\n\n	<p>An example:</p>\n\n<pre class=\"block\"><code class=\"block\">if (@txpinterface == &#39;admin&#39;) {\n   register_callback(&#39;my_custom_browser&#39;, &#39;smd_browse_by_ui&#39;, &#39;image&#39;);\n}\n</code>\n<code class=\"block\">function my_custom_browser($evt, $stp, $data, $rs, $val) {\n   // $evt is always &#39;smd_browse_by_ui&#39;\n   // $stp is the current step\n   //    (article_cat, article_sec, image, file, or link)\n   // $data holds the fully rendered default select list HTML\n   //    so you can search/replace/manipulate it\n   // $rs is the raw array containing the list of items\n   //    so you can iterate over them\n   // $val is the currently chosen value from the list\n   // if you return anything from this function,\n   //    that will be what is displayed in place of the\n   //    default select list\n}\n</code></pre>\n\n	<h2>Changelog</h2>\n\n	<ul>\n		<li>31 Aug 2011 | 0.10 | Initial release</li>\n		<li>12 Nov 2011 | 0.11 | Added hidden pref to control which dropdowns to use ; category tree now displayed (thanks pieman) ; pluggable_ui() implemented so other plugins can alter the lists (thanks tye)</li>\n	</ul>\n\n</div>\n<!-- *** BEGIN PLUGIN CSS *** -->\n<style type=\"text/css\">\n#smd_help { line-height:1.5 ;}\n#smd_help code { font-weight:bold; font: 105%/130% \"Courier New\", courier, monospace; background-color: #f0e68c; color:#333; }\n#smd_help code.block { font-weight:normal; border:1px dotted #999; display:block; margin:10px 10px 20px; padding:10px; }\n#smd_help h1 { font: 20px Georgia, sans-serif; margin: 0; text-align: center; }\n#smd_help h2 { border-bottom: 1px solid black; padding:10px 0 0; font: 17px Georgia, sans-serif; }\n#smd_help h3 { font: bold 12px Arial, sans-serif; letter-spacing: 1px; margin: 10px 0 0; text-decoration:underline; }\n#smd_help h4 { font: bold 11px Arial, sans-serif; letter-spacing: 1px; margin: 10px 0 0; text-transform: uppercase; }\n#smd_help .atnm { font-weight:bold; }\n#smd_help .mand { background:#eee; border:1px dotted #999; }\n#smd_help table { width:90%; text-align:center; padding-bottom:1em; border-collapse:collapse; }\n#smd_help td, #smd_help th { border:1px solid #999; padding:.5em; }\n#smd_help ul { list-style-type:square; }\n#smd_help .important { color:red; }\n#smd_help li { margin:5px 20px 5px 30px; }\n#smd_help .break { margin-top:5px; }\n#smd_help dl dd { margin:2px 15px; }\n#smd_help dl dd:before { content: \"\\21d2\\00a0\"; }\n#smd_help dl dd dl { padding: 0 15px; }\n</style>\n<!-- *** END PLUGIN CSS *** -->\n','if (@txpinterface == \'admin\') {\r\n	register_callback(\"smd_browse_by_image\", \"image\");\r\n	register_callback(\"smd_browse_by_article\", \"list\");\r\n	register_callback(\"smd_browse_by_file\", \"file\");\r\n	register_callback(\"smd_browse_by_link\", \"link\");\r\n}\r\n\r\nfunction smd_browse_by_image($evt, $stp) {\r\n	$showit = do_list(get_pref(\'smd_browse_by\', \'SMD_ALL\'));\r\n	if (in_array(\'SMD_ALL\', $showit) || in_array(\'image\', $showit)) {\r\n		$smd_browse_by_form = form(smd_browse_dropdown(\'image\', $evt), \'\', \'\', \'get\');\r\n		smd_browse_by_js($smd_browse_by_form);\r\n	}\r\n}\r\n\r\nfunction smd_browse_by_article($evt, $stp) {\r\n	$showit = do_list(get_pref(\'smd_browse_by\', \'SMD_ALL\'));\r\n	$showcat = (in_array(\'SMD_ALL\', $showit) || in_array(\'article\', $showit) || in_array(\'article_cat\', $showit));\r\n	$showsec = (in_array(\'SMD_ALL\', $showit) || in_array(\'article\', $showit) || in_array(\'article_sec\', $showit));\r\n\r\n	$smd_browse_by_form = (($showcat) ? form(smd_browse_dropdown(\'article_cat\', $evt), \'\', \'\', \'get\') : \'\')\r\n		. (($showsec) ? form(smd_browse_dropdown(\'article_sec\', $evt), \'\', \'\', \'get\') : \'\');\r\n\r\n	if ($showcat || $showsec) {\r\n		smd_browse_by_js($smd_browse_by_form);\r\n	}\r\n}\r\n\r\nfunction smd_browse_by_file($evt, $stp) {\r\n	$showit = do_list(get_pref(\'smd_browse_by\', \'SMD_ALL\'));\r\n	if (in_array(\'SMD_ALL\', $showit) || in_array(\'file\', $showit)) {\r\n		$smd_browse_by_form = form(smd_browse_dropdown(\'file\', $evt), \'\', \'\', \'get\');\r\n		smd_browse_by_js($smd_browse_by_form);\r\n	}\r\n}\r\n\r\nfunction smd_browse_by_link($evt, $stp) {\r\n	$showit = do_list(get_pref(\'smd_browse_by\', \'SMD_ALL\'));\r\n	if (in_array(\'SMD_ALL\', $showit) || in_array(\'link\', $showit)) {\r\n		$smd_browse_by_form = form(smd_browse_dropdown(\'link\', $evt), \'\', \'\', \'get\');\r\n		smd_browse_by_js($smd_browse_by_form);\r\n	}\r\n}\r\n\r\n// Common js to place each \'browse by\' above each area\'s search form\r\nfunction smd_browse_by_js($content) {\r\n	$out = doSlash($content);\r\n	$js = <<<EOC\r\n<script type=\"text/javascript\">\r\n	jQuery(document).ready(function() {\r\n		jQuery(\".search-form\").before(\'<div class=\"smd_browse_by\">{$out}</div>\');\r\n	});\r\n</script>\r\n<style type=\"text/css\">\r\n.smd_browse_by {\r\n	width:100%;\r\n	text-align:center;\r\n}\r\n.smd_browse_by form {\r\n	display:inline;\r\n}\r\n</style>\r\nEOC;\r\n	echo $js;\r\n}\r\n\r\nfunction smd_browse_dropdown($type, $evt) {\r\n	$browsable = array(\r\n		\'article_cat\' => array(\r\n			\'by\'    => smd_browse_by_gTxt(\'by_cat\'),\r\n			\'table\' => \'txp_category\',\r\n			\'where\' => \"type = \'article\' AND name != \'root\'\",\r\n			\'step\'  => \'list\',\r\n			\'meth\'  => \'categories\',\r\n		),\r\n		\'article_sec\' => array(\r\n			\'by\'    => smd_browse_by_gTxt(\'by_sec\'),\r\n			\'table\' => \'txp_section\',\r\n			\'where\' => \"name != \'default\'\",\r\n			\'step\'  => \'list\',\r\n			\'meth\'  => \'section\',\r\n		),\r\n		\'image\' => array(\r\n			\'by\'    => smd_browse_by_gTxt(\'by_cat\'),\r\n			\'table\' => \'txp_category\',\r\n			\'where\' => \"type = \'image\' AND name != \'root\'\",\r\n			\'step\'  => \'image_list\',\r\n			\'meth\'  => \'category\',\r\n		),\r\n		\'file\' => array(\r\n			\'by\'    => smd_browse_by_gTxt(\'by_cat\'),\r\n			\'table\' => \'txp_category\',\r\n			\'where\' => \"type = \'file\' AND name != \'root\'\",\r\n			\'step\'  => \'file_list\',\r\n			\'meth\'  => \'category\',\r\n		),\r\n		\'link\' => array(\r\n			\'by\'    => smd_browse_by_gTxt(\'by_cat\'),\r\n			\'table\' => \'txp_category\',\r\n			\'where\' => \"type = \'link\' AND name != \'root\'\",\r\n			\'step\'  => \'link_edit\',\r\n			\'meth\'  => \'category\',\r\n		),\r\n	);\r\n\r\n	if (isset($browsable[$type])) {\r\n		$entry = $browsable[$type];\r\n		$sel = array();\r\n\r\n		if ($entry[\'meth\'] == \'section\') {\r\n			$section_cat = safe_rows(\'name, title\', $entry[\'table\'], $entry[\'where\']);\r\n			foreach ($section_cat as $row) {\r\n				$sel[] = array(\'name\' => $row[\'name\'], \'title\' => $row[\'title\']);\r\n			}\r\n		} else if ($entry[\'meth\'] == \'category\' || $entry[\'meth\'] == \'categories\') {\r\n			$thistype = str_replace(\'_cat\', \'\', $type);\r\n			$sel = getTree(\'root\', $thistype, \'1=1\', $entry[\'table\']);\r\n		}\r\n		if ($sel) {\r\n			$use_go = get_pref(\'smd_browse_by_go_button\', 0);\r\n			$val = gps(\'crit\');\r\n			return\r\n				$entry[\'by\'] . sp\r\n				. pluggable_ui(\'smd_browse_by_ui\', $type, smd_browse_select_input(\'crit\', $sel, $val, true, (($use_go) ? false : true)), $sel,  $val)\r\n				. (($use_go) ? fInput(\'submit\', \'\', gTxt(\'go\'), \'smallerbox\') : \'\')\r\n				. hInput(\'event\', $evt)\r\n				. hInput(\'step\', $entry[\'step\'])\r\n				. hInput(\'search_method\', $entry[\'meth\']);\r\n		}\r\n	}\r\n	return false;\r\n}\r\n\r\n// Frankensteined from the core\'s selectInput() and treeSelectInput()\r\nfunction smd_browse_select_input($select_name = \'\', $array = \'\', $value = \'\', $blank_first, $onchange, $select_id = \'\', $truncate = 0) {\r\n	$out = array();\r\n	$selected = false;\r\n	$level = 0;\r\n\r\n	foreach ($array as $a) {\r\n		if ($a[\'name\'] == \'root\') {\r\n			continue;\r\n		}\r\n\r\n		extract($a);\r\n\r\n		if ($name == $value) {\r\n			$sel = \' selected=\"selected\"\';\r\n			$selected = true;\r\n		} else {\r\n			$sel = \'\';\r\n		}\r\n\r\n		$sp = str_repeat(sp.sp, $level);\r\n\r\n		if (($truncate > 3) && (strlen(utf8_decode($title)) > $truncate)) {\r\n			$htmltitle = \' title=\"\'.htmlspecialchars($title).\'\"\';\r\n			$title = preg_replace(\'/^(.{0,\'.($truncate - 3).\'}).*$/su\',\'$1\',$title);\r\n			$hellip = \'&#8230;\';\r\n		} else {\r\n			$htmltitle = $hellip = \'\';\r\n		}\r\n\r\n		$out[] = n.t.\'<option value=\"\'.htmlspecialchars($name).\'\"\'.$htmltitle.$sel.\'>\'.$sp.htmlspecialchars($title).$hellip.\'</option>\';\r\n	}\r\n\r\n	return n.\'<select\'.( $select_id ? \' id=\"\'.$select_id.\'\"\' : \'\' ).\' name=\"\'.$select_name.\'\" class=\"list\"\'.\r\n		($onchange == 1 ? \' onchange=\"submit(this.form);\"\' : $onchange).\r\n		\'>\'.\r\n		($blank_first ? n.t.\'<option value=\"\"\'.($selected == false ? \' selected=\"selected\"\' : \'\').\'></option>\' : \'\').\r\n		( $out ? join(\'\', $out) : \'\').\r\n		n.\'</select>\';\r\n}\r\n\r\n// ------------------------\r\n// Plugin-specific replacement strings - localise as required\r\nfunction smd_browse_by_gTxt($what, $atts = array()) {\r\n	$lang = array(\r\n		\'by_cat\' => \'Browse by Category:\',\r\n		\'by_sec\' => \'Browse by Section:\',\r\n	);\r\n	return strtr($lang[$what], $atts);\r\n}','if (@txpinterface == \'admin\') {\r\n	register_callback(\"smd_browse_by_image\", \"image\");\r\n	register_callback(\"smd_browse_by_article\", \"list\");\r\n	register_callback(\"smd_browse_by_file\", \"file\");\r\n	register_callback(\"smd_browse_by_link\", \"link\");\r\n}\r\n\r\nfunction smd_browse_by_image($evt, $stp) {\r\n	$showit = do_list(get_pref(\'smd_browse_by\', \'SMD_ALL\'));\r\n	if (in_array(\'SMD_ALL\', $showit) || in_array(\'image\', $showit)) {\r\n		$smd_browse_by_form = form(smd_browse_dropdown(\'image\', $evt), \'\', \'\', \'get\');\r\n		smd_browse_by_js($smd_browse_by_form);\r\n	}\r\n}\r\n\r\nfunction smd_browse_by_article($evt, $stp) {\r\n	$showit = do_list(get_pref(\'smd_browse_by\', \'SMD_ALL\'));\r\n	$showcat = (in_array(\'SMD_ALL\', $showit) || in_array(\'article\', $showit) || in_array(\'article_cat\', $showit));\r\n	$showsec = (in_array(\'SMD_ALL\', $showit) || in_array(\'article\', $showit) || in_array(\'article_sec\', $showit));\r\n\r\n	$smd_browse_by_form = (($showcat) ? form(smd_browse_dropdown(\'article_cat\', $evt), \'\', \'\', \'get\') : \'\')\r\n		. (($showsec) ? form(smd_browse_dropdown(\'article_sec\', $evt), \'\', \'\', \'get\') : \'\');\r\n\r\n	if ($showcat || $showsec) {\r\n		smd_browse_by_js($smd_browse_by_form);\r\n	}\r\n}\r\n\r\nfunction smd_browse_by_file($evt, $stp) {\r\n	$showit = do_list(get_pref(\'smd_browse_by\', \'SMD_ALL\'));\r\n	if (in_array(\'SMD_ALL\', $showit) || in_array(\'file\', $showit)) {\r\n		$smd_browse_by_form = form(smd_browse_dropdown(\'file\', $evt), \'\', \'\', \'get\');\r\n		smd_browse_by_js($smd_browse_by_form);\r\n	}\r\n}\r\n\r\nfunction smd_browse_by_link($evt, $stp) {\r\n	$showit = do_list(get_pref(\'smd_browse_by\', \'SMD_ALL\'));\r\n	if (in_array(\'SMD_ALL\', $showit) || in_array(\'link\', $showit)) {\r\n		$smd_browse_by_form = form(smd_browse_dropdown(\'link\', $evt), \'\', \'\', \'get\');\r\n		smd_browse_by_js($smd_browse_by_form);\r\n	}\r\n}\r\n\r\n// Common js to place each \'browse by\' above each area\'s search form\r\nfunction smd_browse_by_js($content) {\r\n	$out = doSlash($content);\r\n	$js = <<<EOC\r\n<script type=\"text/javascript\">\r\n	jQuery(document).ready(function() {\r\n		jQuery(\".search-form\").before(\'<div class=\"smd_browse_by\">{$out}</div>\');\r\n	});\r\n</script>\r\n<style type=\"text/css\">\r\n.smd_browse_by {\r\n	width:100%;\r\n	text-align:center;\r\n}\r\n.smd_browse_by form {\r\n	display:inline;\r\n}\r\n</style>\r\nEOC;\r\n	echo $js;\r\n}\r\n\r\nfunction smd_browse_dropdown($type, $evt) {\r\n	$browsable = array(\r\n		\'article_cat\' => array(\r\n			\'by\'    => smd_browse_by_gTxt(\'by_cat\'),\r\n			\'table\' => \'txp_category\',\r\n			\'where\' => \"type = \'article\' AND name != \'root\'\",\r\n			\'step\'  => \'list\',\r\n			\'meth\'  => \'categories\',\r\n		),\r\n		\'article_sec\' => array(\r\n			\'by\'    => smd_browse_by_gTxt(\'by_sec\'),\r\n			\'table\' => \'txp_section\',\r\n			\'where\' => \"name != \'default\'\",\r\n			\'step\'  => \'list\',\r\n			\'meth\'  => \'section\',\r\n		),\r\n		\'image\' => array(\r\n			\'by\'    => smd_browse_by_gTxt(\'by_cat\'),\r\n			\'table\' => \'txp_category\',\r\n			\'where\' => \"type = \'image\' AND name != \'root\'\",\r\n			\'step\'  => \'image_list\',\r\n			\'meth\'  => \'category\',\r\n		),\r\n		\'file\' => array(\r\n			\'by\'    => smd_browse_by_gTxt(\'by_cat\'),\r\n			\'table\' => \'txp_category\',\r\n			\'where\' => \"type = \'file\' AND name != \'root\'\",\r\n			\'step\'  => \'file_list\',\r\n			\'meth\'  => \'category\',\r\n		),\r\n		\'link\' => array(\r\n			\'by\'    => smd_browse_by_gTxt(\'by_cat\'),\r\n			\'table\' => \'txp_category\',\r\n			\'where\' => \"type = \'link\' AND name != \'root\'\",\r\n			\'step\'  => \'link_edit\',\r\n			\'meth\'  => \'category\',\r\n		),\r\n	);\r\n\r\n	if (isset($browsable[$type])) {\r\n		$entry = $browsable[$type];\r\n		$sel = array();\r\n\r\n		if ($entry[\'meth\'] == \'section\') {\r\n			$section_cat = safe_rows(\'name, title\', $entry[\'table\'], $entry[\'where\']);\r\n			foreach ($section_cat as $row) {\r\n				$sel[] = array(\'name\' => $row[\'name\'], \'title\' => $row[\'title\']);\r\n			}\r\n		} else if ($entry[\'meth\'] == \'category\' || $entry[\'meth\'] == \'categories\') {\r\n			$thistype = str_replace(\'_cat\', \'\', $type);\r\n			$sel = getTree(\'root\', $thistype, \'1=1\', $entry[\'table\']);\r\n		}\r\n		if ($sel) {\r\n			$use_go = get_pref(\'smd_browse_by_go_button\', 0);\r\n			$val = gps(\'crit\');\r\n			return\r\n				$entry[\'by\'] . sp\r\n				. pluggable_ui(\'smd_browse_by_ui\', $type, smd_browse_select_input(\'crit\', $sel, $val, true, (($use_go) ? false : true)), $sel,  $val)\r\n				. (($use_go) ? fInput(\'submit\', \'\', gTxt(\'go\'), \'smallerbox\') : \'\')\r\n				. hInput(\'event\', $evt)\r\n				. hInput(\'step\', $entry[\'step\'])\r\n				. hInput(\'search_method\', $entry[\'meth\']);\r\n		}\r\n	}\r\n	return false;\r\n}\r\n\r\n// Frankensteined from the core\'s selectInput() and treeSelectInput()\r\nfunction smd_browse_select_input($select_name = \'\', $array = \'\', $value = \'\', $blank_first, $onchange, $select_id = \'\', $truncate = 0) {\r\n	$out = array();\r\n	$selected = false;\r\n	$level = 0;\r\n\r\n	foreach ($array as $a) {\r\n		if ($a[\'name\'] == \'root\') {\r\n			continue;\r\n		}\r\n\r\n		extract($a);\r\n\r\n		if ($name == $value) {\r\n			$sel = \' selected=\"selected\"\';\r\n			$selected = true;\r\n		} else {\r\n			$sel = \'\';\r\n		}\r\n\r\n		$sp = str_repeat(sp.sp, $level);\r\n\r\n		if (($truncate > 3) && (strlen(utf8_decode($title)) > $truncate)) {\r\n			$htmltitle = \' title=\"\'.htmlspecialchars($title).\'\"\';\r\n			$title = preg_replace(\'/^(.{0,\'.($truncate - 3).\'}).*$/su\',\'$1\',$title);\r\n			$hellip = \'&#8230;\';\r\n		} else {\r\n			$htmltitle = $hellip = \'\';\r\n		}\r\n\r\n		$out[] = n.t.\'<option value=\"\'.htmlspecialchars($name).\'\"\'.$htmltitle.$sel.\'>\'.$sp.htmlspecialchars($title).$hellip.\'</option>\';\r\n	}\r\n\r\n	return n.\'<select\'.( $select_id ? \' id=\"\'.$select_id.\'\"\' : \'\' ).\' name=\"\'.$select_name.\'\" class=\"list\"\'.\r\n		($onchange == 1 ? \' onchange=\"submit(this.form);\"\' : $onchange).\r\n		\'>\'.\r\n		($blank_first ? n.t.\'<option value=\"\"\'.($selected == false ? \' selected=\"selected\"\' : \'\').\'></option>\' : \'\').\r\n		( $out ? join(\'\', $out) : \'\').\r\n		n.\'</select>\';\r\n}\r\n\r\n// ------------------------\r\n// Plugin-specific replacement strings - localise as required\r\nfunction smd_browse_by_gTxt($what, $atts = array()) {\r\n	$lang = array(\r\n		\'by_cat\' => \'Browse by Category:\',\r\n		\'by_sec\' => \'Browse by Section:\',\r\n	);\r\n	return strtr($lang[$what], $atts);\r\n}','c09c5a788a29d1fba2280f4d040ddffb',3,5,0),
	('rsx_plugins_list',0,'Ramanan Sivaranjan','http://funkaoshi.com/','1.2','Display a list of plugins currently installed.','\n	<p><h1>RSX Plugins List</h1></p>\n\n	<p><p>This plugin will display a list containing the basic information about the<br />\nplugins you currently have installed in your textpattern system. The list can<br />\nbe styled using CSS, as the list has been given the class<br />\n<code>plugins-list</code>. To use, simply include the tag<br />\n<code>&lt;txp:rsx_plugins_list /&gt;</code> anywhere you want this list to be<br />\ndisplayed.</p></p>\n\n	<p><p>You can use the parameter <code>show_inactive</code> to decide if you want<br />\nto list active or inactive plugins. If it is set to 1, which is the default,<br />\ninactive plugins will be listed as well as active plugins. If it is set to 0,<br />\nthen only active plugins are displayed.</p></p>\n\n	<p><p>You can use the parameter <code>show_description</code> to decide if you want<br />\nto include the description of the plugin in your list or not. If it is set to 1,<br />\nwhich is the default, the description of the plugin will be listed. If it is set<br />\nto 0, then no description will be listed.</p></p>\n\n\n\n\n ','\nfunction rsx_plugins_list($atts)\n{\n	extract(lAtts(array(\'show_inactive\' => 1, \'show_description\' => 1),$atts));\n\n	$out = \'\';\n	$even = false;\n	$rs = safe_rows(\"name, author, author_uri, version, description, status\"\n					, \"txp_plugin\"\n					, \"1=1\");\n	if ($rs) {\n		$out .= \'<dl class=\"plugins-list\">\';\n		foreach($rs as $var) {\n			extract($var);\n			if ( $status || !$status && $show_inactive) {\n				$out .= \'<dt>\'.$name.\' \'.$version.\' by <a href=\"\'.$author_uri.\'\">\'.$author.\'</a></dt>\';\n				if ( $show_description || $show_inactive )\n				{\n				    $out .= \'<dd>\';\n				    if ( $show_description )\n				        $out .= $description;\n				    if ( $show_inactive )\n					    $out .= \' [\'.($status ? \'active\' : \'inactive\').\']\';\n				    $out .= \'</dd>\';\n			    }\n			}\n		}\n		$out .= \'</dl>\';\n	}\n	return $out;\n}\n\n','\nfunction rsx_plugins_list($atts)\n{\n	extract(lAtts(array(\'show_inactive\' => 1, \'show_description\' => 1),$atts));\n\n	$out = \'\';\n	$even = false;\n	$rs = safe_rows(\"name, author, author_uri, version, description, status\"\n					, \"txp_plugin\"\n					, \"1=1\");\n	if ($rs) {\n		$out .= \'<dl class=\"plugins-list\">\';\n		foreach($rs as $var) {\n			extract($var);\n			if ( $status || !$status && $show_inactive) {\n				$out .= \'<dt>\'.$name.\' \'.$version.\' by <a href=\"\'.$author_uri.\'\">\'.$author.\'</a></dt>\';\n				if ( $show_description || $show_inactive )\n				{\n				    $out .= \'<dd>\';\n				    if ( $show_description )\n				        $out .= $description;\n				    if ( $show_inactive )\n					    $out .= \' [\'.($status ? \'active\' : \'inactive\').\']\';\n				    $out .= \'</dd>\';\n			    }\n			}\n		}\n		$out .= \'</dl>\';\n	}\n	return $out;\n}\n\n','81bed995193dd79ab2145db373d9c440',0,5,0),
	('glz_custom_fields',1,'Gerhard Lazu','http://gerhardlazu.com','1.4.0-beta','Unlimited, super special custom fields.','<h1>glz_custom_fields, unlimited custom fields</h1>\n<p>This plugin provides unlimited custom fields in Textpattern. You can create custom fields as selects, multi-selects, checkboxes, radio buttons and textareas - as well as the default text input fields. Predefine values can be set for custom fields and you can select a single default value (selects, multi-selects, checkboxes and radio buttons only).</p>\n<p><strong>If you want to submit bug reports and feature requests, please visit <a href=\"http://github.com/gerhard/glz_custom_fields\" title=\"glz_custom_fields on GitHub\">glz_custom_fields on GitHub</a></strong>. There is also a handy section on <a href=\"http://wiki.github.com/gerhard/glz_custom_fields/\" title=\"glz_custom_fields wiki\">glz_custom_fields tips and tricks</a>.</p>\n<h2>Time and date pickers</h2>\n<p>Time and date pickers are pretty straightforward to use. To set the required JavaScript and styling properly, please refer to the <span class=\"information\">INSTALL</span> file that came with this plugin.</p>\n<h2>Custom scripts</h2>\n<p>This is a rather complex and long sought-for piece of functionality, please refer to the <span class=\"information\">my_image.php</span> file which contains inline explanations on how they should be used. The file came with the plugin, in the <span class=\"information\">scripts/glz_custom_fields</span> folder.</p>\n<h2>Default values</h2>\n<p>You can now define a single default value by adding curly brackets around a value like so: <code>{default value}</code>.</p>\n<h2>Ranges</h2>\n<p>If you want to define ranges, create a new custom field with the following name e.g. <code>Price range &amp;pound;(after)</code>.</p>\n<ul>\n  <li><code>range</code> - this is really important and <strong class=\"warning\">must</strong> be present for the range to work correctly.</li>\n  <li><code>&amp;pound;</code> - don\'t use straight symbols (like <code>&euro;</code> or <code>&pound;</code>), instead use entity ones e.g. <code>&amp;euro;</code> and <code>&amp;pound;</code> are valid symbols.</li>\n  <li><code>(after)</code> - don\'t leave any spaces after e.g. $ and (after). This basically says where to add the measuring unit (be it a currency or something like m<sup>3</sup> etc.) - <code>(before)</code> is default.</li>\n</ul>\n<p>Ranges are defined 10-20, 21-30 etc. (no measuring units - they get pulled from the custom set name).</p>\n<h2>Support</h2>\n<p>If anything goes wrong or you discover a bug:</p>\n<ol>\n  <li>report an issue on <a href=\"http://github.com/gerhard/glz_custom_fields/issues\" title=\"glz_custom_fields_public issues\" rel=\"external\">GitHub</a>.</li>\n  <li>look for help in the Textpatterb forum, <a href=\"http://forum.textpattern.com/viewtopic.php?id=23996\" rel=\"external\">glz_custom_fields thread</a>.</li>\n  <li>ping me via <a href=\"http://www.twitter.com/gerhardlazu\" rel=\"external\">Twitter</a>. I\'m using it around the clock, it\'s great for short messages!</li>\n  <li>drop a line to <a href=\"mailto:gerhard@lazu.co.uk?Subject:glz_custom_fields needs your attention\" rel=\"external\">gerhard@lazu.co.uk</a> (sometimes things can get really hectic on my end, please be patient).</li>\n</ol>','\n# glz_custom_fields v1.4.0-beta1\n# Unlimited, super special custom fields.\n#\n# Gerhard Lazu\n# http://gerhardlazu.com\n#\n# Contributors: Randy Levine, Sam Weiss, Luca Botti, Manfre, Vladimir Siljkovic, Julian Reisenberger, Steve Dickinson, Stef Dawson, Jean-Pol Dupont\n# Minimum requirements: Textpattern 4.5.1\n\n// Including helper files. If we can\'t have classes, we will use includes\n\n\n// -------------------------------------------------------------\n// messages that will be available throughout this plugin\nfunction glz_custom_fields_gTxt($get, $atts = array()) {\n  $lang = array(\n    \'no_name\'                => \'Ooops! <strong>custom set</strong> must have a name\',\n    \'deleted\'                => \'<strong>{custom_set_name}</strong> was deleted\',\n    \'reset\'                  => \'<strong>{custom_set_name}</strong> was reset\',\n    \'created\'                => \'<strong>{custom_set_name}</strong> was created\',\n    \'updated\'                => \'<strong>{custom_set_name}</strong> was updated\',\n    \'exists\'                 => \'Ooops! <strong>{custom_set_name}</strong> already exists\',\n    \'doesnt_exist\'           => \'Ooops! <strong>{custom_set_name}</strong> is not set\',\n    \'field_problems\'         => \'Ooops! <strong>{custom_set_name}</strong> has some problems. <a href=\"?event=glz_custom_fields\">Go fix it</a>.\',\n    \'custom_set\'             => \'Text Input\', # custom sets in TXP 4.2.0 are by type custom_set by default...\n    \'text_input\'             => \'Text Input\',\n    \'select\'                 => \'Select\',\n    \'multi-select\'           => \'Multi-Select\',\n    \'textarea\'               => \'Textarea\',\n    \'checkbox\'               => \'Checkbox\',\n    \'radio\'                  => \'Radio\',\n    \'date-picker\'            => \'Date Picker\',\n    \'time-picker\'            => \'Time Picker\',\n    \'custom-script\'          => \'Custom Script\',\n    \'type_not_supported\'     => \'Type not supported\',\n    \'no_do\'                  => \'Ooops! No action specified for method, abort.\',\n    \'not_specified\'          => \'Ooops! {what} is not specified\',\n    \'searchby_not_set\'       => \'<strong>searcby</strong> cannot be left blank\',\n    \'jquery_missing\'         => \'Upgrade TXP to at least 4.0.5 or put <strong>jquery.js</strong> in your /textpattern folder. <a href=\"http://jquery.com\" title=\"jQuery website\">jQuery website</a>\',\n    \'check_path\'             => \'Make sure all your paths are correct. Check <strong>config.php</strong> and the Admin tab (mainly Advanced).\',\n    \'no_articles_found\'      => \'No articles with custom fields have been found.\',\n    \'migration_success\'      => \'Migrating custom fields was successful\',\n    \'migration_skip\'         => \'<strong>custom_fields</strong> table already has data in it, migration skipped.\',\n    \'search_section_created\' => \'<strong>search</strong> section has been created\',\n    \'custom_sets_all_input\'  => \'All custom sets have been set back to input\',\n    \'preferences_updated\'    => \'Plugin preferences have been updated\',\n    \'not_found\'              => \'Ooops! <strong>{file}</strong> cannot be found, check path\',\n    \'not_callable\'           => \'Ooops! <strong>{function}()</strong> cannot be called. Ensure <strong>{file}</strong> can be executed.\'\n  );\n\n  $out = ( strstr($lang[$get], \"Ooops!\") ) ? // Ooops! would appear 0 in the string...\n      \"<span class=\\\"red\\\">{$lang[$get]}</span>\" :\n      $lang[$get];\n\n  return strtr($out, $atts);\n}\n\n\n\n\n\n// -------------------------------------------------------------\n// I would do this through a factory class, but some folks are still running PHP4...\nfunction glz_custom_fields_MySQL($do, $name=\'\', $table=\'\', $extra=\'\') {\n  if ( !empty($do) ) {\n    switch ( $do ) {\n      case \'all\':\n        return glz_all_custom_sets();\n        break;\n\n      case \'values\':\n        return glz_values_custom_field($name, $extra);\n        break;\n\n      case \'all_values\' :\n        return glz_all_existing_custom_values($name, $extra);\n        break;\n\n      case \'article_customs\':\n        return glz_article_custom_fields($name, $extra);\n        break;\n\n      case \'next_custom\':\n        return glz_next_empty_custom();\n        break;\n\n      case \'new\':\n        glz_new_custom_field($name, $table, $extra);\n        glz_custom_fields_update_count();\n        break;\n\n      case \'update\':\n        return glz_update_custom_field($name, $table, $extra);\n        break;\n\n      case \'reset\':\n        return glz_reset_custom_field($name, $table, $extra);\n        break;\n\n      case \'delete\':\n        glz_delete_custom_field($name, $table);\n        glz_custom_fields_update_count();\n        break;\n\n      case \'check_migration\':\n        return glz_check_migration();\n        break;\n\n      case \'mark_migration\':\n        return glz_mark_migration();\n        break;\n\n      case \'custom_set_exists\':\n        return glz_check_custom_set_exists($name);\n        break;\n\n      case \'plugin_preferences\':\n        return glz_plugin_preferences($name);\n        break;\n\n      case \'update_plugin_preferences\':\n        return glz_update_plugin_preferences($name);\n        break;\n    }\n  }\n  else\n    trigger_error(glz_custom_fields_gTxt(\'no_do\'));\n}\n\n\nfunction glz_all_custom_sets() {\n  $all_custom_sets = getRows(\"\n    SELECT\n      `name` AS custom_set,\n      `val` AS name,\n      `position`,\n      `html` AS type\n    FROM\n      `\".PFX.\"txp_prefs`\n    WHERE\n      `event`=\'custom\'\n    ORDER BY\n      `position`\n  \");\n\n  foreach ( $all_custom_sets as $custom_set ) {\n    $out[$custom_set[\'custom_set\']] = array(\n      \'name\'      => $custom_set[\'name\'],\n      \'position\'  => $custom_set[\'position\'],\n      \'type\'      => $custom_set[\'type\']\n    );\n  }\n\n  return $out;\n}\n\n\nfunction glz_values_custom_field($name, $extra) {\n  global $prefs;\n\n  if ( is_array($extra) ) {\n    extract($extra);\n\n    if ( !empty($name) ) {\n      switch ( $prefs[\'values_ordering\'] ) {\n        case \"ascending\":\n          $orderby = \"value ASC\";\n          break;\n        case \"descending\":\n          $orderby = \"value DESC\";\n          break;\n        default:\n          $orderby = \"id ASC\";\n      }\n\n\n      $arr_values = getThings(\"\n        SELECT\n          `value`\n        FROM\n          `\".PFX.\"custom_fields`\n        WHERE\n          `name` = \'{$name}\'\n        ORDER BY\n          {$orderby}\n      \");\n\n      if ( count($arr_values) > 0 ) {\n        // decode all special characters e.g. \", & etc. and use them for keys\n        foreach ( $arr_values as $key => $value )\n          $arr_values_formatted[glz_return_clean_default(htmlspecialchars($value))] = stripslashes($value);\n\n        // if this is a range, format ranges accordingly\n        return glz_format_ranges($arr_values_formatted, $custom_set_name);\n      }\n    }\n  }\n  else\n    trigger_error(glz_custom_fields_gTxt(\'not_specified\', array(\'{what}\' => \"extra attributes\")));\n}\n\n\nfunction glz_all_existing_custom_values($name, $extra) {\n  if ( is_array($extra) ) {\n    extract(lAtts(array(\n      \'custom_set_name\'   => \"\",\n      \'status\'            => 4\n    ),$extra));\n\n    // we might want to check the custom field values for all articles - think initial migration\n    $status_condition = ($status == 0) ? \"<> \'\'\" : \"= \'$status\'\";\n\n    if ( !empty($name) ) {\n      $arr_values = getThings(\"\n        SELECT DISTINCT\n          `$name`\n        FROM\n          `\".PFX.\"textpattern`\n        WHERE\n          `Status` $status_condition\n        AND\n          `$name` <> \'\'\n        ORDER BY\n          `$name`\n        \");\n\n      // trim all values\n      foreach ( $arr_values as $key => $value )\n        $arr_values[$key] = trim($value);\n\n      // DEBUG\n      // dmp($arr_values);\n\n      // prepare our array for checking. We need a single string to check for | instances - seems quickest.\n      $values_check = join(\'::\', $arr_values);\n\n      // DEBUG\n      // dmp($values_check);\n\n      // check if some of the values are multiple ones\n      if ( strstr($values_check, \'|\') ) {\n        // initialize $out\n        $out = array();\n        // put all values in an array\n        foreach ( $arr_values as $value ) {\n          $arr_values = explode(\'|\', $value);\n          $out = array_merge($out, $arr_values);\n        }\n        // keep only the unique ones\n        $out = array_unique($out);\n        // keys and values need to be the same\n        $out = php4_array_combine($out, $out);\n      }\n\n      // check if this is a range\n      else if ( strstr($values_check, \'-\') && strstr($custom_set_name, \'range\') )\n        // keys won\'t have the unit ($, £, m<sup>3</sup>, etc.) values will\n        $out = glz_format_ranges($arr_values, $custom_set_name);\n      else\n        // keys and values need to be the same\n        $out = php4_array_combine($arr_values, $arr_values);\n\n      // calling stripslashes on all array values\n      array_map(\'glz_array_stripslashes\', $out);\n\n      return $out;\n    }\n  }\n  else\n    trigger_error(glz_custom_fields_gTxt(\'not_specified\', array(\'{what}\' => \"extra attributes\")));\n}\n\n\nfunction glz_article_custom_fields($name, $extra) {\n  if ( is_array($extra) ) {\n    // see what custom fields we need to query for\n    foreach ( $extra as $custom => $custom_set )\n      $select[] = glz_custom_number($custom);\n\n    // prepare the select elements\n    $select = implode(\',\', $select);\n\n    $arr_article_customs = getRow(\"\n      SELECT\n        $select\n      FROM\n        `\".PFX.\"textpattern`\n      WHERE\n        `ID`=\'$name\'\n    \");\n\n    return $arr_article_customs;\n  }\n  else\n    trigger_error(glz_custom_fields_gTxt(\'not_specified\', array(\'{what}\' => \"extra attributes\")));\n}\n\n\nfunction glz_new_custom_field($name, $table, $extra) {\n  if ( is_array($extra) ) {\n    extract($extra);\n    // DRYing up, we\'ll be using this variable quiet often\n    $custom_set = ( isset($custom_field_number) ) ?\n      \"custom_{$custom_field_number}_set\" :\n      $custom_set;\n\n    if ( ($table == PFX.\"txp_prefs\") ) {\n      // if this is a new field without a position, use the $custom_field_number\n      if (empty($custom_set_position)) $custom_set_position = $custom_field_number;\n      $query = \"\n        INSERT INTO\n          `\".PFX.\"txp_prefs` (`prefs_id`, `name`, `val`, `type`, `event`, `html`, `position`)\n        VALUES\n          (\'1\', \'{$custom_set}\', \'{$name}\', \'1\', \'custom\', \'{$custom_set_type}\', {$custom_set_position})\n      \";\n    }\n    else if ( $table == PFX.\"txp_lang\" ) {\n      $query = \"\n        INSERT INTO\n          `\".PFX.\"txp_lang` (`id`,`lang`,`name`,`event`,`data`,`lastmod`)\n        VALUES\n          (\'\',\'{$lang}\',\'{$custom_set}\',\'prefs\',\'{$name}\',now())\n      \";\n    }\n    else if ( $table == PFX.\"textpattern\" ) {\n      $column_type = ( $custom_set_type == \"textarea\" ) ? \"TEXT\" : \"VARCHAR(255)\";\n      $query = \"\n        ALTER TABLE\n          `\".PFX.\"textpattern`\n        ADD\n          `custom_{$custom_field_number}` {$column_type} NOT NULL DEFAULT \'\'\n      \";\n    }\n    else if ( $table == PFX.\"custom_fields\" ) {\n      $arr_values = array_unique(array_filter(explode(\"\\r\\n\", $value), \'glz_arr_empty_values\'));\n\n      if ( is_array($arr_values) && !empty($arr_values) ) {\n        $size_arr_values = count($arr_values);\n        $insert = \'\';\n        foreach ( $arr_values as $key => $value ) {\n          // don\'t insert empty values\n          if ( !empty($value) )\n            // make sure special characters are escaped before inserting them in the database\n            $value = addslashes(addslashes(trim($value)));\n            // if this is the last value, query will have to be different\n            $insert .= ($key+1 != $size_arr_values ) ?\n              \"(\'{$custom_set}\',\'{$value}\'), \" :\n              \"(\'{$custom_set}\',\'{$value}\')\";\n        }\n        $query = \"\n          INSERT INTO\n            `\".PFX.\"custom_fields` (`name`,`value`)\n          VALUES\n            {$insert}\n        \";\n      }\n    }\n    if ( isset($query) && !empty($query) )\n      safe_query($query);\n  }\n  else\n    trigger_error(glz_custom_fields_gTxt(\'not_specified\', array(\'{what}\' => \"extra attributes\")));\n}\n\n\nfunction glz_update_custom_field($name, $table, $extra) {\n  if ( is_array($extra) )\n    extract($extra);\n\n  if ( ($table == PFX.\"txp_prefs\") ) {\n    safe_query(\"\n      UPDATE\n        `\".PFX.\"txp_prefs`\n      SET\n        `val` = \'{$custom_set_name}\',\n        `html` = \'{$custom_set_type}\',\n        `position` = \'{$custom_set_position}\'\n      WHERE\n        `name`=\'{$name}\'\n    \");\n  }\n  else if ( ($table == PFX.\"textpattern\") ) {\n    $column_type = ( $custom_set_type == \"textarea\" ) ? \"TEXT\" : \"VARCHAR(255)\";\n    safe_query(\"\n      ALTER TABLE\n        `\".PFX.\"textpattern`\n      MODIFY\n        `{$custom_field}` {$column_type} NOT NULL DEFAULT \'\'\n    \");\n  }\n}\n\n\nfunction glz_reset_custom_field($name, $table, $extra) {\n  if ( is_array($extra) )\n    extract($extra);\n\n  if ( $table == PFX.\"txp_prefs\" ) {\n    safe_query(\"\n      UPDATE\n        `\".PFX.\"txp_prefs`\n      SET\n        `val` = \'\',\n        `html` = \'text_input\'\n      WHERE\n        `name`=\'{$name}\'\n    \");\n  }\n  else if ( $table == PFX.\"textpattern\" ) {\n    safe_query(\"UPDATE `\".PFX.\"textpattern` SET `{$name}` = \'\'\");\n    safe_query(\"ALTER TABLE `\".PFX.\"textpattern` MODIFY `{$custom_field}` VARCHAR(255) NOT NULL DEFAULT \'\'\");\n  }\n}\n\n\nfunction glz_delete_custom_field($name, $table) {\n  // remember, custom fields under 10 MUST NOT be deleted\n  if ( glz_custom_digit($name) > 10 ) {\n    if ( in_array($table, array(PFX.\"txp_prefs\", PFX.\"txp_lang\", PFX.\"custom_fields\")) ) {\n      $query = \"\n        DELETE FROM\n          `{$table}`\n        WHERE\n          `name`=\'{$name}\'\n      \";\n    }\n    else if ( $table == PFX.\"textpattern\" ) {\n      $query = \"\n        ALTER TABLE\n          `\".PFX.\"textpattern`\n        DROP\n          `{$name}`\n      \";\n    }\n    safe_query($query);\n  }\n  else {\n    if ( $table == PFX.\"txp_prefs\" )\n      glz_custom_fields_MySQL(\"reset\", $name, $table);\n    else if ( ($table == PFX.\"custom_fields\") ) {\n      safe_query(\"\n        DELETE FROM\n          `{$table}`\n        WHERE\n          `name`=\'{$name}\'\n      \");\n    }\n  }\n}\n\n\n// -------------------------------------------------------------\n// checks if custom_fields table has any values in it\nfunction glz_check_migration() {\n  return getThing(\"\n    SELECT\n      COUNT(*)\n    FROM\n      `\".PFX.\"custom_fields`\n  \");\n}\n\n\n// -------------------------------------------------------------\n// make a note of glz_custom_fields migration in txp_prefs\nfunction glz_mark_migration() {\n  set_pref(\"migrated\", \"1\", \"glz_custom_f\");\n}\n\n\n// -------------------------------------------------------------\n// check if one of the special custom fields exists\nfunction glz_check_custom_set_exists($name) {\n  if ( !empty($name) ) {\n    return getThing(\"\n      SELECT\n        `name`, `val`\n      FROM\n        `\".PFX.\"txp_prefs`\n      WHERE\n        `html` = \'{$name}\'\n      AND\n        `name` LIKE \'custom_%\'\n      ORDER BY\n        `name`\n    \");\n  }\n}\n\n\n// -------------------------------------------------------------\n// updates max_custom_fields\nfunction glz_custom_fields_update_count() {\n  set_pref(\'max_custom_fields\', safe_count(\"txp_prefs\", \"event=\'custom\'\"));\n}\n\n// -------------------------------------------------------------\n// returns all plugin preferences\nfunction glz_plugin_preferences($arr_preferences) {\n	$r = safe_rows_start(\'name, val\', \'txp_prefs\', \"event = \'glz_custom_f\'\");\n	if ($r) {\n		while ($a = nextRow($r)) {\n			$out[$a[\'name\']] = stripslashes($a[\'val\']);\n		}\n	}\n  return $out;\n}\n\n// -------------------------------------------------------------\n// updates all plugin preferences\nfunction glz_update_plugin_preferences($arr_preferences) {\n  // die(dmp($arr_preferences));\n  foreach ($arr_preferences as $preference => $value) {\n    set_pref($preference, addslashes(addslashes(trim($value))), \"glz_custom_f\", 10); // 10 so that it won\'t appear under TXP\'s prefs tab\n  }\n}\n\n\n\n\n\n\n// -------------------------------------------------------------\n// goes through all custom sets, returns the first one which is not being used\nfunction glz_next_empty_custom() {\n  global $all_custom_sets;\n\n  foreach ( $all_custom_sets as $custom => $custom_set ) {\n    if ( empty($custom_set[\'name\']) )\n      return $custom;\n  }\n}\n\n\n// -------------------------------------------------------------\n// edit/delete buttons in custom_fields table require a form each\nfunction glz_form_buttons($action, $value, $custom_set, $custom_set_name, $custom_set_type, $custom_set_position, $onsubmit=\'\') {\n  $onsubmit = ($onsubmit) ?\n    \'onsubmit=\"\'.$onsubmit.\'\"\' :\n    \'\';\n\n  return\n    \'<form method=\"post\" action=\"index.php\" \'.$onsubmit.\'>\n      <input name=\"custom_set\" value=\"\'.$custom_set.\'\" type=\"hidden\" />\n      <input name=\"custom_set_name\" value=\"\'.$custom_set_name.\'\" type=\"hidden\" />\n      <input name=\"custom_set_type\" value=\"\'.$custom_set_type.\'\" type=\"hidden\" />\n      <input name=\"custom_set_position\" value=\"\'.$custom_set_position.\'\" type=\"hidden\" />\n      <input name=\"event\" value=\"glz_custom_fields\" type=\"hidden\" />\n      <input name=\"\'.$action.\'\" value=\"\'.$value.\'\" type=\"submit\" />\n    </form>\';\n}\n\n\n// -------------------------------------------------------------\n// the types our custom fields can take\nfunction glz_custom_set_types() {\n  return array(\n    \'normal\' => array(\n      \'text_input\',\n      \'checkbox\',\n      \'radio\',\n      \'select\',\n      \'multi-select\',\n      \'textarea\'),\n    \'special\' => array(\n      \'date-picker\',\n      \'time-picker\',\n      \'custom-script\')\n  );\n}\n\n\n// -------------------------------------------------------------\n// outputs only custom fields that have been set, i.e. have a name assigned to them\nfunction glz_check_custom_set($all_custom_sets, $step) {\n  $out = array();\n\n  foreach ($all_custom_sets as $key => $custom_field) {\n    if (!empty($custom_field[\'name\'])) {\n      if ( ($step == \"body\") && ($custom_field[\'type\'] == \"textarea\") )\n        $out[$key] = $custom_field;\n      else if ( ($step == \"custom_fields\") && ($custom_field[\'type\'] != \"textarea\") ) {\n        $out[$key] = $custom_field;\n      }\n    }\n  }\n\n  return $out;\n}\n\n\n// -------------------------------------------------------------\n// removes { } from values which are marked as default\nfunction glz_return_clean_default($value) {\n  $pattern = \"/^.*\\{(.*)\\}.*/\";\n\n  return preg_replace($pattern, \"$1\", $value);\n}\n\n\n// -------------------------------------------------------------\n// return our default value from all custom_field values\nfunction glz_default_value($all_values) {\n  if ( is_array($all_values) ) {\n    preg_match(\"/(\\{.*\\})/\", join(\" \", $all_values), $default);\n    return ( (!empty($default) && $default[0]) ? $default[0] : \'\');\n  }\n}\n\n\n// -------------------------------------------------------------\n// calling the above function in an array context\nfunction glz_clean_default_array_values(&$value) {\n  $value = glz_return_clean_default($value);\n}\n\n\n// -------------------------------------------------------------\n// custom_set without \"_set\" e.g. custom_1_set => custom_1\n// or custom set formatted for IDs e.g. custom-1\nfunction glz_custom_number($custom_set, $delimiter=\"_\") {\n  $custom_field = substr($custom_set, 0, -4);\n\n  if ($delimiter != \"_\")\n    $custom_field = str_replace(\"_\", $delimiter, $custom_field);\n\n  return $custom_field;\n}\n\n\n// -------------------------------------------------------------\n// custom_set digit e.g. custom_1_set => 1\nfunction glz_custom_digit($custom_set) {\n  $out = explode(\"_\", $custom_set);\n  // $out[0] will always be custom\n  return $out[1];\n}\n\n\n// -------------------------------------------------------------\n// removes empty values from arrays - used for new custom fields\nfunction glz_arr_empty_values($value) {\n  if ( !empty($value) )\n    return $value;\n}\n\n\n// -------------------------------------------------------------\n// returns the custom set from a custom set name e.g. \"Rating\" gives us custom_1_set\nfunction glz_get_custom_set($value) {\n  global $all_custom_sets;\n\n  // go through all custom fields and see if the one we\'re looking for exists\n  foreach ( $all_custom_sets as $custom => $custom_set ) {\n    if ( $custom_set[\'name\'] == $value )\n      return $custom;\n  }\n  // if it doesn\'t, return error message\n  trigger_error(glz_custom_fields_gTxt(\'doesnt_exist\', array(\'{custom_set_name}\' => $value)));\n}\n\n\n// -------------------------------------------------------------\n// get the article ID, EVEN IF it\'s newly saved\nfunction glz_get_article_id() {\n  return ( !empty($GLOBALS[\'ID\']) ?\n    $GLOBALS[\'ID\'] :\n    gps(\'ID\') );\n}\n\n\n// -------------------------------------------------------------\n// helps with range formatting - just DRY\nfunction glz_format_ranges($arr_values, $custom_set_name) {\n  //initialize $out\n  $out = \'\';\n  foreach ( $arr_values as $key => $value ) {\n    $out[$key] = ( strstr($custom_set_name, \'range\') ) ?\n      glz_custom_fields_range($value, $custom_set_name) :\n      $value;\n  }\n  return $out;\n}\n\n\n// -------------------------------------------------------------\n// acts as a callback for the above function\nfunction glz_custom_fields_range($custom_value, $custom_set_name) {\n  // last part of the string will be the range unit (e.g. $, &pound;, m<sup>3</sup> etc.)\n  $nomenclature = array_pop(explode(\' \', $custom_set_name));\n\n  // see whether range unit should go after\n  if ( strstr($nomenclature, \'(after)\') ) {\n    // trim \'(after)\' from the measuring unit\n    $nomenclature = substr($nomenclature, 0, -7);\n    $after = 1;\n  }\n\n  // check whether it\'s a range or single value\n  $arr_value = explode(\'-\', $custom_value);\n  if ( is_array($arr_value) ) {\n    // initialize $out\n    $out = \'\';\n    foreach ( $arr_value as $value ) {\n      // check whether nomenclature goes before or after\n      $out[] = ( !isset($after) ) ?\n        $nomenclature.number_format($value) :\n        number_format($value).$nomenclature;\n    }\n    return implode(\'-\', $out);\n  }\n  // our range is a single value\n  else {\n    // check whether nomenclature goes before or after\n    return ( !isset($after) ) ?\n      $nomenclature.number_format($value) :\n      number_format($value).$nomenclature;\n  }\n}\n\n\n// -------------------------------------------------------------\n// returns the next available number for custom set\nfunction glz_custom_next($arr_custom_sets) {\n  $arr_extra_custom_sets = array();\n  foreach ( array_keys($arr_custom_sets) as $extra_custom_set) {\n    $arr_extra_custom_sets[] = glz_custom_digit($extra_custom_set);\n  }\n  // order the array\n  sort($arr_extra_custom_sets);\n\n  for ( $i=0; $i < count($arr_extra_custom_sets); $i++ ) {\n    if ($arr_extra_custom_sets[$i] > $i+1)\n      return $i+1;\n  }\n\n  return count($arr_extra_custom_sets)+1;\n}\n\n\n// -------------------------------------------------------------\n// checks if the custom field name isn\'t already taken\nfunction glz_check_custom_set_name($arr_custom_fields, $custom_set_name, $custom_set=\'\') {\n  foreach ( $arr_custom_fields as $custom => $arr_custom_set ) {\n    if ( ($custom_set_name == $arr_custom_set[\'name\']) && (!empty($custom_set) && $custom_set != $custom) )\n      return TRUE;\n  }\n\n  return FALSE;\n}\n\n\n// -------------------------------------------------------------\n// formats the custom set output based on its type\nfunction glz_format_custom_set_by_type($custom, $custom_id, $custom_set_type, $arr_custom_field_values, $custom_value = \"\", $default_value = \"\") {\n  if ( is_array($arr_custom_field_values) )\n    $arr_custom_field_values = array_map(\'glz_array_stripslashes\', $arr_custom_field_values);\n\n  switch ( $custom_set_type ) {\n    // these are the normal custom fields\n    case \"text_input\":\n      return array(\n        fInput(\"text\", $custom, $custom_value, \"edit\", \"\", \"\", \"22\", \"\", $custom_id),\n        \'glz_custom_field\'\n      );\n\n    case \"select\":\n      return array(\n        glz_selectInput($custom, $custom_id, $arr_custom_field_values, $custom_value, $default_value),\n        \'glz_custom_select_field\'\n      );\n\n    case \"multi-select\":\n      return array(\n        glz_selectInput($custom, $custom_id, $arr_custom_field_values, $custom_value, $default_value, 1),\n        \'glz_custom_multi-select_field\'\n      );\n\n    case \"checkbox\":\n      return array(\n        glz_checkbox($custom, $arr_custom_field_values, $custom_value, $default_value),\n        \'glz_custom_checkbox_field\'\n      );\n\n    case \"radio\":\n      return array(\n        glz_radio($custom, $custom_id, $arr_custom_field_values, $custom_value, $default_value),\n        \'glz_custom_radio_field\'\n      );\n\n    case \"textarea\":\n      return array(\n        text_area($custom, 100, 500, $custom_value, $custom_id),\n        \'glz_text_area_field\'\n      );\n\n    // here start the special custom fields, might need to refactor the return, starting to repeat itself\n    case \"date-picker\":\n      return array(\n        fInput(\"text\", $custom, $custom_value, \"edit date-picker\", \"\", \"\", \"22\", \"\", $custom_id),\n        \'glz_custom_date-picker_field clearfix\'\n      );\n\n    case \"time-picker\":\n      return array(\n        fInput(\"text\", $custom, $custom_value, \"edit time-picker\", \"\", \"\", \"22\", \"\", $custom_id),\n        \'glz_custom_time-picker_field\'\n      );\n\n    case \"custom-script\":\n      global $custom_scripts_path;\n      return array(\n        glz_custom_script($custom_scripts_path.\"/\".reset($arr_custom_field_values), $custom, $custom_id, $custom_value),\n        \'glz_custom_field_script\'\n      );\n\n    // a type has been passed that is not supported yet\n    default:\n      return array(\n        glz_custom_fields_gTxt(\'type_not_supported\'),\n        \'glz_custom_field\'\n      );\n  }\n}\n\n\n// -------------------------------------------------------------\n// had to duplicate the default selectInput() because trimming \\t and \\n didn\'t work + some other mods & multi-select\nfunction glz_selectInput($name = \'\', $id = \'\', $arr_values = \'\', $custom_value = \'\', $default_value = \'\', $multi = \'\') {\n  if ( is_array($arr_values) ) {\n    global $prefs;\n    $out = array();\n\n    // if there is no custom_value coming from the article, let\'s use our default one\n    if ( empty($custom_value) )\n      $custom_value = $default_value;\n\n    foreach ($arr_values as $key => $value) {\n      $selected = glz_selected_checked(\'selected\', $key, $custom_value, $default_value);\n      $out[] = \"<option value=\\\"$key\\\"{$selected}>$value</option>\";\n    }\n\n    // we\'ll need the extra attributes as well as a name that will produce an array\n    if ($multi) {\n      $multi = \' multiple=\"multiple\" size=\"\'.$prefs[\'multiselect_size\'].\'\"\';\n      $name .= \"[]\";\n    }\n\n    return \"<select id=\\\"\".glz_idify($id).\"\\\" name=\\\"$name\\\" class=\\\"list\\\"$multi>\".\n      ($default_value ? \'\' : \"<option value=\\\"\\\"$selected>&nbsp;</option>\").\n      ( $out ? join(\'\', $out) : \'\').\n      \"</select>\";\n  }\n  else\n    return glz_custom_fields_gTxt(\'field_problems\', array(\'{custom_set_name}\' => $name));\n}\n\n\n// -------------------------------------------------------------\n// had to duplicate the default checkbox() to keep the looping in here and check against existing value/s\nfunction glz_checkbox($name = \'\', $arr_values = \'\', $custom_value = \'\', $default_value = \'\') {\n  if ( is_array($arr_values) ) {\n    $out = array();\n\n    // if there is no custom_value coming from the article, let\'s use our default one\n    if ( empty($custom_value) )\n      $custom_value = $default_value;\n\n    foreach ( $arr_values as $key => $value ) {\n      $checked = glz_selected_checked(\'checked\', $key, $custom_value);\n\n      // Putting an additional span around the input and label combination so the two can be floated together as a pair for left-right, left-right,... arrangement of checkboxes and radio buttons. Thanks Julian!\n      $out[] = \"<span><input type=\\\"checkbox\\\" name=\\\"{$name}[]\\\" value=\\\"$key\\\" class=\\\"checkbox\\\" id=\\\"\".glz_idify($key).\"\\\"{$checked} /><label for=\\\"\".glz_idify($key).\"\\\">$value</label></span><br />\";\n    }\n\n    return join(\'\', $out);\n  }\n  else\n    return glz_custom_fields_gTxt(\'field_problems\', array(\'{custom_set_name}\' => $name));\n}\n\n\n// -------------------------------------------------------------\n// had to duplicate the default radio() to keep the looping in here and check against existing value/s\nfunction glz_radio($name = \'\', $id = \'\', $arr_values = \'\', $custom_value = \'\', $default_value = \'\') {\n  if ( is_array($arr_values) ) {\n    $out = array();\n\n    // if there is no custom_value coming from the article, let\'s use our default one\n    if ( empty($custom_value) )\n      $custom_value = $default_value;\n\n    foreach ( $arr_values as $key => $value ) {\n      $checked = glz_selected_checked(\'checked\', $key, $custom_value);\n\n      // Putting an additional span around the input and label combination so the two can be floated together as a pair for left-right, left-right,... arrangement of checkboxes and radio buttons. Thanks Julian!\n      $out[] = \"<span><input type=\\\"radio\\\" name=\\\"$name\\\" value=\\\"$key\\\" class=\\\"radio\\\" id=\\\"{$id}_\".glz_idify($key).\"\\\"{$checked} /><label for=\\\"{$id}_\".glz_idify($key).\"\\\">$value</label></span><br />\";\n    }\n\n    return join(\'\', $out);\n  }\n  else\n    return glz_custom_fields_gTxt(\'field_problems\', array(\'{custom_set_name}\' => $name));\n}\n\n\n// -------------------------------------------------------------\n// checking if this custom field has selected or checked values\nfunction glz_selected_checked($nomenclature, $value, $custom_value = \'\') {\n  // we\'re comparing against a key which is a \"clean\" value\n  $custom_value = htmlspecialchars($custom_value);\n\n  // make an array if $custom_value contains multiple values\n  if ( strpos($custom_value, \'|\') )\n    $arr_custom_value = explode(\'|\', $custom_value);\n\n  if ( isset($arr_custom_value) )\n    $out = ( in_array($value, $arr_custom_value) ) ? \" $nomenclature=\\\"$nomenclature\\\"\" : \"\";\n  else\n    $out = ($value == $custom_value) ? \" $nomenclature=\\\"$nomenclature\\\"\" : \"\";\n\n  return $out;\n}\n\n\n//-------------------------------------------------------------\n// button gets more consistent styling across browsers rather than input type=\"submit\"\n// included in this plugin until in makes it into TXP - if that ever happens...\nfunction glz_fButton($type, $name, $contents=\'Submit\', $value, $class=\'\', $id=\'\', $title=\'\', $onClick=\'\', $disabled = false) {\n  $o  = \'<button type=\"\'.$type.\'\" name=\"\'.$name.\'\"\';\n  $o .= \' value=\"\'.htmlspecialchars($value).\'\"\';\n  $o .= ($class)    ? \' class=\"\'.$class.\'\"\' : \'\';\n  $o .= ($id)       ? \' id=\"\'.$id.\'\"\' : \'\';\n  $o .= ($title)    ? \' title=\"\'.$title.\'\"\' : \'\';\n  $o .= ($onClick)  ? \' onclick=\"\'.$onClick.\'\"\' : \'\';\n  $o .= ($disabled) ? \' disabled=\"disabled\"\' : \'\';\n  $o .= \'>\';\n  $o .= $contents;\n  $o .= \'</button>\';\n  return $o;\n}\n\n\n//-------------------------------------------------------------\n// evals a PHP script and displays output right under the custom field label\nfunction glz_custom_script($script, $custom, $custom_id, $custom_value) {\n  if ( is_file($script) ) {\n    include_once($script);\n    $custom_function = basename($script, \".php\");\n    if ( is_callable($custom_function) ) {\n      return call_user_func_array($custom_function, array($custom, $custom_id, $custom_value));\n    }\n    else\n      return glz_custom_fields_gTxt(\'not_callable\', array(\'{function}\' => $custom_function, \'{file}\' => $script));\n  }\n  else\n    return glz_custom_fields_gTxt(\'not_found\', array(\'{file}\' => $script));\n\n}\n\n\n// -------------------------------------------------------------\n// PHP4 doesn\'t come with array_combine... Thank you redbot!\nfunction php4_array_combine($keys, $values) {\n  $result = array(); // initializing the array\n\n  foreach ( array_map(null, $keys, $values) as $pair ) {\n    $result[$pair[0]] = $pair[1];\n  }\n\n  return $result;\n}\n\n\n// -------------------------------------------------------------\n// converts all values into id safe ones\nfunction glz_idify($value) {\n  $patterns[0] = \"/\\s/\";\n  $replacements[0] = \"-\";\n  $patterns[1] = \"/[^a-zA-Z0-9\\-]/\";\n  $replacements[1] = \"\";\n\n  return preg_replace($patterns, $replacements, strtolower($value));\n}\n\n\n// -------------------------------------------------------------\n// strips slashes in arrays, used in conjuction with e.g. array_map\nfunction glz_array_stripslashes(&$value) {\n  return stripslashes($value);\n}\n\n\n// -------------------------------------------------------------\n// returns all sections/categories that are searchable\nfunction glz_all_searchable_sections_categories($type) {\n  $type = (in_array($type, array(\'category\', \'section\')) ? $type : \'section\');\n  $condition = \"\";\n\n  if ( $type == \"section\" )\n    $condition .= \"searchable=\'1\'\";\n  else\n    $condition .= \"name <> \'root\' AND type=\'article\'\";\n\n  $result = safe_rows(\'*\', \"txp_{$type}\", $condition);\n\n  $out = array();\n  foreach ($result as $value) {\n    $out[$value[\'name\']] = $value[\'title\'];\n  }\n\n  return $out;\n}\n\n// -------------------------------------------------------------\n// will leave only [A-Za-z0-9 ] in the string\nfunction glz_clean_string($string) {\n  if ($string)\n    return preg_replace(\'/[^A-Za-z0-9\\s\\_\\-]/\', \'\', $string);\n}\n\n\n\n\n\n// -------------------------------------------------------------\n// replaces the default custom fields under write tab\nfunction glz_custom_fields_replace($event, $step, $data, $rs) {\n  global $all_custom_sets, $date_picker;\n  // get all custom fields & keep only the ones which are set, filter by step\n  $arr_custom_fields = glz_check_custom_set($all_custom_sets, $step);\n\n  // DEBUG\n  // dmp($arr_custom_fields);\n\n  $out = \' \';\n\n  if ( is_array($arr_custom_fields) && !empty($arr_custom_fields) ) {\n    // get all custom fields values for this article\n    $arr_article_customs = glz_custom_fields_MySQL(\"article_customs\", glz_get_article_id(), \'\', $arr_custom_fields);\n\n    // DEBUG\n    // dmp($arr_article_customs);\n\n    if ( is_array($arr_article_customs) )\n      extract($arr_article_customs);\n\n    // let\'s see which custom fields are set\n    foreach ( $arr_custom_fields as $custom => $custom_set ) {\n      // get all possible/default value(s) for this custom set from custom_fields table\n      $arr_custom_field_values = glz_custom_fields_MySQL(\"values\", $custom, \'\', array(\'custom_set_name\' => $custom_set[\'name\']));\n\n      // DEBUG\n      // dmp($arr_custom_field_values);\n\n      //custom_set formatted for id e.g. custom_1_set => custom-1 - don\'t ask...\n      $custom_id = glz_custom_number($custom, \"-\");\n      //custom_set without \"_set\" e.g. custom_1_set => custom_1\n      $custom = glz_custom_number($custom);\n\n      // if current article holds no value for this custom field and we have no default value, make it empty\n      $custom_value = (!empty($$custom) ? $$custom : \'\');\n      // DEBUG\n      // dmp(\"custom_value: {$custom_value}\");\n\n      // check if there is a default value\n      // if there is, strip the { }\n      $default_value = glz_return_clean_default(glz_default_value($arr_custom_field_values));\n      // DEBUG\n      // dmp(\"default_value: {$default_value}\");\n\n      // now that we\'ve found our default, we need to clean our custom_field values\n      if (is_array($arr_custom_field_values))\n        array_walk($arr_custom_field_values, \"glz_clean_default_array_values\");\n\n      // DEBUG\n      // dmp($arr_custom_field_values);\n\n      // the way our custom field value is going to look like\n      list($custom_set_value, $custom_class) = glz_format_custom_set_by_type($custom, $custom_id, $custom_set[\'type\'], $arr_custom_field_values, $custom_value, $default_value);\n\n      // DEBUG\n      // dmp($custom_set_value);\n\n      $out .= graf(\n        \"<label for=\\\"$custom_id\\\">{$custom_set[\'name\']}</label><br />$custom_set_value\", \" class=\\\"$custom_class\\\"\"\n      );\n    }\n  }\n\n  // DEBUG\n  // dmp($out);\n\n  // if we\'re writing textarea custom fields, we need to include the excerpt as well\n  if ($step == \"body\") {\n    $out = $data.$out;\n  }\n\n  return $out;\n}\n\n\n// -------------------------------------------------------------\n// prep our custom fields for the db (watch out for multi-selects, checkboxes & radios, they might have multiple values)\nfunction glz_custom_fields_before_save() {\n  // keep only the custom fields\n  foreach ($_POST as $key => $value) {\n    //check for custom fields with multiple values e.g. arrays\n    if ( strstr($key, \'custom_\') && is_array($value) ) {\n      $value = implode($value, \'|\');\n      // feed our custom fields back into the $_POST\n      $_POST[$key] = $value;\n    }\n  }\n  // DEBUG\n  // dmp($_POST);\n}\n\n\n// -------------------------------------------------------------\n// adds the css & js we need\nfunction glz_custom_fields_css_js() {\n  global $glz_notice, $date_picker, $time_picker, $prefs;\n\n  // here come our custom stylesheetz\n  $css = \'<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"http://\'.$prefs[\'siteurl\'].\'/plugins/glz_custom_fields/glz_custom_fields.css\">\'.n;\n  // and here come our javascriptz\n  $js = \'\';\n  if ( $date_picker ) {\n    $css .= \'<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"\'.$prefs[\'datepicker_url\'].\'/datePicker.css\" />\'.n;\n    foreach (array(\'date.js\', \'datePicker.js\') as $file) {\n      $js .= \'<script type=\"text/javascript\" src=\"\'.$prefs[\'datepicker_url\'].\"/\".$file.\'\"></script>\'.n;\n    }\n    $js .= <<<EOF\n<script type=\"text/javascript\">\n$(function() {\n  if ($(\".date-picker\").length > 0) {\n    try {\n      Date.firstDayOfWeek = {$prefs[\'datepicker_first_day\']};\n      Date.format = \'{$prefs[\'datepicker_format\']}\';\n      Date.fullYearStart = \'19\';\n      $(\".date-picker\").datePicker({startDate:\'{$prefs[\'datepicker_start_date\']}\'});\n    } catch(err) {\n      $(\'#messagepane\').html(\'<a href=\"http://{$prefs[\'siteurl\']}/textpattern/?event=plugin_prefs.glz_custom_fields\">Fix the DatePicker jQuery plugin</a>\');\n    }\n  }\n});\n</script>\nEOF;\n  }\n  if ( $time_picker ) {\n    $css .= \'<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"\'.$prefs[\'timepicker_url\'].\'/timePicker.css\" />\'.n;\n    $js .= \'<script type=\"text/javascript\" src=\"\'.$prefs[\'timepicker_url\'].\'/timePicker.js\"></script>\'.n;\n    $js .= <<<EOF\n<script type=\"text/javascript\">\n$(function() {\n  if ($(\".time-picker\").length > 0) {\n    try {\n      $(\".time-picker\").timePicker({\n        startTime:\'{$prefs[\'timepicker_start_time\']}\',\n        endTime: \'{$prefs[\'timepicker_end_time\']}\',\n        step: {$prefs[\'timepicker_step\']},\n        show24Hours: {$prefs[\'timepicker_show_24\']}\n      });\n    } catch(err) {\n      $(\'#messagepane\').html(\'<a href=\"http://{$prefs[\'siteurl\']}/textpattern/?event=plugin_prefs.glz_custom_fields\">Fix the TimePicker jQuery plugin</a>\');\n    }\n  }\n});\n</script>\nEOF;\n  }\n  $js .= \'<script type=\"text/javascript\" src=\"http://\'.$prefs[\'siteurl\'].\'/plugins/glz_custom_fields/glz_custom_fields.js\"></script>\';\n\n  // displays the notices we have gathered throughout the entire plugin\n  if ( count($glz_notice) > 0 ) {\n    // let\'s turn our notices into a string\n    $glz_notice = join(\"<br />\", array_unique($glz_notice));\n\n    $js .= \'<script type=\"text/javascript\">\n    <!--//--><![CDATA[//><!--\n\n    $(document).ready(function() {\n      // add our notices\n      $(\"#messagepane\").html(\\\'\'.$glz_notice.\'\\\');\n    });\n    //--><!]]>\n    </script>\';\n  }\n\n  echo $js.n.t.$css.n.t;\n}\n\n\n// -------------------------------------------------------------\n// we are setting up the pre-requisite values for glz_custom_fields\nfunction before_glz_custom_fields() {\n  // we will be reusing these globals across the whole plugin\n  global $all_custom_sets, $glz_notice, $prefs, $date_picker, $time_picker;\n\n  // glz_notice collects all plugin notices\n  $glz_notice = array();\n\n  // let\'s get all custom field sets from prefs\n  $all_custom_sets = glz_custom_fields_MySQL(\"all\");\n\n  // let\'s see if we have a date-picker custom field (first of the special ones)\n  $date_picker = glz_custom_fields_MySQL(\"custom_set_exists\", \"date-picker\");\n\n  // let\'s see if we have a time-picker custom field\n  $time_picker = glz_custom_fields_MySQL(\"custom_set_exists\", \"time-picker\");\n}\n\n\n// -------------------------------------------------------------\n// bootstrapping routines, run through plugin_lifecycle\nfunction glz_custom_fields_install() {\n  global $all_custom_sets, $glz_notice, $prefs;\n\n  // default custom fields are set to custom_set\n  // need to change this because it confuses our set_types()\n  safe_query(\"\n    UPDATE\n      `\".PFX.\"txp_prefs`\n    SET\n      `html` = \'text_input\'\n    WHERE\n      `event` = \'custom\'\n    AND\n      `html` = \'custom_set\'\n  \");\n\n  // set plugin preferences\n  $arr_plugin_preferences = array(\n    \'values_ordering\'       => \"custom\",\n    \'multiselect_size\'      => \"5\",\n    \'datepicker_url\'        => hu.\"plugins/glz_custom_fields/jquery.datePicker\",\n    \'datepicker_format\'     => \"dd/mm/yyyy\",\n    \'datepicker_first_day\'  => 1,\n    \'datepicker_start_date\' => \"01/01/1990\",\n    \'timepicker_url\'        => hu.\"plugins/glz_custom_fields/jquery.timePicker\",\n    \'timepicker_start_time\' => \"00:00\",\n    \'timepicker_end_time\'   => \"23:30\",\n    \'timepicker_step\'       => 30,\n    \'timepicker_show_24\'    => true,\n    \'custom_scripts_path\'   => $prefs[\'path_to_site\'].\"/plugins/glz_custom_fields\"\n  );\n  glz_custom_fields_MySQL(\"update_plugin_preferences\", $arr_plugin_preferences);\n\n  // let\'s update plugin preferences, make sure they won\'t appear under Admin > Preferences\n  safe_query(\"\n    UPDATE\n      `\".PFX.\"txp_prefs`\n    SET\n      `type` = \'10\'\n    WHERE\n      `event` = \'glz_custom_f\'\n  \");\n\n  // if we don\'t have a search section, let\'s create it because we\'ll need it when searching by custom fields\n  if( !getRow(\"SELECT name FROM `\".PFX.\"txp_section` WHERE name=\'search\'\") ) {\n    safe_query(\"\n      INSERT INTO\n        `\".PFX.\"txp_section` (`name`, `page`, `css`, `in_rss`, `on_frontpage`, `searchable`, `title`)\n      VALUES\n        (\'search\', \'default\', \'default\', \'0\', \'0\', \'0\', \'Search\')\n    \");\n    // add a notice that search section has bee created\n    $glz_notice[] = glz_custom_fields_gTxt(\"search_section_created\");\n  }\n\n  // if we don\'t have the custom_fields table, let\'s create it\n  if ( !getRows(\"SHOW TABLES LIKE \'\".PFX.\"custom_fields\'\") ) {\n    safe_query(\"\n      CREATE TABLE `\".PFX.\"custom_fields` (\n        `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n        `name` varchar(255) NOT NULL default \'\',\n        `value` varchar(255) NOT NULL default \'\',\n        PRIMARY KEY (id),\n        KEY (`name`)\n      ) ENGINE=MyISAM\n    \");\n  }\n  else {\n    // if there isn\'t and id column, add it\n    if ( !getRows(\"SHOW COLUMNS FROM \".PFX.\"custom_fields LIKE \'id\'\") ) {\n      safe_query(\"\n        ALTER TABLE `\".PFX.\"custom_fields`\n          ADD `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT KEY\n      \");\n    }\n\n   // if we have definitely migrated using this function, skip everything\n   if ( isset($prefs[\'migrated\']) )\n     return;\n   // abort the migration if there are values in custom_fields table, we don\'t want to overwrite anything\n   else if ( glz_custom_fields_MySQL(\'check_migration\') > 0 ) {\n     // DEBUG\n     // dmp(glz_custom_fields_MySQL(\'check_migration\'));\n     $glz_notice[] = glz_custom_fields_gTxt(\"migration_skip\");\n     // make a note of this migration in txp_prefs\n     glz_custom_fields_MySQL(\'mark_migration\');\n     return;\n   }\n\n   // go through all values in custom field columns in textpattern table one by one\n   foreach ($all_custom_sets as $custom => $custom_set) {\n     // check only for custom fields that have been set\n     if ( $custom_set[\'name\'] ) {\n       // get all existing custom values for ALL articles\n       $all_values = glz_custom_fields_MySQL(\'all_values\', glz_custom_number($custom), \'\', array(\'custom_set_name\' => $custom_set[\'name\'], \'status\' => 0));\n       // if we have results, let\'s create SQL queries that will add them to custom_fields table\n       if ( count($all_values) > 0 ) {\n         // initialize insert\n         $insert = \'\';\n         foreach ( $all_values as $escaped_value => $value ) {\n           // don\'t insert empty values or values that are over 255 characters\n           // values over 255 characters hint to a textarea custom field\n           if ( !empty($escaped_value) && strlen($escaped_value) < 255 )\n             // if this is the last value, query will have to be different\n             $insert .= ( end($all_values) != $value ) ?\n               \"(\'{$custom}\',\'{$escaped_value}\'),\" :\n               \"(\'{$custom}\',\'{$escaped_value}\')\";\n         }\n         $query = \"\n           INSERT INTO\n             `\".PFX.\"custom_fields` (`name`,`value`)\n           VALUES\n             {$insert}\n         \";\n         if ( isset($query) && !empty($query) ) {\n           // create all custom field values in custom_fields table\n           safe_query($query);\n           // update the type of this custom field to select (might want to make this user-adjustable at some point)\n           glz_custom_fields_MySQL(\"update\", $custom, PFX.\"txp_prefs\", array(\n             \'custom_set_name\'   => $custom_set[\'name\'],\n             \'custom_set_type\'   => \"select\",\n             \'custom_set_position\' => $custom_set[\'position\']\n           ));\n           $glz_notice[] = glz_custom_fields_gTxt(\"migration_success\");\n         }\n       }\n     }\n   }\n\n   // make a note of this migration in txp_prefs\n   glz_custom_fields_MySQL(\'mark_migration\');\n  }\n}\n\n\n\n\n\nglobal $event;\n\n// globals, expensive operations mostly\nbefore_glz_custom_fields();\n\nif (@txpinterface == \"admin\") {\n\n  // INSTALL ROUTINES\n  // checks if all tables exist and everything is setup properly\n  add_privs(\'glz_custom_fields_install\', \"1\");\n  register_callback(\"glz_custom_fields_install\", \"plugin_lifecycle.glz_custom_fields\", \"installed\");\n\n  // we\'ll be doing this only on the pages that we care about, not everywhere\n  if ( in_array($event, array(\"article\", \"prefs\", \"glz_custom_fields\", \"plugin_prefs.glz_custom_fields\")) ) {\n    // we need some stylesheets & JS\n    add_privs(\'glz_custom_fields_css_js\', \"1,2,3,4,5,6\");\n    register_callback(\'glz_custom_fields_css_js\', \"admin_side\", \'head_end\');\n\n    // we need to make sure that all custom field values will be converted to strings first - think checkboxes & multi-selects etc.\n    if ( (gps(\"step\") == \"edit\") || (gps(\"step\") == \"create\") ) {\n      add_privs(\'glz_custom_fields_before_save\', \"1,2,3,4,5,6\");\n      register_callback(\'glz_custom_fields_before_save\', \"article\", \'\', 1);\n    }\n  }\n\n  // Custom Fields tab under Extensions\n  add_privs(\'glz_custom_fields\', \"1,2\");\n  register_tab(\"extensions\", \'glz_custom_fields\', \"Custom Fields\");\n  register_callback(\'glz_custom_fields\', \"glz_custom_fields\");\n\n  // plugin preferences\n  add_privs(\'plugin_prefs.glz_custom_fields\', \"1,2\");\n  register_callback(\'glz_custom_fields_preferences\', \'plugin_prefs.glz_custom_fields\');\n\n\n  // YES, finally the default custom fields are replaced by the new, pimped ones : )\n  add_privs(\'glz_custom_fields_replace\', \"1,2,3,4,5,6\");\n  register_callback(\'glz_custom_fields_replace\', \'article_ui\', \'custom_fields\');\n  // YES, now we have textarea custom fields as well ; )\n  register_callback(\'glz_custom_fields_replace\', \'article_ui\', \'body\');\n}\n\n// -------------------------------------------------------------\n// everything is happening in this function... generates the content for Extensions > Custom Fields\nfunction glz_custom_fields() {\n  global $event, $all_custom_sets, $glz_notice, $prefs;\n\n  // we have $_POST, let\'s see if there is any CRUD\n  if ( $_POST ) {\n    $incoming = stripPost();\n    // DEBUG\n    // die(dmp($incoming));\n    extract($incoming);\n\n    // create an empty $value if it\'s not set in the $_POST\n    if ( !isset($value) )\n      $value = \'\';\n\n    // we are deleting a new custom field\n    if ( gps(\'delete\') ) {\n      glz_custom_fields_MySQL(\"delete\", $custom_set, PFX.\"txp_prefs\");\n      glz_custom_fields_MySQL(\"delete\", $custom_set, PFX.\"txp_lang\");\n      glz_custom_fields_MySQL(\"delete\", $custom_set, PFX.\"custom_fields\");\n\n      glz_custom_fields_MySQL(\"delete\", glz_custom_number($custom_set), PFX.\"textpattern\");\n\n      $glz_notice[] = glz_custom_fields_gTxt(\"deleted\", array(\'{custom_set_name}\' => $custom_set_name));\n    }\n\n    // we are resetting one of the mighty 10\n    if ( gps(\'reset\') ) {\n      glz_custom_fields_MySQL(\"reset\", $custom_set, PFX.\"txp_prefs\");\n      glz_custom_fields_MySQL(\"delete\", $custom_set, PFX.\"custom_fields\");\n\n      glz_custom_fields_MySQL(\"reset\", glz_custom_number($custom_set), PFX.\"textpattern\", array(\n        \'custom_set_type\' => $custom_set_type,\n        \'custom_field\' => glz_custom_number($custom_set)\n      ));\n\n      $glz_notice[] = glz_custom_fields_gTxt(\"reset\", array(\'{custom_set_name}\' => $custom_set_name));\n    }\n\n    // we are adding a new custom field\n    if ( gps(\"custom_field_number\") ) {\n      $custom_set_name = gps(\"custom_set_name\");\n\n      // if no name was specified, abort\n      if ( !$custom_set_name )\n        $glz_notice[] = glz_custom_fields_gTxt(\"no_name\");\n      else {\n        $custom_set_name = glz_clean_string($custom_set_name);\n\n        $name_exists = glz_check_custom_set_name($all_custom_sets, $custom_set_name);\n\n        // if name doesn\'t exist\n        if ( $name_exists == FALSE ) {\n          glz_custom_fields_MySQL(\"new\", $custom_set_name, PFX.\"txp_prefs\", array(\n            \'custom_field_number\' => $custom_field_number,\n            \'custom_set_type\'     => $custom_set_type,\n            \'custom_set_position\' => $custom_set_position\n          ));\n          glz_custom_fields_MySQL(\"new\", $custom_set_name, PFX.\"txp_lang\", array(\n            \'custom_field_number\' => $custom_field_number,\n            \'lang\'                => $GLOBALS[\'prefs\'][\'language\']\n          ));\n          glz_custom_fields_MySQL(\"new\", $custom_set_name, PFX.\"textpattern\", array(\n            \'custom_field_number\' => $custom_field_number,\n            \'custom_set_type\' => $custom_set_type\n          ));\n          // there are custom fields for which we do not need to touch custom_fields table\n          if ( !in_array($custom_set_type, array(\"textarea\", \"text_input\")) ) {\n            glz_custom_fields_MySQL(\"new\", $custom_set_name, PFX.\"custom_fields\", array(\n              \'custom_field_number\' => $custom_field_number,\n              \'value\'               => $value\n            ));\n          }\n\n          $glz_notice[] = glz_custom_fields_gTxt(\"created\", array(\'{custom_set_name}\' => $custom_set_name));\n        }\n        // name exists, abort\n        else\n          $glz_notice[] = glz_custom_fields_gTxt(\"exists\", array(\'{custom_set_name}\' => $custom_set_name));\n      }\n    }\n\n    // we are editing an existing custom field\n    if ( gps(\'save\') ) {\n      if ( !empty($custom_set_name) ) {\n        $custom_set_name = glz_clean_string($custom_set_name);\n        $name_exists = glz_check_custom_set_name($all_custom_sets, $custom_set_name, $custom_set);\n        // if name doesn\'t exist we\'ll need to create a new custom_set\n        if ( $name_exists == FALSE ) {\n          glz_custom_fields_MySQL(\"update\", $custom_set, PFX.\"txp_prefs\", array(\n            \'custom_set_name\'     => $custom_set_name,\n            \'custom_set_type\'     => $custom_set_type,\n            \'custom_set_position\' => $custom_set_position\n          ));\n\n          // custom sets need to be changed based on their type\n          glz_custom_fields_MySQL(\"update\", $custom_set, PFX.\"textpattern\", array(\n            \'custom_set_type\' => $custom_set_type,\n            \'custom_field\' => glz_custom_number($custom_set)\n          ));\n\n          // for textareas we do not need to touch custom_fields table\n          if ( $custom_set_type != \"textarea\" ) {\n            glz_custom_fields_MySQL(\"delete\", $custom_set, PFX.\"custom_fields\");\n            glz_custom_fields_MySQL(\"new\", $custom_set_name, PFX.\"custom_fields\", array(\n              \'custom_set\'  => $custom_set,\n              \'value\'       => $value\n            ));\n          }\n\n          $glz_notice[] = glz_custom_fields_gTxt(\"updated\", array(\'{custom_set_name}\' => $custom_set_name));\n        }\n        // name exists, abort\n        else\n          $glz_notice[] = glz_custom_fields_gTxt(\"exists\", array(\'{custom_set_name}\' => $custom_set_name));\n      }\n      else\n        $glz_notice[] = glz_custom_fields_gTxt(\'no_name\');\n    }\n\n    // need to re-fetch data since things modified\n    $all_custom_sets = glz_custom_fields_MySQL(\"all\");\n\n  }\n\n  pagetop(\"Custom Fields\");\n\n  // the table with all custom fields follows\n  echo\n    n.\'<div class=\"listtables\">\'.n.\n    \'  <table class=\"txp-list glz_custom_fields\">\'.n.\n    \'    <thead>\'.n.\n    \'      <tr>\'.n.\n    \'        <th>Position</th>\'.n.\n    \'        <th>Name</th>\'.n.\n    \'        <th>Type</th>\'.n.\n    \'        <th>&nbsp;</th>\'.n.\n    \'      </tr>\'.n.\n    \'    </thead>\'.n.\n    \'    <tbody>\'.n;\n\n  // looping through all our custom fields to build the table\n  $i = 0;\n  foreach ( $all_custom_sets as $custom => $custom_set ) {\n    // first 10 fields cannot be deleted, just reset\n    if ( $i < 10 ) {\n      // can\'t reset a custom field that is not set\n      $reset_delete = ( $custom_set[\'name\'] ) ?\n        glz_form_buttons(\"reset\", \"Reset\", $custom, htmlspecialchars($custom_set[\'name\']), $custom_set[\'type\'], \'\', \'return confirm(\\\'By proceeding you will RESET ALL data in `textpattern` and `custom_fields` tables for `\'.$custom.\'`. Are you sure?\\\');\') :\n        NULL;\n    }\n    else {\n      $reset_delete = glz_form_buttons(\"delete\", \"Delete\", $custom, htmlspecialchars($custom_set[\'name\']), $custom_set[\'type\'], \'\', \'return confirm(\\\'By proceeding you will DELETE ALL data in `textpattern` and `custom_fields` tables for `\'.$custom.\'`. Are you sure?\\\');\');\n    }\n\n    $edit = glz_form_buttons(\"edit\", \"Edit\", $custom, htmlspecialchars($custom_set[\'name\']), $custom_set[\'type\'], $custom_set[\'position\']);\n\n    echo\n    \'      <tr>\'.n.\n    \'        <td class=\"custom_set_position\">\'.$custom_set[\'position\'].\'</td>\'.n.\n    \'        <td class=\"custom_set_name\">\'.$custom_set[\'name\'].\'</td>\'.n.\n    \'        <td class=\"type\">\'.(($custom_set[\'name\']) ? glz_custom_fields_gTxt($custom_set[\'type\']) : \'\').\'</td>\'.n.\n    \'        <td class=\"events\">\'.$reset_delete.sp.$edit.\'</td>\'.n.\n    \'      </tr>\'.n;\n\n    $i++;\n  }\n\n  echo\n    \'    </tbody>\'.n.\n    \'  </table>\'.n;\n    \'</div>\'.n;\n\n  // the form where custom fields are being added/edited\n  $legend = gps(\'edit\') ?\n    \'Edit \'.gps(\'custom_set\') :\n    \'Add new custom field\';\n\n  $custom_field = gps(\'edit\') ?\n    \'<input name=\"custom_set\" value=\"\'.gps(\'custom_set\').\'\" type=\"hidden\" />\' :\n    \'<input name=\"custom_field_number\" value=\"\'.glz_custom_next($all_custom_sets).\'\" type=\"hidden\" />\';\n\n  $custom_set = gps(\'edit\') ?\n    gps(\'custom_set\') :\n    NULL;\n\n  $custom_name = gps(\'edit\') ?\n    gps(\'custom_set_name\') :\n    NULL;\n\n  $custom_set_position = gps(\'edit\') ?\n    gps(\'custom_set_position\') :\n    NULL;\n\n  $arr_custom_set_types = glz_custom_set_types();\n\n  $custom_set_types = NULL;\n  foreach ( $arr_custom_set_types as $custom_type_group => $custom_types ) {\n    $custom_set_types .= \'<optgroup label=\"\'.ucfirst($custom_type_group).\'\">\'.n;\n    foreach ($custom_types as $custom_type) {\n      $selected = ( gps(\'edit\') && gps(\'custom_set_type\') == $custom_type ) ?\n        \' selected=\"selected\"\' :\n        NULL;\n      $custom_set_types .= \'<option value=\"\'.$custom_type.\'\"\'.$selected.\'>\'.glz_custom_fields_gTxt($custom_type).\'</option>\'.n;\n    }\n    $custom_set_types .= \'</optgroup>\'.n;\n  }\n  // fetching the values for this custom field\n  if ( gps(\'edit\') ) {\n    if ( $custom_set_type == \"text_input\" )\n      $arr_values = glz_custom_fields_MySQL(\'all_values\', glz_custom_number($custom_set), \'\', array(\'custom_set_name\' => $custom_set_name, \'status\' => 4));\n    else\n      $arr_values = glz_custom_fields_MySQL(\"values\", $custom_set, \'\', array(\'custom_set_name\' => $custom_set_name));\n\n    $values = ( $arr_values ) ?\n      implode(\"\\r\\n\", $arr_values) :\n      \'\';\n  }\n  else\n    $values = \'\';\n\n  $action = gps(\'edit\') ?\n    \'<input name=\"save\" value=\"Save\" type=\"submit\" class=\"submit\" />\' :\n    \'<input name=\"add_new\" value=\"Add new\" type=\"submit\" class=\"submit\" />\';\n  // this needs to be different for a script\n  $value = ( isset($custom_set_type) && $custom_set_type == \"custom-script\" ) ?\n    \'<input type=\"text\" name=\"value\" id=\"value\" value=\"\'.$values.\'\" class=\"left\"/><span class=\"right\"><em>Relative path from your website\\\'s public folder</em></span>\' :\n    \'<textarea name=\"value\" id=\"value\" class=\"left\">\'.$values.\'</textarea><span class=\"right\"><em>Each value on a separate line</em> <br /><em>One {default} value allowed</em></span>\';\n\n  // ok, all is set, let\'s build the form\n  echo\n    \'<form method=\"post\" action=\"index.php\" id=\"add_edit_custom_field\">\'.n.\n    \'<input name=\"event\" value=\"glz_custom_fields\" type=\"hidden\" />\'.n.\n    $custom_field.n.\n    \'<fieldset>\'.n.\n    \' <legend>\'.$legend.\'</legend>\'.n.\n    \' <p class=\"clearfix\">\n        <label for=\"custom_set_name\" class=\"left\">Name:</label>\n        <input type=\"text\" name=\"custom_set_name\" value=\"\'.htmlspecialchars($custom_name).\'\" id=\"custom_set_name\" class=\"left\" />\n        <span class=\"right\"><em>Only word characters allowed</em></span>\n      </p>\'.n.\n    \' <p class=\"clearfix\">\n        <label for=\"custom_set_type\" class=\"left\">Type:</label>\n        <select name=\"custom_set_type\" id=\"custom_set_type\" class=\"left\">\n    \'.      $custom_set_types.\'\n        </select>\n      </p>\'.n.\n    \' <p class=\"clearfix\">\n        <label for=\"custom_set_position\" class=\"left\">Position:</label>\n        <input type=\"text\" name=\"custom_set_position\" value=\"\'.htmlspecialchars($custom_set_position).\'\" id=\"custom_set_position\" class=\"left\" />\n        <span class=\"right\"><em>Automatically assigned if blank</em></span>\n      </p>\'.n.\n    \' <p class=\"clearfix\">\n        <label for=\"value\" class=\"left\">Value:</label>\n    \'.  $value.\'\n      </p>\'.n.\n    \' \'.$action.n.\n    \'</fieldset>\'.n.\n    \'</form>\'.n;\n}\n\n\n// -------------------------------------------------------------\n// glz_custom_fields preferences\nfunction glz_custom_fields_preferences() {\n  global $event, $glz_notice;\n\n  if ( $_POST && gps(\'save\') ) {\n    glz_custom_fields_MySQL(\"update_plugin_preferences\", $_POST[\'glz_custom_fields_prefs\']);\n    $glz_notice[] = glz_custom_fields_gTxt(\"preferences_updated\");\n    // need to re-fetch from db because this has changed since $prefs has been populated\n  }\n  $current_preferences = glz_custom_fields_MySQL(\'plugin_preferences\');\n\n  pagetop(\"glz_custom_fields Preferences\");\n\n  // custom_fields\n  $arr_values_ordering = array(\n    \'ascending\'   => \"Ascending\",\n    \'descending\'  => \"Descending\",\n    \'custom\'      => \"As entered\"\n  );\n  $values_ordering = \'<select name=\"glz_custom_fields_prefs[values_ordering]\" id=\"glz_custom_fields_prefs_values_ordering\">\';\n  foreach ( $arr_values_ordering as $value => $title ) {\n    $selected = ($current_preferences[\'values_ordering\'] == $value) ? \' selected=\"selected\"\' : \'\';\n    $values_ordering .= \"<option value=\\\"$value\\\"$selected>$title</option>\";\n  }\n  $values_ordering .= \"</select>\";\n  $multiselect_size = \'<input type=\"text\" name=\"glz_custom_fields_prefs[multiselect_size]\" id=\"glz_custom_fields_prefs_multiselect_size\" value=\"\'.$current_preferences[\'multiselect_size\'].\'\" />\';\n  $custom_scripts_path_error = ( @fopen($current_preferences[\'custom_scripts_path\'], \"r\") ) ?\n    \'\' :\n    \'<br /><em class=\"red\">Folder does not exist, please create it.</em>\';\n\n  // jquery.datePicker\n  $datepicker_url_error = ( @fopen($current_preferences[\'datepicker_url\'].\"/datePicker.js\", \"r\") ) ?\n    \'\' :\n    \'<br /><em class=\"red\">Folder does not exist, please create it.</em>\';\n  $arr_date_format = array(\"dd/mm/yyyy\", \"mm/dd/yyyy\", \"yyyy-mm-dd\", \"dd mm yy\");\n  $date_format = \'<select name=\"glz_custom_fields_prefs[datepicker_format]\" id=\"glz_custom_fields_prefs_datepicker_format\">\';\n  foreach ( $arr_date_format as $format ) {\n    $selected = ($current_preferences[\'datepicker_format\'] == $format) ? \' selected=\"selected\"\' : \'\';\n    $date_format .= \"<option value=\\\"$format\\\"$selected>$format</option>\";\n  }\n  $date_format .= \"</select>\";\n\n  $arr_days = array(\'Sunday\', \'Monday\', \'Tuesday\', \'Wednesday\', \'Thursday\', \'Friday\', \'Saturday\');\n  $first_day = \'<select name=\"glz_custom_fields_prefs[datepicker_first_day]\" id=\"glz_custom_fields_prefs_datepicker_first_day\">\';\n  foreach ( $arr_days as $key => $day ) {\n    $selected = ($current_preferences[\'datepicker_first_day\'] == $key) ? \' selected=\"selected\"\' : \'\';\n    $first_day .= \"<option value=\\\"$key\\\"$selected>$day</option>\";\n  }\n  $first_day .= \"</select>\";\n\n  $start_date = \'<input type=\"text\" name=\"glz_custom_fields_prefs[datepicker_start_date]\" id=\"glz_custom_fields_prefs_datepicker_start_date\" value=\"\'.$current_preferences[\'datepicker_start_date\'].\'\" />\';\n\n  // jquery.timePicker\n  $timepicker_url_error = ( @fopen($current_preferences[\'timepicker_url\'].\"/timePicker.js\", \"r\") ) ?\n    \'\' :\n    \'<br /><em class=\"red\">Folder does not exist, please create it.</em>\';\n  $arr_time_format = array(\'true\' => \"24 hours\", \'false\' => \"12 hours\");\n  $show_24 = \'<select name=\"glz_custom_fields_prefs[timepicker_show_24]\" id=\"glz_custom_fields_prefs_timepicker_show_24\">\';\n  foreach ( $arr_time_format as $value => $title ) {\n    $selected = ($current_preferences[\'timepicker_show_24\'] == $value) ? \' selected=\"selected\"\' : \'\';\n    $show_24 .= \"<option value=\\\"$value\\\"$selected>$title</option>\";\n  }\n  $show_24 .= \"</select>\";\n\n  $out = <<<EOF\n<form action=\"index.php\" method=\"post\">\n<table id=\"list\" class=\"glz_custom_fields_prefs\" cellpadding=\"0\" cellspacing=\"0\" align=\"center\">\n  <tbody>\n    <tr class=\"heading\">\n      <td colspan=\"2\"><h2 class=\"pref-heading\">Custom Fields</h2></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_values_ordering\">Order for custom field values</th>\n      <td>{$values_ordering}</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_multiselect_size\">Multi-select field size</th>\n      <td>{$multiselect_size}</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_custom_scripts_path\">Custom scripts path</th>\n      <td><input type=\"text\" name=\"glz_custom_fields_prefs[custom_scripts_path]\" id=\"glz_custom_fields_prefs_custom_scripts_path\" value=\"{$current_preferences[\'custom_scripts_path\']}\" />{$custom_scripts_path_error}</td>\n    </tr>\n\n    <tr class=\"heading\">\n      <td colspan=\"2\"><h2 class=\"pref-heading left\">Date Picker</h2> <a href=\"http://www.kelvinluck.com/assets/jquery/datePicker/v2/demo/index.html\" title=\"A flexible unobtrusive calendar component for jQuery\" class=\"right\">jQuery datePicker</a></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_datepicker_url\">Date Picker plugin URL</th>\n      <td><input type=\"text\" name=\"glz_custom_fields_prefs[datepicker_url]\" id=\"glz_custom_fields_prefs_datepicker_url\" value=\"{$current_preferences[\'datepicker_url\']}\" />{$datepicker_url_error}</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_datepicker_format\">Date format</th>\n      <td>{$date_format}</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_datepicker_first_day\">First day of week</th>\n      <td>{$first_day}</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_datepicker_start_date\">Start date</th>\n      <td>{$start_date}<br /><em class=\"grey\">MUST be the same as \"Date format\"</em></td>\n    </tr>\n\n    <tr class=\"heading\">\n      <td colspan=\"2\"><h2 class=\"pref-heading left\">Time Picker</h2> <a href=\"http://labs.perifer.se/timedatepicker/\" title=\"jQuery time picker\" class=\"right\">jQuery timePicker</a></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_timepicker_url\">Time Picker plugin URL</th>\n      <td><input type=\"text\" name=\"glz_custom_fields_prefs[timepicker_url]\" id=\"glz_custom_fields_prefs_timepicker_url\" value=\"{$current_preferences[\'timepicker_url\']}\" />{$timepicker_url_error}</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_timepicker_start_time\">Start time</th>\n      <td><input type=\"text\" name=\"glz_custom_fields_prefs[timepicker_start_time]\" id=\"glz_custom_fields_prefs_timepicker_start_time\" value=\"{$current_preferences[\'timepicker_start_time\']}\" /></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_timepicker_end_time\">End time</th>\n      <td><input type=\"text\" name=\"glz_custom_fields_prefs[timepicker_end_time]\" id=\"glz_custom_fields_prefs_timepicker_end_time\" value=\"{$current_preferences[\'timepicker_end_time\']}\" /></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_timepicker_step\">Step</th>\n      <td><input type=\"text\" name=\"glz_custom_fields_prefs[timepicker_step]\" id=\"glz_custom_fields_prefs_timepicker_step\" value=\"{$current_preferences[\'timepicker_step\']}\" /></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_timepicker_step\">Time format</th>\n      <td>{$show_24}</td>\n    </tr>\n\n    <tr>\n      <td colspan=\"2\" class=\"noline\">\n        <input class=\"publish\" type=\"submit\" name=\"save\" value=\"Save\" />\n        <input type=\"hidden\" name=\"event\" value=\"plugin_prefs.glz_custom_fields\" />\n      </td>\n    </tr>\n  </tbody>\n</table>\nEOF;\n\n  echo $out;\n}','\n# glz_custom_fields v1.4.0-beta1\n# Unlimited, super special custom fields.\n#\n# Gerhard Lazu\n# http://gerhardlazu.com\n#\n# Contributors: Randy Levine, Sam Weiss, Luca Botti, Manfre, Vladimir Siljkovic, Julian Reisenberger, Steve Dickinson, Stef Dawson, Jean-Pol Dupont\n# Minimum requirements: Textpattern 4.5.1\n\n// Including helper files. If we can\'t have classes, we will use includes\n\n\n// -------------------------------------------------------------\n// messages that will be available throughout this plugin\nfunction glz_custom_fields_gTxt($get, $atts = array()) {\n  $lang = array(\n    \'no_name\'                => \'Ooops! <strong>custom set</strong> must have a name\',\n    \'deleted\'                => \'<strong>{custom_set_name}</strong> was deleted\',\n    \'reset\'                  => \'<strong>{custom_set_name}</strong> was reset\',\n    \'created\'                => \'<strong>{custom_set_name}</strong> was created\',\n    \'updated\'                => \'<strong>{custom_set_name}</strong> was updated\',\n    \'exists\'                 => \'Ooops! <strong>{custom_set_name}</strong> already exists\',\n    \'doesnt_exist\'           => \'Ooops! <strong>{custom_set_name}</strong> is not set\',\n    \'field_problems\'         => \'Ooops! <strong>{custom_set_name}</strong> has some problems. <a href=\"?event=glz_custom_fields\">Go fix it</a>.\',\n    \'custom_set\'             => \'Text Input\', # custom sets in TXP 4.2.0 are by type custom_set by default...\n    \'text_input\'             => \'Text Input\',\n    \'select\'                 => \'Select\',\n    \'multi-select\'           => \'Multi-Select\',\n    \'textarea\'               => \'Textarea\',\n    \'checkbox\'               => \'Checkbox\',\n    \'radio\'                  => \'Radio\',\n    \'date-picker\'            => \'Date Picker\',\n    \'time-picker\'            => \'Time Picker\',\n    \'custom-script\'          => \'Custom Script\',\n    \'type_not_supported\'     => \'Type not supported\',\n    \'no_do\'                  => \'Ooops! No action specified for method, abort.\',\n    \'not_specified\'          => \'Ooops! {what} is not specified\',\n    \'searchby_not_set\'       => \'<strong>searcby</strong> cannot be left blank\',\n    \'jquery_missing\'         => \'Upgrade TXP to at least 4.0.5 or put <strong>jquery.js</strong> in your /textpattern folder. <a href=\"http://jquery.com\" title=\"jQuery website\">jQuery website</a>\',\n    \'check_path\'             => \'Make sure all your paths are correct. Check <strong>config.php</strong> and the Admin tab (mainly Advanced).\',\n    \'no_articles_found\'      => \'No articles with custom fields have been found.\',\n    \'migration_success\'      => \'Migrating custom fields was successful\',\n    \'migration_skip\'         => \'<strong>custom_fields</strong> table already has data in it, migration skipped.\',\n    \'search_section_created\' => \'<strong>search</strong> section has been created\',\n    \'custom_sets_all_input\'  => \'All custom sets have been set back to input\',\n    \'preferences_updated\'    => \'Plugin preferences have been updated\',\n    \'not_found\'              => \'Ooops! <strong>{file}</strong> cannot be found, check path\',\n    \'not_callable\'           => \'Ooops! <strong>{function}()</strong> cannot be called. Ensure <strong>{file}</strong> can be executed.\'\n  );\n\n  $out = ( strstr($lang[$get], \"Ooops!\") ) ? // Ooops! would appear 0 in the string...\n      \"<span class=\\\"red\\\">{$lang[$get]}</span>\" :\n      $lang[$get];\n\n  return strtr($out, $atts);\n}\n\n\n\n\n\n// -------------------------------------------------------------\n// I would do this through a factory class, but some folks are still running PHP4...\nfunction glz_custom_fields_MySQL($do, $name=\'\', $table=\'\', $extra=\'\') {\n  if ( !empty($do) ) {\n    switch ( $do ) {\n      case \'all\':\n        return glz_all_custom_sets();\n        break;\n\n      case \'values\':\n        return glz_values_custom_field($name, $extra);\n        break;\n\n      case \'all_values\' :\n        return glz_all_existing_custom_values($name, $extra);\n        break;\n\n      case \'article_customs\':\n        return glz_article_custom_fields($name, $extra);\n        break;\n\n      case \'next_custom\':\n        return glz_next_empty_custom();\n        break;\n\n      case \'new\':\n        glz_new_custom_field($name, $table, $extra);\n        glz_custom_fields_update_count();\n        break;\n\n      case \'update\':\n        return glz_update_custom_field($name, $table, $extra);\n        break;\n\n      case \'reset\':\n        return glz_reset_custom_field($name, $table, $extra);\n        break;\n\n      case \'delete\':\n        glz_delete_custom_field($name, $table);\n        glz_custom_fields_update_count();\n        break;\n\n      case \'check_migration\':\n        return glz_check_migration();\n        break;\n\n      case \'mark_migration\':\n        return glz_mark_migration();\n        break;\n\n      case \'custom_set_exists\':\n        return glz_check_custom_set_exists($name);\n        break;\n\n      case \'plugin_preferences\':\n        return glz_plugin_preferences($name);\n        break;\n\n      case \'update_plugin_preferences\':\n        return glz_update_plugin_preferences($name);\n        break;\n    }\n  }\n  else\n    trigger_error(glz_custom_fields_gTxt(\'no_do\'));\n}\n\n\nfunction glz_all_custom_sets() {\n  $all_custom_sets = getRows(\"\n    SELECT\n      `name` AS custom_set,\n      `val` AS name,\n      `position`,\n      `html` AS type\n    FROM\n      `\".PFX.\"txp_prefs`\n    WHERE\n      `event`=\'custom\'\n    ORDER BY\n      `position`\n  \");\n\n  foreach ( $all_custom_sets as $custom_set ) {\n    $out[$custom_set[\'custom_set\']] = array(\n      \'name\'      => $custom_set[\'name\'],\n      \'position\'  => $custom_set[\'position\'],\n      \'type\'      => $custom_set[\'type\']\n    );\n  }\n\n  return $out;\n}\n\n\nfunction glz_values_custom_field($name, $extra) {\n  global $prefs;\n\n  if ( is_array($extra) ) {\n    extract($extra);\n\n    if ( !empty($name) ) {\n      switch ( $prefs[\'values_ordering\'] ) {\n        case \"ascending\":\n          $orderby = \"value ASC\";\n          break;\n        case \"descending\":\n          $orderby = \"value DESC\";\n          break;\n        default:\n          $orderby = \"id ASC\";\n      }\n\n\n      $arr_values = getThings(\"\n        SELECT\n          `value`\n        FROM\n          `\".PFX.\"custom_fields`\n        WHERE\n          `name` = \'{$name}\'\n        ORDER BY\n          {$orderby}\n      \");\n\n      if ( count($arr_values) > 0 ) {\n        // decode all special characters e.g. \", & etc. and use them for keys\n        foreach ( $arr_values as $key => $value )\n          $arr_values_formatted[glz_return_clean_default(htmlspecialchars($value))] = stripslashes($value);\n\n        // if this is a range, format ranges accordingly\n        return glz_format_ranges($arr_values_formatted, $custom_set_name);\n      }\n    }\n  }\n  else\n    trigger_error(glz_custom_fields_gTxt(\'not_specified\', array(\'{what}\' => \"extra attributes\")));\n}\n\n\nfunction glz_all_existing_custom_values($name, $extra) {\n  if ( is_array($extra) ) {\n    extract(lAtts(array(\n      \'custom_set_name\'   => \"\",\n      \'status\'            => 4\n    ),$extra));\n\n    // we might want to check the custom field values for all articles - think initial migration\n    $status_condition = ($status == 0) ? \"<> \'\'\" : \"= \'$status\'\";\n\n    if ( !empty($name) ) {\n      $arr_values = getThings(\"\n        SELECT DISTINCT\n          `$name`\n        FROM\n          `\".PFX.\"textpattern`\n        WHERE\n          `Status` $status_condition\n        AND\n          `$name` <> \'\'\n        ORDER BY\n          `$name`\n        \");\n\n      // trim all values\n      foreach ( $arr_values as $key => $value )\n        $arr_values[$key] = trim($value);\n\n      // DEBUG\n      // dmp($arr_values);\n\n      // prepare our array for checking. We need a single string to check for | instances - seems quickest.\n      $values_check = join(\'::\', $arr_values);\n\n      // DEBUG\n      // dmp($values_check);\n\n      // check if some of the values are multiple ones\n      if ( strstr($values_check, \'|\') ) {\n        // initialize $out\n        $out = array();\n        // put all values in an array\n        foreach ( $arr_values as $value ) {\n          $arr_values = explode(\'|\', $value);\n          $out = array_merge($out, $arr_values);\n        }\n        // keep only the unique ones\n        $out = array_unique($out);\n        // keys and values need to be the same\n        $out = php4_array_combine($out, $out);\n      }\n\n      // check if this is a range\n      else if ( strstr($values_check, \'-\') && strstr($custom_set_name, \'range\') )\n        // keys won\'t have the unit ($, £, m<sup>3</sup>, etc.) values will\n        $out = glz_format_ranges($arr_values, $custom_set_name);\n      else\n        // keys and values need to be the same\n        $out = php4_array_combine($arr_values, $arr_values);\n\n      // calling stripslashes on all array values\n      array_map(\'glz_array_stripslashes\', $out);\n\n      return $out;\n    }\n  }\n  else\n    trigger_error(glz_custom_fields_gTxt(\'not_specified\', array(\'{what}\' => \"extra attributes\")));\n}\n\n\nfunction glz_article_custom_fields($name, $extra) {\n  if ( is_array($extra) ) {\n    // see what custom fields we need to query for\n    foreach ( $extra as $custom => $custom_set )\n      $select[] = glz_custom_number($custom);\n\n    // prepare the select elements\n    $select = implode(\',\', $select);\n\n    $arr_article_customs = getRow(\"\n      SELECT\n        $select\n      FROM\n        `\".PFX.\"textpattern`\n      WHERE\n        `ID`=\'$name\'\n    \");\n\n    return $arr_article_customs;\n  }\n  else\n    trigger_error(glz_custom_fields_gTxt(\'not_specified\', array(\'{what}\' => \"extra attributes\")));\n}\n\n\nfunction glz_new_custom_field($name, $table, $extra) {\n  if ( is_array($extra) ) {\n    extract($extra);\n    // DRYing up, we\'ll be using this variable quiet often\n    $custom_set = ( isset($custom_field_number) ) ?\n      \"custom_{$custom_field_number}_set\" :\n      $custom_set;\n\n    if ( ($table == PFX.\"txp_prefs\") ) {\n      // if this is a new field without a position, use the $custom_field_number\n      if (empty($custom_set_position)) $custom_set_position = $custom_field_number;\n      $query = \"\n        INSERT INTO\n          `\".PFX.\"txp_prefs` (`prefs_id`, `name`, `val`, `type`, `event`, `html`, `position`)\n        VALUES\n          (\'1\', \'{$custom_set}\', \'{$name}\', \'1\', \'custom\', \'{$custom_set_type}\', {$custom_set_position})\n      \";\n    }\n    else if ( $table == PFX.\"txp_lang\" ) {\n      $query = \"\n        INSERT INTO\n          `\".PFX.\"txp_lang` (`id`,`lang`,`name`,`event`,`data`,`lastmod`)\n        VALUES\n          (\'\',\'{$lang}\',\'{$custom_set}\',\'prefs\',\'{$name}\',now())\n      \";\n    }\n    else if ( $table == PFX.\"textpattern\" ) {\n      $column_type = ( $custom_set_type == \"textarea\" ) ? \"TEXT\" : \"VARCHAR(255)\";\n      $query = \"\n        ALTER TABLE\n          `\".PFX.\"textpattern`\n        ADD\n          `custom_{$custom_field_number}` {$column_type} NOT NULL DEFAULT \'\'\n      \";\n    }\n    else if ( $table == PFX.\"custom_fields\" ) {\n      $arr_values = array_unique(array_filter(explode(\"\\r\\n\", $value), \'glz_arr_empty_values\'));\n\n      if ( is_array($arr_values) && !empty($arr_values) ) {\n        $size_arr_values = count($arr_values);\n        $insert = \'\';\n        foreach ( $arr_values as $key => $value ) {\n          // don\'t insert empty values\n          if ( !empty($value) )\n            // make sure special characters are escaped before inserting them in the database\n            $value = addslashes(addslashes(trim($value)));\n            // if this is the last value, query will have to be different\n            $insert .= ($key+1 != $size_arr_values ) ?\n              \"(\'{$custom_set}\',\'{$value}\'), \" :\n              \"(\'{$custom_set}\',\'{$value}\')\";\n        }\n        $query = \"\n          INSERT INTO\n            `\".PFX.\"custom_fields` (`name`,`value`)\n          VALUES\n            {$insert}\n        \";\n      }\n    }\n    if ( isset($query) && !empty($query) )\n      safe_query($query);\n  }\n  else\n    trigger_error(glz_custom_fields_gTxt(\'not_specified\', array(\'{what}\' => \"extra attributes\")));\n}\n\n\nfunction glz_update_custom_field($name, $table, $extra) {\n  if ( is_array($extra) )\n    extract($extra);\n\n  if ( ($table == PFX.\"txp_prefs\") ) {\n    safe_query(\"\n      UPDATE\n        `\".PFX.\"txp_prefs`\n      SET\n        `val` = \'{$custom_set_name}\',\n        `html` = \'{$custom_set_type}\',\n        `position` = \'{$custom_set_position}\'\n      WHERE\n        `name`=\'{$name}\'\n    \");\n  }\n  else if ( ($table == PFX.\"textpattern\") ) {\n    $column_type = ( $custom_set_type == \"textarea\" ) ? \"TEXT\" : \"VARCHAR(255)\";\n    safe_query(\"\n      ALTER TABLE\n        `\".PFX.\"textpattern`\n      MODIFY\n        `{$custom_field}` {$column_type} NOT NULL DEFAULT \'\'\n    \");\n  }\n}\n\n\nfunction glz_reset_custom_field($name, $table, $extra) {\n  if ( is_array($extra) )\n    extract($extra);\n\n  if ( $table == PFX.\"txp_prefs\" ) {\n    safe_query(\"\n      UPDATE\n        `\".PFX.\"txp_prefs`\n      SET\n        `val` = \'\',\n        `html` = \'text_input\'\n      WHERE\n        `name`=\'{$name}\'\n    \");\n  }\n  else if ( $table == PFX.\"textpattern\" ) {\n    safe_query(\"UPDATE `\".PFX.\"textpattern` SET `{$name}` = \'\'\");\n    safe_query(\"ALTER TABLE `\".PFX.\"textpattern` MODIFY `{$custom_field}` VARCHAR(255) NOT NULL DEFAULT \'\'\");\n  }\n}\n\n\nfunction glz_delete_custom_field($name, $table) {\n  // remember, custom fields under 10 MUST NOT be deleted\n  if ( glz_custom_digit($name) > 10 ) {\n    if ( in_array($table, array(PFX.\"txp_prefs\", PFX.\"txp_lang\", PFX.\"custom_fields\")) ) {\n      $query = \"\n        DELETE FROM\n          `{$table}`\n        WHERE\n          `name`=\'{$name}\'\n      \";\n    }\n    else if ( $table == PFX.\"textpattern\" ) {\n      $query = \"\n        ALTER TABLE\n          `\".PFX.\"textpattern`\n        DROP\n          `{$name}`\n      \";\n    }\n    safe_query($query);\n  }\n  else {\n    if ( $table == PFX.\"txp_prefs\" )\n      glz_custom_fields_MySQL(\"reset\", $name, $table);\n    else if ( ($table == PFX.\"custom_fields\") ) {\n      safe_query(\"\n        DELETE FROM\n          `{$table}`\n        WHERE\n          `name`=\'{$name}\'\n      \");\n    }\n  }\n}\n\n\n// -------------------------------------------------------------\n// checks if custom_fields table has any values in it\nfunction glz_check_migration() {\n  return getThing(\"\n    SELECT\n      COUNT(*)\n    FROM\n      `\".PFX.\"custom_fields`\n  \");\n}\n\n\n// -------------------------------------------------------------\n// make a note of glz_custom_fields migration in txp_prefs\nfunction glz_mark_migration() {\n  set_pref(\"migrated\", \"1\", \"glz_custom_f\");\n}\n\n\n// -------------------------------------------------------------\n// check if one of the special custom fields exists\nfunction glz_check_custom_set_exists($name) {\n  if ( !empty($name) ) {\n    return getThing(\"\n      SELECT\n        `name`, `val`\n      FROM\n        `\".PFX.\"txp_prefs`\n      WHERE\n        `html` = \'{$name}\'\n      AND\n        `name` LIKE \'custom_%\'\n      ORDER BY\n        `name`\n    \");\n  }\n}\n\n\n// -------------------------------------------------------------\n// updates max_custom_fields\nfunction glz_custom_fields_update_count() {\n  set_pref(\'max_custom_fields\', safe_count(\"txp_prefs\", \"event=\'custom\'\"));\n}\n\n// -------------------------------------------------------------\n// returns all plugin preferences\nfunction glz_plugin_preferences($arr_preferences) {\n	$r = safe_rows_start(\'name, val\', \'txp_prefs\', \"event = \'glz_custom_f\'\");\n	if ($r) {\n		while ($a = nextRow($r)) {\n			$out[$a[\'name\']] = stripslashes($a[\'val\']);\n		}\n	}\n  return $out;\n}\n\n// -------------------------------------------------------------\n// updates all plugin preferences\nfunction glz_update_plugin_preferences($arr_preferences) {\n  // die(dmp($arr_preferences));\n  foreach ($arr_preferences as $preference => $value) {\n    set_pref($preference, addslashes(addslashes(trim($value))), \"glz_custom_f\", 10); // 10 so that it won\'t appear under TXP\'s prefs tab\n  }\n}\n\n\n\n\n\n\n// -------------------------------------------------------------\n// goes through all custom sets, returns the first one which is not being used\nfunction glz_next_empty_custom() {\n  global $all_custom_sets;\n\n  foreach ( $all_custom_sets as $custom => $custom_set ) {\n    if ( empty($custom_set[\'name\']) )\n      return $custom;\n  }\n}\n\n\n// -------------------------------------------------------------\n// edit/delete buttons in custom_fields table require a form each\nfunction glz_form_buttons($action, $value, $custom_set, $custom_set_name, $custom_set_type, $custom_set_position, $onsubmit=\'\') {\n  $onsubmit = ($onsubmit) ?\n    \'onsubmit=\"\'.$onsubmit.\'\"\' :\n    \'\';\n\n  return\n    \'<form method=\"post\" action=\"index.php\" \'.$onsubmit.\'>\n      <input name=\"custom_set\" value=\"\'.$custom_set.\'\" type=\"hidden\" />\n      <input name=\"custom_set_name\" value=\"\'.$custom_set_name.\'\" type=\"hidden\" />\n      <input name=\"custom_set_type\" value=\"\'.$custom_set_type.\'\" type=\"hidden\" />\n      <input name=\"custom_set_position\" value=\"\'.$custom_set_position.\'\" type=\"hidden\" />\n      <input name=\"event\" value=\"glz_custom_fields\" type=\"hidden\" />\n      <input name=\"\'.$action.\'\" value=\"\'.$value.\'\" type=\"submit\" />\n    </form>\';\n}\n\n\n// -------------------------------------------------------------\n// the types our custom fields can take\nfunction glz_custom_set_types() {\n  return array(\n    \'normal\' => array(\n      \'text_input\',\n      \'checkbox\',\n      \'radio\',\n      \'select\',\n      \'multi-select\',\n      \'textarea\'),\n    \'special\' => array(\n      \'date-picker\',\n      \'time-picker\',\n      \'custom-script\')\n  );\n}\n\n\n// -------------------------------------------------------------\n// outputs only custom fields that have been set, i.e. have a name assigned to them\nfunction glz_check_custom_set($all_custom_sets, $step) {\n  $out = array();\n\n  foreach ($all_custom_sets as $key => $custom_field) {\n    if (!empty($custom_field[\'name\'])) {\n      if ( ($step == \"body\") && ($custom_field[\'type\'] == \"textarea\") )\n        $out[$key] = $custom_field;\n      else if ( ($step == \"custom_fields\") && ($custom_field[\'type\'] != \"textarea\") ) {\n        $out[$key] = $custom_field;\n      }\n    }\n  }\n\n  return $out;\n}\n\n\n// -------------------------------------------------------------\n// removes { } from values which are marked as default\nfunction glz_return_clean_default($value) {\n  $pattern = \"/^.*\\{(.*)\\}.*/\";\n\n  return preg_replace($pattern, \"$1\", $value);\n}\n\n\n// -------------------------------------------------------------\n// return our default value from all custom_field values\nfunction glz_default_value($all_values) {\n  if ( is_array($all_values) ) {\n    preg_match(\"/(\\{.*\\})/\", join(\" \", $all_values), $default);\n    return ( (!empty($default) && $default[0]) ? $default[0] : \'\');\n  }\n}\n\n\n// -------------------------------------------------------------\n// calling the above function in an array context\nfunction glz_clean_default_array_values(&$value) {\n  $value = glz_return_clean_default($value);\n}\n\n\n// -------------------------------------------------------------\n// custom_set without \"_set\" e.g. custom_1_set => custom_1\n// or custom set formatted for IDs e.g. custom-1\nfunction glz_custom_number($custom_set, $delimiter=\"_\") {\n  $custom_field = substr($custom_set, 0, -4);\n\n  if ($delimiter != \"_\")\n    $custom_field = str_replace(\"_\", $delimiter, $custom_field);\n\n  return $custom_field;\n}\n\n\n// -------------------------------------------------------------\n// custom_set digit e.g. custom_1_set => 1\nfunction glz_custom_digit($custom_set) {\n  $out = explode(\"_\", $custom_set);\n  // $out[0] will always be custom\n  return $out[1];\n}\n\n\n// -------------------------------------------------------------\n// removes empty values from arrays - used for new custom fields\nfunction glz_arr_empty_values($value) {\n  if ( !empty($value) )\n    return $value;\n}\n\n\n// -------------------------------------------------------------\n// returns the custom set from a custom set name e.g. \"Rating\" gives us custom_1_set\nfunction glz_get_custom_set($value) {\n  global $all_custom_sets;\n\n  // go through all custom fields and see if the one we\'re looking for exists\n  foreach ( $all_custom_sets as $custom => $custom_set ) {\n    if ( $custom_set[\'name\'] == $value )\n      return $custom;\n  }\n  // if it doesn\'t, return error message\n  trigger_error(glz_custom_fields_gTxt(\'doesnt_exist\', array(\'{custom_set_name}\' => $value)));\n}\n\n\n// -------------------------------------------------------------\n// get the article ID, EVEN IF it\'s newly saved\nfunction glz_get_article_id() {\n  return ( !empty($GLOBALS[\'ID\']) ?\n    $GLOBALS[\'ID\'] :\n    gps(\'ID\') );\n}\n\n\n// -------------------------------------------------------------\n// helps with range formatting - just DRY\nfunction glz_format_ranges($arr_values, $custom_set_name) {\n  //initialize $out\n  $out = \'\';\n  foreach ( $arr_values as $key => $value ) {\n    $out[$key] = ( strstr($custom_set_name, \'range\') ) ?\n      glz_custom_fields_range($value, $custom_set_name) :\n      $value;\n  }\n  return $out;\n}\n\n\n// -------------------------------------------------------------\n// acts as a callback for the above function\nfunction glz_custom_fields_range($custom_value, $custom_set_name) {\n  // last part of the string will be the range unit (e.g. $, &pound;, m<sup>3</sup> etc.)\n  $nomenclature = array_pop(explode(\' \', $custom_set_name));\n\n  // see whether range unit should go after\n  if ( strstr($nomenclature, \'(after)\') ) {\n    // trim \'(after)\' from the measuring unit\n    $nomenclature = substr($nomenclature, 0, -7);\n    $after = 1;\n  }\n\n  // check whether it\'s a range or single value\n  $arr_value = explode(\'-\', $custom_value);\n  if ( is_array($arr_value) ) {\n    // initialize $out\n    $out = \'\';\n    foreach ( $arr_value as $value ) {\n      // check whether nomenclature goes before or after\n      $out[] = ( !isset($after) ) ?\n        $nomenclature.number_format($value) :\n        number_format($value).$nomenclature;\n    }\n    return implode(\'-\', $out);\n  }\n  // our range is a single value\n  else {\n    // check whether nomenclature goes before or after\n    return ( !isset($after) ) ?\n      $nomenclature.number_format($value) :\n      number_format($value).$nomenclature;\n  }\n}\n\n\n// -------------------------------------------------------------\n// returns the next available number for custom set\nfunction glz_custom_next($arr_custom_sets) {\n  $arr_extra_custom_sets = array();\n  foreach ( array_keys($arr_custom_sets) as $extra_custom_set) {\n    $arr_extra_custom_sets[] = glz_custom_digit($extra_custom_set);\n  }\n  // order the array\n  sort($arr_extra_custom_sets);\n\n  for ( $i=0; $i < count($arr_extra_custom_sets); $i++ ) {\n    if ($arr_extra_custom_sets[$i] > $i+1)\n      return $i+1;\n  }\n\n  return count($arr_extra_custom_sets)+1;\n}\n\n\n// -------------------------------------------------------------\n// checks if the custom field name isn\'t already taken\nfunction glz_check_custom_set_name($arr_custom_fields, $custom_set_name, $custom_set=\'\') {\n  foreach ( $arr_custom_fields as $custom => $arr_custom_set ) {\n    if ( ($custom_set_name == $arr_custom_set[\'name\']) && (!empty($custom_set) && $custom_set != $custom) )\n      return TRUE;\n  }\n\n  return FALSE;\n}\n\n\n// -------------------------------------------------------------\n// formats the custom set output based on its type\nfunction glz_format_custom_set_by_type($custom, $custom_id, $custom_set_type, $arr_custom_field_values, $custom_value = \"\", $default_value = \"\") {\n  if ( is_array($arr_custom_field_values) )\n    $arr_custom_field_values = array_map(\'glz_array_stripslashes\', $arr_custom_field_values);\n\n  switch ( $custom_set_type ) {\n    // these are the normal custom fields\n    case \"text_input\":\n      return array(\n        fInput(\"text\", $custom, $custom_value, \"edit\", \"\", \"\", \"22\", \"\", $custom_id),\n        \'glz_custom_field\'\n      );\n\n    case \"select\":\n      return array(\n        glz_selectInput($custom, $custom_id, $arr_custom_field_values, $custom_value, $default_value),\n        \'glz_custom_select_field\'\n      );\n\n    case \"multi-select\":\n      return array(\n        glz_selectInput($custom, $custom_id, $arr_custom_field_values, $custom_value, $default_value, 1),\n        \'glz_custom_multi-select_field\'\n      );\n\n    case \"checkbox\":\n      return array(\n        glz_checkbox($custom, $arr_custom_field_values, $custom_value, $default_value),\n        \'glz_custom_checkbox_field\'\n      );\n\n    case \"radio\":\n      return array(\n        glz_radio($custom, $custom_id, $arr_custom_field_values, $custom_value, $default_value),\n        \'glz_custom_radio_field\'\n      );\n\n    case \"textarea\":\n      return array(\n        text_area($custom, 100, 500, $custom_value, $custom_id),\n        \'glz_text_area_field\'\n      );\n\n    // here start the special custom fields, might need to refactor the return, starting to repeat itself\n    case \"date-picker\":\n      return array(\n        fInput(\"text\", $custom, $custom_value, \"edit date-picker\", \"\", \"\", \"22\", \"\", $custom_id),\n        \'glz_custom_date-picker_field clearfix\'\n      );\n\n    case \"time-picker\":\n      return array(\n        fInput(\"text\", $custom, $custom_value, \"edit time-picker\", \"\", \"\", \"22\", \"\", $custom_id),\n        \'glz_custom_time-picker_field\'\n      );\n\n    case \"custom-script\":\n      global $custom_scripts_path;\n      return array(\n        glz_custom_script($custom_scripts_path.\"/\".reset($arr_custom_field_values), $custom, $custom_id, $custom_value),\n        \'glz_custom_field_script\'\n      );\n\n    // a type has been passed that is not supported yet\n    default:\n      return array(\n        glz_custom_fields_gTxt(\'type_not_supported\'),\n        \'glz_custom_field\'\n      );\n  }\n}\n\n\n// -------------------------------------------------------------\n// had to duplicate the default selectInput() because trimming \\t and \\n didn\'t work + some other mods & multi-select\nfunction glz_selectInput($name = \'\', $id = \'\', $arr_values = \'\', $custom_value = \'\', $default_value = \'\', $multi = \'\') {\n  if ( is_array($arr_values) ) {\n    global $prefs;\n    $out = array();\n\n    // if there is no custom_value coming from the article, let\'s use our default one\n    if ( empty($custom_value) )\n      $custom_value = $default_value;\n\n    foreach ($arr_values as $key => $value) {\n      $selected = glz_selected_checked(\'selected\', $key, $custom_value, $default_value);\n      $out[] = \"<option value=\\\"$key\\\"{$selected}>$value</option>\";\n    }\n\n    // we\'ll need the extra attributes as well as a name that will produce an array\n    if ($multi) {\n      $multi = \' multiple=\"multiple\" size=\"\'.$prefs[\'multiselect_size\'].\'\"\';\n      $name .= \"[]\";\n    }\n\n    return \"<select id=\\\"\".glz_idify($id).\"\\\" name=\\\"$name\\\" class=\\\"list\\\"$multi>\".\n      ($default_value ? \'\' : \"<option value=\\\"\\\"$selected>&nbsp;</option>\").\n      ( $out ? join(\'\', $out) : \'\').\n      \"</select>\";\n  }\n  else\n    return glz_custom_fields_gTxt(\'field_problems\', array(\'{custom_set_name}\' => $name));\n}\n\n\n// -------------------------------------------------------------\n// had to duplicate the default checkbox() to keep the looping in here and check against existing value/s\nfunction glz_checkbox($name = \'\', $arr_values = \'\', $custom_value = \'\', $default_value = \'\') {\n  if ( is_array($arr_values) ) {\n    $out = array();\n\n    // if there is no custom_value coming from the article, let\'s use our default one\n    if ( empty($custom_value) )\n      $custom_value = $default_value;\n\n    foreach ( $arr_values as $key => $value ) {\n      $checked = glz_selected_checked(\'checked\', $key, $custom_value);\n\n      // Putting an additional span around the input and label combination so the two can be floated together as a pair for left-right, left-right,... arrangement of checkboxes and radio buttons. Thanks Julian!\n      $out[] = \"<span><input type=\\\"checkbox\\\" name=\\\"{$name}[]\\\" value=\\\"$key\\\" class=\\\"checkbox\\\" id=\\\"\".glz_idify($key).\"\\\"{$checked} /><label for=\\\"\".glz_idify($key).\"\\\">$value</label></span><br />\";\n    }\n\n    return join(\'\', $out);\n  }\n  else\n    return glz_custom_fields_gTxt(\'field_problems\', array(\'{custom_set_name}\' => $name));\n}\n\n\n// -------------------------------------------------------------\n// had to duplicate the default radio() to keep the looping in here and check against existing value/s\nfunction glz_radio($name = \'\', $id = \'\', $arr_values = \'\', $custom_value = \'\', $default_value = \'\') {\n  if ( is_array($arr_values) ) {\n    $out = array();\n\n    // if there is no custom_value coming from the article, let\'s use our default one\n    if ( empty($custom_value) )\n      $custom_value = $default_value;\n\n    foreach ( $arr_values as $key => $value ) {\n      $checked = glz_selected_checked(\'checked\', $key, $custom_value);\n\n      // Putting an additional span around the input and label combination so the two can be floated together as a pair for left-right, left-right,... arrangement of checkboxes and radio buttons. Thanks Julian!\n      $out[] = \"<span><input type=\\\"radio\\\" name=\\\"$name\\\" value=\\\"$key\\\" class=\\\"radio\\\" id=\\\"{$id}_\".glz_idify($key).\"\\\"{$checked} /><label for=\\\"{$id}_\".glz_idify($key).\"\\\">$value</label></span><br />\";\n    }\n\n    return join(\'\', $out);\n  }\n  else\n    return glz_custom_fields_gTxt(\'field_problems\', array(\'{custom_set_name}\' => $name));\n}\n\n\n// -------------------------------------------------------------\n// checking if this custom field has selected or checked values\nfunction glz_selected_checked($nomenclature, $value, $custom_value = \'\') {\n  // we\'re comparing against a key which is a \"clean\" value\n  $custom_value = htmlspecialchars($custom_value);\n\n  // make an array if $custom_value contains multiple values\n  if ( strpos($custom_value, \'|\') )\n    $arr_custom_value = explode(\'|\', $custom_value);\n\n  if ( isset($arr_custom_value) )\n    $out = ( in_array($value, $arr_custom_value) ) ? \" $nomenclature=\\\"$nomenclature\\\"\" : \"\";\n  else\n    $out = ($value == $custom_value) ? \" $nomenclature=\\\"$nomenclature\\\"\" : \"\";\n\n  return $out;\n}\n\n\n//-------------------------------------------------------------\n// button gets more consistent styling across browsers rather than input type=\"submit\"\n// included in this plugin until in makes it into TXP - if that ever happens...\nfunction glz_fButton($type, $name, $contents=\'Submit\', $value, $class=\'\', $id=\'\', $title=\'\', $onClick=\'\', $disabled = false) {\n  $o  = \'<button type=\"\'.$type.\'\" name=\"\'.$name.\'\"\';\n  $o .= \' value=\"\'.htmlspecialchars($value).\'\"\';\n  $o .= ($class)    ? \' class=\"\'.$class.\'\"\' : \'\';\n  $o .= ($id)       ? \' id=\"\'.$id.\'\"\' : \'\';\n  $o .= ($title)    ? \' title=\"\'.$title.\'\"\' : \'\';\n  $o .= ($onClick)  ? \' onclick=\"\'.$onClick.\'\"\' : \'\';\n  $o .= ($disabled) ? \' disabled=\"disabled\"\' : \'\';\n  $o .= \'>\';\n  $o .= $contents;\n  $o .= \'</button>\';\n  return $o;\n}\n\n\n//-------------------------------------------------------------\n// evals a PHP script and displays output right under the custom field label\nfunction glz_custom_script($script, $custom, $custom_id, $custom_value) {\n  if ( is_file($script) ) {\n    include_once($script);\n    $custom_function = basename($script, \".php\");\n    if ( is_callable($custom_function) ) {\n      return call_user_func_array($custom_function, array($custom, $custom_id, $custom_value));\n    }\n    else\n      return glz_custom_fields_gTxt(\'not_callable\', array(\'{function}\' => $custom_function, \'{file}\' => $script));\n  }\n  else\n    return glz_custom_fields_gTxt(\'not_found\', array(\'{file}\' => $script));\n\n}\n\n\n// -------------------------------------------------------------\n// PHP4 doesn\'t come with array_combine... Thank you redbot!\nfunction php4_array_combine($keys, $values) {\n  $result = array(); // initializing the array\n\n  foreach ( array_map(null, $keys, $values) as $pair ) {\n    $result[$pair[0]] = $pair[1];\n  }\n\n  return $result;\n}\n\n\n// -------------------------------------------------------------\n// converts all values into id safe ones\nfunction glz_idify($value) {\n  $patterns[0] = \"/\\s/\";\n  $replacements[0] = \"-\";\n  $patterns[1] = \"/[^a-zA-Z0-9\\-]/\";\n  $replacements[1] = \"\";\n\n  return preg_replace($patterns, $replacements, strtolower($value));\n}\n\n\n// -------------------------------------------------------------\n// strips slashes in arrays, used in conjuction with e.g. array_map\nfunction glz_array_stripslashes(&$value) {\n  return stripslashes($value);\n}\n\n\n// -------------------------------------------------------------\n// returns all sections/categories that are searchable\nfunction glz_all_searchable_sections_categories($type) {\n  $type = (in_array($type, array(\'category\', \'section\')) ? $type : \'section\');\n  $condition = \"\";\n\n  if ( $type == \"section\" )\n    $condition .= \"searchable=\'1\'\";\n  else\n    $condition .= \"name <> \'root\' AND type=\'article\'\";\n\n  $result = safe_rows(\'*\', \"txp_{$type}\", $condition);\n\n  $out = array();\n  foreach ($result as $value) {\n    $out[$value[\'name\']] = $value[\'title\'];\n  }\n\n  return $out;\n}\n\n// -------------------------------------------------------------\n// will leave only [A-Za-z0-9 ] in the string\nfunction glz_clean_string($string) {\n  if ($string)\n    return preg_replace(\'/[^A-Za-z0-9\\s\\_\\-]/\', \'\', $string);\n}\n\n\n\n\n\n// -------------------------------------------------------------\n// replaces the default custom fields under write tab\nfunction glz_custom_fields_replace($event, $step, $data, $rs) {\n  global $all_custom_sets, $date_picker;\n  // get all custom fields & keep only the ones which are set, filter by step\n  $arr_custom_fields = glz_check_custom_set($all_custom_sets, $step);\n\n  // DEBUG\n  // dmp($arr_custom_fields);\n\n  $out = \' \';\n\n  if ( is_array($arr_custom_fields) && !empty($arr_custom_fields) ) {\n    // get all custom fields values for this article\n    $arr_article_customs = glz_custom_fields_MySQL(\"article_customs\", glz_get_article_id(), \'\', $arr_custom_fields);\n\n    // DEBUG\n    // dmp($arr_article_customs);\n\n    if ( is_array($arr_article_customs) )\n      extract($arr_article_customs);\n\n    // let\'s see which custom fields are set\n    foreach ( $arr_custom_fields as $custom => $custom_set ) {\n      // get all possible/default value(s) for this custom set from custom_fields table\n      $arr_custom_field_values = glz_custom_fields_MySQL(\"values\", $custom, \'\', array(\'custom_set_name\' => $custom_set[\'name\']));\n\n      // DEBUG\n      // dmp($arr_custom_field_values);\n\n      //custom_set formatted for id e.g. custom_1_set => custom-1 - don\'t ask...\n      $custom_id = glz_custom_number($custom, \"-\");\n      //custom_set without \"_set\" e.g. custom_1_set => custom_1\n      $custom = glz_custom_number($custom);\n\n      // if current article holds no value for this custom field and we have no default value, make it empty\n      $custom_value = (!empty($$custom) ? $$custom : \'\');\n      // DEBUG\n      // dmp(\"custom_value: {$custom_value}\");\n\n      // check if there is a default value\n      // if there is, strip the { }\n      $default_value = glz_return_clean_default(glz_default_value($arr_custom_field_values));\n      // DEBUG\n      // dmp(\"default_value: {$default_value}\");\n\n      // now that we\'ve found our default, we need to clean our custom_field values\n      if (is_array($arr_custom_field_values))\n        array_walk($arr_custom_field_values, \"glz_clean_default_array_values\");\n\n      // DEBUG\n      // dmp($arr_custom_field_values);\n\n      // the way our custom field value is going to look like\n      list($custom_set_value, $custom_class) = glz_format_custom_set_by_type($custom, $custom_id, $custom_set[\'type\'], $arr_custom_field_values, $custom_value, $default_value);\n\n      // DEBUG\n      // dmp($custom_set_value);\n\n      $out .= graf(\n        \"<label for=\\\"$custom_id\\\">{$custom_set[\'name\']}</label><br />$custom_set_value\", \" class=\\\"$custom_class\\\"\"\n      );\n    }\n  }\n\n  // DEBUG\n  // dmp($out);\n\n  // if we\'re writing textarea custom fields, we need to include the excerpt as well\n  if ($step == \"body\") {\n    $out = $data.$out;\n  }\n\n  return $out;\n}\n\n\n// -------------------------------------------------------------\n// prep our custom fields for the db (watch out for multi-selects, checkboxes & radios, they might have multiple values)\nfunction glz_custom_fields_before_save() {\n  // keep only the custom fields\n  foreach ($_POST as $key => $value) {\n    //check for custom fields with multiple values e.g. arrays\n    if ( strstr($key, \'custom_\') && is_array($value) ) {\n      $value = implode($value, \'|\');\n      // feed our custom fields back into the $_POST\n      $_POST[$key] = $value;\n    }\n  }\n  // DEBUG\n  // dmp($_POST);\n}\n\n\n// -------------------------------------------------------------\n// adds the css & js we need\nfunction glz_custom_fields_css_js() {\n  global $glz_notice, $date_picker, $time_picker, $prefs;\n\n  // here come our custom stylesheetz\n  $css = \'<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"http://\'.$prefs[\'siteurl\'].\'/plugins/glz_custom_fields/glz_custom_fields.css\">\'.n;\n  // and here come our javascriptz\n  $js = \'\';\n  if ( $date_picker ) {\n    $css .= \'<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"\'.$prefs[\'datepicker_url\'].\'/datePicker.css\" />\'.n;\n    foreach (array(\'date.js\', \'datePicker.js\') as $file) {\n      $js .= \'<script type=\"text/javascript\" src=\"\'.$prefs[\'datepicker_url\'].\"/\".$file.\'\"></script>\'.n;\n    }\n    $js .= <<<EOF\n<script type=\"text/javascript\">\n$(function() {\n  if ($(\".date-picker\").length > 0) {\n    try {\n      Date.firstDayOfWeek = {$prefs[\'datepicker_first_day\']};\n      Date.format = \'{$prefs[\'datepicker_format\']}\';\n      Date.fullYearStart = \'19\';\n      $(\".date-picker\").datePicker({startDate:\'{$prefs[\'datepicker_start_date\']}\'});\n    } catch(err) {\n      $(\'#messagepane\').html(\'<a href=\"http://{$prefs[\'siteurl\']}/textpattern/?event=plugin_prefs.glz_custom_fields\">Fix the DatePicker jQuery plugin</a>\');\n    }\n  }\n});\n</script>\nEOF;\n  }\n  if ( $time_picker ) {\n    $css .= \'<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"\'.$prefs[\'timepicker_url\'].\'/timePicker.css\" />\'.n;\n    $js .= \'<script type=\"text/javascript\" src=\"\'.$prefs[\'timepicker_url\'].\'/timePicker.js\"></script>\'.n;\n    $js .= <<<EOF\n<script type=\"text/javascript\">\n$(function() {\n  if ($(\".time-picker\").length > 0) {\n    try {\n      $(\".time-picker\").timePicker({\n        startTime:\'{$prefs[\'timepicker_start_time\']}\',\n        endTime: \'{$prefs[\'timepicker_end_time\']}\',\n        step: {$prefs[\'timepicker_step\']},\n        show24Hours: {$prefs[\'timepicker_show_24\']}\n      });\n    } catch(err) {\n      $(\'#messagepane\').html(\'<a href=\"http://{$prefs[\'siteurl\']}/textpattern/?event=plugin_prefs.glz_custom_fields\">Fix the TimePicker jQuery plugin</a>\');\n    }\n  }\n});\n</script>\nEOF;\n  }\n  $js .= \'<script type=\"text/javascript\" src=\"http://\'.$prefs[\'siteurl\'].\'/plugins/glz_custom_fields/glz_custom_fields.js\"></script>\';\n\n  // displays the notices we have gathered throughout the entire plugin\n  if ( count($glz_notice) > 0 ) {\n    // let\'s turn our notices into a string\n    $glz_notice = join(\"<br />\", array_unique($glz_notice));\n\n    $js .= \'<script type=\"text/javascript\">\n    <!--//--><![CDATA[//><!--\n\n    $(document).ready(function() {\n      // add our notices\n      $(\"#messagepane\").html(\\\'\'.$glz_notice.\'\\\');\n    });\n    //--><!]]>\n    </script>\';\n  }\n\n  echo $js.n.t.$css.n.t;\n}\n\n\n// -------------------------------------------------------------\n// we are setting up the pre-requisite values for glz_custom_fields\nfunction before_glz_custom_fields() {\n  // we will be reusing these globals across the whole plugin\n  global $all_custom_sets, $glz_notice, $prefs, $date_picker, $time_picker;\n\n  // glz_notice collects all plugin notices\n  $glz_notice = array();\n\n  // let\'s get all custom field sets from prefs\n  $all_custom_sets = glz_custom_fields_MySQL(\"all\");\n\n  // let\'s see if we have a date-picker custom field (first of the special ones)\n  $date_picker = glz_custom_fields_MySQL(\"custom_set_exists\", \"date-picker\");\n\n  // let\'s see if we have a time-picker custom field\n  $time_picker = glz_custom_fields_MySQL(\"custom_set_exists\", \"time-picker\");\n}\n\n\n// -------------------------------------------------------------\n// bootstrapping routines, run through plugin_lifecycle\nfunction glz_custom_fields_install() {\n  global $all_custom_sets, $glz_notice, $prefs;\n\n  // default custom fields are set to custom_set\n  // need to change this because it confuses our set_types()\n  safe_query(\"\n    UPDATE\n      `\".PFX.\"txp_prefs`\n    SET\n      `html` = \'text_input\'\n    WHERE\n      `event` = \'custom\'\n    AND\n      `html` = \'custom_set\'\n  \");\n\n  // set plugin preferences\n  $arr_plugin_preferences = array(\n    \'values_ordering\'       => \"custom\",\n    \'multiselect_size\'      => \"5\",\n    \'datepicker_url\'        => hu.\"plugins/glz_custom_fields/jquery.datePicker\",\n    \'datepicker_format\'     => \"dd/mm/yyyy\",\n    \'datepicker_first_day\'  => 1,\n    \'datepicker_start_date\' => \"01/01/1990\",\n    \'timepicker_url\'        => hu.\"plugins/glz_custom_fields/jquery.timePicker\",\n    \'timepicker_start_time\' => \"00:00\",\n    \'timepicker_end_time\'   => \"23:30\",\n    \'timepicker_step\'       => 30,\n    \'timepicker_show_24\'    => true,\n    \'custom_scripts_path\'   => $prefs[\'path_to_site\'].\"/plugins/glz_custom_fields\"\n  );\n  glz_custom_fields_MySQL(\"update_plugin_preferences\", $arr_plugin_preferences);\n\n  // let\'s update plugin preferences, make sure they won\'t appear under Admin > Preferences\n  safe_query(\"\n    UPDATE\n      `\".PFX.\"txp_prefs`\n    SET\n      `type` = \'10\'\n    WHERE\n      `event` = \'glz_custom_f\'\n  \");\n\n  // if we don\'t have a search section, let\'s create it because we\'ll need it when searching by custom fields\n  if( !getRow(\"SELECT name FROM `\".PFX.\"txp_section` WHERE name=\'search\'\") ) {\n    safe_query(\"\n      INSERT INTO\n        `\".PFX.\"txp_section` (`name`, `page`, `css`, `in_rss`, `on_frontpage`, `searchable`, `title`)\n      VALUES\n        (\'search\', \'default\', \'default\', \'0\', \'0\', \'0\', \'Search\')\n    \");\n    // add a notice that search section has bee created\n    $glz_notice[] = glz_custom_fields_gTxt(\"search_section_created\");\n  }\n\n  // if we don\'t have the custom_fields table, let\'s create it\n  if ( !getRows(\"SHOW TABLES LIKE \'\".PFX.\"custom_fields\'\") ) {\n    safe_query(\"\n      CREATE TABLE `\".PFX.\"custom_fields` (\n        `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT,\n        `name` varchar(255) NOT NULL default \'\',\n        `value` varchar(255) NOT NULL default \'\',\n        PRIMARY KEY (id),\n        KEY (`name`)\n      ) ENGINE=MyISAM\n    \");\n  }\n  else {\n    // if there isn\'t and id column, add it\n    if ( !getRows(\"SHOW COLUMNS FROM \".PFX.\"custom_fields LIKE \'id\'\") ) {\n      safe_query(\"\n        ALTER TABLE `\".PFX.\"custom_fields`\n          ADD `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT KEY\n      \");\n    }\n\n   // if we have definitely migrated using this function, skip everything\n   if ( isset($prefs[\'migrated\']) )\n     return;\n   // abort the migration if there are values in custom_fields table, we don\'t want to overwrite anything\n   else if ( glz_custom_fields_MySQL(\'check_migration\') > 0 ) {\n     // DEBUG\n     // dmp(glz_custom_fields_MySQL(\'check_migration\'));\n     $glz_notice[] = glz_custom_fields_gTxt(\"migration_skip\");\n     // make a note of this migration in txp_prefs\n     glz_custom_fields_MySQL(\'mark_migration\');\n     return;\n   }\n\n   // go through all values in custom field columns in textpattern table one by one\n   foreach ($all_custom_sets as $custom => $custom_set) {\n     // check only for custom fields that have been set\n     if ( $custom_set[\'name\'] ) {\n       // get all existing custom values for ALL articles\n       $all_values = glz_custom_fields_MySQL(\'all_values\', glz_custom_number($custom), \'\', array(\'custom_set_name\' => $custom_set[\'name\'], \'status\' => 0));\n       // if we have results, let\'s create SQL queries that will add them to custom_fields table\n       if ( count($all_values) > 0 ) {\n         // initialize insert\n         $insert = \'\';\n         foreach ( $all_values as $escaped_value => $value ) {\n           // don\'t insert empty values or values that are over 255 characters\n           // values over 255 characters hint to a textarea custom field\n           if ( !empty($escaped_value) && strlen($escaped_value) < 255 )\n             // if this is the last value, query will have to be different\n             $insert .= ( end($all_values) != $value ) ?\n               \"(\'{$custom}\',\'{$escaped_value}\'),\" :\n               \"(\'{$custom}\',\'{$escaped_value}\')\";\n         }\n         $query = \"\n           INSERT INTO\n             `\".PFX.\"custom_fields` (`name`,`value`)\n           VALUES\n             {$insert}\n         \";\n         if ( isset($query) && !empty($query) ) {\n           // create all custom field values in custom_fields table\n           safe_query($query);\n           // update the type of this custom field to select (might want to make this user-adjustable at some point)\n           glz_custom_fields_MySQL(\"update\", $custom, PFX.\"txp_prefs\", array(\n             \'custom_set_name\'   => $custom_set[\'name\'],\n             \'custom_set_type\'   => \"select\",\n             \'custom_set_position\' => $custom_set[\'position\']\n           ));\n           $glz_notice[] = glz_custom_fields_gTxt(\"migration_success\");\n         }\n       }\n     }\n   }\n\n   // make a note of this migration in txp_prefs\n   glz_custom_fields_MySQL(\'mark_migration\');\n  }\n}\n\n\n\n\n\nglobal $event;\n\n// globals, expensive operations mostly\nbefore_glz_custom_fields();\n\nif (@txpinterface == \"admin\") {\n\n  // INSTALL ROUTINES\n  // checks if all tables exist and everything is setup properly\n  add_privs(\'glz_custom_fields_install\', \"1\");\n  register_callback(\"glz_custom_fields_install\", \"plugin_lifecycle.glz_custom_fields\", \"installed\");\n\n  // we\'ll be doing this only on the pages that we care about, not everywhere\n  if ( in_array($event, array(\"article\", \"prefs\", \"glz_custom_fields\", \"plugin_prefs.glz_custom_fields\")) ) {\n    // we need some stylesheets & JS\n    add_privs(\'glz_custom_fields_css_js\', \"1,2,3,4,5,6\");\n    register_callback(\'glz_custom_fields_css_js\', \"admin_side\", \'head_end\');\n\n    // we need to make sure that all custom field values will be converted to strings first - think checkboxes & multi-selects etc.\n    if ( (gps(\"step\") == \"edit\") || (gps(\"step\") == \"create\") ) {\n      add_privs(\'glz_custom_fields_before_save\', \"1,2,3,4,5,6\");\n      register_callback(\'glz_custom_fields_before_save\', \"article\", \'\', 1);\n    }\n  }\n\n  // Custom Fields tab under Extensions\n  add_privs(\'glz_custom_fields\', \"1,2\");\n  register_tab(\"extensions\", \'glz_custom_fields\', \"Custom Fields\");\n  register_callback(\'glz_custom_fields\', \"glz_custom_fields\");\n\n  // plugin preferences\n  add_privs(\'plugin_prefs.glz_custom_fields\', \"1,2\");\n  register_callback(\'glz_custom_fields_preferences\', \'plugin_prefs.glz_custom_fields\');\n\n\n  // YES, finally the default custom fields are replaced by the new, pimped ones : )\n  add_privs(\'glz_custom_fields_replace\', \"1,2,3,4,5,6\");\n  register_callback(\'glz_custom_fields_replace\', \'article_ui\', \'custom_fields\');\n  // YES, now we have textarea custom fields as well ; )\n  register_callback(\'glz_custom_fields_replace\', \'article_ui\', \'body\');\n}\n\n// -------------------------------------------------------------\n// everything is happening in this function... generates the content for Extensions > Custom Fields\nfunction glz_custom_fields() {\n  global $event, $all_custom_sets, $glz_notice, $prefs;\n\n  // we have $_POST, let\'s see if there is any CRUD\n  if ( $_POST ) {\n    $incoming = stripPost();\n    // DEBUG\n    // die(dmp($incoming));\n    extract($incoming);\n\n    // create an empty $value if it\'s not set in the $_POST\n    if ( !isset($value) )\n      $value = \'\';\n\n    // we are deleting a new custom field\n    if ( gps(\'delete\') ) {\n      glz_custom_fields_MySQL(\"delete\", $custom_set, PFX.\"txp_prefs\");\n      glz_custom_fields_MySQL(\"delete\", $custom_set, PFX.\"txp_lang\");\n      glz_custom_fields_MySQL(\"delete\", $custom_set, PFX.\"custom_fields\");\n\n      glz_custom_fields_MySQL(\"delete\", glz_custom_number($custom_set), PFX.\"textpattern\");\n\n      $glz_notice[] = glz_custom_fields_gTxt(\"deleted\", array(\'{custom_set_name}\' => $custom_set_name));\n    }\n\n    // we are resetting one of the mighty 10\n    if ( gps(\'reset\') ) {\n      glz_custom_fields_MySQL(\"reset\", $custom_set, PFX.\"txp_prefs\");\n      glz_custom_fields_MySQL(\"delete\", $custom_set, PFX.\"custom_fields\");\n\n      glz_custom_fields_MySQL(\"reset\", glz_custom_number($custom_set), PFX.\"textpattern\", array(\n        \'custom_set_type\' => $custom_set_type,\n        \'custom_field\' => glz_custom_number($custom_set)\n      ));\n\n      $glz_notice[] = glz_custom_fields_gTxt(\"reset\", array(\'{custom_set_name}\' => $custom_set_name));\n    }\n\n    // we are adding a new custom field\n    if ( gps(\"custom_field_number\") ) {\n      $custom_set_name = gps(\"custom_set_name\");\n\n      // if no name was specified, abort\n      if ( !$custom_set_name )\n        $glz_notice[] = glz_custom_fields_gTxt(\"no_name\");\n      else {\n        $custom_set_name = glz_clean_string($custom_set_name);\n\n        $name_exists = glz_check_custom_set_name($all_custom_sets, $custom_set_name);\n\n        // if name doesn\'t exist\n        if ( $name_exists == FALSE ) {\n          glz_custom_fields_MySQL(\"new\", $custom_set_name, PFX.\"txp_prefs\", array(\n            \'custom_field_number\' => $custom_field_number,\n            \'custom_set_type\'     => $custom_set_type,\n            \'custom_set_position\' => $custom_set_position\n          ));\n          glz_custom_fields_MySQL(\"new\", $custom_set_name, PFX.\"txp_lang\", array(\n            \'custom_field_number\' => $custom_field_number,\n            \'lang\'                => $GLOBALS[\'prefs\'][\'language\']\n          ));\n          glz_custom_fields_MySQL(\"new\", $custom_set_name, PFX.\"textpattern\", array(\n            \'custom_field_number\' => $custom_field_number,\n            \'custom_set_type\' => $custom_set_type\n          ));\n          // there are custom fields for which we do not need to touch custom_fields table\n          if ( !in_array($custom_set_type, array(\"textarea\", \"text_input\")) ) {\n            glz_custom_fields_MySQL(\"new\", $custom_set_name, PFX.\"custom_fields\", array(\n              \'custom_field_number\' => $custom_field_number,\n              \'value\'               => $value\n            ));\n          }\n\n          $glz_notice[] = glz_custom_fields_gTxt(\"created\", array(\'{custom_set_name}\' => $custom_set_name));\n        }\n        // name exists, abort\n        else\n          $glz_notice[] = glz_custom_fields_gTxt(\"exists\", array(\'{custom_set_name}\' => $custom_set_name));\n      }\n    }\n\n    // we are editing an existing custom field\n    if ( gps(\'save\') ) {\n      if ( !empty($custom_set_name) ) {\n        $custom_set_name = glz_clean_string($custom_set_name);\n        $name_exists = glz_check_custom_set_name($all_custom_sets, $custom_set_name, $custom_set);\n        // if name doesn\'t exist we\'ll need to create a new custom_set\n        if ( $name_exists == FALSE ) {\n          glz_custom_fields_MySQL(\"update\", $custom_set, PFX.\"txp_prefs\", array(\n            \'custom_set_name\'     => $custom_set_name,\n            \'custom_set_type\'     => $custom_set_type,\n            \'custom_set_position\' => $custom_set_position\n          ));\n\n          // custom sets need to be changed based on their type\n          glz_custom_fields_MySQL(\"update\", $custom_set, PFX.\"textpattern\", array(\n            \'custom_set_type\' => $custom_set_type,\n            \'custom_field\' => glz_custom_number($custom_set)\n          ));\n\n          // for textareas we do not need to touch custom_fields table\n          if ( $custom_set_type != \"textarea\" ) {\n            glz_custom_fields_MySQL(\"delete\", $custom_set, PFX.\"custom_fields\");\n            glz_custom_fields_MySQL(\"new\", $custom_set_name, PFX.\"custom_fields\", array(\n              \'custom_set\'  => $custom_set,\n              \'value\'       => $value\n            ));\n          }\n\n          $glz_notice[] = glz_custom_fields_gTxt(\"updated\", array(\'{custom_set_name}\' => $custom_set_name));\n        }\n        // name exists, abort\n        else\n          $glz_notice[] = glz_custom_fields_gTxt(\"exists\", array(\'{custom_set_name}\' => $custom_set_name));\n      }\n      else\n        $glz_notice[] = glz_custom_fields_gTxt(\'no_name\');\n    }\n\n    // need to re-fetch data since things modified\n    $all_custom_sets = glz_custom_fields_MySQL(\"all\");\n\n  }\n\n  pagetop(\"Custom Fields\");\n\n  // the table with all custom fields follows\n  echo\n    n.\'<div class=\"listtables\">\'.n.\n    \'  <table class=\"txp-list glz_custom_fields\">\'.n.\n    \'    <thead>\'.n.\n    \'      <tr>\'.n.\n    \'        <th>Position</th>\'.n.\n    \'        <th>Name</th>\'.n.\n    \'        <th>Type</th>\'.n.\n    \'        <th>&nbsp;</th>\'.n.\n    \'      </tr>\'.n.\n    \'    </thead>\'.n.\n    \'    <tbody>\'.n;\n\n  // looping through all our custom fields to build the table\n  $i = 0;\n  foreach ( $all_custom_sets as $custom => $custom_set ) {\n    // first 10 fields cannot be deleted, just reset\n    if ( $i < 10 ) {\n      // can\'t reset a custom field that is not set\n      $reset_delete = ( $custom_set[\'name\'] ) ?\n        glz_form_buttons(\"reset\", \"Reset\", $custom, htmlspecialchars($custom_set[\'name\']), $custom_set[\'type\'], \'\', \'return confirm(\\\'By proceeding you will RESET ALL data in `textpattern` and `custom_fields` tables for `\'.$custom.\'`. Are you sure?\\\');\') :\n        NULL;\n    }\n    else {\n      $reset_delete = glz_form_buttons(\"delete\", \"Delete\", $custom, htmlspecialchars($custom_set[\'name\']), $custom_set[\'type\'], \'\', \'return confirm(\\\'By proceeding you will DELETE ALL data in `textpattern` and `custom_fields` tables for `\'.$custom.\'`. Are you sure?\\\');\');\n    }\n\n    $edit = glz_form_buttons(\"edit\", \"Edit\", $custom, htmlspecialchars($custom_set[\'name\']), $custom_set[\'type\'], $custom_set[\'position\']);\n\n    echo\n    \'      <tr>\'.n.\n    \'        <td class=\"custom_set_position\">\'.$custom_set[\'position\'].\'</td>\'.n.\n    \'        <td class=\"custom_set_name\">\'.$custom_set[\'name\'].\'</td>\'.n.\n    \'        <td class=\"type\">\'.(($custom_set[\'name\']) ? glz_custom_fields_gTxt($custom_set[\'type\']) : \'\').\'</td>\'.n.\n    \'        <td class=\"events\">\'.$reset_delete.sp.$edit.\'</td>\'.n.\n    \'      </tr>\'.n;\n\n    $i++;\n  }\n\n  echo\n    \'    </tbody>\'.n.\n    \'  </table>\'.n;\n    \'</div>\'.n;\n\n  // the form where custom fields are being added/edited\n  $legend = gps(\'edit\') ?\n    \'Edit \'.gps(\'custom_set\') :\n    \'Add new custom field\';\n\n  $custom_field = gps(\'edit\') ?\n    \'<input name=\"custom_set\" value=\"\'.gps(\'custom_set\').\'\" type=\"hidden\" />\' :\n    \'<input name=\"custom_field_number\" value=\"\'.glz_custom_next($all_custom_sets).\'\" type=\"hidden\" />\';\n\n  $custom_set = gps(\'edit\') ?\n    gps(\'custom_set\') :\n    NULL;\n\n  $custom_name = gps(\'edit\') ?\n    gps(\'custom_set_name\') :\n    NULL;\n\n  $custom_set_position = gps(\'edit\') ?\n    gps(\'custom_set_position\') :\n    NULL;\n\n  $arr_custom_set_types = glz_custom_set_types();\n\n  $custom_set_types = NULL;\n  foreach ( $arr_custom_set_types as $custom_type_group => $custom_types ) {\n    $custom_set_types .= \'<optgroup label=\"\'.ucfirst($custom_type_group).\'\">\'.n;\n    foreach ($custom_types as $custom_type) {\n      $selected = ( gps(\'edit\') && gps(\'custom_set_type\') == $custom_type ) ?\n        \' selected=\"selected\"\' :\n        NULL;\n      $custom_set_types .= \'<option value=\"\'.$custom_type.\'\"\'.$selected.\'>\'.glz_custom_fields_gTxt($custom_type).\'</option>\'.n;\n    }\n    $custom_set_types .= \'</optgroup>\'.n;\n  }\n  // fetching the values for this custom field\n  if ( gps(\'edit\') ) {\n    if ( $custom_set_type == \"text_input\" )\n      $arr_values = glz_custom_fields_MySQL(\'all_values\', glz_custom_number($custom_set), \'\', array(\'custom_set_name\' => $custom_set_name, \'status\' => 4));\n    else\n      $arr_values = glz_custom_fields_MySQL(\"values\", $custom_set, \'\', array(\'custom_set_name\' => $custom_set_name));\n\n    $values = ( $arr_values ) ?\n      implode(\"\\r\\n\", $arr_values) :\n      \'\';\n  }\n  else\n    $values = \'\';\n\n  $action = gps(\'edit\') ?\n    \'<input name=\"save\" value=\"Save\" type=\"submit\" class=\"submit\" />\' :\n    \'<input name=\"add_new\" value=\"Add new\" type=\"submit\" class=\"submit\" />\';\n  // this needs to be different for a script\n  $value = ( isset($custom_set_type) && $custom_set_type == \"custom-script\" ) ?\n    \'<input type=\"text\" name=\"value\" id=\"value\" value=\"\'.$values.\'\" class=\"left\"/><span class=\"right\"><em>Relative path from your website\\\'s public folder</em></span>\' :\n    \'<textarea name=\"value\" id=\"value\" class=\"left\">\'.$values.\'</textarea><span class=\"right\"><em>Each value on a separate line</em> <br /><em>One {default} value allowed</em></span>\';\n\n  // ok, all is set, let\'s build the form\n  echo\n    \'<form method=\"post\" action=\"index.php\" id=\"add_edit_custom_field\">\'.n.\n    \'<input name=\"event\" value=\"glz_custom_fields\" type=\"hidden\" />\'.n.\n    $custom_field.n.\n    \'<fieldset>\'.n.\n    \' <legend>\'.$legend.\'</legend>\'.n.\n    \' <p class=\"clearfix\">\n        <label for=\"custom_set_name\" class=\"left\">Name:</label>\n        <input type=\"text\" name=\"custom_set_name\" value=\"\'.htmlspecialchars($custom_name).\'\" id=\"custom_set_name\" class=\"left\" />\n        <span class=\"right\"><em>Only word characters allowed</em></span>\n      </p>\'.n.\n    \' <p class=\"clearfix\">\n        <label for=\"custom_set_type\" class=\"left\">Type:</label>\n        <select name=\"custom_set_type\" id=\"custom_set_type\" class=\"left\">\n    \'.      $custom_set_types.\'\n        </select>\n      </p>\'.n.\n    \' <p class=\"clearfix\">\n        <label for=\"custom_set_position\" class=\"left\">Position:</label>\n        <input type=\"text\" name=\"custom_set_position\" value=\"\'.htmlspecialchars($custom_set_position).\'\" id=\"custom_set_position\" class=\"left\" />\n        <span class=\"right\"><em>Automatically assigned if blank</em></span>\n      </p>\'.n.\n    \' <p class=\"clearfix\">\n        <label for=\"value\" class=\"left\">Value:</label>\n    \'.  $value.\'\n      </p>\'.n.\n    \' \'.$action.n.\n    \'</fieldset>\'.n.\n    \'</form>\'.n;\n}\n\n\n// -------------------------------------------------------------\n// glz_custom_fields preferences\nfunction glz_custom_fields_preferences() {\n  global $event, $glz_notice;\n\n  if ( $_POST && gps(\'save\') ) {\n    glz_custom_fields_MySQL(\"update_plugin_preferences\", $_POST[\'glz_custom_fields_prefs\']);\n    $glz_notice[] = glz_custom_fields_gTxt(\"preferences_updated\");\n    // need to re-fetch from db because this has changed since $prefs has been populated\n  }\n  $current_preferences = glz_custom_fields_MySQL(\'plugin_preferences\');\n\n  pagetop(\"glz_custom_fields Preferences\");\n\n  // custom_fields\n  $arr_values_ordering = array(\n    \'ascending\'   => \"Ascending\",\n    \'descending\'  => \"Descending\",\n    \'custom\'      => \"As entered\"\n  );\n  $values_ordering = \'<select name=\"glz_custom_fields_prefs[values_ordering]\" id=\"glz_custom_fields_prefs_values_ordering\">\';\n  foreach ( $arr_values_ordering as $value => $title ) {\n    $selected = ($current_preferences[\'values_ordering\'] == $value) ? \' selected=\"selected\"\' : \'\';\n    $values_ordering .= \"<option value=\\\"$value\\\"$selected>$title</option>\";\n  }\n  $values_ordering .= \"</select>\";\n  $multiselect_size = \'<input type=\"text\" name=\"glz_custom_fields_prefs[multiselect_size]\" id=\"glz_custom_fields_prefs_multiselect_size\" value=\"\'.$current_preferences[\'multiselect_size\'].\'\" />\';\n  $custom_scripts_path_error = ( @fopen($current_preferences[\'custom_scripts_path\'], \"r\") ) ?\n    \'\' :\n    \'<br /><em class=\"red\">Folder does not exist, please create it.</em>\';\n\n  // jquery.datePicker\n  $datepicker_url_error = ( @fopen($current_preferences[\'datepicker_url\'].\"/datePicker.js\", \"r\") ) ?\n    \'\' :\n    \'<br /><em class=\"red\">Folder does not exist, please create it.</em>\';\n  $arr_date_format = array(\"dd/mm/yyyy\", \"mm/dd/yyyy\", \"yyyy-mm-dd\", \"dd mm yy\");\n  $date_format = \'<select name=\"glz_custom_fields_prefs[datepicker_format]\" id=\"glz_custom_fields_prefs_datepicker_format\">\';\n  foreach ( $arr_date_format as $format ) {\n    $selected = ($current_preferences[\'datepicker_format\'] == $format) ? \' selected=\"selected\"\' : \'\';\n    $date_format .= \"<option value=\\\"$format\\\"$selected>$format</option>\";\n  }\n  $date_format .= \"</select>\";\n\n  $arr_days = array(\'Sunday\', \'Monday\', \'Tuesday\', \'Wednesday\', \'Thursday\', \'Friday\', \'Saturday\');\n  $first_day = \'<select name=\"glz_custom_fields_prefs[datepicker_first_day]\" id=\"glz_custom_fields_prefs_datepicker_first_day\">\';\n  foreach ( $arr_days as $key => $day ) {\n    $selected = ($current_preferences[\'datepicker_first_day\'] == $key) ? \' selected=\"selected\"\' : \'\';\n    $first_day .= \"<option value=\\\"$key\\\"$selected>$day</option>\";\n  }\n  $first_day .= \"</select>\";\n\n  $start_date = \'<input type=\"text\" name=\"glz_custom_fields_prefs[datepicker_start_date]\" id=\"glz_custom_fields_prefs_datepicker_start_date\" value=\"\'.$current_preferences[\'datepicker_start_date\'].\'\" />\';\n\n  // jquery.timePicker\n  $timepicker_url_error = ( @fopen($current_preferences[\'timepicker_url\'].\"/timePicker.js\", \"r\") ) ?\n    \'\' :\n    \'<br /><em class=\"red\">Folder does not exist, please create it.</em>\';\n  $arr_time_format = array(\'true\' => \"24 hours\", \'false\' => \"12 hours\");\n  $show_24 = \'<select name=\"glz_custom_fields_prefs[timepicker_show_24]\" id=\"glz_custom_fields_prefs_timepicker_show_24\">\';\n  foreach ( $arr_time_format as $value => $title ) {\n    $selected = ($current_preferences[\'timepicker_show_24\'] == $value) ? \' selected=\"selected\"\' : \'\';\n    $show_24 .= \"<option value=\\\"$value\\\"$selected>$title</option>\";\n  }\n  $show_24 .= \"</select>\";\n\n  $out = <<<EOF\n<form action=\"index.php\" method=\"post\">\n<table id=\"list\" class=\"glz_custom_fields_prefs\" cellpadding=\"0\" cellspacing=\"0\" align=\"center\">\n  <tbody>\n    <tr class=\"heading\">\n      <td colspan=\"2\"><h2 class=\"pref-heading\">Custom Fields</h2></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_values_ordering\">Order for custom field values</th>\n      <td>{$values_ordering}</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_multiselect_size\">Multi-select field size</th>\n      <td>{$multiselect_size}</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_custom_scripts_path\">Custom scripts path</th>\n      <td><input type=\"text\" name=\"glz_custom_fields_prefs[custom_scripts_path]\" id=\"glz_custom_fields_prefs_custom_scripts_path\" value=\"{$current_preferences[\'custom_scripts_path\']}\" />{$custom_scripts_path_error}</td>\n    </tr>\n\n    <tr class=\"heading\">\n      <td colspan=\"2\"><h2 class=\"pref-heading left\">Date Picker</h2> <a href=\"http://www.kelvinluck.com/assets/jquery/datePicker/v2/demo/index.html\" title=\"A flexible unobtrusive calendar component for jQuery\" class=\"right\">jQuery datePicker</a></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_datepicker_url\">Date Picker plugin URL</th>\n      <td><input type=\"text\" name=\"glz_custom_fields_prefs[datepicker_url]\" id=\"glz_custom_fields_prefs_datepicker_url\" value=\"{$current_preferences[\'datepicker_url\']}\" />{$datepicker_url_error}</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_datepicker_format\">Date format</th>\n      <td>{$date_format}</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_datepicker_first_day\">First day of week</th>\n      <td>{$first_day}</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_datepicker_start_date\">Start date</th>\n      <td>{$start_date}<br /><em class=\"grey\">MUST be the same as \"Date format\"</em></td>\n    </tr>\n\n    <tr class=\"heading\">\n      <td colspan=\"2\"><h2 class=\"pref-heading left\">Time Picker</h2> <a href=\"http://labs.perifer.se/timedatepicker/\" title=\"jQuery time picker\" class=\"right\">jQuery timePicker</a></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_timepicker_url\">Time Picker plugin URL</th>\n      <td><input type=\"text\" name=\"glz_custom_fields_prefs[timepicker_url]\" id=\"glz_custom_fields_prefs_timepicker_url\" value=\"{$current_preferences[\'timepicker_url\']}\" />{$timepicker_url_error}</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_timepicker_start_time\">Start time</th>\n      <td><input type=\"text\" name=\"glz_custom_fields_prefs[timepicker_start_time]\" id=\"glz_custom_fields_prefs_timepicker_start_time\" value=\"{$current_preferences[\'timepicker_start_time\']}\" /></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_timepicker_end_time\">End time</th>\n      <td><input type=\"text\" name=\"glz_custom_fields_prefs[timepicker_end_time]\" id=\"glz_custom_fields_prefs_timepicker_end_time\" value=\"{$current_preferences[\'timepicker_end_time\']}\" /></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_timepicker_step\">Step</th>\n      <td><input type=\"text\" name=\"glz_custom_fields_prefs[timepicker_step]\" id=\"glz_custom_fields_prefs_timepicker_step\" value=\"{$current_preferences[\'timepicker_step\']}\" /></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><label for=\"glz_custom_fields_prefs_timepicker_step\">Time format</th>\n      <td>{$show_24}</td>\n    </tr>\n\n    <tr>\n      <td colspan=\"2\" class=\"noline\">\n        <input class=\"publish\" type=\"submit\" name=\"save\" value=\"Save\" />\n        <input type=\"hidden\" name=\"event\" value=\"plugin_prefs.glz_custom_fields\" />\n      </td>\n    </tr>\n  </tbody>\n</table>\nEOF;\n\n  echo $out;\n}','9c9ec125891da3ea5460c3b64388f0e4',5,9,3),
	('smd_where_used',1,'Stef Dawson','http://stefdawson.com/','0.30','Find which forms/pages/articles/plugins/text have been used where in your design','<div id=\"smd_help\">\n\n	<h1>smd_where_used</h1>\n\n	<p>Really simple admin-side plugin to help find what you need to edit/delete. If you have a tonne of forms or pages and want to tidy stuff up it can be a bit of a pain to find what&#8217;s actually in use.</p>\n\n	<p>So use this plugin to search your sections, pages, forms or articles for references to plugins, or other pages/forms/stylesheets or even just plain text in articles / stylesheets.</p>\n\n	<h2 class=\"author\">Author</h2>\n\n	<p><a href=\"http://stefdawson.com/commentForm\">Stef Dawson</a></p>\n\n	<h2 class=\"install\">Installation / Uninstallation</h2>\n\n	<p>Download the plugin from either <a href=\"http://textpattern.org/plugins/984/smd_where_used\">textpattern.org</a>, or the <a href=\"http://stefdawson.com/sw\">software page</a>, paste the code into the <span class=\"caps\">TXP</span> Admin -&gt; Plugins pane, install and enable the plugin. Visit the <a href=\"http://forum.textpattern.com/viewtopic.php?id=27493\">forum thread</a> for more info and to report the success (or otherwise) of this plugin.</p>\n\n	<p>Uninstall by simply deleting the plugin from the Admin-&gt;Plugins pane.</p>\n\n	<h2 class=\"usage\">Usage</h2>\n\n	<p>Visit the Extensions tab and Click &#8216;Where used&#8217; to access the search form. Type some stuff to find, select where you want to look and hit &#8216;Search&#8217; or press Enter. Your requested locations will be searched for that term and the results tabulated, with hyperlinks to the offending items so you can quickly edit them.</p>\n\n	<p>You can decide whether to search for the term (&#8220;Include&#8221;) or to search for stuff <span class=\"caps\">NOT</span> containing that term (&#8220;Exclude&#8221;). You may also choose whether your search term matches/does not match a whole word or is case sensitive.</p>\n\n	<p>This is what the plugin looks at when you select a particular checkbox from the &#8220;Look at&#8221; row:</p>\n\n	<ul>\n		<li>&#8216;Sections&#8217; searches every Section for pages or stylesheets with the matching name</li>\n		<li>&#8216;Pages&#8217; searches every Page for forms / plugins / text with the matching name</li>\n		<li>&#8216;Forms&#8217; searches every Form for plugins / other forms / text with the matching name</li>\n		<li>&#8216;Stylesheets&#8217; searches every Stylesheet for text with the matching name</li>\n		<li>&#8216;Articles&#8217; searches (by default) every Article section, body, excerpt, override_form, title and keyword for mention of the text you specify. Click the <em>Article search fields</em> button to see a list of database columns that you may search. Check the ones you wish to consider and click <em>Save</em></li>\n	</ul>\n\n	<p>If, however, you leave the &#8216;Find&#8217; box empty and click &#8216;Search&#8217; the plugin will search for orphans. Orphans are defined as follows:</p>\n\n	<ul>\n		<li>Any Page that is not assigned to a Section</li>\n		<li>Any Stylesheet that is not assigned to a Section</li>\n		<li>Any Section that has no Articles in it (excluding ‘default’ which cannot have an article anyway)</li>\n		<li>Any Plugin that is not referenced from an Article (body/excerpt) or another Form or Page</li>\n		<li>Any Form that has no reference to it in any Article (body/excerpt/override_form) or another Form or Page</li>\n	</ul>\n\n	<p>Notes:</p>\n\n	<ul>\n		<li>Orphaned articles don&#8217;t make sense so they are omitted. The checkbox is ignored</li>\n		<li>Essential sections / pages / forms that cannot be deleted are not listed</li>\n		<li>Plugins are always displayed because there&#8217;s no check box for it. The reason is that smd_where_used does not allow searching within a plugin for a reference to a word, but it does check other places for references <em>to</em> plugins</li>\n		<li>The Plugin list can be toggled. It begins by showing both admin and public (A+P) plugins. If you wish to see public-only (P) plugins, click &#8216;Search&#8217; again to toggle the list</li>\n		<li>Just because an item is listed as orphaned does <em>not necessarily mean it is not used</em>! For example, rvm_maintenance checks for the existence of an <code>error_503</code> Page. Since it is never assigned to a Section it will be listed as orphaned. If you have a dedicated stylesheet for maintenance mode that, too, will be shown as orphaned. In short, be careful and make a backup :-)</li>\n		<li>Plugins such as pap_contact_cleaner and rvm_maintenance are listed as orphans even though they are used by other plugins / usually disabled. If you are unsure about a plugin, check it by typing a partial tag name into the search box</li>\n	</ul>\n\n	<h2 class=\"changelog\">Changelog</h2>\n\n	<ul>\n		<li>16 Jun 08 | v0.1 | Initial release</li>\n		<li>16 Jun 08 | v0.11 | Added section search and override_form</li>\n		<li>16 Jun 08 | v0.12 | Added include/exclude (thanks mrdale)</li>\n		<li>16 Jun 08 | v0.13 | Added ability to match whole words (thanks zanza)</li>\n		<li>17 Jun 08 | v0.14 | Added orphan search (thanks uli/net-carver)</li>\n		<li>18 Jun 08 | v0.15 | Fixed plugin list so it does a deep search inside the source code for tag names</li>\n		<li>18 Jun 08 | v0.16 | Added admin/client side plugin toggle ; searches now extended to title and keywords (both thanks uli)</li>\n		<li>18 Jun 08 | v0.17 | Articles are linked with ID and title (thanks uli)</li>\n		<li>18 Jun 08 | v0.18 | Added case sensitive searches (thanks geoff777)</li>\n		<li>11 Mar 09 | v0.19 | Added auto-focus to search box</li>\n		<li>12 Aug 09 | v0.2 | Requires <span class=\"caps\">TXP</span> 4.2.0 ; added auto-prefs for &#8216;look in&#8217; and article search fields pref (thanks uli)</li>\n		<li>19 May 10 | v0.3 | Requires <span class=\"caps\">TXP</span> 4.3.0 ; added searching inside Stylesheets</li>\n	</ul>\n\n</div>\n<!-- *** BEGIN PLUGIN CSS *** -->\n<style type=\"text/css\">\n#smd_help { line-height:1.3 ;}\n#smd_help code { font-weight:bold; font: 105%/130% \"Courier New\", courier, monospace; background-color: #FFFFCC;}\n#smd_help code.block { font-weight:normal; border:1px dotted #999; background-color: #f0e68c; display:block; margin:10px 10px 20px; padding:10px; }\n#smd_help a:link, #smd_help a:visited { color: blue; text-decoration: none; border-bottom: 1px solid blue; padding-bottom:1px;}\n#smd_help a:hover, #smd_help a:active { color: blue; text-decoration: none; border-bottom: 2px solid blue; padding-bottom:1px;}\n#smd_help h1 { color: #369; font: 20px Georgia, sans-serif; margin: 0; text-align: center; }\n#smd_help h2 { border-bottom: 1px solid black; padding:10px 0 0; color: #369; font: 17px Georgia, sans-serif; }\n#smd_help h3 { color: #693; font: bold 12px Arial, sans-serif; letter-spacing: 1px; margin: 10px 0 0;text-transform: uppercase;}\n#smd_help h4 { font: bold 11px Arial, sans-serif; letter-spacing: 1px; margin: 10px 0 0 ;text-transform: uppercase; }\n#smd_help .att-name { font-weight:bold; }\n#smd_help .mand { background:#eee; border:1px dotted #999; }\n#smd_help table {width:100%; text-align:center; padding-bottom:1em;}\n#smd_help td, #smd_help th {border:1px solid #999; padding:.5em 0;}\n</style>\n<!-- *** END PLUGIN CSS *** -->\n','// -------------------------------------------------------------\r\nif (@txpinterface == \'admin\') {\r\n	add_privs(\'smd_wu\',\'1,2\');\r\n\r\n	// Extensions tab\r\n	register_tab(\'extensions\', \'smd_wu\', smd_wu_gTxt(\'smd_wu\'));\r\n	register_callback(\'smd_wu\', \'smd_wu\');\r\n}\r\n\r\n// -------------------------------------------------------------\r\nfunction smd_wu($event, $step) {\r\n	if(!$step or !in_array($step, array(\r\n			\'smd_wu_search\',\r\n			\'smd_wu_prefsave\',\r\n		))) {\r\n		smd_wu_showform(\'\');\r\n	} else $step();\r\n}\r\n\r\n// -------------------------------------------------------------\r\nfunction smd_wu_showform($message, $term=\'\', $sel=array(), $incl=0, $whole=0, $mode=0, $plugtype=0, $case=0) {\r\n	pagetop(smd_wu_gTxt(\'smd_wu\'),$message);\r\n	$btnSearch = fInput(\'submit\', \'smd_wu_search\', gTxt(\'search\'), \'smallerbox\').sInput(\'smd_wu_search\').hInput(\'plugtype\', (($plugtype==1) ? 0 : 1));\r\n	$btnStyle = \' style=\"border:0;height:25px\"\';\r\n	$place = array(\'sections\',\'pages\',\'forms\',\'stylesheets\',\'articles\');\r\n	$sel = empty($sel) ? unserialize(get_pref(\'smd_wu_look_in\')) : $sel;\r\n	$sel = empty($sel) ? $place : $sel;\r\n\r\n	echo \'<form method=\"post\" name=\"smd_wu_form\">\';\r\n	echo startTable(\'list\');\r\n	echo tr(fLabelCell(smd_wu_gTxt(\'search_lbl\')) . tdcs(fInput(\'text\', \'search_for\', stripslashes($term), \'\', \'\', \'\', 30, \'\', \'smd_search_for\'), 5) . tda($btnSearch, $btnStyle));\r\n	echo tr(fLabelCell(smd_wu_gTxt(\'filter\')).tdcs(radio(\'meth\',0,(($incl==0)?1:0)).smd_wu_gTxt(\'inclusion\').\" \" . radio(\'meth\',1,(($incl==1)?1:0)).smd_wu_gTxt(\'exclusion\'). \" | \" . smd_wu_gTxt(\'whole_word\').checkbox(\'whole\', 1, (($whole==1)?1:0)). \" | \" . smd_wu_gTxt(\'match_case\').checkbox(\'case\', 1, (($case==1)?1:0)), 5));\r\n	$out = \'\';\r\n	foreach ($place as $here) {\r\n		$out .= fLabelCell(ucfirst(gTxt($here)) . checkbox(\'places[]\', $here, in_array($here,$sel)));\r\n	}\r\n	echo tr(fLabelCell(smd_wu_gTxt(\'search_where_lbl\')) . $out);\r\n	echo endTable();\r\n	echo \'</form>\';\r\n\r\n	// Render the prefs checkboxes\r\n	$cols = getThings(\'describe `\'.PFX.\'textpattern`\');\r\n	$flds = do_list(get_pref(\'smd_wu_article_fields\'));\r\n	$flds = empty($flds[0]) ? do_list(\'Body,Excerpt,override_form,Section,Title,Keywords\') : $flds;\r\n\r\n	echo \'<div id=\"smd_wu_prefwrap\"><a id=\"smd_wu_preftog\" href=\"#\">\'.smd_wu_gTxt(\'prefs_link\').\'</a>\';\r\n	echo \'<form method=\"post\" id=\"smd_wu_prefs\" style=\"display:none;\">\';\r\n	foreach ($cols as $col) {\r\n		echo br.checkbox(\'smd_wu_article_fields[]\', $col, (in_array($col, $flds) ? 1 : 0)).sp.$col;\r\n	}\r\n	echo fInput(\'submit\', \'smd_wu_prefsave\', gTxt(\'save\'), \'smallerbox\', \'\', \'\', \'\', \'\', \'smd_wu_prefsave\');\r\n	echo \'</form></div>\';\r\n	echo <<<EOJS\r\n<script type=\"text/javascript\">\r\njQuery(function() {\r\n	jQuery(\"#smd_search_for\").focus();\r\n	jQuery(\"#smd_wu_prefs\").hide();\r\n	jQuery(\"#smd_wu_preftog\").click(function() {\r\n		jQuery(\"#smd_wu_prefs\").toggle(\'fast\');\r\n		return false;\r\n	});\r\n	jQuery(\"#smd_wu_prefsave\").click(function() {\r\n		var out = [];\r\n		jQuery(\"#smd_wu_prefs input:checked\").each(function() {\r\n			out.push(jQuery(this).val());\r\n		});\r\n\r\n		sendAsyncEvent(\r\n			{\r\n				event: textpattern.event,\r\n				step: \'smd_wu_prefsave\',\r\n				smd_wu_article_fields: out.join(\',\')\r\n			}\r\n		);\r\n		jQuery(\"#smd_wu_prefs\").toggle(\'fast\');\r\n		return false;\r\n	});\r\n});\r\n</script>\r\n<style type=\"text/css\">\r\n#smd_wu_prefwrap {\r\n	width:140px;\r\n	margin:10px auto 0;\r\n}\r\n</style>\r\nEOJS;\r\n}\r\n\r\n// -------------------------------------------------------------\r\nfunction smd_wu_prefsave() {\r\n	$cols = getThings(\'describe `\'.PFX.\'textpattern`\');\r\n	$fields = do_list(gps(\'smd_wu_article_fields\'));\r\n	$oflds = array();\r\n	foreach($fields as $fld) {\r\n		if (in_array($fld, $cols)) {\r\n			$oflds[] = $fld;\r\n		}\r\n	}\r\n	set_pref(\'smd_wu_article_fields\', join(\',\',$oflds), \'smd_wu\', PREF_HIDDEN, \'text_input\');\r\n	send_xml_response();\r\n}\r\n\r\n// -------------------------------------------------------------\r\nfunction smd_wu_search() {\r\n	extract(doSlash(gpsa(array(\'search_for\'))));\r\n	$whole = gps(\'whole\');\r\n	$case = gps(\'case\'); // 0 = case insensitive, 1 = case sensitive\r\n	$caseSense = ($case==1) ? \' BINARY \' : \'\';\r\n	$meth = gps(\'meth\'); // 0 = include, 1 = exclude\r\n	$plugtype = gps(\'plugtype\'); // 0 = public, 1 = 0+admin, 2 = 1+library\r\n	$plugtype = (is_numeric($plugtype) && $plugtype < 3) ? $plugtype : 0;\r\n	$joinme = ($meth == 0) ? \" OR \" : \" AND \";\r\n	$places = gps(\'places\');\r\n	$places = is_array($places) ? $places : array();\r\n	set_pref(\'smd_wu_look_in\', serialize($places), \'smd_wu\', PREF_HIDDEN, \'text_input\');\r\n	$mode = ($search_for) ? 0 : 1;\r\n	smd_wu_showform(\'\', $search_for, $places, $meth, $whole, $mode, $plugtype, $case);\r\n\r\n	$artflds = get_pref(\'smd_wu_article_fields\');\r\n	$artflds = empty($artflds) ? \'Body,Excerpt,override_form,Section,Title,Keywords\' : $artflds;\r\n\r\n	// Entries in the placeTable array are:\r\n	//  0: Table to search\r\n	//  1: Column to search\r\n	//  2: Column to return\r\n	//  3: Heading to display if results found\r\n	//  4: Event of destination URL\r\n	//  5: Step of destination URL\r\n	//  6: Additional URL var\r\n	//  7: Additional URL var replacement (used in strtr)\r\n	$placeTable = array(\r\n		\'pages\' => array(\'txp_page\', \'user_html\', \'name\', gTxt(\'pages\'), \'page\', \'\', \'name\', \'{name}\', \'\'),\r\n		\'forms\' => array(\'txp_form\', \'form\', \'name\', gTxt(\'forms\'), \'form\', \'form_edit\', \'name\', \'{name}\', \'\'),\r\n		\'articles\' => array(\'textpattern\', $artflds, \'ID,title\', gTxt(\'articles\'), \'article\', \'edit\', \'ID\', \'{ID}\', \'\'),\r\n		\'sections\' => array(\'txp_section\', \'page,css\', \'name\', gTxt(\'sections\'), \'section\', \'\', \'#\', \'section-{name}\', \'\'),\r\n		\'stylesheets\' => array(\'txp_css\', \'css\', \'name\', smd_wu_gTxt(\'stylesheets\'), \'css\', \'\', \'name\', \'{name}\', \'\'),\r\n	);\r\n\r\n	$rs = array();\r\n	echo n.\'<hr width=\"50%\" />\';\r\n	echo startTable(\'list\');\r\n	$colHead = array();\r\n	$colBody = array();\r\n\r\n	if ($search_for) {\r\n		echo tr(tdcs(tag(gTxt(\'search_results\'), \'h2\'), 5));\r\n		foreach ($places as $place) {\r\n			$crow = $placeTable[$place];\r\n			$where = array();\r\n			$witems = do_list($crow[1]);\r\n			$list = do_list($crow[2]);\r\n\r\n			foreach ($witems as $item) {\r\n				$where[] = $caseSense . $item . (($meth==1) ? \' NOT\' : \'\') . (($whole==1) ? \' REGEXP \\\'[[:<:]]\'.$search_for.\'[[:>:]]\\\'\' : \" LIKE \'%$search_for%\'\");\r\n			}\r\n			$rs = safe_rows($crow[2], $crow[0], \'(\'.join($joinme, $where).\') ORDER BY \'.$list[0]);\r\n			$colHead[] = td(strong($crow[3]));\r\n			if ($rs) {\r\n				$out = \'<ul>\';\r\n				foreach ($rs as $row) {\r\n					$hlink = \'\';\r\n					$vars = \'\';\r\n					foreach ($list as $col) {\r\n						$from = \'{\'.$col.\'}\';\r\n						if (strpos($crow[7], $from) !== false) {\r\n							if ($crow[6] == \"#\") {\r\n								$vars = join_qs(array(\"event\" => $crow[4], \"step\" => $crow[5])).$crow[6].strtr($crow[7], array($from => $row[$col]));\r\n							} else {\r\n								$vars = join_qs(array(\"event\" => $crow[4], \"step\" => $crow[5], $crow[6] => strtr($crow[7], array($from => $row[$col]))));\r\n							}\r\n						}\r\n						$hlink .= $row[$col].\" \";\r\n					}\r\n					$out .= ($hlink) ? \'<li>\' . (($vars) ? \'<a href=\"index.php\'.$vars.\'\">\'.$hlink.\'</a> \' : $hlink) . \'</li>\': \'\';\r\n				}\r\n				$out .= \'</ul>\';\r\n				$colBody[] = td($out);\r\n			} else {\r\n				$colBody[] = td(gTxt(\'no_results_found\'));\r\n			}\r\n		}\r\n		echo tr(join(\" \", $colHead));\r\n		echo tr(join(\" \", $colBody));\r\n	} else {\r\n		// No search criteria, so show orphans\r\n		echo tr(tdcs(tag(smd_wu_gTxt(\'orphan_results\'), \'h2\'), 5));\r\n\r\n		// Reprogram the places/placeTable\r\n		$artkey = array_search(\'articles\', $places);\r\n		if ($artkey !== false) {\r\n			unset($places[$artkey]);\r\n		}\r\n\r\n		// pages/forms/sections to ignore because they are static and cannot be deleted\r\n		$essentials = array(\r\n			\'sections\' => array(\'default\'),\r\n			\'pages\' => array(\'error_default\'),\r\n			\'forms\' => array(\'comments\',\'comments_display\',\'comment_form\',\'default\',\'Links\',\'files\'), // copied from txp_forms\r\n		);\r\n\r\n		$places[] = \'plugins\';\r\n\r\n		$placeTable[\'plugins\'] = array(\'txp_plugin\', \'name\', \'name\', gTxt(\'plugins\'), \'plugin\', \'\', \'#\', \'{name}\');\r\n		$placeTable[\'stylesheets\'] = array(\'txp_css\', \'name\', \'name\', smd_wu_gTxt(\'stylesheets\'), \'css\', \'\', \'name\', \'{name}\');\r\n\r\n		$placeTable[\'forms\'][0] = \"SELECT tf.name FROM \" .safe_pfx(\'txp_form\'). \" AS tf WHERE tf.name NOT IN (\" .doQuote(implode(\"\',\'\",$essentials[\'forms\'])). \") ORDER BY tf.name\"; // Would be nice to exclude forms that reference forms here instead of iterating through them later\r\n		$placeTable[\'pages\'][0] = \"SELECT tp.name FROM \" .safe_pfx(\'txp_section\'). \" AS ts RIGHT JOIN \" .safe_pfx(\'txp_page\'). \" AS tp ON ts.page = tp.name WHERE ts.page IS NULL AND tp.name NOT IN (\" .doQuote(implode(\"\',\'\",$essentials[\'pages\'])). \") ORDER BY tp.name\";\r\n		$placeTable[\'plugins\'][0] = \"SELECT tg.name, tg.code FROM \" .safe_pfx(\'txp_plugin\'). \" AS tg WHERE type < \" .($plugtype+1). \" AND tg.name != \'smd_where_used\' ORDER BY tg.name\";\r\n		$placeTable[\'sections\'][0] = \"SELECT ts.name FROM \" .safe_pfx(\'txp_section\'). \" AS ts LEFT JOIN \" .safe_pfx(\'textpattern\'). \" AS txp ON ts.name = txp.section WHERE ID IS NULL AND ts.name NOT IN (\" .doQuote(implode(\"\',\'\",$essentials[\'sections\'])). \") ORDER BY ts.name\";\r\n		$placeTable[\'stylesheets\'][0] = \"SELECT tc.name FROM \" .safe_pfx(\'txp_section\'). \" AS ts RIGHT JOIN \" .safe_pfx(\'txp_css\'). \" AS tc ON ts.css = tc.name WHERE ts.page IS NULL ORDER BY tc.name\";\r\n\r\n		// For \"awkward\" queries that can\'t be done in one shot, there are three things required per $place:\r\n		//  1: txp table name\r\n		//  2: list of columns to compare\r\n		//  3: method of comparison per column (0 = \"direct match\", 1 = \"like\")\r\n		$cTable = array(\r\n			\'plugins\' => array(\r\n				\'txp_form\' => array(\'form\' => 1),\r\n				\'txp_page\' => array(\'user_html\' => 1),\r\n				\'textpattern\' => array(\'Body\' => 1, \'Excerpt\' => 1),\r\n			),\r\n			\'forms\' => array(\r\n				\'txp_form\' => array(\'form\' => 1),\r\n				\'txp_page\' => array(\'user_html\' => 1),\r\n				\'textpattern\' => array(\'Body\' => 1, \'Excerpt\' => 1, \'override_form\' => 0),\r\n			),\r\n		);\r\n\r\n		// Work on a column at a time\r\n		foreach ($places as $place) {\r\n			$crow = $placeTable[$place];\r\n			$colRefs = do_list($crow[2]);\r\n			$colHead[] = td(strong($crow[3] . (($place == \'plugins\') ? (($plugtype==0) ? smd_wu_gTxt(\'public_plugins\') : smd_wu_gTxt(\'admin_plugins\') ) : \'\') ));\r\n			$rs = startRows($crow[0]);\r\n			if ($rs) {\r\n				$out = \'<ul>\';\r\n				while ($row = nextRow($rs)) {\r\n					// Count the no of records matching this name in each table.\r\n					// Any time this goes above zero, the item is used and it can be ignored\r\n					$fnaliases = array();\r\n					if (array_key_exists($place, $cTable)) {\r\n						// Plugin functions are not necessarily the name of the plugin itself.\r\n						// Find all function definitions and build a list of aliases\r\n						if ($place == \'plugins\') {\r\n							$re = \'/function\\s+([A-Za-z0-9_]+)\\s*\\(/\';\r\n							$num = preg_match_all($re, $row[\'code\'], $fnaliases);\r\n						}\r\n\r\n						$recs = 0;\r\n						foreach ($cTable[$place] as $tbl => $colInfo) {\r\n							if ($recs == 0) {\r\n								$where = array();\r\n								foreach ($colInfo as $colName => $qryType) {\r\n									$where[] = $colName . (($qryType==0) ? \" = \'\" .$row[$colRefs[0]]. \"\'\" : \" LIKE \'%\" .$row[$colRefs[0]]. \"%\'\");\r\n									if (count($fnaliases) > 1) {\r\n										foreach ($fnaliases[1] as $fnalias) {\r\n											$where[] = $colName . (($qryType==0) ? \" = \'\" .$fnalias. \"\'\" : \" LIKE \'%\" .$fnalias. \"%\'\");\r\n										}\r\n									}\r\n								}\r\n								$where = join(\" OR \", $where);\r\n								$recs += safe_count($tbl, $where);\r\n							}\r\n						}\r\n\r\n						// If the item has not been found, flag it\r\n						if ($recs == 0) {\r\n							$colNames = $colRefs;\r\n						} else {\r\n							$colNames = array();\r\n						}\r\n					} else {\r\n						$colNames = $colRefs;\r\n					}\r\n\r\n					// Make up the string to display, and hyperlink it if directed\r\n					$hlink = \'\';\r\n					$vars = \'\';\r\n					foreach ($colNames as $col) {\r\n						$from = \'{\'.$col.\'}\';\r\n						if (strpos($crow[7], $from) !== false) {\r\n							if ($crow[6] == \"#\") {\r\n								$vars = join_qs(array(\"event\" => $crow[4], \"step\" => $crow[5])).$crow[6].strtr($crow[7], array($from => $row[$col]));\r\n							} else {\r\n								$vars = join_qs(array(\"event\" => $crow[4], \"step\" => $crow[5], $crow[6] => strtr($crow[7], array($from => $row[$col]))));\r\n							}\r\n						}\r\n						$hlink .= $row[$col].\" \";\r\n					}\r\n					$out .= ($hlink) ? \'<li>\' . (($vars) ? \'<a href=\"index.php\'.$vars.\'\">\'.$hlink.\'</a> \' : $hlink) . \'</li>\': \'\';\r\n				}\r\n				$out .= \'</ul>\';\r\n				$colBody[] = td($out);\r\n			} else {\r\n				$colBody[] = td(smd_wu_gTxt(\'no_orphans_found\'));\r\n			}\r\n		}\r\n		echo tr(join(\" \", $colHead));\r\n		echo tr(join(\" \", $colBody));\r\n	}\r\n	echo endTable();\r\n}\r\n\r\n// -------------------------------------------------------------\r\n// Plugin-specific replacement strings - localise as required\r\n// -------------------------------------------------------------\r\nfunction smd_wu_gTxt($what, $atts = array()) {\r\n	$lang = array(\r\n		\'admin_plugins\' => \' [ A+P ]\',\r\n		\'public_plugins\' => \' [ P ]\',\r\n		\'exclusion\' => \'Exclude\',\r\n		\'inclusion\' => \'Include\',\r\n		\'filter\' => \'Filter:\',\r\n		\'match_case\' => \'Match case\',\r\n		\'no_orphans_found\' => \'No orphans found.\',\r\n		\'orphan_results\' => \'Possible orphans\',\r\n		\'prefs_link\' => \'Article search fields\',\r\n		\'search_lbl\' => \'Find:\',\r\n		\'search_where_lbl\' => \'Look at:\',\r\n		\'stylesheets\' => \'Stylesheets\',\r\n		\'smd_wu\' => \'Where used\',\r\n		\'whole_word\' => \'Whole words\',\r\n	);\r\n	return strtr($lang[$what], $atts);\r\n}','// -------------------------------------------------------------\r\nif (@txpinterface == \'admin\') {\r\n	add_privs(\'smd_wu\',\'1,2\');\r\n\r\n	// Extensions tab\r\n	register_tab(\'extensions\', \'smd_wu\', smd_wu_gTxt(\'smd_wu\'));\r\n	register_callback(\'smd_wu\', \'smd_wu\');\r\n}\r\n\r\n// -------------------------------------------------------------\r\nfunction smd_wu($event, $step) {\r\n	if(!$step or !in_array($step, array(\r\n			\'smd_wu_search\',\r\n			\'smd_wu_prefsave\',\r\n		))) {\r\n		smd_wu_showform(\'\');\r\n	} else $step();\r\n}\r\n\r\n// -------------------------------------------------------------\r\nfunction smd_wu_showform($message, $term=\'\', $sel=array(), $incl=0, $whole=0, $mode=0, $plugtype=0, $case=0) {\r\n	pagetop(smd_wu_gTxt(\'smd_wu\'),$message);\r\n	$btnSearch = fInput(\'submit\', \'smd_wu_search\', gTxt(\'search\'), \'smallerbox\').sInput(\'smd_wu_search\').hInput(\'plugtype\', (($plugtype==1) ? 0 : 1));\r\n	$btnStyle = \' style=\"border:0;height:25px\"\';\r\n	$place = array(\'sections\',\'pages\',\'forms\',\'stylesheets\',\'articles\');\r\n	$sel = empty($sel) ? unserialize(get_pref(\'smd_wu_look_in\')) : $sel;\r\n	$sel = empty($sel) ? $place : $sel;\r\n\r\n	echo \'<form method=\"post\" name=\"smd_wu_form\">\';\r\n	echo startTable(\'list\');\r\n	echo tr(fLabelCell(smd_wu_gTxt(\'search_lbl\')) . tdcs(fInput(\'text\', \'search_for\', stripslashes($term), \'\', \'\', \'\', 30, \'\', \'smd_search_for\'), 5) . tda($btnSearch, $btnStyle));\r\n	echo tr(fLabelCell(smd_wu_gTxt(\'filter\')).tdcs(radio(\'meth\',0,(($incl==0)?1:0)).smd_wu_gTxt(\'inclusion\').\" \" . radio(\'meth\',1,(($incl==1)?1:0)).smd_wu_gTxt(\'exclusion\'). \" | \" . smd_wu_gTxt(\'whole_word\').checkbox(\'whole\', 1, (($whole==1)?1:0)). \" | \" . smd_wu_gTxt(\'match_case\').checkbox(\'case\', 1, (($case==1)?1:0)), 5));\r\n	$out = \'\';\r\n	foreach ($place as $here) {\r\n		$out .= fLabelCell(ucfirst(gTxt($here)) . checkbox(\'places[]\', $here, in_array($here,$sel)));\r\n	}\r\n	echo tr(fLabelCell(smd_wu_gTxt(\'search_where_lbl\')) . $out);\r\n	echo endTable();\r\n	echo \'</form>\';\r\n\r\n	// Render the prefs checkboxes\r\n	$cols = getThings(\'describe `\'.PFX.\'textpattern`\');\r\n	$flds = do_list(get_pref(\'smd_wu_article_fields\'));\r\n	$flds = empty($flds[0]) ? do_list(\'Body,Excerpt,override_form,Section,Title,Keywords\') : $flds;\r\n\r\n	echo \'<div id=\"smd_wu_prefwrap\"><a id=\"smd_wu_preftog\" href=\"#\">\'.smd_wu_gTxt(\'prefs_link\').\'</a>\';\r\n	echo \'<form method=\"post\" id=\"smd_wu_prefs\" style=\"display:none;\">\';\r\n	foreach ($cols as $col) {\r\n		echo br.checkbox(\'smd_wu_article_fields[]\', $col, (in_array($col, $flds) ? 1 : 0)).sp.$col;\r\n	}\r\n	echo fInput(\'submit\', \'smd_wu_prefsave\', gTxt(\'save\'), \'smallerbox\', \'\', \'\', \'\', \'\', \'smd_wu_prefsave\');\r\n	echo \'</form></div>\';\r\n	echo <<<EOJS\r\n<script type=\"text/javascript\">\r\njQuery(function() {\r\n	jQuery(\"#smd_search_for\").focus();\r\n	jQuery(\"#smd_wu_prefs\").hide();\r\n	jQuery(\"#smd_wu_preftog\").click(function() {\r\n		jQuery(\"#smd_wu_prefs\").toggle(\'fast\');\r\n		return false;\r\n	});\r\n	jQuery(\"#smd_wu_prefsave\").click(function() {\r\n		var out = [];\r\n		jQuery(\"#smd_wu_prefs input:checked\").each(function() {\r\n			out.push(jQuery(this).val());\r\n		});\r\n\r\n		sendAsyncEvent(\r\n			{\r\n				event: textpattern.event,\r\n				step: \'smd_wu_prefsave\',\r\n				smd_wu_article_fields: out.join(\',\')\r\n			}\r\n		);\r\n		jQuery(\"#smd_wu_prefs\").toggle(\'fast\');\r\n		return false;\r\n	});\r\n});\r\n</script>\r\n<style type=\"text/css\">\r\n#smd_wu_prefwrap {\r\n	width:140px;\r\n	margin:10px auto 0;\r\n}\r\n</style>\r\nEOJS;\r\n}\r\n\r\n// -------------------------------------------------------------\r\nfunction smd_wu_prefsave() {\r\n	$cols = getThings(\'describe `\'.PFX.\'textpattern`\');\r\n	$fields = do_list(gps(\'smd_wu_article_fields\'));\r\n	$oflds = array();\r\n	foreach($fields as $fld) {\r\n		if (in_array($fld, $cols)) {\r\n			$oflds[] = $fld;\r\n		}\r\n	}\r\n	set_pref(\'smd_wu_article_fields\', join(\',\',$oflds), \'smd_wu\', PREF_HIDDEN, \'text_input\');\r\n	send_xml_response();\r\n}\r\n\r\n// -------------------------------------------------------------\r\nfunction smd_wu_search() {\r\n	extract(doSlash(gpsa(array(\'search_for\'))));\r\n	$whole = gps(\'whole\');\r\n	$case = gps(\'case\'); // 0 = case insensitive, 1 = case sensitive\r\n	$caseSense = ($case==1) ? \' BINARY \' : \'\';\r\n	$meth = gps(\'meth\'); // 0 = include, 1 = exclude\r\n	$plugtype = gps(\'plugtype\'); // 0 = public, 1 = 0+admin, 2 = 1+library\r\n	$plugtype = (is_numeric($plugtype) && $plugtype < 3) ? $plugtype : 0;\r\n	$joinme = ($meth == 0) ? \" OR \" : \" AND \";\r\n	$places = gps(\'places\');\r\n	$places = is_array($places) ? $places : array();\r\n	set_pref(\'smd_wu_look_in\', serialize($places), \'smd_wu\', PREF_HIDDEN, \'text_input\');\r\n	$mode = ($search_for) ? 0 : 1;\r\n	smd_wu_showform(\'\', $search_for, $places, $meth, $whole, $mode, $plugtype, $case);\r\n\r\n	$artflds = get_pref(\'smd_wu_article_fields\');\r\n	$artflds = empty($artflds) ? \'Body,Excerpt,override_form,Section,Title,Keywords\' : $artflds;\r\n\r\n	// Entries in the placeTable array are:\r\n	//  0: Table to search\r\n	//  1: Column to search\r\n	//  2: Column to return\r\n	//  3: Heading to display if results found\r\n	//  4: Event of destination URL\r\n	//  5: Step of destination URL\r\n	//  6: Additional URL var\r\n	//  7: Additional URL var replacement (used in strtr)\r\n	$placeTable = array(\r\n		\'pages\' => array(\'txp_page\', \'user_html\', \'name\', gTxt(\'pages\'), \'page\', \'\', \'name\', \'{name}\', \'\'),\r\n		\'forms\' => array(\'txp_form\', \'form\', \'name\', gTxt(\'forms\'), \'form\', \'form_edit\', \'name\', \'{name}\', \'\'),\r\n		\'articles\' => array(\'textpattern\', $artflds, \'ID,title\', gTxt(\'articles\'), \'article\', \'edit\', \'ID\', \'{ID}\', \'\'),\r\n		\'sections\' => array(\'txp_section\', \'page,css\', \'name\', gTxt(\'sections\'), \'section\', \'\', \'#\', \'section-{name}\', \'\'),\r\n		\'stylesheets\' => array(\'txp_css\', \'css\', \'name\', smd_wu_gTxt(\'stylesheets\'), \'css\', \'\', \'name\', \'{name}\', \'\'),\r\n	);\r\n\r\n	$rs = array();\r\n	echo n.\'<hr width=\"50%\" />\';\r\n	echo startTable(\'list\');\r\n	$colHead = array();\r\n	$colBody = array();\r\n\r\n	if ($search_for) {\r\n		echo tr(tdcs(tag(gTxt(\'search_results\'), \'h2\'), 5));\r\n		foreach ($places as $place) {\r\n			$crow = $placeTable[$place];\r\n			$where = array();\r\n			$witems = do_list($crow[1]);\r\n			$list = do_list($crow[2]);\r\n\r\n			foreach ($witems as $item) {\r\n				$where[] = $caseSense . $item . (($meth==1) ? \' NOT\' : \'\') . (($whole==1) ? \' REGEXP \\\'[[:<:]]\'.$search_for.\'[[:>:]]\\\'\' : \" LIKE \'%$search_for%\'\");\r\n			}\r\n			$rs = safe_rows($crow[2], $crow[0], \'(\'.join($joinme, $where).\') ORDER BY \'.$list[0]);\r\n			$colHead[] = td(strong($crow[3]));\r\n			if ($rs) {\r\n				$out = \'<ul>\';\r\n				foreach ($rs as $row) {\r\n					$hlink = \'\';\r\n					$vars = \'\';\r\n					foreach ($list as $col) {\r\n						$from = \'{\'.$col.\'}\';\r\n						if (strpos($crow[7], $from) !== false) {\r\n							if ($crow[6] == \"#\") {\r\n								$vars = join_qs(array(\"event\" => $crow[4], \"step\" => $crow[5])).$crow[6].strtr($crow[7], array($from => $row[$col]));\r\n							} else {\r\n								$vars = join_qs(array(\"event\" => $crow[4], \"step\" => $crow[5], $crow[6] => strtr($crow[7], array($from => $row[$col]))));\r\n							}\r\n						}\r\n						$hlink .= $row[$col].\" \";\r\n					}\r\n					$out .= ($hlink) ? \'<li>\' . (($vars) ? \'<a href=\"index.php\'.$vars.\'\">\'.$hlink.\'</a> \' : $hlink) . \'</li>\': \'\';\r\n				}\r\n				$out .= \'</ul>\';\r\n				$colBody[] = td($out);\r\n			} else {\r\n				$colBody[] = td(gTxt(\'no_results_found\'));\r\n			}\r\n		}\r\n		echo tr(join(\" \", $colHead));\r\n		echo tr(join(\" \", $colBody));\r\n	} else {\r\n		// No search criteria, so show orphans\r\n		echo tr(tdcs(tag(smd_wu_gTxt(\'orphan_results\'), \'h2\'), 5));\r\n\r\n		// Reprogram the places/placeTable\r\n		$artkey = array_search(\'articles\', $places);\r\n		if ($artkey !== false) {\r\n			unset($places[$artkey]);\r\n		}\r\n\r\n		// pages/forms/sections to ignore because they are static and cannot be deleted\r\n		$essentials = array(\r\n			\'sections\' => array(\'default\'),\r\n			\'pages\' => array(\'error_default\'),\r\n			\'forms\' => array(\'comments\',\'comments_display\',\'comment_form\',\'default\',\'Links\',\'files\'), // copied from txp_forms\r\n		);\r\n\r\n		$places[] = \'plugins\';\r\n\r\n		$placeTable[\'plugins\'] = array(\'txp_plugin\', \'name\', \'name\', gTxt(\'plugins\'), \'plugin\', \'\', \'#\', \'{name}\');\r\n		$placeTable[\'stylesheets\'] = array(\'txp_css\', \'name\', \'name\', smd_wu_gTxt(\'stylesheets\'), \'css\', \'\', \'name\', \'{name}\');\r\n\r\n		$placeTable[\'forms\'][0] = \"SELECT tf.name FROM \" .safe_pfx(\'txp_form\'). \" AS tf WHERE tf.name NOT IN (\" .doQuote(implode(\"\',\'\",$essentials[\'forms\'])). \") ORDER BY tf.name\"; // Would be nice to exclude forms that reference forms here instead of iterating through them later\r\n		$placeTable[\'pages\'][0] = \"SELECT tp.name FROM \" .safe_pfx(\'txp_section\'). \" AS ts RIGHT JOIN \" .safe_pfx(\'txp_page\'). \" AS tp ON ts.page = tp.name WHERE ts.page IS NULL AND tp.name NOT IN (\" .doQuote(implode(\"\',\'\",$essentials[\'pages\'])). \") ORDER BY tp.name\";\r\n		$placeTable[\'plugins\'][0] = \"SELECT tg.name, tg.code FROM \" .safe_pfx(\'txp_plugin\'). \" AS tg WHERE type < \" .($plugtype+1). \" AND tg.name != \'smd_where_used\' ORDER BY tg.name\";\r\n		$placeTable[\'sections\'][0] = \"SELECT ts.name FROM \" .safe_pfx(\'txp_section\'). \" AS ts LEFT JOIN \" .safe_pfx(\'textpattern\'). \" AS txp ON ts.name = txp.section WHERE ID IS NULL AND ts.name NOT IN (\" .doQuote(implode(\"\',\'\",$essentials[\'sections\'])). \") ORDER BY ts.name\";\r\n		$placeTable[\'stylesheets\'][0] = \"SELECT tc.name FROM \" .safe_pfx(\'txp_section\'). \" AS ts RIGHT JOIN \" .safe_pfx(\'txp_css\'). \" AS tc ON ts.css = tc.name WHERE ts.page IS NULL ORDER BY tc.name\";\r\n\r\n		// For \"awkward\" queries that can\'t be done in one shot, there are three things required per $place:\r\n		//  1: txp table name\r\n		//  2: list of columns to compare\r\n		//  3: method of comparison per column (0 = \"direct match\", 1 = \"like\")\r\n		$cTable = array(\r\n			\'plugins\' => array(\r\n				\'txp_form\' => array(\'form\' => 1),\r\n				\'txp_page\' => array(\'user_html\' => 1),\r\n				\'textpattern\' => array(\'Body\' => 1, \'Excerpt\' => 1),\r\n			),\r\n			\'forms\' => array(\r\n				\'txp_form\' => array(\'form\' => 1),\r\n				\'txp_page\' => array(\'user_html\' => 1),\r\n				\'textpattern\' => array(\'Body\' => 1, \'Excerpt\' => 1, \'override_form\' => 0),\r\n			),\r\n		);\r\n\r\n		// Work on a column at a time\r\n		foreach ($places as $place) {\r\n			$crow = $placeTable[$place];\r\n			$colRefs = do_list($crow[2]);\r\n			$colHead[] = td(strong($crow[3] . (($place == \'plugins\') ? (($plugtype==0) ? smd_wu_gTxt(\'public_plugins\') : smd_wu_gTxt(\'admin_plugins\') ) : \'\') ));\r\n			$rs = startRows($crow[0]);\r\n			if ($rs) {\r\n				$out = \'<ul>\';\r\n				while ($row = nextRow($rs)) {\r\n					// Count the no of records matching this name in each table.\r\n					// Any time this goes above zero, the item is used and it can be ignored\r\n					$fnaliases = array();\r\n					if (array_key_exists($place, $cTable)) {\r\n						// Plugin functions are not necessarily the name of the plugin itself.\r\n						// Find all function definitions and build a list of aliases\r\n						if ($place == \'plugins\') {\r\n							$re = \'/function\\s+([A-Za-z0-9_]+)\\s*\\(/\';\r\n							$num = preg_match_all($re, $row[\'code\'], $fnaliases);\r\n						}\r\n\r\n						$recs = 0;\r\n						foreach ($cTable[$place] as $tbl => $colInfo) {\r\n							if ($recs == 0) {\r\n								$where = array();\r\n								foreach ($colInfo as $colName => $qryType) {\r\n									$where[] = $colName . (($qryType==0) ? \" = \'\" .$row[$colRefs[0]]. \"\'\" : \" LIKE \'%\" .$row[$colRefs[0]]. \"%\'\");\r\n									if (count($fnaliases) > 1) {\r\n										foreach ($fnaliases[1] as $fnalias) {\r\n											$where[] = $colName . (($qryType==0) ? \" = \'\" .$fnalias. \"\'\" : \" LIKE \'%\" .$fnalias. \"%\'\");\r\n										}\r\n									}\r\n								}\r\n								$where = join(\" OR \", $where);\r\n								$recs += safe_count($tbl, $where);\r\n							}\r\n						}\r\n\r\n						// If the item has not been found, flag it\r\n						if ($recs == 0) {\r\n							$colNames = $colRefs;\r\n						} else {\r\n							$colNames = array();\r\n						}\r\n					} else {\r\n						$colNames = $colRefs;\r\n					}\r\n\r\n					// Make up the string to display, and hyperlink it if directed\r\n					$hlink = \'\';\r\n					$vars = \'\';\r\n					foreach ($colNames as $col) {\r\n						$from = \'{\'.$col.\'}\';\r\n						if (strpos($crow[7], $from) !== false) {\r\n							if ($crow[6] == \"#\") {\r\n								$vars = join_qs(array(\"event\" => $crow[4], \"step\" => $crow[5])).$crow[6].strtr($crow[7], array($from => $row[$col]));\r\n							} else {\r\n								$vars = join_qs(array(\"event\" => $crow[4], \"step\" => $crow[5], $crow[6] => strtr($crow[7], array($from => $row[$col]))));\r\n							}\r\n						}\r\n						$hlink .= $row[$col].\" \";\r\n					}\r\n					$out .= ($hlink) ? \'<li>\' . (($vars) ? \'<a href=\"index.php\'.$vars.\'\">\'.$hlink.\'</a> \' : $hlink) . \'</li>\': \'\';\r\n				}\r\n				$out .= \'</ul>\';\r\n				$colBody[] = td($out);\r\n			} else {\r\n				$colBody[] = td(smd_wu_gTxt(\'no_orphans_found\'));\r\n			}\r\n		}\r\n		echo tr(join(\" \", $colHead));\r\n		echo tr(join(\" \", $colBody));\r\n	}\r\n	echo endTable();\r\n}\r\n\r\n// -------------------------------------------------------------\r\n// Plugin-specific replacement strings - localise as required\r\n// -------------------------------------------------------------\r\nfunction smd_wu_gTxt($what, $atts = array()) {\r\n	$lang = array(\r\n		\'admin_plugins\' => \' [ A+P ]\',\r\n		\'public_plugins\' => \' [ P ]\',\r\n		\'exclusion\' => \'Exclude\',\r\n		\'inclusion\' => \'Include\',\r\n		\'filter\' => \'Filter:\',\r\n		\'match_case\' => \'Match case\',\r\n		\'no_orphans_found\' => \'No orphans found.\',\r\n		\'orphan_results\' => \'Possible orphans\',\r\n		\'prefs_link\' => \'Article search fields\',\r\n		\'search_lbl\' => \'Find:\',\r\n		\'search_where_lbl\' => \'Look at:\',\r\n		\'stylesheets\' => \'Stylesheets\',\r\n		\'smd_wu\' => \'Where used\',\r\n		\'whole_word\' => \'Whole words\',\r\n	);\r\n	return strtr($lang[$what], $atts);\r\n}','7deec62596fd41cc12a55b18c4ae9cbf',3,5,0),
	('cbe_frontauth',1,'Claire Brione','http://www.clairebrione.com/','0.9.7','Manage backend connections from frontend','<div id=\"cbe-plugin-help\">\n<h1>cbe_frontauth</h1>\n\n<p>This client-side plugin lets your users (or you) manage backend connection from frontend, i.e. connect and disconnect as they (you) would do from backend.\n<br />You can thus make things visible and open actions for connected users only.</p>\n<p>Developed and tested with Textpattern 4.4.1, then 4.5-beta.</p>\n<p class=\"readme\">Please read the first <a href=\"#quick-start\">Quick start</a> paragraph to avoid (as much as possible) unexpected behaviors.</p>\n<p>A few examples (in french) can be found in the <a href=\"http://www.clairebrione.com/demo-cbe_frontauth\">demonstration page</a>.</p>\n\n<h2>Table of contents</h2>\n<ul>\n  <li><a href=\"#features\">Features</a></li>\n  <li><a href=\"#dl-install-supp\">Download, installation, support</a></li>\n  <li><a href=\"#tags-list\">Tags list</a></li>\n  <li><a href=\"#notations\">Notations</a></li>\n  <li><a href=\"#quick-start\">Quick start</a></li>\n  <li><a href=\"#individual-elements\">Take control on individual elements</a></li>\n  <li><a href=\"#additional-tags\">Additional and special tags</a></li>\n  <li><a href=\"#callbacks\">Callbacks</a></li>\n  <li><a href=\"#how-to\">How-to: ideas and snippets</a></li>\n  <li><a href=\"#advanced-usage\">Advanced usage</a></li>\n  <li><a href=\"#changelog\">Changelog</a></li>\n</ul>\n\n<h2 id=\"features\">Features</h2>\n\n<ul>\n  <li>automatically generate a <a href=\"#login-logout-box\">login/logout box</a>...</li>\n  <li>... or independent <a href=\"#login-area\">login</a> or <a href=\"#logout-area\">logout</a> forms and links</li>\n  <li>choose if th user must connect with his/her <a href=\"#login-method\">username, or email address, or one of both</a></li>\n  <li>show/hide content depending on whether a user is connected or not (see <a href=\"#protect-parts\">protect parts of a page</a>)</li>\n  <li>set <a href=\"#automatic-redirect\">automatic redirections</a> after login and/or logout</li>\n  <li>optional: define your own default values for <a href=\"#setting-invites\">login/logout invites</a> and <a href=\"#setting-labels\">button/link labels</a>, <a href=\"#login-method\">define login method</a></li>\n  <li>override these values anywhere in the page if you need to</li>\n  <li>also provides <a href=\"#additional-tags\">additional tags</a> to ease scripter\'s life</li>\n  <li>and <a href=\"#callbacks\">hooks for callback functions</a> primarily in order to reset or change user\'s password</li>\n</ul>\n\n<h2 id=\"dl-install-supp\">Download, installation, support</h2>\n<p>Download from <a href=\"http://textpattern.org/plugins/1234/cbe_frontauth\">textpattern resources</a> or the <a href=\"http://www.clairebrione.com/cbe_frontauth\">plugin page</a>.</p>\n<p>Copy/paste in the Admin > Plugins tab to install or uninstall, activate or desactivate.</p>\n<p>Visit the <a href=\"http://forum.textpattern.com/viewtopic.php?id=36552\">forum thread</a> for support.</p>\n\n<h2 id=\"tags-list\">Tags list</h2>\n\n<p>Alphabetically:\n<br /><a href=\"#advanced-usage\">cbe_frontauth</a>\n<br /><a href=\"#path-backend\">cbe_frontauth_backend</a>\n<br /><a href=\"#login-logout-box\">cbe_frontauth_box</a>\n<br /><a href=\"#edit-article\">cbe_frontauth_edit_article</a>\n<br /><a href=\"#protect-parts\">cbe_frontauth_if_connected</a>\n<br /><a href=\"#setting-invites\">cbe_frontauth_invite</a>\n<br /><a href=\"#setting-labels\">cbe_frontauth_label</a>\n<br /><a href=\"#link-generation\">cbe_frontauth_link</a>\n<br /><a href=\"#protect-parts\">cbe_frontauth_if_logged</a>\n<br /><a href=\"#login-area\">cbe_frontauth_login</a>\n<br /><a href=\"#login-method\">cbe_frontauth_loginwith</a>\n<br /><a href=\"#form-elements\">cbe_frontauth_logname</a>\n<br /><a href=\"#logout-area\">cbe_frontauth_logout</a>\n<br /><a href=\"#form-elements\">cbe_frontauth_password</a>\n<br /><a href=\"#protect-parts\">cbe_frontauth_protect</a>\n<br /><a href=\"#automatic-redirect\">cbe_frontauth_redirect</a>\n<br /><a href=\"#form-elements\">cbe_frontauth_reset</a>\n<br /><a href=\"#form-elements\">cbe_frontauth_stay</a>\n<br /><a href=\"#form-elements\">cbe_frontauth_submit</a>\n<br /><a href=\"#user-info\">cbe_frontauth_whois</a>\n</p>\n\n<h2 id=\"notations\">Notations</h2>\n\n<p><code>Tags and examples are presented with this typography</code> (fixed width).</p>\n<p>Possible values for attributes are separated by a \"<code> | </code>\" (pipe).</p>\n<p><b>Bold</b> means default value.</p>\n<p>\"<code>...</code>\" (ellipsis) is to be replaced by any custom value, usually a string.</p>\n<p>Attributes surrounded by \"<code>[</code>\" and \"<code>]</code>\" (square brackets) are optional.</p>\n\n<h2 id=\"quick-start\">Quick start</h2>\n\n<p>Message strings are customisable by editing them in the function _cbe_fa_lang(). When possible, their default values are pulled from the language table. In most cases, you won\'t have to edit them as they are already localised.</p>\n\n<p class=\"readme\">What you have to know and care about :</p>\n<ul>\n  <li>The login/logout mechanism relies on cookies. A cookie is attached to one, and only one, subdomain.</li>\n  <li><code>http://domain.tld</code> and <code>http://www.domain.tld</code> are <b>different</b> subdomains, even if you present the same content through both URLs.</li>\n</ul>\n<p>=> You will have to choose which base URL you want to use (with or without www) and stick to it along all the navigation. This is also a good practice to avoid duplicate content.</p>\n\n<p>Here is how to:</p>\n<p>1. Plugin load order: as it handles redirections, it has to be loaded before any other plugin. Set by default to <b>4</b>, adjust according to your needs.</p>\n<p>2. Admin > Preferences : give (or verify) your site URL and save.</p>\n<p>3. Edit the <code>.htaccess</code> file located at the root of your site, and append as closer as possible to <code>RewriteEngine On</code> (replace <code>domain.tld</code> with your actual URL):</p>\n\n<p>EITHER, with www</p>\n<pre><code>RewriteCond %{HTTP_HOST} !^www\\.domain\\.tld$ [NC]\nRewriteRule ^(.*) http://www.domain.tld/$1 [QSA,R=301,L]</code></pre>\n\n<p>OR, without www</p>\n<pre><code>RewriteCond %{HTTP_HOST} ^www\\.domain\\.tld$ [NC]\nRewriteRule ^(.*) http://domain.tld/$1 [QSA,R=301,L]</code></pre>\n\n<p><span class=\"accent\">It\'s time now to start using the plugin</span>: <a href=\"#login-logout-box\">allow users to login and logout</a>, <a href=\"#automatic-redirect\">redirecting them</a> (or not) after login and/or logout, <a href=\"#protect-parts\">serve them special content</a>, <a href=\"#individual-elements\">the rest is up to you</a>.</p>\n\n<p><code>wraptag</code>, <code>class</code>, <code>break</code> and <code>breakclass</code> are supported by every tag and both default to <b>unset</b>.</p>\n\n<h3 id=\"login-logout-box\">Login/logout box: &lt;txp:cbe_frontauth_box /&gt;</h3>\n\n<pre><code>&lt;txp:cbe_frontauth_box\n  [ login_invite=\"<b>Connect to textpattern</b> | ...\"\n    logout_invite=\"<b>none</b> | ...\"\n    tag_invite=\"...\"\n    login_label=\"...\"\n    logout_label=\"...\"\n    logout_type=\"<b>button</b> | link\"\n    tag_error=\"<b>span</b>\" class_error=\"<b>cbe_fa_error</b>\"\n    wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\" ] /&gt;</code></pre>\n\n<p>Displays\n<br />- simple login form if not connected\n<br />- \"connected as {login name}\" and a logout button or link if connected\n</p>\n\n<p>If login fails, a basic message will appear just before the login form. You can customise its wrapping tag and class.</p>\n\n<p>If you don\'t want \"connected as\" message, use as a container tag and put a blank or <a href=\"#box-ideas\">anything else</a> in between:</p>\n<pre><code>&lt;txp:cbe_frontauth_box&gt; &lt;/txp:cbe_frontauth_box&gt;</code></pre>\n\n<h3 id=\"protect-parts\">Protect parts of a page: &lt;txp:cbe_frontauth_protect /&gt;, &lt;txp:cbe_frontauth_if_logged /&gt; and &lt;txp:cbe_frontauth_if_connected /&gt;</h3>\n\n<pre><code>&lt;txp:cbe_frontauth_protect\n  [ name=\"<b>none</b> | comma-separated values\"\n    level=\"<b>none</b> | comma-separated values\"\n    link=\"<b>none</b> | url\"\n    linklabel=\"<b>none</b> | anchor\"\n    target=\"<b>_self</b> | _blank\"\n    wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\" ]&gt;\n  What to protect\n&lt;txp:else /&gt;\n  What to display if not connected\n&lt;/txp:cbe_frontauth_protect&gt;</code></pre>\n<p>Synonyms: <code>&lt;txp:cbe_frontauth_if_connected /&gt;</code> <code>&lt;txp:cbe_frontauth_if_logged /&gt;</code> if you find one of these forms more convenient</p>\n\n<p>If connected, you can automatically add a link to click to go somewhere. This link will show first (before any other content).\n<br />You do this using the attributes <code>link</code>, <code>linklabel</code>, optionally <code>target</code> (\"_self\" opens the link in the same window/tab, \"_blank\" in a new window/tab).\n</p>\n\n<p>If you want to display the link anywhere else, or display more than one link, or conditionally show a link, prefer <a href=\"#link-generation\">&lt;txp:cbe_frontauth_link /&gt;</a></p>\n\n<h3 id=\"login-method\">Login method &lt;txp:cbe_frontauth_loginwith /&gt;</h3>\n\n<p>What to use as login name : username (as textpattern usually does), email, or auto for automatic detection.</p>\n<p><span class=\"readme\">Caution if using email login method</span> : textpattern doesn\'t check for duplicate email addresses upon user creation. If someone tries to log in using such an address, it will fail.</p>\n\n<pre><code>&lt;txp:cbe_frontauth_loginwith\n    value=\"<b>auto</b> | username | email\" /&gt;</code></pre>\n\n<h3 id=\"automatic-redirect\">Automatic redirect: &lt;txp:cbe_frontauth_redirect /&gt;</h3>\n\n<p>User will be automatically redirected after successful login and/or logout.\n<br />Use this tag before any other cbe_frontauth_* as it sets redirection(s) for the whole page.</p>\n\n<pre><code>&lt;txp:cbe_frontauth_redirect\n    for=\"login | logout | login,logout\"\n    value=\"after_login_url | after_logout_url | after_login_url,after_logout_url\" /&gt;</code></pre>\n\n<p>In other words and in details:</p>\n<p><code>&lt;txp:cbe_frontauth_redirect for=\"login\" value=\"after_login_url\" /&gt;</code>\n<br />sets automatic redirection after login</p>\n<p><code>&lt;txp:cbe_frontauth_redirect for=\"logout\" value=\"after_logout_url\" /&gt;</code>\n<br />sets automatic redirection after logout</p>\n<p><code>&lt;txp:cbe_frontauth_redirect for=\"login\" value=\"after_login_url\" /&gt;\n&lt;txp:cbe_frontauth_redirect for=\"logout\" value=\"after_logout_url\" /&gt;</code>\n<br />sets automatic redirection for both</p>\n<p><code>&lt;txp:cbe_frontauth_redirect for=\"login,logout\" value=\"after_login_url,after_logout_url\" /&gt;</code>\n<br />sets automatic redirection for both too</p>\n\n<h3 id=\"setting-invites\">Setting invites globally for the whole page: &lt;txp:cbe_frontauth_invite /&gt;</h3>\n\n<p>Works the same way <a href=\"#automatic-redirect\">as above</a>:</p>\n<p><pre><code>&lt;txp:cbe_frontauth_invite for=\"...\" value=\"...\" /&gt;</code></pre></p>\n<p>Combinations: <code>login, logout (or logged), tag</code></p>\n<p>Synonym: <code>logged</code> for logout, if you find this form more convenient. <span class=\"accent\">As synonyms they are mutually exclusive</span> and if both used <code>logout</code> will take precedence.</p>\n<p>Can be overridden by any tag that has <code>invite</code> as attribute.</p>\n\n<p>Example:</p>\n<pre><code>&lt;txp:cbe_frontauth_invite for=\"login,logout,tag\" invite=\"Please login,You can logout here,h2\" /&gt;\n&lt;txp:cbe_frontauth_box /&gt;\n  ... Your page here ...\n  ... and in the footer, for example ...\n&lt;txp:cbe_frontauth_login invite=\"Say hello !\" tag_invite=\"span\" /&gt;\n</code></pre>\n\n<h3 id=\"setting-labels\">Setting button and link labels globally for the whole page: &lt;txp:cbe_frontauth_label /&gt;</h3>\n\n<p>Works the same way <a href=\"#automatic-redirect\">as above</a> too:</p>\n<p><pre><code>&lt;txp:cbe_frontauth_label for=\"...\" value=\"...\" /&gt;</code></pre></p>\n<p>Combinations: <code>login, logout</code></p>\n<p>Can be overridden by any tag that has <code>label</code> as attribute.</p>\n\n<h2 id=\"individual-elements\">Take control on individual elements</h2>\n\n<h3 id=\"login-area\">Login area: &lt;txp:cbe_frontauth_login /&gt;</h3>\n\n<pre><code>&lt;txp:cbe_frontauth_login\n  [ invite=\"<b>Connect to textpattern</b> | ...\"\n    tag_invite=\"<b>none</b> | ...\"\n    ( {label=\"<b>Login</b>|...\" show_stay=\"<b>0</b>|1\" show_reset=\"0|<b>1</b>\"} | form=\"<b>none</b>|form name\" )\n    tag_error=\"<b>span</b>\" class_error=\"<b>cbe_fa_error</b>\"\n    wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\" ] /&gt;\n\n&lt;txp:cbe_frontauth_login\n  [ invite=\"<b>Connect to textpattern</b> | ...\"\n    tag_invite=\"<b>none</b> | ...\"\n    tag_error=\"<b>span</b>\" class_error=\"<b>cbe_fa_error</b>\"\n    wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\" ]&gt;\n   form elements\n&lt;/txp:cbe_frontauth_login&gt;</code></pre>\n\n<p>If login fails, a basic message will appear just before the login form. You can customise its wrapping tag and class.</p>\n\n<p id=\"form-elements\" >Where <code>form elements</code> are:</p>\n<pre><code>&lt;txp:cbe_frontauth_logname [label=\"<b>Name</b>|...\" wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\"] /&gt;\n&lt;txp:cbe_frontauth_password [label=\"<b>Password</b>|...\" wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\"] /&gt;\n&lt;txp:cbe_frontauth_stay [label=\"<b>Stay connected with this browser</b>|...\" wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\"] /&gt;\n&lt;txp:cbe_frontauth_reset [label=\"<b>Password forgotten ?</b>|...\" wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\"] /&gt;\n&lt;txp:cbe_frontauth_submit [label=\"<b>Login</b>|...\" wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\"] /&gt;</code></pre>\n\n<h3 id=\"logout-area\">Logout area: &lt;txp:cbe_frontauth_logout /&gt;</h3>\n\n<pre><code>&lt;txp:cbe_frontauth_logout\n  [ invite=\"<b>none</b>|...\"\n    tag_invite=\"<b>none</b>|...\"\n    ( {label=\"<b>Logout</b>|...\" type=\"<b>button</b>|link\" show_change=\"0|<b>1</b>} | form=\"<b>none</b>|form name\")\n    wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\" ] /&gt;\n\n&lt;txp:cbe_frontauth_logout\n  [ invite=\"<b>none</b>|...\"\n    tag_invite=\"<b>none</b>|...\"\n    wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\" ]&gt;\n   form elements\n&lt;/txp:cbe_frontauth_logout&gt;</code></pre>\n\n<p>Where <code>form elements</code> are:</p>\n<pre><code>&lt;txp:cbe_frontauth_submit type=\"logout\" [label=\"<b>Logout</b>|...\" wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\"] /&gt;\n&lt;txp:cbe_frontauth_link link=\"logout=1\" target=\"_get\" [label=\"...\" wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\"] /&gt;</code></pre>\n\n<h2 id=\"additional-tags\">Additional and special tags</h2>\n\n<h3 id=\"user-info\">Connected user information: &lt;txp:cbe_frontauth_whois /&gt;</h3>\n\n<pre><code>&lt;txp:cbe_frontauth_whois [type=\"[<b>name</b>][, RealName][, email][, privs][, last_access]\" format=\"<b>as set in preferences</b>|since|rfc822|iso8601|w3cdtf|strftime() string value\" wraptag=\"...\" break=\"...\" class=\"...\" breakclass=\"...\"] /&gt;</code></pre>\n<p><code>format</code> applies to <code>last_access</code> if present.</p>\n\n<h3 id=\"path-backend\">Path to Textpattern backend: &lt;txp:cbe_frontauth_backend /&gt;</h3>\n\n<pre><code>&lt;txp:cbe_frontauth_backend /&gt;</code></pre>\n\n<p>Returns path to textpattern root (in most cases /textpattern/index.php).</p>\n\n<h3 id=\"edit-article\">Direct button or link to edit current article (write article)</h3>\n\n<p>In an individual article form or enclosed in <code>&lt;txp:if_individual_article&gt; &lt;/txp:if_individual_article&gt;</code>:</p>\n\n<pre><code>&lt;txp:cbe_frontauth_if_connected&gt;\n    &lt;txp:cbe_frontauth_edit_article label=\"<b>edit</b>|...\"  type=\"<b>button</b>|link\" wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\" /&gt;\n&lt;/txp:cbe_frontauth_if_connected&gt;</code></pre>\n\n<p><span class=\"accent\">Why use a button rather than a link ?</span> Answer: as it is enclosed in an HTML form, it allows to go to the edit page without showing parameters in the URL.</p>\n\n<h3 id=\"link-generation\">Link generation: &lt;txp:cbe_frontauth_link /&gt;</h3>\n\n<pre><code>&lt;txp:cbe_frontauth_link label=\"...\" link=\"...\" [target=\"<b>_self</b>|_blank|_get\" wraptag=\"...\" class=\"...\" break=\"...\" breakclass=\"...\"] /&gt;</code></pre>\n\n<p><code>class</code> applies to the anchor if there is no <code>wraptag</code> supplied.</p>\n<p><code>_get</code> will add <code>link</code> to the current URL, for example:</p>\n<p>URL : http://www.example.com/page\n<br /><code>&lt;txp:cbe_frontauth_link label=\"Logout\" link=\"logout=1\" target=\"_get\" /&gt;</code>\n<br />URL Result : http://www.example.com/page?logout=1</p>\n\n<h2 id=\"callbacks\">Callbacks</h2>\n<p>They have been introduced to hook cbe_frontauth\'s companion, <a href=\"/cbe_members\">cbe_members</a> (see details in the table below).</p>\n<table class=\"list\">\n  <tr> <th>Event</th> <th>Step</th> <th>What it is</th> </tr>\n  <tr> <td><code>cbefrontauth.reset_password</code></td> <td><code>cbe_fa_before_login</code></td> <td>Triggered before showing login form, when resetting password is in progress.<br />If cbe_members is installed, displays here the \"reset password\" form, or performs the actual reset if the form is successfully filled in.</td> </tr>\n  <tr> <td><code>cbefrontauth.reset_password</code></td> <td><code>cbe_fa_after_login</code></td> <td>Triggered after showing login form.<br />If cbe_members is installed, displays a link to the \"reset password\" form.</td> </tr>\n  <tr> <td><code>cbefrontauth.change_password</code></td> <td><code>cbe_fa_before_logout</code></td> <td>Triggered before showing logout form, when changing password is in progress.<br />If cbe_members is installed, displays the \"change password\" form, or performs the actual change if the form is successfully filled in.</td> </tr>\n  <tr> <td><code>cbefrontauth.change_password</code></td> <td><code>cbe_fa_after_logout</code></td> <td>Triggered after showing logout form.<br />If cbe_members is installed, displays a link to the \"change password\" form.</td> </tr>\n</table>\n\n<h2 id=\"how-to\">How-to: ideas and snippets</h2>\n\n<h3 id=\"box-ideas\">For login/logout box</h3>\n\n<p>Replace the standard message with something else:</p>\n<pre><code>&lt;txp:cbe_frontauth_box&gt;Welcome !&lt;/txp:cbe_frontauth_box&gt;</code></pre>\n\n<p>Or even:</p>\n<pre><code>&lt;txp:cbe_frontauth_box&gt;Greetings &lt;txp:cbe_frontauth_whois type=\"RealName\" /&gt; !&lt;/txp:cbe_frontauth_box&gt;</code></pre>\n\n<h3 id=\"invites-ideas\">For invites</h3>\n<pre><code>&lt;txp:cbe_frontauth_invite for=\"logged\" value=\'&lt;txp:cbe_frontauth_whois type=\"RealName\" /&gt;\' /&gt;</code></pre>\n<p>Note: if a user is connected, the login invite doesn\'t show and the logout invite takes its place. So we could use <code>for=\"logout\"</code> as well.</p>\n\n<h3 id=\"greeting-message\">A greeting message</h3>\n<pre><code>Greetings &lt;txp:cbe_frontauth_if_connected&gt;&lt;txp:cbe_frontauth_whois type=\"RealName\" /&gt;&lt;txp:else /&gt;dear User&lt;/txp:cbe_frontauth_if_connected&gt; !</code></pre>\n\n<h2 id=\"advanced-usage\">Advanced usage</h2>\n\n<p class=\"readme\">As previous tags should cover majority\'s needs, you don\'t have to read this section if you already achieved what you wanted to.</p>\n\n<p>This is the programmer\'s corner: it describes attributes for the main function that is called by almost every public tag discussed above.</p>\n\n<p>Here are the parameters for the main function:</p>\n<pre><code>&lt;txp:cbe_frontauth&gt;\n  What to do/display if connected\n&lt;txp:else /&gt;\n  What to do/display if not connected\n&lt;/txp:cbe_frontauth&gt;</code></pre>\n\n<p>form (\'\') or thing = what to display if logged in\n<br />tag_invite (\'\') = HTML tag enclosing the label, without brackets\n<br />\n<br />show_login (1) = whether to display or not a login form, appears only if not logged in\n<br />- login_invite (\'login_to_textpattern\') = invite to login\n<br />- login_form (\'\') = form to build your own HTML login form with txp:cbe_frontauth_login, or txp:cbe_frontauth_logname, cbe_frontauth_password, cbe_frontauth_stay, cbe_frontauth_reset, cbe_frontauth_submit. If not used, a default HTML form is displayed\n<br />- login_label (\'log_in_button\') = label for the login form\n<br />- login_with (auto) = whether to use username, or email, or auto detection as user logon\n<br />- login_redir (\'\') = go immediately to path after successful login\n<br />- show_stay (0) = used in the generic login form, whether to display or not a checkbox to stay logged in\n<br />- show_reset (1) = used in the generic login form, whether to display or not a link to reset password\n<br />\n<br />show_logout (1) = whether to display or not a default button to log out, appears only if logged in\n<br />- logout_invite (\'\') = invite to logout\n<br />- logout_form (\'\') = form to build your own HTML logout form, or your own link\n<br />- logout_label (as set in lang pack) = label for the logout button\n<br />- logout_type (\'button\'), other type is \'link\'\n<br />- logout_redir (\'\') = go immediately to path after logout\n<br />- show_change (1) = used in the generic logout form, whether to display or not a link to change password\n<br />\n<br />link (\'\') = a page to go to if connected\n<br />- linklabel (\'\') = text anchor for link\n<br />- target (_self) = _self _blank or _get, whether to open the link in the same window (or tab), or in a new one, or to generate an URL with address link as GET parameter. Works only with hyperlink (not login_redir, not logout_redir)\n<br />\n<br />Checking users and privileges :\n<br />- name (\'\') = list of names to check\n<br />- level (\'\') = list of privilege levels to check\n<br />\n<br />Presentational attributes :\n<br />- wraptag (\'\'), class (\'\')\n<br />\n<br />init = Special attribute for internal use only and documented only for people who want to know :)\n <br /> Whether to set (\'1\') or get (\'0\') global settings for redirections (login_redir, logout_redir), invites (login_invite, logout_invite, tag_invite), labels (login_label, logout_label), login type (login_with) or user\'s informations. Immediately returns and doesn\'t display anything.\n <br /> value = setting to set or get, string or array.\n</p>\n\n<h2 id=\"changelog\">Changelog</h2>\n<ul>\n  <li>20 Nov 15 - v0.9.7 - <a href=\"http://forum.textpattern.com/viewtopic.php?pid=296720#p296720\">Fix this</a></li>\n  <li>07 Apr 14 - v0.9.6 - Error when passing presentational attributes from cbe_frontauth_edit_article to cbe_frontauth_link</li>\n  <li>04 Apr 14 - v0.9.5 - Missing last access storage</li>\n  <li>27 Mar 13 - v0.9.4\n  <br />Missing initialization for cbe_frontauth_whois\n  <br />Error message when login fails\n  <br />Local language strings\n  </li>\n  <li>22 Mar 12 - v0.9.3 - Doc typo for cbe_frontauth_invite</li>\n  <li>?? ??? 12 - v0.9.2 - ??</li>\n  <li>22 Mar 12 - v0.9.1 - fixed missing attributes (show_login and show_change) for cbe_frontauth_box</li>\n  <li>21 Mar 12 - v 0.9 - Callback hooks: ability to ask for password reset if not connected, for password change if connected</li>\n  <li>10 Jan 12 - v 0.8 - Introduces &lt;txp:cbe_frontauth_loginwith /&gt;, <a href=\"http://forum.textpattern.com/viewtopic.php?pid=256632#p256632\">idea comes from another demand in the textpattern forum</a>.\n  </li>\n  <li>05 Jan 12 - v0.7.1 - Documentation addenda</li>\n  <li>06 Aug 11 - v0.7-beta\n  <br /> * Introduces &lt;txp:cbe_frontauth_edit_article /&gt\n  <br /> * CSRF protection ready\n  <br /> * Documentation improvements\n  </li>\n  <li>29 Jul 11 - v0.6-beta\n  <br /> * Optimizations to avoid multiple calls to database when retrieving user\'s informations\n  <br /> * Added name and privilege controls à la <a href=\"http://vanmelick.com/txp/\">&lt;txp:rvm_if_privileged /&gt;</a>\n  <br /> * Minor changes to documentation\n  </li>\n  <li>27 Jul 11 - v0.5-beta- First public beta release</li>\n  <li>26 Jul 11 - v0.4-beta- Restricted beta release</li>\n  <li>24 Jul 11 - v0.3-dev - Restricted development release</li>\n  <li>23 Jul 11 - v0.2-dev - Restricted development release</li>\n  <li>22 Jul 11 - v0.1-dev - Restricted development release</li>\n</ul>\n</div>\n<!-- *** BEGIN PLUGIN CSS *** -->\n<style type=\"text/css\">\n#cbe-plugin-help .readme {\n  color: red;\n  font-weight: bold;\n}\n#cbe-plugin-help .accent {\n  font-weight: bold;\n}\n#cbe-plugin-help .list th{\n	text-align:left;\n	color:#fff;\n	background:#555;\n	padding:6px 16px 6px 4px;\n	border-right:1px solid #999;\n	font-weight:normal;\n}\n#cbe-plugin-help .list th a{\n	color:#fff;\n	display:block;\n}\n#cbe-plugin-help .list th h2{\n	margin:0;\n	font-size:11px;\n}\n#cbe-plugin-help .list td{\n	padding:6px 4px;\n}\n</style>\n<!-- *** END PLUGIN CSS *** -->\n','/*\r\n** cbe_frontauth\r\n** Client-side textpattern plugin\r\n** Connect (and disconnect) from frontend to backend\r\n** Establishes bidirectional links between article display and edition\r\n** Claire Brione - http://www.clairebrione.com/\r\n**\r\n** 0.1-dev - 22 Jul 2011 - Restricted development release\r\n** 0.2-dev - 23 Jul 2011 - Restricted development release\r\n** 0.3-dev - 24 Jul 2011 - Restricted development release\r\n** 0.4-beta- 26 Jul 2011 - Restricted beta release\r\n** 0.5-beta- 27 Jul 2011 - First public beta release\r\n** 0.6-beta- 29 Jul 2011 - Optimizations to avoid multiple calls to database\r\n**                           when retrieving user\'s informations\r\n**                         Added name and privilege controls\r\n**                           à la <txp:rvm_if_privileged /> (http://vanmelick.com/txp/)\r\n**                         Minor changes to documentation\r\n** 0.7-beta- 06 Aug 2011 - Introduces <txp:cbe_frontauth_edit_article />\r\n**                         CSRF protection ready\r\n**                         Documentation improvements\r\n** 0.7.1   - 05 Jan 2012 - Documentation addenda\r\n** 0.8     - 10 Jan 2012 - Introduces <txp:cbe_frontauth_loginwith />\r\n**                             http://forum.textpattern.com/viewtopic.php?pid=256632#p256632\r\n**                         txp:cbe_frontauth_loginwith (*auto*|username|email)\r\n** 0.9     - 21 Mar 2012 - Added callback hooks (reset and change password)\r\n** 0.9.1   - 22 Mar 2012 - Fixed missing attributes (show_login and show_change) for cbe_frontauth_box\r\n** 0.9.2   - ?? ??? 2012 - ??\r\n** 0.9.3   - 22 Aug 2012 - Doc typo for cbe_frontauth_invite\r\n** 0.9.4   - 27 Mar 2013 - Missing initialization for cbe_frontauth_whois\r\n**                         Error message when login fails\r\n**                         Local language strings\r\n** 0.9.5   - 04 Apr 2014 - Missing last access storage\r\n** 0.9.6   - 07 Apr 2014 - Error when passing presentational attributes from cbe_frontauth_edit_article to cbe_frontauth_link\r\n** 0.9.7   - 20 Nov 2015 - fix: http://forum.textpattern.com/viewtopic.php?pid=296720#p296720\r\n**\r\n** TODO\r\n** - break, breakclass -> in progress, full tests needed\r\n** - enhence error messages ?\r\n**\r\n ************************************************************************/\r\n\r\n/**************************************************\r\n **\r\n ** Local language strings, possible customisation here\r\n **\r\n **************************************************/\r\nfunction _cbe_fa_lang()\r\n{\r\n    return( array( \'login_failed\'         => \"Login failed\"\r\n                 , \'login_to_textpattern\' => gTxt( \'login_to_textpattern\' )\r\n                 , \'name\'                 => gTxt( \'name\' )\r\n                 , \'password\'             => gTxt( \'password\' )\r\n                 , \'log_in_button\'        => gTxt( \'log_in_button\' )\r\n                 , \'stay_logged_in\'       => gTxt( \'stay_logged_in\' )\r\n                 , \'logout\'               => gTxt( \'logout\' )\r\n                 , \'edit\'                 => gTxt( \'edit\' )\r\n                 , \'change_password\'      => gTxt( \'change_password\' )\r\n                 , \'password_reset\'       => gTxt( \'password_reset\' ) \r\n                 )\r\n          ) ;\r\n}\r\n/**************************************************\r\n **\r\n ** Don\'t edit further\r\n **\r\n **************************************************/\r\n\r\n/**************************************************\r\n **\r\n ** Available tags\r\n **\r\n **************************************************/\r\n\r\n/* == Shortcuts for cbe_frontauth() == */\r\n\r\n// -- Global init for redirection after login and/or logout\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_redirect( $atts )\r\n{\r\n    return( _cbe_fa_init( $atts, \'redir\' ) ) ;\r\n}\r\n\r\n// -- Global init for login/logout invites\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_invite( $atts )\r\n{\r\n    return( _cbe_fa_init( $atts, \'invite\' ) ) ;\r\n}\r\n\r\n// -- Global init for login/logout buttons/link labels\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_label( $atts )\r\n{\r\n    return( _cbe_fa_init( $atts, \'label\' ) ) ;\r\n}\r\n\r\n// -- Global init for login with user name, email, or automatic detection\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_loginwith( $atts )\r\n{\r\n    return( _cbe_fa_init( $atts, \'with\' ) ) ;\r\n}\r\n\r\n// -- Login / Logout box\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_box( $atts, $thing = \'\' )\r\n{\r\n    $public_atts = lAtts( array( \'login_invite\'  => _cbe_fa_gTxt( \'login_to_textpattern\' )\r\n                               , \'logout_invite\' => \'\'\r\n                               , \'show_change\'   => \'1\'\r\n                               , \'show_reset\'    => \'1\'\r\n                               , \'tag_invite\'    => \'\'\r\n                               , \'login_label\'   => _cbe_fa_gTxt( \'log_in_button\' )\r\n                               , \'logout_label\'  => _cbe_fa_gTxt( \'logout\' )\r\n                               , \'logout_type\'   => \'button\'\r\n                               , \'tag_error\'     => \'span\'\r\n                               , \'class_error\'   => \'cbe_fa_error\'\r\n                               )\r\n                           + _cbe_fa_format()\r\n                         , $atts ) ;\r\n\r\n    return( cbe_frontauth( $public_atts\r\n                          , $thing ? $thing : \'<p><txp:text item=\"logged_in_as\" /> <txp:cbe_frontauth_whois wraptag=\"span\" class=\"user\"/></p>\'\r\n                          ) ) ;\r\n\r\n}\r\n\r\n// -- Standalone login form\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_login( $atts, $thing = \'\' )\r\n{\r\n    return( _cbe_fa_inout_process( \'login\', $atts, $thing ) ) ;\r\n}\r\n\r\n// -- Standalone logout form / link\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_logout( $atts, $thing = \'\' )\r\n{\r\n    return( _cbe_fa_inout_process( \'logout\', $atts, $thing ) ) ;\r\n}\r\n\r\n// -- Protect parts from non-connected viewers\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_protect( $atts, $thing )\r\n{\r\n    $public_atts = lAtts( array( \'link\'      => \'\'\r\n                               , \'linklabel\' => \'\'\r\n                               , \'target\'    => \'_self\'\r\n                               , \'name\'      => \'\'\r\n                               , \'level\'     => \'\'\r\n                               )\r\n                         + _cbe_fa_format()\r\n                         , $atts ) ;\r\n\r\n    if( $public_atts[\'target\'] == \'_get\' )\r\n        $public_atts[\'target\'] = \'_self\' ;\r\n\r\n    return( cbe_frontauth( array( \'login_invite\' => \'\' , \'logout_invite\' => \'\'\r\n                                , \'show_login\'   => \'0\', \'show_logout\'   => \'0\'\r\n                                , \'show_reset\'   => \'0\', \'show_change\'   => \'0\' ) + $public_atts\r\n                         , $thing\r\n                         ) ) ;\r\n}\r\nfunction cbe_frontauth_if_logged( $atts, $thing )\r\n{\r\n    return( cbe_frontauth_protect( $atts, $thing ) ) ;\r\n}\r\nfunction cbe_frontauth_if_connected( $atts, $thing )\r\n{\r\n    return( cbe_frontauth_protect( $atts, $thing ) ) ;\r\n}\r\n\r\n/* == Elements == */\r\n\r\n// -- Generates input field for name\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_logname( $atts, $defvalue=null )\r\n{\r\n    return( _cbe_fa_identity( \'name\', $atts, $defvalue ) ) ;\r\n}\r\n\r\n// -- Generates input field for password\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_password( $atts, $defvalue=null )\r\n{\r\n    return( _cbe_fa_identity( \'password\', $atts, $defvalue ) ) ;\r\n}\r\n\r\n// -- Generates checkbox for stay (connected on this browser)\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_stay( $atts )\r\n{\r\n    extract( lAtts( array ( \'label\' => _cbe_fa_gTxt( \'stay_logged_in\' )\r\n                          )\r\n                  + _cbe_fa_format()\r\n                  , $atts\r\n                  )\r\n           ) ;\r\n\r\n    $out  = checkbox(\'p_stay\', 1, cs(\'txp_login\'), \'\', \'stay\') ;\r\n    $out .= \'<label for=\"stay\">\'.$label.\'</label>\' ;\r\n    return( doTag( $out, $wraptag, $class ) ) ;\r\n}\r\n\r\n// -- Generates submit button\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_submit( $atts )\r\n{\r\n    $public_atts = lAtts( array ( \'label\' => \'\'\r\n                                , \'type\'  => \'login\'\r\n                                )\r\n                        + _cbe_fa_format()\r\n                        , $atts\r\n                        ) ;\r\n\r\n    return( _cbe_fa_button( $public_atts ) ) ;\r\n}\r\n\r\n// -- Displays connected user\'s informations\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_whois( $atts )\r\n{\r\n    extract( lAtts( array ( \'type\'       => \'name\'\r\n                          , \'format\'     => \'\'\r\n                          )\r\n                    + _cbe_fa_format()\r\n                  , $atts\r\n                  )\r\n           ) ;\r\n\r\n    $types = do_list( $type ) ;\r\n    $whois = cbe_frontauth( array( \'init\' => \'0\', \'value\' => $types ) ) ;\r\n\r\n    if( isset( $whois[\'last_access\'] ) )\r\n    {\r\n        global $dateformat ;\r\n        $whois[\'last_access\'] = safe_strftime( $format ? $format : $dateformat, strtotime( $whois[\'last_access\'] ) ) ;\r\n    }\r\n\r\n    return( doWrap( $whois, $wraptag, $break, $class, $breakclass ) ) ;\r\n}\r\n\r\n/* == Off-topic, but useful == */\r\n\r\n// -- Generates a link, normal or with a GET parameter\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_link( $atts )\r\n{   // $class applies to anchor if no $wraptag supplied\r\n    extract( lAtts( array ( \'label\'  => \'\'\r\n                          , \'link\'   => \'\'\r\n                          , \'target\' => \'_self\'\r\n                          )\r\n                  + _cbe_fa_format()\r\n                  , $atts\r\n                  )\r\n           ) ;\r\n\r\n    $link = doStripTags( $link ) ;\r\n    $out = _cbe_fa_link( compact( \'link\', \'target\' ) ) ;\r\n    $out = href( $label, $out\r\n               , (($target !== \'_get\')  ? \' target=\"\'.$target.\'\"\' : \'\')\r\n               . ((!$wraptag && $class) ? \' class=\"\'.$class.\'\"\'   : \'\') ) ;\r\n    return( doTag( $out, $wraptag, $class ) ) ;\r\n}\r\n\r\n// -- Returns path to textpattern backend\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_backend()\r\n{\r\n//            . substr(strrchr(txpath, \"/\"), 1)\r\n    return( preg_replace(\'|//$|\',\'/\', rhu.\'/\')\r\n            . substr(strrchr(txpath, DS), 1)\r\n            . \'/index.php\'\r\n           ) ;\r\n}\r\n\r\n// -- Returns button (standalone) or link to edit current article\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_edit_article( $atts )\r\n{\r\n    global $thisarticle ;\r\n    assert_article() ;\r\n\r\n    extract( lAtts( array ( \'label\' => _cbe_fa_gTxt( \'edit\' )\r\n                          , \'type\'  => \'button\'\r\n                          )\r\n                  + _cbe_fa_format()\r\n                  , $atts\r\n                  )\r\n           ) ;\r\n\r\n    $path_parts = array( \'event\'      => \'article\'\r\n                       , \'step\'       => \'edit\'\r\n                       , \'ID\'         => $thisarticle[\'thisid\']\r\n                       ) ;\r\n\r\n    if( $type == \'button\' )\r\n    {\r\n        $out = array() ;\r\n\r\n        foreach( $path_parts as $part => $value )\r\n            $out[] = hInput( $part, $value ) ;\r\n\r\n        $out[] = cbe_frontauth_submit( array( \'label\' => $label, \'type\' => \'\', \'class\' =>\'publish\' ) ) ;\r\n\r\n         return( _cbe_fa_form( array( \'statements\' => join( n, $out ) ) ) ) ;\r\n    }\r\n    elseif( $type == \'link\' )\r\n    {\r\n        $path_parts[ \'_txp_token\' ] = form_token() ;\r\n        array_walk( $path_parts, create_function( \'&$v, $k\', \'$v = $k.\"=\".$v ;\' ) ) ;\r\n        $link = cbe_frontauth_backend() . \'?\' . join( \'&\', $path_parts ) ;\r\n\r\n        return( cbe_frontauth_link( compact( \'link\', \'label\'\r\n                                           , array_keys( _cbe_fa_format() )\r\n                                           )\r\n                                  )\r\n              ) ;\r\n    }\r\n    else\r\n        return ;\r\n}\r\n\r\n/**************************************************\r\n **\r\n ** Utilities (kinda private functions)\r\n **\r\n **************************************************/\r\n\r\n// -- Gets and returns local lang strings (txp admin + plugin specifics)\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_gTxt( $text, $atts = array() )\r\n{\r\n    static $aTexts = array() ;\r\n    if( ! $aTexts )\r\n        $aTexts = _cbe_fa_lang() ;\r\n\r\n    return( isset( $aTexts[ $text ] ) ? strtr( $aTexts[ $text ], $atts ) : gTxt( $text ) ) ;\r\n}\r\n\r\n// -- Common presentational attributes\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_format()\r\n{\r\n    return( array( \'wraptag\'    => \'\'\r\n                 , \'class\'      => \'\'\r\n                 , \'break\'      => \'\'\r\n                 , \'breakclass\' => \'\'\r\n                 )\r\n          ) ;\r\n}\r\n\r\n// -- Global initialisations (redirect, invite, label, loginwith)\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_init( $atts, $type )\r\n{\r\n    extract( lAtts( array ( \'for\' => \'\', \'value\' => \'\' ), $atts ) ) ;\r\n    if( $for === \'\' )\r\n        $for = \'login\' ;\r\n    $init_for = do_list( $for ) ;\r\n\r\n    if( ($index=array_search( \'logged\', $init_for )) !== false )\r\n        $init_for[ $index ] = \'logout\' ;\r\n\r\n    array_walk( $init_for, create_function( \'&$v, $k, $p\', \'$v = $v.\"_\".$p ;\'), $type ) ;\r\n\r\n    if( ($init_list = @array_combine( $init_for, do_list( $value ) )) === false )\r\n        return ;\r\n\r\n    cbe_frontauth( array( \'init\' => \'1\' ) + $init_list ) ;\r\n    return ;\r\n}\r\n\r\n// -- Retrieve user\'s info, if connected \r\n// -- textpattern/lib/txp_misc.php - is_logged_in() as a starting point\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_logged_in( &$user, $txp_user = null )\r\n{\r\n    if( $txp_user !== null )\r\n        $name = $txp_user ;\r\n    elseif( !($name = substr(cs(\'txp_login_public\'), 10)) )\r\n    {\r\n        $user[ \'name\' ] = false ;\r\n        return( false ) ;\r\n    }\r\n\r\n    $rs = safe_row(\'nonce, name, RealName, email, privs, last_access\', \'txp_users\', \"name = \'\".doSlash($name).\"\'\");\r\n\r\n    if( $rs && ($txp_user !== null || substr(md5($rs[\'nonce\']), -10) === substr(cs(\'txp_login_public\'), 0, 10) ) )\r\n    {\r\n        unset( $rs[ \'nonce\' ] ) ;\r\n        $user = $rs ;\r\n        return( true ) ;\r\n    }\r\n    else\r\n    {\r\n        $user[ \'name\' ] = false ;\r\n        return( false ) ;\r\n    }\r\n}\r\n\r\n// -- Checks current user against required privileges\r\n// -- Thanks to Ruud Van Melick\'s rvm_privileged (http://vanmelick.com/txp/)\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_privileged( $r_name, $r_level, $u_name, $u_level )\r\n{\r\n    $chk_name  = !$r_name  || in_array( $u_name , do_list( $r_name  ) ) ;\r\n    $chk_level = !$r_level || in_array( $u_level, do_list( $r_level ) ) ;\r\n    return( $chk_name || $chk_level ) ;\r\n}\r\n\r\n// -- Generates input field for name or password\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_identity( $field, $atts, $value=null )\r\n{\r\n    extract( lAtts( array ( \'label\'     => _cbe_fa_gTxt( $field )\r\n                          , \'label_sfx\' => \'\'\r\n                          )\r\n                  + _cbe_fa_format()\r\n                  , $atts\r\n                  )\r\n           ) ;\r\n\r\n    $$field = \'\' ;\r\n    if( $field == \'name\' && cs(\'cbe_frontauth_login\') != \'\' )\r\n        list($name) = explode( \',\', cs(\'cbe_frontauth_login\') ) ;\r\n\r\n    $out = array() ;\r\n    $out[] = \'<label for=\"\'.$field.$label_sfx.\'\">\'.$label.\'</label>\' ;\r\n    $out[] =  fInput( ($field == \'name\')    ? \'text\'     : \'password\'\r\n                    ,(($field == \'name\')    ? \'p_userid\' : \'p_password\') . $label_sfx\r\n                    , ($field == \'name\')    ? $name      : ($value !== null ? $value : \'\')\r\n                    , (!$wraptag && $class) ? $class     : \'\'\r\n                    , \'\', \'\', \'\', \'\', $field.$label_sfx ) ;\r\n\r\n    return( doWrap( $out, $wraptag, $break, $class, $breakclass ) ) ;\r\n}\r\n\r\n// -- Prepare call to cbe_frontauth() for login/logout form/link\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_inout_process( $inout, $atts, $thing = \'\' )\r\n{\r\n    $plus_atts = ($inout == \'logout\' )\r\n               ? array( \'type\'        => \'button\'\r\n                      , \'show_change\' => \'1\'      )\r\n               : array( \'show_stay\'   => \'0\'\r\n                      , \'show_reset\'  => \'1\'      ) ;\r\n    $public_atts = lAtts( array ( \'invite\'     => _cbe_fa_gTxt( ($inout == \'login\') ? \'login_to_textpattern\' \r\n                                                                                    : \'\' )\r\n                                , \'tag_invite\' => \'\'\r\n                                , \'label\'      => _cbe_fa_gTxt( ($inout == \'login\') ? \'log_in_button\'\r\n                                                                                    : \'logout\' )\r\n                                , \'form\'       => \'\'\r\n                                , \'tag_error\'  => \'span\', \'class_error\' => \'cbe_fa_error\'\r\n                                )\r\n                        + $plus_atts + _cbe_fa_format()\r\n                        , $atts ) ;\r\n\r\n    if( isset( $public_atts[\'invite\'] ) )\r\n    {\r\n        $public_atts[$inout.\'_invite\'] = $public_atts[\'invite\'] ;\r\n        unset( $public_atts[\'invite\'] ) ;\r\n    }\r\n    if( isset( $public_atts[\'label\'] ) )\r\n    {\r\n        $public_atts[$inout.\'_label\'] = $public_atts[\'label\'] ;\r\n        unset( $public_atts[\'label\'] ) ;\r\n    }\r\n    if( isset( $public_atts[\'form\'] ) )\r\n    {\r\n        $public_atts[$inout.\'_form\'] = $public_atts[\'form\'] ;\r\n        unset( $public_atts[\'form\'] ) ;\r\n    }\r\n    if( isset( $public_atts[\'type\'] ) )\r\n    {\r\n        $public_atts[$inout.\'_type\'] = $public_atts[\'type\'] ;\r\n        unset( $public_atts[\'type\'] ) ;\r\n    }\r\n    if( $thing )\r\n        $public_atts[$inout.\'_form\'] = $thing ;\r\n\r\n    $show = ($inout == \'login\') ? \'logout\' : \'login\' ;\r\n    return( cbe_frontauth( array( \'show_\'.$show => \'0\' ) + $public_atts ) ) ;\r\n}\r\n\r\n// -- Encloses statements in a submit form\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_form( $atts )\r\n{\r\n    extract( lAtts( array( \'statements\' => \'\'\r\n                         , \'action\'     => cbe_frontauth_backend()\r\n                         , \'method\'     => \'post\'\r\n                         )\r\n                  , $atts\r\n                  )\r\n           ) ;\r\n\r\n    if( ! $statements )\r\n        return ;\r\n\r\n    return( \'<form action=\"\'.$action.\'\" method=\"\'.$method.\'\">\'\r\n            .n. $statements\r\n            .n. \'</form>\' ) ;\r\n}\r\n\r\n// -- Generates a button (primary purpose : login/logout button)\r\n// -- Extended to \'edit\' (just in case) - 0.7\r\n// -- Note: providing a label and setting type to blank works too\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_button( $atts )\r\n{\r\n    extract( $atts ) ; // \'label\', \'type\', \'wraptag\', class\'\r\n\r\n    if( ! $label and ! ($label = cbe_frontauth( array( \'init\' => \'0\', \'value\' => $type.\'_label\' ) )) )\r\n        $label = _cbe_fa_gTxt( ($type == \'logout\' || $type == \'edit\' ) ? $type : \'log_in_button\' ) ;\r\n\r\n    $out = fInput( \'submit\', \'\', $label, (!$wraptag && $class) ? $class : \'\' ) ;\r\n \r\n    if( $type == \'logout\' )\r\n        $out .= hInput( \'p_logout\', \'1\' ) ;\r\n    elseif( $type == \'edit\' )\r\n        $out .= tInput() ;\r\n\r\n    return( doTag( $out, $wraptag, $class ) ) ;\r\n}\r\n\r\n// -- Generates a link (primary purpose : logout link)\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_link( $atts )\r\n{\r\n    extract( $atts ) ; // \'link\', \'target\'\r\n    \r\n    if( $target == \'_get\' )\r\n    {\r\n        $uri = serverSet( \'REQUEST_URI\'  ) ;\r\n        $qus = serverSet( \'QUERY_STRING\' ) ;\r\n\r\n        $len_uri = strlen( $uri ) ;\r\n        $len_qus = strlen( $qus ) ;\r\n\r\n        $uri = ($len_qus > 0) ? substr( $uri, 0, $len_uri-$len_qus-1 ) : $uri ;\r\n        $qus = $qus . ($len_qus > 0 ? \'&\' : \'\') . $link ;\r\n\r\n        $out = (substr( $uri, -1 ) !== \'?\' ) ? ($uri.\'?\'.$qus) : ($uri.$qus) ;\r\n    }\r\n    else\r\n    {\r\n        $out = $link ;\r\n    }\r\n\r\n    return( $out ) ;\r\n}\r\n\r\n// -- Generates login/logout form or logout link\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_inout( $atts )\r\n{\r\n    extract( $atts ) ;\r\n\r\n    $out = array() ;\r\n\r\n    if( $form )\r\n        $out[] = ($f=@fetch_form( $form )) ? parse( $f ) : parse( $form ) ; // label takes precedence here\r\n    else\r\n    {\r\n        if( isset( $show_stay ) )\r\n        {   // login\r\n\r\n            $out[] = cbe_frontauth_logname(  array( \'class\' => \'edit\')\r\n                                          +  compact( \'break\', \'breakclass\' ) ) ;\r\n            $out[] = cbe_frontauth_password( array( \'class\' => \'edit\')\r\n                                           + compact( \'break\', \'breakclass\' ) ) ;\r\n            if( $show_stay )\r\n                $out[] = cbe_frontauth_stay( array() ) ;\r\n\r\n            $out[] = cbe_frontauth_submit( array( \'label\' => $label, \'class\' => \'publish\' ) ) ;\r\n\r\n        }\r\n        else\r\n        {   // logout\r\n            $out[] = ($type == \'button\')\r\n                   ? cbe_frontauth_submit( array( \'label\' => $label, \'type\' => \'logout\'\r\n                                                , \'class\' => $class ? $class : \'publish\' ) )\r\n                   : cbe_frontauth_link( array( \'label\' => $label, \'link\' => \'logout=1\', \'target\' => \'_get\'\r\n                                              , \'class\' => $class ? $class : \'publish\' ) ) ;\r\n        }\r\n    }\r\n\r\n//    $out = join( n, $out ) ;\r\n    $out = doWrap( $out, $wraptag, $break, \'\', $breakclass ) ;\r\n    return( (isset( $type ) && $type==\'link\')\r\n            ? $out\r\n            : _cbe_fa_form( array( \'statements\' => $out, \'action\' => page_url( array() ) ) ) ) ;\r\n}\r\n\r\n/* == Backbone == */\r\n\r\n// -- Cookie mechanism - from textpattern/include/txp_auth.php - doTxpValidate()\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_auth( $redir, $p_logout, $p_userid=\'\', $p_password=\'\', $p_stay=\'\' )\r\n{\r\n    defined(\'LOGIN_COOKIE_HTTP_ONLY\') || define(\'LOGIN_COOKIE_HTTP_ONLY\', true);\r\n    $hash  = md5(uniqid(mt_rand(), TRUE));\r\n    $nonce = md5($p_userid.pack(\'H*\',$hash));\r\n    $pub_path = preg_replace(\'|//$|\',\'/\', rhu.\'/\') ;\r\n    $adm_path = $pub_path . substr(strrchr(txpath, DS), 1) . \'/\' ;\r\n\r\n    if( $p_logout )\r\n    {\r\n        $log_name = false ;\r\n\r\n        safe_update( \'txp_users\'\r\n                   , \"nonce = \'\".doSlash($hash).\"\'\"\r\n                   , \"name = \'\".doSlash($p_userid).\"\'\"\r\n                   ) ;\r\n\r\n        setcookie( \'txp_login\'\r\n                 , \'\'\r\n                 , time()-3600\r\n                 , $adm_path\r\n                 ) ;\r\n\r\n        setcookie( \'txp_login_public\'\r\n                 , \'\'\r\n                 , time()-3600\r\n                 , $pub_path\r\n                 ) ;\r\n\r\n        setcookie( \'cbe_frontauth_login\'\r\n                 , \'\'\r\n                 , time()-3600\r\n                 , $pub_path\r\n                 ) ;\r\n    }\r\n//    elseif( ($log_name = txp_validate( $p_userid, $p_password, false )) !== false )\r\n    elseif( ($log_name = txp_validate( $p_userid, $p_password )) !== false )\r\n    {\r\n        safe_update( \'txp_users\'\r\n                   , \"nonce = \'\".doSlash($nonce).\"\'\"\r\n                   , \"name = \'\".doSlash($p_userid).\"\'\"\r\n                   ) ;\r\n\r\n        setcookie( \'txp_login\'\r\n                 , $p_userid.\',\'.$hash\r\n                 , ($p_stay ? time()+3600*24*365 : 0)\r\n                 , $adm_path\r\n                 , null\r\n                 , null\r\n                 , LOGIN_COOKIE_HTTP_ONLY\r\n                 ) ;\r\n\r\n        setcookie( \'txp_login_public\'\r\n                 , substr(md5($nonce), -10).$p_userid\r\n                 , ($p_stay ? time()+3600*24*30 : 0)\r\n                 , $pub_path\r\n                 ) ;\r\n\r\n        if( $p_stay )\r\n            setcookie( \'cbe_frontauth_login\'\r\n                     , $p_userid.\',\'.$hash\r\n                     , time()+3600*24*365\r\n                     , $pub_path\r\n                     ) ;\r\n    }\r\n\r\n    if( $redir && ( $p_logout || $log_name !== false ) )\r\n    {\r\n        header( \"Location:$redir\" ) ;\r\n        exit ;\r\n    }\r\n\r\n    return( $log_name ) ;\r\n}\r\n\r\n// -- Get the job done\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth( $atts, $thing = null )\r\n{\r\n    include_once( txpath.\'/include/txp_auth.php\' ) ;\r\n    global $txp_user ;\r\n    static $inits = array( \'login_invite\' => \'\' , \'logout_invite\' => \'\' , \'tag_invite\' => \'\'\r\n                         , \'login_label\'  => \'\' , \'logout_label\'  => \'\'\r\n                         , \'login_redir\'  => \'\' , \'logout_redir\'  => \'\'\r\n                         , \'login_with\'   => \'\'\r\n                         ) ;\r\n    static $cbe_fa_user = array( \'name\'  => false , \'RealName\'    => \'\' , \'email\' => \'\'\r\n                               , \'privs\' => \'\'    , \'last_access\' => \'\'\r\n                               ) ;\r\n\r\n    if( isset( $atts[\'init\'] ) )\r\n    {\r\n        if( $atts[\'init\'] )\r\n        {\r\n            unset( $atts[\'init\'] ) ;\r\n\r\n            foreach( $atts as $param => $value )\r\n                $inits[$param] = $value ;\r\n\r\n            return ;\r\n        }\r\n        else\r\n        {\r\n            if( is_array( $atts[ \'value\' ] ) )\r\n            {\r\n                $whois = array() ;\r\n                if( ! $cbe_fa_user[ \'name\' ] ) _cbe_fa_logged_in( $cbe_fa_user ) ;\r\n                foreach( $atts[ \'value\' ] as $type )\r\n                    $whois[ $type ] = $cbe_fa_user[ $type ] ;\r\n                \r\n                return( $whois ) ;\r\n            }\r\n            else\r\n                return( isset( $inits[ $atts[ \'value\' ] ] ) ? $inits[ $atts[ \'value\' ] ] : \'\' ) ;\r\n        }\r\n    }\r\n\r\n    $def_atts = array( \'form\'          => \'\'\r\n                     , \'tag_invite\'    => \'\'\r\n                     , \'show_login\'    => \'1\'\r\n                     , \'login_invite\'  => _cbe_fa_gTxt( \'login_to_textpattern\' )\r\n                     , \'login_form\'    => \'\'\r\n                     , \'login_label\'   => _cbe_fa_gTxt( \'log_in_button\' )\r\n                     , \'login_with\'    => \'auto\'\r\n                     , \'login_redir\'   => \'\'\r\n                     , \'show_logout\'   => \'1\'\r\n                     , \'logout_invite\' => \'\'\r\n                     , \'logout_form\'   => \'\'\r\n                     , \'logout_label\'  => _cbe_fa_gTxt( \'logout\' )\r\n                     , \'logout_type\'   => \'button\'\r\n                     , \'logout_redir\'  => \'\'\r\n                     , \'show_stay\'     => \'0\'\r\n                     , \'show_reset\'    => \'1\'\r\n                     , \'show_change\'   => \'1\'\r\n                     , \'link\'          => \'\'\r\n                     , \'linklabel\'     => \'\'\r\n                     , \'target\'        => \'_self\'\r\n                     , \'name\'          => \'\'\r\n                     , \'level\'         => \'\'\r\n                     , \'tag_error\'     => \'\'\r\n                     , \'class_error\'   => \'\'\r\n                     ) ;\r\n\r\n    $ini_atts = array() ;\r\n    foreach( $inits as $param => $value )\r\n    {   /* Inits take precedence on default values */\r\n        if( !isset( $atts[$param] ) || $atts[$param] === $def_atts[$param] )\r\n            $ini_atts[$param] = $value ;\r\n    }\r\n\r\n    extract( lAtts( $def_atts + _cbe_fa_format(), array_merge( $atts, array_filter( $ini_atts ) ) ) ) ;\r\n\r\n    extract( psa( array( \'p_userid\', \'p_password\', \'p_stay\', \'p_reset\', \'p_logout\', \'p_change\' ) ) ) ;\r\n    $logout = gps( \'logout\' ) ;\r\n    $p_logout = $p_logout || $logout ;\r\n    $reset = gps( \'reset\' ) ;\r\n    $p_reset = $p_reset || $reset ;\r\n    $change = gps( \'change\' ) ;\r\n    $p_change = $p_change || $change ;\r\n\r\n    if( $p_userid && $p_password )\r\n    {\r\n        $username = ($login_with == \'auto\') ? safe_count( \'txp_users\', \"name=\'$p_userid\'\" ) : 0 ;\r\n\r\n        if( $username == 0 && $login_with != \'username\' )\r\n        { // Email probably given, retrieve user name if possible\r\n            $p_userid = safe_rows( \'name\', \'txp_users\', \"email=\'$p_userid\'\" ) ;\r\n            $p_userid = (count( $p_userid ) == 1) ? $p_userid[ 0 ][ \'name\' ] : \'\' ;\r\n        }\r\n\r\n        $login_redir = ($login_redir===\'link\') ? $link : $login_redir ;\r\n        $login_failed = ($txp_user = _cbe_fa_auth( $login_redir, 0, $p_userid, $p_password, $p_stay )) === false ;\r\n        _cbe_fa_logged_in( $cbe_fa_user, $txp_user ) ;\r\n    }\r\n    elseif( $p_logout )\r\n    {\r\n        if( $logout && !$logout_redir )\r\n            $logout_redir = preg_replace( \"/[?&]logout=1/\", \"\", serverSet(\'REQUEST_URI\') ) ;\r\n\r\n        $txp_user = _cbe_fa_auth( $logout_redir, 1 ) ;\r\n        _cbe_fa_logged_in( $cbe_fa_user, false ) ;\r\n    }\r\n    else\r\n        $txp_user = _cbe_fa_logged_in( $cbe_fa_user ) ? $cbe_fa_user[ \'name\' ] : false ;\r\n\r\n    $out = array() ;\r\n    $invite = \'\' ;\r\n    $part_0 = EvalElse( $thing, 0 ) ;\r\n    $part_1 = EvalElse( $thing, 1 ) ;\r\n    if( $txp_user === false )\r\n    {\r\n        $out[] = parse( $part_0 ) ;\r\n\r\n        if( $show_login )\r\n        {\r\n            if( $p_reset )\r\n            {   // Resetting password in progress\r\n                $invite = _cbe_fa_gTxt( \'password_reset\' ) ;\r\n                $out[]  = callback_event( \'cbefrontauth.reset_password\', \'cbe_fa_before_login\', 0\r\n                                        , ps(\'step\') ? array( \'p_userid\'   => $p_userid\r\n                                                            , \'login_with\' => $login_with\r\n                                                            , \'tag_error\'  => $tag_error\r\n                                                            , \'class_error\' => $class_error )\r\n                                                     : null ) ;\r\n            }\r\n            else\r\n            {   // We are not resetting the password at the moment, display login form\r\n                if( isset( $login_failed ) && $login_failed )\r\n                    $out[] = doTag( _cbe_fa_gTxt( \'login_failed\' ), $tag_error, $class_error ) ;\r\n                $invite = $login_invite ;\r\n                $out[]  = _cbe_fa_inout( array( \'label\'      => $login_label\r\n                                              , \'form\'       => $login_form\r\n                                              , \'show_stay\'  => $show_stay\r\n                                              , \'show_reset\' => $show_reset\r\n                                              ) + compact( \'wraptag\', \'class\', \'break\', \'breakclass\' ) ) ;\r\n                if( $show_reset )\r\n                    $out[] = callback_event( \'cbefrontauth.reset_password\', \'cbe_fa_after_login\' ) ;\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        if( (!$name && !$level)\r\n            ||\r\n            _cbe_fa_privileged( $name, $level, $cbe_fa_user[ \'name\' ], $cbe_fa_user[ \'privs\' ] )\r\n          )\r\n        {\r\n            if( $link )\r\n                $out[] = cbe_frontauth_link( array( \'label\' => $linklabel ) + compact( \'link\', \'target\' ) ) ;\r\n\r\n            if( $thing )\r\n                $out[] = parse( $part_1 ) ;\r\n            elseif( $form )\r\n                $out[] = parse_form( $form ) ;\r\n        }\r\n        else\r\n            $out[] = parse( $part_0 ) ;\r\n\r\n        if( $show_logout )\r\n        {\r\n            if( $p_change )\r\n            {   // Changing password in progress\r\n                $invite = _cbe_fa_gTxt( \'change_password\' ) ;\r\n                $out[]  = callback_event( \'cbefrontauth.change_password\', \'cbe_fa_before_logout\', 0\r\n                                        , ps(\'step\') ? array( \'p_userid\'     => $txp_user\r\n                                                            , \'p_password\'   => $p_password\r\n                                                            , \'p_password_1\'\r\n                                                               => strip_tags( ps( \'p_password_1\' ) )\r\n                                                            , \'p_password_2\'\r\n                                                               => strip_tags( ps( \'p_password_2\' ) )\r\n                                                            , \'tag_error\'    => $tag_error\r\n                                                            , \'class_error\'  => $class_error )\r\n                                                     : null ) ;\r\n            }\r\n            else\r\n            {   // We are not changing the password at the moment, display logout form\r\n                $invite = $logout_invite ;\r\n                $out[] = _cbe_fa_inout( array( \'label\'       => $logout_label\r\n                                             , \'form\'        => $logout_form\r\n                                             , \'type\'        => $logout_type\r\n                                             , \'show_change\' => $show_change\r\n                                             , \'p_change\'    => $p_change\r\n                                             , \'tag_error\'   => $tag_error\r\n                                             , \'class_error\' => $class_error\r\n                                             ) + compact( \'wraptag\', \'class\', \'break\', \'breakclass\' ) ) ;\r\n                if( $show_change )\r\n                    $out[] = callback_event( \'cbefrontauth.change_password\', \'cbe_fa_after_logout\' ) ;\r\n            }\r\n        }\r\n    }\r\n\r\n//    return( doLabel( $invite, $tag_invite ) . doWrap( $out, $wraptag, $break, $class, $breakclass ) ) ;\r\n    return( doLabel( $invite, $tag_invite ) . doWrap( $out, $wraptag, \'\', $class ) ) ;\r\n}\r\n','/*\r\n** cbe_frontauth\r\n** Client-side textpattern plugin\r\n** Connect (and disconnect) from frontend to backend\r\n** Establishes bidirectional links between article display and edition\r\n** Claire Brione - http://www.clairebrione.com/\r\n**\r\n** 0.1-dev - 22 Jul 2011 - Restricted development release\r\n** 0.2-dev - 23 Jul 2011 - Restricted development release\r\n** 0.3-dev - 24 Jul 2011 - Restricted development release\r\n** 0.4-beta- 26 Jul 2011 - Restricted beta release\r\n** 0.5-beta- 27 Jul 2011 - First public beta release\r\n** 0.6-beta- 29 Jul 2011 - Optimizations to avoid multiple calls to database\r\n**                           when retrieving user\'s informations\r\n**                         Added name and privilege controls\r\n**                           à la <txp:rvm_if_privileged /> (http://vanmelick.com/txp/)\r\n**                         Minor changes to documentation\r\n** 0.7-beta- 06 Aug 2011 - Introduces <txp:cbe_frontauth_edit_article />\r\n**                         CSRF protection ready\r\n**                         Documentation improvements\r\n** 0.7.1   - 05 Jan 2012 - Documentation addenda\r\n** 0.8     - 10 Jan 2012 - Introduces <txp:cbe_frontauth_loginwith />\r\n**                             http://forum.textpattern.com/viewtopic.php?pid=256632#p256632\r\n**                         txp:cbe_frontauth_loginwith (*auto*|username|email)\r\n** 0.9     - 21 Mar 2012 - Added callback hooks (reset and change password)\r\n** 0.9.1   - 22 Mar 2012 - Fixed missing attributes (show_login and show_change) for cbe_frontauth_box\r\n** 0.9.2   - ?? ??? 2012 - ??\r\n** 0.9.3   - 22 Aug 2012 - Doc typo for cbe_frontauth_invite\r\n** 0.9.4   - 27 Mar 2013 - Missing initialization for cbe_frontauth_whois\r\n**                         Error message when login fails\r\n**                         Local language strings\r\n** 0.9.5   - 04 Apr 2014 - Missing last access storage\r\n** 0.9.6   - 07 Apr 2014 - Error when passing presentational attributes from cbe_frontauth_edit_article to cbe_frontauth_link\r\n** 0.9.7   - 20 Nov 2015 - fix: http://forum.textpattern.com/viewtopic.php?pid=296720#p296720\r\n**\r\n** TODO\r\n** - break, breakclass -> in progress, full tests needed\r\n** - enhence error messages ?\r\n**\r\n ************************************************************************/\r\n\r\n/**************************************************\r\n **\r\n ** Local language strings, possible customisation here\r\n **\r\n **************************************************/\r\nfunction _cbe_fa_lang()\r\n{\r\n    return( array( \'login_failed\'         => \"Login failed\"\r\n                 , \'login_to_textpattern\' => gTxt( \'login_to_textpattern\' )\r\n                 , \'name\'                 => gTxt( \'name\' )\r\n                 , \'password\'             => gTxt( \'password\' )\r\n                 , \'log_in_button\'        => gTxt( \'log_in_button\' )\r\n                 , \'stay_logged_in\'       => gTxt( \'stay_logged_in\' )\r\n                 , \'logout\'               => gTxt( \'logout\' )\r\n                 , \'edit\'                 => gTxt( \'edit\' )\r\n                 , \'change_password\'      => gTxt( \'change_password\' )\r\n                 , \'password_reset\'       => gTxt( \'password_reset\' ) \r\n                 )\r\n          ) ;\r\n}\r\n/**************************************************\r\n **\r\n ** Don\'t edit further\r\n **\r\n **************************************************/\r\n\r\n/**************************************************\r\n **\r\n ** Available tags\r\n **\r\n **************************************************/\r\n\r\n/* == Shortcuts for cbe_frontauth() == */\r\n\r\n// -- Global init for redirection after login and/or logout\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_redirect( $atts )\r\n{\r\n    return( _cbe_fa_init( $atts, \'redir\' ) ) ;\r\n}\r\n\r\n// -- Global init for login/logout invites\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_invite( $atts )\r\n{\r\n    return( _cbe_fa_init( $atts, \'invite\' ) ) ;\r\n}\r\n\r\n// -- Global init for login/logout buttons/link labels\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_label( $atts )\r\n{\r\n    return( _cbe_fa_init( $atts, \'label\' ) ) ;\r\n}\r\n\r\n// -- Global init for login with user name, email, or automatic detection\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_loginwith( $atts )\r\n{\r\n    return( _cbe_fa_init( $atts, \'with\' ) ) ;\r\n}\r\n\r\n// -- Login / Logout box\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_box( $atts, $thing = \'\' )\r\n{\r\n    $public_atts = lAtts( array( \'login_invite\'  => _cbe_fa_gTxt( \'login_to_textpattern\' )\r\n                               , \'logout_invite\' => \'\'\r\n                               , \'show_change\'   => \'1\'\r\n                               , \'show_reset\'    => \'1\'\r\n                               , \'tag_invite\'    => \'\'\r\n                               , \'login_label\'   => _cbe_fa_gTxt( \'log_in_button\' )\r\n                               , \'logout_label\'  => _cbe_fa_gTxt( \'logout\' )\r\n                               , \'logout_type\'   => \'button\'\r\n                               , \'tag_error\'     => \'span\'\r\n                               , \'class_error\'   => \'cbe_fa_error\'\r\n                               )\r\n                           + _cbe_fa_format()\r\n                         , $atts ) ;\r\n\r\n    return( cbe_frontauth( $public_atts\r\n                          , $thing ? $thing : \'<p><txp:text item=\"logged_in_as\" /> <txp:cbe_frontauth_whois wraptag=\"span\" class=\"user\"/></p>\'\r\n                          ) ) ;\r\n\r\n}\r\n\r\n// -- Standalone login form\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_login( $atts, $thing = \'\' )\r\n{\r\n    return( _cbe_fa_inout_process( \'login\', $atts, $thing ) ) ;\r\n}\r\n\r\n// -- Standalone logout form / link\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_logout( $atts, $thing = \'\' )\r\n{\r\n    return( _cbe_fa_inout_process( \'logout\', $atts, $thing ) ) ;\r\n}\r\n\r\n// -- Protect parts from non-connected viewers\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_protect( $atts, $thing )\r\n{\r\n    $public_atts = lAtts( array( \'link\'      => \'\'\r\n                               , \'linklabel\' => \'\'\r\n                               , \'target\'    => \'_self\'\r\n                               , \'name\'      => \'\'\r\n                               , \'level\'     => \'\'\r\n                               )\r\n                         + _cbe_fa_format()\r\n                         , $atts ) ;\r\n\r\n    if( $public_atts[\'target\'] == \'_get\' )\r\n        $public_atts[\'target\'] = \'_self\' ;\r\n\r\n    return( cbe_frontauth( array( \'login_invite\' => \'\' , \'logout_invite\' => \'\'\r\n                                , \'show_login\'   => \'0\', \'show_logout\'   => \'0\'\r\n                                , \'show_reset\'   => \'0\', \'show_change\'   => \'0\' ) + $public_atts\r\n                         , $thing\r\n                         ) ) ;\r\n}\r\nfunction cbe_frontauth_if_logged( $atts, $thing )\r\n{\r\n    return( cbe_frontauth_protect( $atts, $thing ) ) ;\r\n}\r\nfunction cbe_frontauth_if_connected( $atts, $thing )\r\n{\r\n    return( cbe_frontauth_protect( $atts, $thing ) ) ;\r\n}\r\n\r\n/* == Elements == */\r\n\r\n// -- Generates input field for name\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_logname( $atts, $defvalue=null )\r\n{\r\n    return( _cbe_fa_identity( \'name\', $atts, $defvalue ) ) ;\r\n}\r\n\r\n// -- Generates input field for password\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_password( $atts, $defvalue=null )\r\n{\r\n    return( _cbe_fa_identity( \'password\', $atts, $defvalue ) ) ;\r\n}\r\n\r\n// -- Generates checkbox for stay (connected on this browser)\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_stay( $atts )\r\n{\r\n    extract( lAtts( array ( \'label\' => _cbe_fa_gTxt( \'stay_logged_in\' )\r\n                          )\r\n                  + _cbe_fa_format()\r\n                  , $atts\r\n                  )\r\n           ) ;\r\n\r\n    $out  = checkbox(\'p_stay\', 1, cs(\'txp_login\'), \'\', \'stay\') ;\r\n    $out .= \'<label for=\"stay\">\'.$label.\'</label>\' ;\r\n    return( doTag( $out, $wraptag, $class ) ) ;\r\n}\r\n\r\n// -- Generates submit button\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_submit( $atts )\r\n{\r\n    $public_atts = lAtts( array ( \'label\' => \'\'\r\n                                , \'type\'  => \'login\'\r\n                                )\r\n                        + _cbe_fa_format()\r\n                        , $atts\r\n                        ) ;\r\n\r\n    return( _cbe_fa_button( $public_atts ) ) ;\r\n}\r\n\r\n// -- Displays connected user\'s informations\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_whois( $atts )\r\n{\r\n    extract( lAtts( array ( \'type\'       => \'name\'\r\n                          , \'format\'     => \'\'\r\n                          )\r\n                    + _cbe_fa_format()\r\n                  , $atts\r\n                  )\r\n           ) ;\r\n\r\n    $types = do_list( $type ) ;\r\n    $whois = cbe_frontauth( array( \'init\' => \'0\', \'value\' => $types ) ) ;\r\n\r\n    if( isset( $whois[\'last_access\'] ) )\r\n    {\r\n        global $dateformat ;\r\n        $whois[\'last_access\'] = safe_strftime( $format ? $format : $dateformat, strtotime( $whois[\'last_access\'] ) ) ;\r\n    }\r\n\r\n    return( doWrap( $whois, $wraptag, $break, $class, $breakclass ) ) ;\r\n}\r\n\r\n/* == Off-topic, but useful == */\r\n\r\n// -- Generates a link, normal or with a GET parameter\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_link( $atts )\r\n{   // $class applies to anchor if no $wraptag supplied\r\n    extract( lAtts( array ( \'label\'  => \'\'\r\n                          , \'link\'   => \'\'\r\n                          , \'target\' => \'_self\'\r\n                          )\r\n                  + _cbe_fa_format()\r\n                  , $atts\r\n                  )\r\n           ) ;\r\n\r\n    $link = doStripTags( $link ) ;\r\n    $out = _cbe_fa_link( compact( \'link\', \'target\' ) ) ;\r\n    $out = href( $label, $out\r\n               , (($target !== \'_get\')  ? \' target=\"\'.$target.\'\"\' : \'\')\r\n               . ((!$wraptag && $class) ? \' class=\"\'.$class.\'\"\'   : \'\') ) ;\r\n    return( doTag( $out, $wraptag, $class ) ) ;\r\n}\r\n\r\n// -- Returns path to textpattern backend\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_backend()\r\n{\r\n//            . substr(strrchr(txpath, \"/\"), 1)\r\n    return( preg_replace(\'|//$|\',\'/\', rhu.\'/\')\r\n            . substr(strrchr(txpath, DS), 1)\r\n            . \'/index.php\'\r\n           ) ;\r\n}\r\n\r\n// -- Returns button (standalone) or link to edit current article\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth_edit_article( $atts )\r\n{\r\n    global $thisarticle ;\r\n    assert_article() ;\r\n\r\n    extract( lAtts( array ( \'label\' => _cbe_fa_gTxt( \'edit\' )\r\n                          , \'type\'  => \'button\'\r\n                          )\r\n                  + _cbe_fa_format()\r\n                  , $atts\r\n                  )\r\n           ) ;\r\n\r\n    $path_parts = array( \'event\'      => \'article\'\r\n                       , \'step\'       => \'edit\'\r\n                       , \'ID\'         => $thisarticle[\'thisid\']\r\n                       ) ;\r\n\r\n    if( $type == \'button\' )\r\n    {\r\n        $out = array() ;\r\n\r\n        foreach( $path_parts as $part => $value )\r\n            $out[] = hInput( $part, $value ) ;\r\n\r\n        $out[] = cbe_frontauth_submit( array( \'label\' => $label, \'type\' => \'\', \'class\' =>\'publish\' ) ) ;\r\n\r\n         return( _cbe_fa_form( array( \'statements\' => join( n, $out ) ) ) ) ;\r\n    }\r\n    elseif( $type == \'link\' )\r\n    {\r\n        $path_parts[ \'_txp_token\' ] = form_token() ;\r\n        array_walk( $path_parts, create_function( \'&$v, $k\', \'$v = $k.\"=\".$v ;\' ) ) ;\r\n        $link = cbe_frontauth_backend() . \'?\' . join( \'&\', $path_parts ) ;\r\n\r\n        return( cbe_frontauth_link( compact( \'link\', \'label\'\r\n                                           , array_keys( _cbe_fa_format() )\r\n                                           )\r\n                                  )\r\n              ) ;\r\n    }\r\n    else\r\n        return ;\r\n}\r\n\r\n/**************************************************\r\n **\r\n ** Utilities (kinda private functions)\r\n **\r\n **************************************************/\r\n\r\n// -- Gets and returns local lang strings (txp admin + plugin specifics)\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_gTxt( $text, $atts = array() )\r\n{\r\n    static $aTexts = array() ;\r\n    if( ! $aTexts )\r\n        $aTexts = _cbe_fa_lang() ;\r\n\r\n    return( isset( $aTexts[ $text ] ) ? strtr( $aTexts[ $text ], $atts ) : gTxt( $text ) ) ;\r\n}\r\n\r\n// -- Common presentational attributes\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_format()\r\n{\r\n    return( array( \'wraptag\'    => \'\'\r\n                 , \'class\'      => \'\'\r\n                 , \'break\'      => \'\'\r\n                 , \'breakclass\' => \'\'\r\n                 )\r\n          ) ;\r\n}\r\n\r\n// -- Global initialisations (redirect, invite, label, loginwith)\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_init( $atts, $type )\r\n{\r\n    extract( lAtts( array ( \'for\' => \'\', \'value\' => \'\' ), $atts ) ) ;\r\n    if( $for === \'\' )\r\n        $for = \'login\' ;\r\n    $init_for = do_list( $for ) ;\r\n\r\n    if( ($index=array_search( \'logged\', $init_for )) !== false )\r\n        $init_for[ $index ] = \'logout\' ;\r\n\r\n    array_walk( $init_for, create_function( \'&$v, $k, $p\', \'$v = $v.\"_\".$p ;\'), $type ) ;\r\n\r\n    if( ($init_list = @array_combine( $init_for, do_list( $value ) )) === false )\r\n        return ;\r\n\r\n    cbe_frontauth( array( \'init\' => \'1\' ) + $init_list ) ;\r\n    return ;\r\n}\r\n\r\n// -- Retrieve user\'s info, if connected \r\n// -- textpattern/lib/txp_misc.php - is_logged_in() as a starting point\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_logged_in( &$user, $txp_user = null )\r\n{\r\n    if( $txp_user !== null )\r\n        $name = $txp_user ;\r\n    elseif( !($name = substr(cs(\'txp_login_public\'), 10)) )\r\n    {\r\n        $user[ \'name\' ] = false ;\r\n        return( false ) ;\r\n    }\r\n\r\n    $rs = safe_row(\'nonce, name, RealName, email, privs, last_access\', \'txp_users\', \"name = \'\".doSlash($name).\"\'\");\r\n\r\n    if( $rs && ($txp_user !== null || substr(md5($rs[\'nonce\']), -10) === substr(cs(\'txp_login_public\'), 0, 10) ) )\r\n    {\r\n        unset( $rs[ \'nonce\' ] ) ;\r\n        $user = $rs ;\r\n        return( true ) ;\r\n    }\r\n    else\r\n    {\r\n        $user[ \'name\' ] = false ;\r\n        return( false ) ;\r\n    }\r\n}\r\n\r\n// -- Checks current user against required privileges\r\n// -- Thanks to Ruud Van Melick\'s rvm_privileged (http://vanmelick.com/txp/)\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_privileged( $r_name, $r_level, $u_name, $u_level )\r\n{\r\n    $chk_name  = !$r_name  || in_array( $u_name , do_list( $r_name  ) ) ;\r\n    $chk_level = !$r_level || in_array( $u_level, do_list( $r_level ) ) ;\r\n    return( $chk_name || $chk_level ) ;\r\n}\r\n\r\n// -- Generates input field for name or password\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_identity( $field, $atts, $value=null )\r\n{\r\n    extract( lAtts( array ( \'label\'     => _cbe_fa_gTxt( $field )\r\n                          , \'label_sfx\' => \'\'\r\n                          )\r\n                  + _cbe_fa_format()\r\n                  , $atts\r\n                  )\r\n           ) ;\r\n\r\n    $$field = \'\' ;\r\n    if( $field == \'name\' && cs(\'cbe_frontauth_login\') != \'\' )\r\n        list($name) = explode( \',\', cs(\'cbe_frontauth_login\') ) ;\r\n\r\n    $out = array() ;\r\n    $out[] = \'<label for=\"\'.$field.$label_sfx.\'\">\'.$label.\'</label>\' ;\r\n    $out[] =  fInput( ($field == \'name\')    ? \'text\'     : \'password\'\r\n                    ,(($field == \'name\')    ? \'p_userid\' : \'p_password\') . $label_sfx\r\n                    , ($field == \'name\')    ? $name      : ($value !== null ? $value : \'\')\r\n                    , (!$wraptag && $class) ? $class     : \'\'\r\n                    , \'\', \'\', \'\', \'\', $field.$label_sfx ) ;\r\n\r\n    return( doWrap( $out, $wraptag, $break, $class, $breakclass ) ) ;\r\n}\r\n\r\n// -- Prepare call to cbe_frontauth() for login/logout form/link\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_inout_process( $inout, $atts, $thing = \'\' )\r\n{\r\n    $plus_atts = ($inout == \'logout\' )\r\n               ? array( \'type\'        => \'button\'\r\n                      , \'show_change\' => \'1\'      )\r\n               : array( \'show_stay\'   => \'0\'\r\n                      , \'show_reset\'  => \'1\'      ) ;\r\n    $public_atts = lAtts( array ( \'invite\'     => _cbe_fa_gTxt( ($inout == \'login\') ? \'login_to_textpattern\' \r\n                                                                                    : \'\' )\r\n                                , \'tag_invite\' => \'\'\r\n                                , \'label\'      => _cbe_fa_gTxt( ($inout == \'login\') ? \'log_in_button\'\r\n                                                                                    : \'logout\' )\r\n                                , \'form\'       => \'\'\r\n                                , \'tag_error\'  => \'span\', \'class_error\' => \'cbe_fa_error\'\r\n                                )\r\n                        + $plus_atts + _cbe_fa_format()\r\n                        , $atts ) ;\r\n\r\n    if( isset( $public_atts[\'invite\'] ) )\r\n    {\r\n        $public_atts[$inout.\'_invite\'] = $public_atts[\'invite\'] ;\r\n        unset( $public_atts[\'invite\'] ) ;\r\n    }\r\n    if( isset( $public_atts[\'label\'] ) )\r\n    {\r\n        $public_atts[$inout.\'_label\'] = $public_atts[\'label\'] ;\r\n        unset( $public_atts[\'label\'] ) ;\r\n    }\r\n    if( isset( $public_atts[\'form\'] ) )\r\n    {\r\n        $public_atts[$inout.\'_form\'] = $public_atts[\'form\'] ;\r\n        unset( $public_atts[\'form\'] ) ;\r\n    }\r\n    if( isset( $public_atts[\'type\'] ) )\r\n    {\r\n        $public_atts[$inout.\'_type\'] = $public_atts[\'type\'] ;\r\n        unset( $public_atts[\'type\'] ) ;\r\n    }\r\n    if( $thing )\r\n        $public_atts[$inout.\'_form\'] = $thing ;\r\n\r\n    $show = ($inout == \'login\') ? \'logout\' : \'login\' ;\r\n    return( cbe_frontauth( array( \'show_\'.$show => \'0\' ) + $public_atts ) ) ;\r\n}\r\n\r\n// -- Encloses statements in a submit form\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_form( $atts )\r\n{\r\n    extract( lAtts( array( \'statements\' => \'\'\r\n                         , \'action\'     => cbe_frontauth_backend()\r\n                         , \'method\'     => \'post\'\r\n                         )\r\n                  , $atts\r\n                  )\r\n           ) ;\r\n\r\n    if( ! $statements )\r\n        return ;\r\n\r\n    return( \'<form action=\"\'.$action.\'\" method=\"\'.$method.\'\">\'\r\n            .n. $statements\r\n            .n. \'</form>\' ) ;\r\n}\r\n\r\n// -- Generates a button (primary purpose : login/logout button)\r\n// -- Extended to \'edit\' (just in case) - 0.7\r\n// -- Note: providing a label and setting type to blank works too\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_button( $atts )\r\n{\r\n    extract( $atts ) ; // \'label\', \'type\', \'wraptag\', class\'\r\n\r\n    if( ! $label and ! ($label = cbe_frontauth( array( \'init\' => \'0\', \'value\' => $type.\'_label\' ) )) )\r\n        $label = _cbe_fa_gTxt( ($type == \'logout\' || $type == \'edit\' ) ? $type : \'log_in_button\' ) ;\r\n\r\n    $out = fInput( \'submit\', \'\', $label, (!$wraptag && $class) ? $class : \'\' ) ;\r\n \r\n    if( $type == \'logout\' )\r\n        $out .= hInput( \'p_logout\', \'1\' ) ;\r\n    elseif( $type == \'edit\' )\r\n        $out .= tInput() ;\r\n\r\n    return( doTag( $out, $wraptag, $class ) ) ;\r\n}\r\n\r\n// -- Generates a link (primary purpose : logout link)\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_link( $atts )\r\n{\r\n    extract( $atts ) ; // \'link\', \'target\'\r\n    \r\n    if( $target == \'_get\' )\r\n    {\r\n        $uri = serverSet( \'REQUEST_URI\'  ) ;\r\n        $qus = serverSet( \'QUERY_STRING\' ) ;\r\n\r\n        $len_uri = strlen( $uri ) ;\r\n        $len_qus = strlen( $qus ) ;\r\n\r\n        $uri = ($len_qus > 0) ? substr( $uri, 0, $len_uri-$len_qus-1 ) : $uri ;\r\n        $qus = $qus . ($len_qus > 0 ? \'&\' : \'\') . $link ;\r\n\r\n        $out = (substr( $uri, -1 ) !== \'?\' ) ? ($uri.\'?\'.$qus) : ($uri.$qus) ;\r\n    }\r\n    else\r\n    {\r\n        $out = $link ;\r\n    }\r\n\r\n    return( $out ) ;\r\n}\r\n\r\n// -- Generates login/logout form or logout link\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_inout( $atts )\r\n{\r\n    extract( $atts ) ;\r\n\r\n    $out = array() ;\r\n\r\n    if( $form )\r\n        $out[] = ($f=@fetch_form( $form )) ? parse( $f ) : parse( $form ) ; // label takes precedence here\r\n    else\r\n    {\r\n        if( isset( $show_stay ) )\r\n        {   // login\r\n\r\n            $out[] = cbe_frontauth_logname(  array( \'class\' => \'edit\')\r\n                                          +  compact( \'break\', \'breakclass\' ) ) ;\r\n            $out[] = cbe_frontauth_password( array( \'class\' => \'edit\')\r\n                                           + compact( \'break\', \'breakclass\' ) ) ;\r\n            if( $show_stay )\r\n                $out[] = cbe_frontauth_stay( array() ) ;\r\n\r\n            $out[] = cbe_frontauth_submit( array( \'label\' => $label, \'class\' => \'publish\' ) ) ;\r\n\r\n        }\r\n        else\r\n        {   // logout\r\n            $out[] = ($type == \'button\')\r\n                   ? cbe_frontauth_submit( array( \'label\' => $label, \'type\' => \'logout\'\r\n                                                , \'class\' => $class ? $class : \'publish\' ) )\r\n                   : cbe_frontauth_link( array( \'label\' => $label, \'link\' => \'logout=1\', \'target\' => \'_get\'\r\n                                              , \'class\' => $class ? $class : \'publish\' ) ) ;\r\n        }\r\n    }\r\n\r\n//    $out = join( n, $out ) ;\r\n    $out = doWrap( $out, $wraptag, $break, \'\', $breakclass ) ;\r\n    return( (isset( $type ) && $type==\'link\')\r\n            ? $out\r\n            : _cbe_fa_form( array( \'statements\' => $out, \'action\' => page_url( array() ) ) ) ) ;\r\n}\r\n\r\n/* == Backbone == */\r\n\r\n// -- Cookie mechanism - from textpattern/include/txp_auth.php - doTxpValidate()\r\n// -------------------------------------------------------------------\r\nfunction _cbe_fa_auth( $redir, $p_logout, $p_userid=\'\', $p_password=\'\', $p_stay=\'\' )\r\n{\r\n    defined(\'LOGIN_COOKIE_HTTP_ONLY\') || define(\'LOGIN_COOKIE_HTTP_ONLY\', true);\r\n    $hash  = md5(uniqid(mt_rand(), TRUE));\r\n    $nonce = md5($p_userid.pack(\'H*\',$hash));\r\n    $pub_path = preg_replace(\'|//$|\',\'/\', rhu.\'/\') ;\r\n    $adm_path = $pub_path . substr(strrchr(txpath, DS), 1) . \'/\' ;\r\n\r\n    if( $p_logout )\r\n    {\r\n        $log_name = false ;\r\n\r\n        safe_update( \'txp_users\'\r\n                   , \"nonce = \'\".doSlash($hash).\"\'\"\r\n                   , \"name = \'\".doSlash($p_userid).\"\'\"\r\n                   ) ;\r\n\r\n        setcookie( \'txp_login\'\r\n                 , \'\'\r\n                 , time()-3600\r\n                 , $adm_path\r\n                 ) ;\r\n\r\n        setcookie( \'txp_login_public\'\r\n                 , \'\'\r\n                 , time()-3600\r\n                 , $pub_path\r\n                 ) ;\r\n\r\n        setcookie( \'cbe_frontauth_login\'\r\n                 , \'\'\r\n                 , time()-3600\r\n                 , $pub_path\r\n                 ) ;\r\n    }\r\n//    elseif( ($log_name = txp_validate( $p_userid, $p_password, false )) !== false )\r\n    elseif( ($log_name = txp_validate( $p_userid, $p_password )) !== false )\r\n    {\r\n        safe_update( \'txp_users\'\r\n                   , \"nonce = \'\".doSlash($nonce).\"\'\"\r\n                   , \"name = \'\".doSlash($p_userid).\"\'\"\r\n                   ) ;\r\n\r\n        setcookie( \'txp_login\'\r\n                 , $p_userid.\',\'.$hash\r\n                 , ($p_stay ? time()+3600*24*365 : 0)\r\n                 , $adm_path\r\n                 , null\r\n                 , null\r\n                 , LOGIN_COOKIE_HTTP_ONLY\r\n                 ) ;\r\n\r\n        setcookie( \'txp_login_public\'\r\n                 , substr(md5($nonce), -10).$p_userid\r\n                 , ($p_stay ? time()+3600*24*30 : 0)\r\n                 , $pub_path\r\n                 ) ;\r\n\r\n        if( $p_stay )\r\n            setcookie( \'cbe_frontauth_login\'\r\n                     , $p_userid.\',\'.$hash\r\n                     , time()+3600*24*365\r\n                     , $pub_path\r\n                     ) ;\r\n    }\r\n\r\n    if( $redir && ( $p_logout || $log_name !== false ) )\r\n    {\r\n        header( \"Location:$redir\" ) ;\r\n        exit ;\r\n    }\r\n\r\n    return( $log_name ) ;\r\n}\r\n\r\n// -- Get the job done\r\n// -------------------------------------------------------------------\r\nfunction cbe_frontauth( $atts, $thing = null )\r\n{\r\n    include_once( txpath.\'/include/txp_auth.php\' ) ;\r\n    global $txp_user ;\r\n    static $inits = array( \'login_invite\' => \'\' , \'logout_invite\' => \'\' , \'tag_invite\' => \'\'\r\n                         , \'login_label\'  => \'\' , \'logout_label\'  => \'\'\r\n                         , \'login_redir\'  => \'\' , \'logout_redir\'  => \'\'\r\n                         , \'login_with\'   => \'\'\r\n                         ) ;\r\n    static $cbe_fa_user = array( \'name\'  => false , \'RealName\'    => \'\' , \'email\' => \'\'\r\n                               , \'privs\' => \'\'    , \'last_access\' => \'\'\r\n                               ) ;\r\n\r\n    if( isset( $atts[\'init\'] ) )\r\n    {\r\n        if( $atts[\'init\'] )\r\n        {\r\n            unset( $atts[\'init\'] ) ;\r\n\r\n            foreach( $atts as $param => $value )\r\n                $inits[$param] = $value ;\r\n\r\n            return ;\r\n        }\r\n        else\r\n        {\r\n            if( is_array( $atts[ \'value\' ] ) )\r\n            {\r\n                $whois = array() ;\r\n                if( ! $cbe_fa_user[ \'name\' ] ) _cbe_fa_logged_in( $cbe_fa_user ) ;\r\n                foreach( $atts[ \'value\' ] as $type )\r\n                    $whois[ $type ] = $cbe_fa_user[ $type ] ;\r\n                \r\n                return( $whois ) ;\r\n            }\r\n            else\r\n                return( isset( $inits[ $atts[ \'value\' ] ] ) ? $inits[ $atts[ \'value\' ] ] : \'\' ) ;\r\n        }\r\n    }\r\n\r\n    $def_atts = array( \'form\'          => \'\'\r\n                     , \'tag_invite\'    => \'\'\r\n                     , \'show_login\'    => \'1\'\r\n                     , \'login_invite\'  => _cbe_fa_gTxt( \'login_to_textpattern\' )\r\n                     , \'login_form\'    => \'\'\r\n                     , \'login_label\'   => _cbe_fa_gTxt( \'log_in_button\' )\r\n                     , \'login_with\'    => \'auto\'\r\n                     , \'login_redir\'   => \'\'\r\n                     , \'show_logout\'   => \'1\'\r\n                     , \'logout_invite\' => \'\'\r\n                     , \'logout_form\'   => \'\'\r\n                     , \'logout_label\'  => _cbe_fa_gTxt( \'logout\' )\r\n                     , \'logout_type\'   => \'button\'\r\n                     , \'logout_redir\'  => \'\'\r\n                     , \'show_stay\'     => \'0\'\r\n                     , \'show_reset\'    => \'1\'\r\n                     , \'show_change\'   => \'1\'\r\n                     , \'link\'          => \'\'\r\n                     , \'linklabel\'     => \'\'\r\n                     , \'target\'        => \'_self\'\r\n                     , \'name\'          => \'\'\r\n                     , \'level\'         => \'\'\r\n                     , \'tag_error\'     => \'\'\r\n                     , \'class_error\'   => \'\'\r\n                     ) ;\r\n\r\n    $ini_atts = array() ;\r\n    foreach( $inits as $param => $value )\r\n    {   /* Inits take precedence on default values */\r\n        if( !isset( $atts[$param] ) || $atts[$param] === $def_atts[$param] )\r\n            $ini_atts[$param] = $value ;\r\n    }\r\n\r\n    extract( lAtts( $def_atts + _cbe_fa_format(), array_merge( $atts, array_filter( $ini_atts ) ) ) ) ;\r\n\r\n    extract( psa( array( \'p_userid\', \'p_password\', \'p_stay\', \'p_reset\', \'p_logout\', \'p_change\' ) ) ) ;\r\n    $logout = gps( \'logout\' ) ;\r\n    $p_logout = $p_logout || $logout ;\r\n    $reset = gps( \'reset\' ) ;\r\n    $p_reset = $p_reset || $reset ;\r\n    $change = gps( \'change\' ) ;\r\n    $p_change = $p_change || $change ;\r\n\r\n    if( $p_userid && $p_password )\r\n    {\r\n        $username = ($login_with == \'auto\') ? safe_count( \'txp_users\', \"name=\'$p_userid\'\" ) : 0 ;\r\n\r\n        if( $username == 0 && $login_with != \'username\' )\r\n        { // Email probably given, retrieve user name if possible\r\n            $p_userid = safe_rows( \'name\', \'txp_users\', \"email=\'$p_userid\'\" ) ;\r\n            $p_userid = (count( $p_userid ) == 1) ? $p_userid[ 0 ][ \'name\' ] : \'\' ;\r\n        }\r\n\r\n        $login_redir = ($login_redir===\'link\') ? $link : $login_redir ;\r\n        $login_failed = ($txp_user = _cbe_fa_auth( $login_redir, 0, $p_userid, $p_password, $p_stay )) === false ;\r\n        _cbe_fa_logged_in( $cbe_fa_user, $txp_user ) ;\r\n    }\r\n    elseif( $p_logout )\r\n    {\r\n        if( $logout && !$logout_redir )\r\n            $logout_redir = preg_replace( \"/[?&]logout=1/\", \"\", serverSet(\'REQUEST_URI\') ) ;\r\n\r\n        $txp_user = _cbe_fa_auth( $logout_redir, 1 ) ;\r\n        _cbe_fa_logged_in( $cbe_fa_user, false ) ;\r\n    }\r\n    else\r\n        $txp_user = _cbe_fa_logged_in( $cbe_fa_user ) ? $cbe_fa_user[ \'name\' ] : false ;\r\n\r\n    $out = array() ;\r\n    $invite = \'\' ;\r\n    $part_0 = EvalElse( $thing, 0 ) ;\r\n    $part_1 = EvalElse( $thing, 1 ) ;\r\n    if( $txp_user === false )\r\n    {\r\n        $out[] = parse( $part_0 ) ;\r\n\r\n        if( $show_login )\r\n        {\r\n            if( $p_reset )\r\n            {   // Resetting password in progress\r\n                $invite = _cbe_fa_gTxt( \'password_reset\' ) ;\r\n                $out[]  = callback_event( \'cbefrontauth.reset_password\', \'cbe_fa_before_login\', 0\r\n                                        , ps(\'step\') ? array( \'p_userid\'   => $p_userid\r\n                                                            , \'login_with\' => $login_with\r\n                                                            , \'tag_error\'  => $tag_error\r\n                                                            , \'class_error\' => $class_error )\r\n                                                     : null ) ;\r\n            }\r\n            else\r\n            {   // We are not resetting the password at the moment, display login form\r\n                if( isset( $login_failed ) && $login_failed )\r\n                    $out[] = doTag( _cbe_fa_gTxt( \'login_failed\' ), $tag_error, $class_error ) ;\r\n                $invite = $login_invite ;\r\n                $out[]  = _cbe_fa_inout( array( \'label\'      => $login_label\r\n                                              , \'form\'       => $login_form\r\n                                              , \'show_stay\'  => $show_stay\r\n                                              , \'show_reset\' => $show_reset\r\n                                              ) + compact( \'wraptag\', \'class\', \'break\', \'breakclass\' ) ) ;\r\n                if( $show_reset )\r\n                    $out[] = callback_event( \'cbefrontauth.reset_password\', \'cbe_fa_after_login\' ) ;\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        if( (!$name && !$level)\r\n            ||\r\n            _cbe_fa_privileged( $name, $level, $cbe_fa_user[ \'name\' ], $cbe_fa_user[ \'privs\' ] )\r\n          )\r\n        {\r\n            if( $link )\r\n                $out[] = cbe_frontauth_link( array( \'label\' => $linklabel ) + compact( \'link\', \'target\' ) ) ;\r\n\r\n            if( $thing )\r\n                $out[] = parse( $part_1 ) ;\r\n            elseif( $form )\r\n                $out[] = parse_form( $form ) ;\r\n        }\r\n        else\r\n            $out[] = parse( $part_0 ) ;\r\n\r\n        if( $show_logout )\r\n        {\r\n            if( $p_change )\r\n            {   // Changing password in progress\r\n                $invite = _cbe_fa_gTxt( \'change_password\' ) ;\r\n                $out[]  = callback_event( \'cbefrontauth.change_password\', \'cbe_fa_before_logout\', 0\r\n                                        , ps(\'step\') ? array( \'p_userid\'     => $txp_user\r\n                                                            , \'p_password\'   => $p_password\r\n                                                            , \'p_password_1\'\r\n                                                               => strip_tags( ps( \'p_password_1\' ) )\r\n                                                            , \'p_password_2\'\r\n                                                               => strip_tags( ps( \'p_password_2\' ) )\r\n                                                            , \'tag_error\'    => $tag_error\r\n                                                            , \'class_error\'  => $class_error )\r\n                                                     : null ) ;\r\n            }\r\n            else\r\n            {   // We are not changing the password at the moment, display logout form\r\n                $invite = $logout_invite ;\r\n                $out[] = _cbe_fa_inout( array( \'label\'       => $logout_label\r\n                                             , \'form\'        => $logout_form\r\n                                             , \'type\'        => $logout_type\r\n                                             , \'show_change\' => $show_change\r\n                                             , \'p_change\'    => $p_change\r\n                                             , \'tag_error\'   => $tag_error\r\n                                             , \'class_error\' => $class_error\r\n                                             ) + compact( \'wraptag\', \'class\', \'break\', \'breakclass\' ) ) ;\r\n                if( $show_change )\r\n                    $out[] = callback_event( \'cbefrontauth.change_password\', \'cbe_fa_after_logout\' ) ;\r\n            }\r\n        }\r\n    }\r\n\r\n//    return( doLabel( $invite, $tag_invite ) . doWrap( $out, $wraptag, $break, $class, $breakclass ) ) ;\r\n    return( doLabel( $invite, $tag_invite ) . doWrap( $out, $wraptag, \'\', $class ) ) ;\r\n}\r\n','027ac0b23a21771af89f0714c8f23456',0,4,0);

INSERT INTO `txp_plugin` (`name`, `status`, `author`, `author_uri`, `version`, `description`, `help`, `code`, `code_restore`, `code_md5`, `type`, `load_order`, `flags`)
VALUES
	('wet_babble',1,'Robert Wetzlmayr','http://awasteofwords.com/software/wet_babble-textpattern-plugin','0.2','Injects custom i18n strings, potentially overriding some built-ins','	<h3>Purpose</h3>\n\n	<p>Sometimes Textpattern&#8217;s built-in texts just don&#8217;t fit the bill. This plugin overrides a choice of your liking with alternate texts. Updating the core texts from the Textpattern language server won&#8217;t wipe out your custom texts.</p>\n\n	<h3>Usage</h3>\n\n	<p>As this plugin currently is just quick and dirty patch, you&#8217;d have to modify the plugin&#8217;s code to add your customisations.</p>\n\n	<ol>\n		<li>Open Textpattern&#8217;s language table <code>txp_lang</code> with your favourite MySQL administration tool and look for the string you want to override.</li>\n		<li>Note the contents of the <code>name</code> column.</li>\n		<li>Edit this plugin&#8217;s code and navigate to the lines starting with &#8220;<span class=\"caps\">ADD</span> <span class=\"caps\">YOUR</span> <span class=\"caps\">TEXT</span> <span class=\"caps\">HERE</span>&#8221;.</li>\n		<li>Add entries as you please, adhering to the two sample lines.</li>\n	</ol>\n\n	<h3>Additional information</h3>\n\n	<p><span class=\"caps\">TBD</span>.</p>\n\n	<h3>Licence</h3>\n\n	<p>This plugin is released under the <a href=\"http://www.gnu.org/licenses/gpl.txt\" rel=\"nofollow\">Gnu General Public Licence</a>.</p>','function wet_babble()\r\n{\r\n\r\n	$custom_strings = array(\r\n	// ADD YOUR TEXT HERE\r\n	// Format: \'name_from_txp_lang\' => \'My very own text\',\r\n	\'timestamp\' 	=> \'Start\',\r\n	\'expires\' 	=> \'End\',\r\n        \'body\'          => \'Description\',\r\n	// STOP EDITING!\r\n	);\r\n\r\n	global $textarray;\r\n	$textarray = $custom_strings + $textarray;\r\n}\r\n\r\nif (@txpinterface == \'public\' || @txpinterface == \'admin\') wet_babble();\r\n','\nfunction wet_babble()\n{\n\n	$custom_strings = array(\n	// ADD YOUR TEXT HERE\n	// Format: \'name_from_txp_lang\' => \'My very own text\',\n	\'this_is_just_a_sample_1\' 	=> \'Lorem ipsum dolor sit amend&hellip;\',\n	\'this_is_just_a_sample_2\' 	=> \'Awesome!\',\n	// STOP EDITING!\n	);\n\n	global $textarray;\n	$textarray = $custom_strings + $textarray;\n}\n\nif (@txpinterface == \'public\' || @txpinterface == \'admin\') wet_babble();\n','53a656e403a7c57d40a3de11830916a4',1,5,0),
	('rah_external_output',1,'Jukka Svahn','http://rahforum.biz','1.0','External content-type snippets','	<h1>rah_external_output</h1>\n\n	<p>Rah_external_output is a <a href=\"http://textpattern.com\" rel=\"nofollow\">Textpattern</a> plugin that can be used create custom content-type snippets. These snippets can be requested with a publicly accessible <span class=\"caps\">URL</span>, and used as pages or to provide site&#8217;s content over in form of <span class=\"caps\">JSON</span> or <span class=\"caps\">XML</span> to JavaScript or across domains.</p>\n\n	<p>While these snippets can act as pages, they independent from Textpattern&#8217;s normal content model. Snippets won&#8217;t required or overpopulate <a href=\"http://textpattern.net/wiki/index.php?title=Pages\" rel=\"nofollow\">page templates</a> or <a href=\"http://textpattern.net/wiki/index.php?title=Sections\" rel=\"nofollow\">sections</a>.</p>\n\n	<p>This makes the plugin ideal for generating various publicly accessible snippets, including <span class=\"caps\">XML</span> feeds or JavaScript Object Notations that can be then used to feed site&#8217;s content to JavaScript applications, build application layers or to transmit content across domains.</p>\n\n	<p>Rah_external_output uses Textpattern&#8217;s <a href=\"http://textpattern.net/wiki/index.php?title=Forms\" rel=\"nofollow\">form partials</a> to power its snippets. A form partial that&#8217;s name is prefixed with <code>rah_eo_</code> can be accessed directly with a <span class=\"caps\">URL</span>, creating its own, independed page. The term <em>external</em> directly refers to separateness and independency from sections and page templates while still serving client-side content.</p>\n\n	<h2>List of features</h2>\n\n	<ul>\n		<li><a href=\"http://textpattern.net/wiki/index.php?title=Forms\" rel=\"nofollow\">Form partials</a> prefixed with <code>rah_eo_</code> can be requested, and their output accessed, directly using a public <span class=\"caps\">URL</span>.</li>\n		<li>In addition to normal form partials, these special forms, snippets, can contain <span class=\"caps\">HTTP</span> header lines. Lines at the beginning of the form staring with a semicolon are treated as headers.</li>\n		<li>Form partials can be served using different content-type by appending file extension to the name.</li>\n	</ul>\n\n	<h2>Requirements</h2>\n\n	<p>Rah_external_output&#8217;s minimum requirements:</p>\n\n	<ul>\n		<li>Textpattern v4.4.1 or newer.</li>\n		<li>PHP5 or newer.</li>\n	</ul>\n\n	<h2>Installing</h2>\n\n	<p>The general behavior stands when it comes to installing rah_external_ouput. No extra steps or configuration that variates from normal is needed.</p>\n\n	<ol>\n		<li>Download plugin installation file and copy its contents to clipboard.</li>\n		<li>Navigate to <a href=\"http://textpattern.net/wiki/index.php?title=Plugins\" rel=\"nofollow\">Plugins</a> panel and paste the copied code into the <em>Install plugin</em> field, and click <strong>Upload</strong>.</li>\n		<li>You will be shown a preview of the plugin and its documentation. Click <strong>Install</strong> at the bottom of the page.</li>\n		<li>You will be returned to the plugin list when the plugin has been installed. Now activate the plugin by clicking its <strong>No</strong> link, which toggles the status to <strong>Yes</strong> and actives it.</li>\n		<li>The plugin is now installed and activated. All done.</li>\n	</ol>\n\n	<h2>Basics</h2>\n\n	<p>Rah_external_output treats misc type <a href=\"http://textpattern.net/wiki/index.php?title=Forms\" rel=\"nofollow\">form partials</a> that names are prefixed with <code>rah_eo_</code> prefix as a &#8220;external&#8221; content-type snippets. These special prefixed forms can be accessed using a public callback <span class=\"caps\">URL</span>. This <span class=\"caps\">URL</span> follows a pattern:</p>\n\n<pre><code>http://example.com/?rah_external_output=FormNameWithoutPrefix\n</code></pre>\n\n	<p>Where <code>example.com</code> is the site&#8217;s <span class=\"caps\">URL</span> and <code>FormNameWithoutPrefix</code> is the form&#8217;s name excluding the prefix. The above <span class=\"caps\">URL</span> would output a misc form named <code>rah_eo_FormNameWithoutPrefix</code>.</p>\n\n	<h2>Creating your first snippet</h2>\n\n	<p>Creating a new rah_external_output&#8217;s custom form, a snippet. would follow the same steps as <a href=\"http://textpattern.net/wiki/index.php?title=Forms#Creating_a_New_Form\" rel=\"nofollow\">any other form</a>. Go to Forms panel, located under <a href=\"http://textpattern.net/wiki/index.php?title=Presentation\" rel=\"nofollow\">Presentation</a> section, and click the <em>Create new form</em> button at the top of the column on the right. This will open a new empty editor.</p>\n\n	<p>As with any form partial, you can type in any Textpattern markup you wish to the large code field. This is what your snippet will output when accessed using its <span class=\"caps\">URL</span>. For now, type in the field this:</p>\n\n<pre><code>; Content-type: text/plain\n&lt;&lt;txp:site_name /&gt; says&gt; Hello World!\n</code></pre>\n\n	<p>You can then give the snippet a name by typing in it in the <em>Name</em> field. This name will be also used for the snippet&#8217;s <span class=\"caps\">URL</span>. To register a form partial as a rah_external_output&#8217;s snippet, the name should be prefixed with <code>rah_eo_</code>. For now, give the form a name <code>rah_eo_hello_world</code>.</p>\n\n	<p>Last but not least is a <em>Type</em>. The most appropriate type for a snippet is a <em>misc</em>, but it can be anything if you so wish. Form types are for the most part visual, used for organizing things on the admin-side, from <em>Write</em> panel&#8217;s <em>Output form</em> field to the <em>Tag Builder</em>.</p>\n\n	<p>When you have done with the code, giving it a name and selecting type, hit <em>Save</em> button. The snippet is now ready for being accessed. After you have saved the editor, you will notice that there is a <em>View</em> link next to the <em>Name</em> field. By clicking the link you will be taken to the snippet&#8217;s generated page.</p>\n\n	<p>That page is the snippets publicly accessible <span class=\"caps\">URL</span>, which you can freely use as a page, to serve content to applications and use in client-side scripts. For the snippet named <code>rah_eo_hello_world</code> you just created, this <span class=\"caps\">URL</span> would be:</p>\n\n<pre><code>http://example.com/?rah_external_output=hello_world\n</code></pre>\n\n	<p>Where <code>example.com</code> is your site&#8217;s <span class=\"caps\">URL</span> and <code>hello_world</code> the name of the snippet. When accessing the snippet, you should see following output:</p>\n\n<pre><code>&lt;MySiteName says&gt; Hello World!\n</code></pre>\n\n	<p>Where <code>MySiteName</code> is the name of the site. As you notice the, the page is served as a plain text opposed to <span class=\"caps\">HTML</span>. This is due to a <span class=\"caps\">HTTP</span> header line the snippet&#8217;s code included:</p>\n\n<pre><code>; Content-type: text/plain\n</code></pre>\n\n	<p>All rah_external_output&#8217;s snippets support few unique features including custom <span class=\"caps\">HTTP</span> header lines and file extensions.</p>\n\n	<h2>Custom <span class=\"caps\">HTTP</span> headers</h2>\n\n	<p>In addition to a form partial&#8217;s normal features, rah_external_output&#8217;s special forms, snippets, support sending custom <span class=\"caps\">HTTP</span> headers, including a content-type header.</p>\n\n	<p>All lines at the beginning of the form starting with a semicolon (<code>;</code>) are sent as <span class=\"caps\">HTTP</span> headers. These lines should be placed at the very beginning of a form, starting from the first line. <span class=\"caps\">HTTP</span> header lines can not be preceded by any white-space or empty lines.</p>\n\n	<p><span class=\"caps\">HTTP</span> header lines follow the normal syntax you would expect from a <span class=\"caps\">HTTP</span> header field definitions. A line consist of header property, also commonly referred as a field, followed by a colon (<code>:</code>) and a value.</p>\n\n<pre><code>; Property: Value\n</code></pre>\n\n	<p>A form supports unlimited number of header lines. Each subsequent line starting with a semicolon is sent as a <span class=\"caps\">HTTP</span> header.</p>\n\n<pre><code>; Content-type: text/javascript\n; Cache-Control: no-store, no-cache, must-revalidate, pre-check=0, post-check=0, max-age=0\n; Expires: Sat, 24 Jul 2003 05:00:00 GMT\n; Last-Modified: Wed, 1 Jan 2025 05:00:00 GMT\n; Pragma: no-cache\n</code></pre>\n\n	<p>Using these <span class=\"caps\">HTTP</span> header lines visitor can be redirected, or document&#8217;s content-type, encoding, caching or timestamp attributes changed. A form that starts with a following header line would be sent as a plain-text:</p>\n\n<pre><code>; Content-type: text/plain\n</code>\n<code>&lt;txp:article_custom limit=\"15\"&gt;\n	&lt;txp:permlink&gt;&lt;txp:title /&gt;&lt;/txp:permlink&gt;\n&lt;/txp:article_custom&gt;\n</code></pre>\n\n	<p>Note that for security reasons <span class=\"caps\">HTTP</span> header lines can not contain Textpattern tags. Headers are collected from the source code before any Textpattern tags are processed. This to prevent any type of header injections that could occur otherwise.</p>\n\n	<h2>Content-types and file extensions</h2>\n\n	<p>In addition to custom <span class=\"caps\">HTTP</span> headers, a snippet&#8217;s content-type can be set using a file extension, appended to the form&#8217;s name. Supported extensions are <code>.json</code>, <code>.js</code>, <code>.xml</code>, <code>.css</code>, <code>.txt</code> and <code>.html</code>.</p>\n\n	<p>If a form is named as a <code>rah_eo_jsontable.json</code>, the snippet would be served as a <span class=\"caps\">JSON</span> presentation when <code>http://example.com/?rah_external_output=jsontable.json</code> is accessed.</p>\n\n	<h2>Tag trace and debugging</h2>\n\n	<p>As Textpattern&#8217;s normal page templates, rah_external_output&#8217;s snippets support <a href=\"http://textpattern.net/wiki/index.php?title=tag_trace\" rel=\"nofollow\">tag traces</a>. In <a href=\"http://textpattern.net/wiki/index.php?title=Basic_Preferences#Production_Status\" rel=\"nofollow\">debugging mode</a>, a tag trace is appended to the <span class=\"caps\">HTML</span> output of each snippet that ends with a <code>.html</code> extension. As a tag trace on a normal page, the trace tells you which Textpattern tags are being executed and their outcome.</p>\n\n	<h2>Example uses and snippets</h2>\n\n	<p>As the plugin can be used to serve any type of snippet and content there is no to say what you should do with it or not. To give out a simple idea how you could benefit from the plugin, please see our <a href=\"https://github.com/gocom/rah_external_output/tree/master/examples\" rel=\"nofollow\">examples directory on GitHub</a>. The directory contains some basic, yet real-world proof examples. Includes <span class=\"caps\">XML</span> sitemap generation and some <span class=\"caps\">JSON</span> building.</p>\n\n	<h2>For developers</h2>\n\n	<p>The plugin comes with couple things targeted to developers.</p>\n\n	<h3>Callback</h3>\n\n	<p>One of these is a dedicated callback event which is fired when a snippet is viewed. The callback in question is named <code>rah_external_output.snippet_end</code> and is executed at the very end of a snippet. This callback can be used like any other Textpattern callback event. Hooking to the event happens using <code>register_callback()</code> function.</p>\n\n<pre><code>register_callback(callback, \'rah_external_output.snippet_end\');\n</code></pre>\n\n	<p>Please see <a href=\"http://textpattern.net/wiki/index.php?title=Plugin_basics\" rel=\"nofollow\">Plugin Basic</a> for more information about plugin development and callbacks.</p>\n\n	<h3>File extensions</h3>\n\n	<p>There is also a global variable that can be used to add extra recognized <span class=\"caps\">MIME</span> types to the stack of file extensions. The variable is named <code>$rah_external_output_mime</code> and takes an array map of <code>extension =&gt; mime/type</code> key-value pairs.</p>\n\n<pre><code>global $rah_external_output_mime;\n$rah_external_output_mime[\'png\'] = \'image/png\';\n$rah_external_output_mime[\'svg\'] = \'image/svg+xml\';\n</code></pre>\n\n	<h2>Changelog</h2>\n\n	<h3>Version 1.0 &#8211; 2012/07/14</h3>\n\n	<ul>\n		<li>Removed: Plugin&#8217;s own user interface. The plugin now uses <code>rah_eo_</code> prefixed form partials and integrates with Forms panel.</li>\n		<li>Removed: <code>&lt;txp:rah_external_output /&gt;</code> tag. As forms are used, normal and more flexible <a href=\"http://textpattern.net/wiki/index.php?title=output_form\" rel=\"nofollow\">output_form</a> tag can be used.</li>\n		<li>Removed: Raw <span class=\"caps\">PHP</span> support to comply with <a href=\"http://code.google.com/p/textpattern/source/detail?r=3706\" rel=\"nofollow\">r3706.</a></li>\n		<li>Added: Ability to set a snippet&#8217;s content-type using a file extension in the name.</li>\n		<li>Added: Migration assistant script. The script is run automatically on install and migrates rah_external_output snippets from the old interface to Forms.</li>\n		<li>Added: <code>rah_external_output.snippet_end</code> callback event for developers.</li>\n		<li>Changed: Returns a 404 page instead of the home page when requesting a nonexistent snippet.</li>\n		<li>Changed: <a href=\"http://textpattern.net/wiki/index.php?title=tag_trace\" rel=\"nofollow\">Tag trace</a> can no longer be controlled using a <span class=\"caps\">URL</span> parameter. A tag trace is added when the snippet name has a <code>.html</code> extension and the site is in debugging mode.</li>\n		<li>Now requires PHP5 or newer.</li>\n		<li>Compatibility with Textpattern v4.5.0.</li>\n	</ul>\n\n	<h3>Version 0.9 &#8211; 2011/09/03</h3>\n\n	<ul>\n		<li>Fixed: now handles raw <span class=\"caps\">PHP</span> tags.</li>\n		<li>Changed: now parses tag structure in same fashion as core. Do it twice. Provides identical results with core in every scenario.</li>\n		<li>Added: ability to display tag trace, and error reporting, by adding <code>rah_external_output_trace</code> parameter (<code>&amp;rah_external_output_trace=1</code>) to the snippet <span class=\"caps\">URL</span> when site&#8217;s production status is set to <em>debugging</em>.</li>\n	</ul>\n\n	<h3>Version 0.8 &#8211; 2011/07/26</h3>\n\n	<ul>\n		<li>Added: <span class=\"caps\">CSRF</span> (session riding) protection using Textpattern&#8217;s core functions introduced in v4.4.1.</li>\n		<li>Changed: Make sure the plugin interfaces is all in one language.</li>\n		<li>Changed: Only try to drop old database tables when humanly possible that there is old leftovers. Don&#8217;t run queries when updating from clean to clean.</li>\n		<li>Changed: set temporary version number when installing. Removes the possibility of running the installer twice for no reason.</li>\n		<li>Now requires Textpattern version 4.4.1 or newer.</li>\n	</ul>\n\n	<h3>Version 0.7 &#8211; 2011/06/12</h3>\n\n	<ul>\n		<li>Fixed: Error in <code>&lt;txp:rah_external_output /&gt;</code> tag.</li>\n		<li>Fixed: Closed open <code>&lt;thead&gt;</code> tag in the main list view.</li>\n		<li>Fixed: Now admin-side page title uses language strings.</li>\n	</ul>\n\n	<h3>Version 0.6 &#8211; 2011/04/15</h3>\n\n	<ul>\n		<li>Fixed: Saving snippets while changing name.</li>\n		<li>Fixed: Now keeps the sent data in the editor if error occurs during saving instead of fetching the old data from the database.</li>\n		<li>Added: Translation support. Interface now uses language strings.</li>\n		<li>Added: <code>&lt;txp:rah_external_output /&gt;</code> tag now caches fetched results.</li>\n		<li>Added: Now uses plugin_lifecycle callbacks, and includes uninstaller.</li>\n		<li>Added: Adds an options link to the Plugins pane which directs to the plugin&#8217;s admin-interface.</li>\n		<li>Removed: Mime-interface. Was confusing and not so many used it. Trying to simplify the user interface.</li>\n		<li>Changed: The user-interface and markup. Removed heading, removed inline styles, added <code>&lt;tbody&gt;</code> and <code>&lt;thead&gt;</code> tags to the tables.</li>\n		<li>Changed: Now uses new, improved multi-selection/edit feature, seen in other rah-plugins.</li>\n		<li>Changed: now uses <code>textpattern</code> callback instead of outputting the snippets right away when the plugin is loaded.</li>\n		<li>Changed: Now checks if the saving/updating succeeds, instead of expecting.</li>\n		<li>Now requires Textpattern 4.2.0 (or newer) for full feature compatibility.</li>\n	</ul>\n\n	<h3>Version 0.5 &#8211; 2010/04/11</h3>\n\n	<ul>\n		<li>Added <em>disable</em> and <em>activate</em> actions to multiedit feature.</li>\n	</ul>\n\n	<h3>Version 0.4 &#8211; 2009/06/08</h3>\n\n	<ul>\n		<li>Fixed forgotten insert query escaping.</li>\n	</ul>\n\n	<h3>Version 0.3 &#8211; 2009/05/10</h3>\n\n	<ul>\n		<li>Fixed error caused by non-set <code>$pretext</code> (note: <span class=\"caps\">TXP</span> load order).</li>\n		<li>Set <code>$pretext</code> indexes to empty: we are not on page template.</li>\n	</ul>\n\n	<h3>Version 0.2 &#8211; 2009/05/09</h3>\n\n	<ul>\n		<li>Fixed forgotten parse call.</li>\n	</ul>\n\n	<h3>Version 0.1 &#8211; 2009/05/09</h3>\n\n	<ul>\n		<li>Initial release.</li>\n	</ul>','\n\n/**\n * Rah_external_output plugin for Textpattern CMS\n *\n * @author Jukka Svahn\n * @date 2009-\n * @license GNU GPLv2\n * @link http://rahforum.biz/plugins/rah_external_output\n *\n * Copyright (C) 2012 Jukka Svahn <http://rahforum.biz>\n * Licensed under GNU Genral Public License version 2\n * http://www.gnu.org/licenses/gpl-2.0.html\n */\n\n	if(@txpinterface == \'admin\') {\n		rah_external_output::install();\n		register_callback(array(\'rah_external_output\', \'install\'), \'plugin_lifecycle.rah_external_output\');\n		register_callback(array(\'rah_external_output\', \'view\'), \'form\');\n	}\n	else {\n		register_callback(array(\'rah_external_output\', \'get_snippet\'), \'textpattern\');\n	}\n\nclass rah_external_output {\n\n	static public $version = \'1.0\';\n\n	/**\n	 * The unified installer and uninstaller\n	 * @param string $event Admin-side event.\n	 * @param string $step Admin-side, plugin-lifecycle step.\n	 */\n\n	static public function install($event=\'\', $step=\'\') {\n		\n		global $prefs;\n		\n		if($step == \'deleted\') {\n			\n			safe_delete(\n				\'txp_prefs\',\n				\"name LIKE \'rah\\_external\\_output\\_%\'\"\n			);\n			\n			safe_delete(\n				\'txp_form\',\n				\"name LIKE \'rah\\_eo\\_%\' OR name LIKE \'\\_rah\\_eo\\_%\'\"\n			);\n			\n			return;\n		}\n	\n		$current = isset($prefs[\'rah_external_output_version\']) ? \n			(string) $prefs[\'rah_external_output_version\'] : \'base\';\n		\n		if($current === self::$version)\n			return;\n		\n		if($current == \'base\') {\n			@safe_query(\n				\'DROP TABLE IF EXISTS \'.safe_pfx(\'rah_external_output_mime\')\n			);\n		}\n		\n		@$rs = safe_rows(\n			\'name, content_type, code, allow\',\n			\'rah_external_output\',\n			\'1=1\'\n		);\n		\n		if($rs) {\n\n			foreach($rs as $a) {\n				extract($a);\n				\n				$name = ($allow != \'Yes\' ? \'_\' : \'\') . \'rah_eo_\'.$name;\n				\n				if(safe_count(\'txp_form\', \"name=\'\".doSlash($name).\"\'\")) {\n					continue;\n				}\n					\n				$code = ($content_type ? \'; Content-type: \'.$content_type.n : \'\') . $code;\n					\n				@safe_insert(\n					\'txp_form\',\n					\"name=\'\".doSlash($name).\"\', type=\'misc\', Form=\'\".doSlash($code).\"\'\"\n				);\n			}\n			\n			@safe_query(\'DROP TABLE IF EXISTS \'.safe_pfx(\'rah_external_output\'));\n		}\n		\n		set_pref(\'rah_external_output_version\', self::$version, \'rah_exo\', 2, \'\', 0);\n		$prefs[\'rah_external_output_version\'] = self::$version;\n	}\n\n	/**\n	 * Outputs external snippets\n	 */\n\n	static public function get_snippet() {\n		\n		global $microstart, $qcount, $qtime, $production_status, $txptrace, $rah_external_output_mime;\n		\n		$name = gps(\'rah_external_output\');\n		\n		if($name === \'\' || !is_string($name)) {\n			return;\n		}\n		\n		$r = safe_field(\n			\'Form\', \n			\'txp_form\', \n			\"name=\'\".doSlash(\'rah_eo_\'.$name).\"\'\"\n		);\n		\n		if($r === false) {\n			txp_die(gTxt(\'404_not_found\'), 404);\n		}\n		\n		$mime = array(\n			\'json\' => \'application/json\',\n			\'js\' => \'text/javascript\',\n			\'xml\' => \'text/xml\',\n			\'css\' => \'text/css\',\n			\'txt\' => \'text/plain\',\n			\'html\' => \'text/html\',\n		) + (array) $rah_external_output_mime;\n\n		ob_clean();\n		txp_status_header(\'200 OK\');\n		$ext = pathinfo($name, PATHINFO_EXTENSION);\n\n		if($ext && isset($mime[$ext])) {\n			header(\'Content-type: \'.$mime[$ext].\'; charset=utf-8\');\n		}\n		\n		$lines = explode(n, $r);\n		\n		foreach($lines as $line) {\n			\n			if(strpos($line, \';\') !== 0) {\n				break;\n			}\n			\n			header(trim(substr(array_shift($lines), 1)));\n		}\n\n		set_error_handler(\'tagErrorHandler\');\n		echo parse(parse(implode(n, $lines)));\n		restore_error_handler();\n\n		if($ext == \'html\' && $production_status == \'debug\') {\n			echo \n				n.comment(\'Runtime: \'.substr(getmicrotime() - $microstart, 0, 6)).\n				n.comment(\'Query time: \'.sprintf(\'%02.6f\', $qtime)).\n				n.comment(\'Queries: \'.$qcount).\n				maxMemUsage(\'end of textpattern()\', 1).\n				n.comment(\'txp tag trace: \'.n.str_replace(\'--\', \'&shy;&shy;\', implode(n, (array) $txptrace)));\n		}\n		\n		callback_event(\'rah_external_output.snippet_end\');\n		exit;\n	}\n\n	/**\n	 * Adds a view link to the form editor\n	 */\n	\n	static public function view() {\n		\n		$view = escape_js(gTxt(\'view\'));\n		$hu = escape_js(hu);\n	\n		$js = <<<EOF\n			$(document).ready(function(){\n				var input = $(\'input[name=\"name\"]\');\n			\n				if(input.val().indexOf(\'rah_eo_\') !== 0) {\n					return;\n				}\n				\n				var uri = \'{$hu}?rah_external_output=\' + input.val().substr(7);\n				var link = $(\'<a class=\"navlink\" href=\"#\">{$view}</a>\').attr(\'href\', uri);\n				input.after(link).after(\' \');\n			\n				link.click(function(e) {\n					e.preventDefault();\n					window.open(uri);\n				});\n			});\nEOF;\n\n		echo script_js($js);\n	}\n}\n\n','\n\n/**\n * Rah_external_output plugin for Textpattern CMS\n *\n * @author Jukka Svahn\n * @date 2009-\n * @license GNU GPLv2\n * @link http://rahforum.biz/plugins/rah_external_output\n *\n * Copyright (C) 2012 Jukka Svahn <http://rahforum.biz>\n * Licensed under GNU Genral Public License version 2\n * http://www.gnu.org/licenses/gpl-2.0.html\n */\n\n	if(@txpinterface == \'admin\') {\n		rah_external_output::install();\n		register_callback(array(\'rah_external_output\', \'install\'), \'plugin_lifecycle.rah_external_output\');\n		register_callback(array(\'rah_external_output\', \'view\'), \'form\');\n	}\n	else {\n		register_callback(array(\'rah_external_output\', \'get_snippet\'), \'textpattern\');\n	}\n\nclass rah_external_output {\n\n	static public $version = \'1.0\';\n\n	/**\n	 * The unified installer and uninstaller\n	 * @param string $event Admin-side event.\n	 * @param string $step Admin-side, plugin-lifecycle step.\n	 */\n\n	static public function install($event=\'\', $step=\'\') {\n		\n		global $prefs;\n		\n		if($step == \'deleted\') {\n			\n			safe_delete(\n				\'txp_prefs\',\n				\"name LIKE \'rah\\_external\\_output\\_%\'\"\n			);\n			\n			safe_delete(\n				\'txp_form\',\n				\"name LIKE \'rah\\_eo\\_%\' OR name LIKE \'\\_rah\\_eo\\_%\'\"\n			);\n			\n			return;\n		}\n	\n		$current = isset($prefs[\'rah_external_output_version\']) ? \n			(string) $prefs[\'rah_external_output_version\'] : \'base\';\n		\n		if($current === self::$version)\n			return;\n		\n		if($current == \'base\') {\n			@safe_query(\n				\'DROP TABLE IF EXISTS \'.safe_pfx(\'rah_external_output_mime\')\n			);\n		}\n		\n		@$rs = safe_rows(\n			\'name, content_type, code, allow\',\n			\'rah_external_output\',\n			\'1=1\'\n		);\n		\n		if($rs) {\n\n			foreach($rs as $a) {\n				extract($a);\n				\n				$name = ($allow != \'Yes\' ? \'_\' : \'\') . \'rah_eo_\'.$name;\n				\n				if(safe_count(\'txp_form\', \"name=\'\".doSlash($name).\"\'\")) {\n					continue;\n				}\n					\n				$code = ($content_type ? \'; Content-type: \'.$content_type.n : \'\') . $code;\n					\n				@safe_insert(\n					\'txp_form\',\n					\"name=\'\".doSlash($name).\"\', type=\'misc\', Form=\'\".doSlash($code).\"\'\"\n				);\n			}\n			\n			@safe_query(\'DROP TABLE IF EXISTS \'.safe_pfx(\'rah_external_output\'));\n		}\n		\n		set_pref(\'rah_external_output_version\', self::$version, \'rah_exo\', 2, \'\', 0);\n		$prefs[\'rah_external_output_version\'] = self::$version;\n	}\n\n	/**\n	 * Outputs external snippets\n	 */\n\n	static public function get_snippet() {\n		\n		global $microstart, $qcount, $qtime, $production_status, $txptrace, $rah_external_output_mime;\n		\n		$name = gps(\'rah_external_output\');\n		\n		if($name === \'\' || !is_string($name)) {\n			return;\n		}\n		\n		$r = safe_field(\n			\'Form\', \n			\'txp_form\', \n			\"name=\'\".doSlash(\'rah_eo_\'.$name).\"\'\"\n		);\n		\n		if($r === false) {\n			txp_die(gTxt(\'404_not_found\'), 404);\n		}\n		\n		$mime = array(\n			\'json\' => \'application/json\',\n			\'js\' => \'text/javascript\',\n			\'xml\' => \'text/xml\',\n			\'css\' => \'text/css\',\n			\'txt\' => \'text/plain\',\n			\'html\' => \'text/html\',\n		) + (array) $rah_external_output_mime;\n\n		ob_clean();\n		txp_status_header(\'200 OK\');\n		$ext = pathinfo($name, PATHINFO_EXTENSION);\n\n		if($ext && isset($mime[$ext])) {\n			header(\'Content-type: \'.$mime[$ext].\'; charset=utf-8\');\n		}\n		\n		$lines = explode(n, $r);\n		\n		foreach($lines as $line) {\n			\n			if(strpos($line, \';\') !== 0) {\n				break;\n			}\n			\n			header(trim(substr(array_shift($lines), 1)));\n		}\n\n		set_error_handler(\'tagErrorHandler\');\n		echo parse(parse(implode(n, $lines)));\n		restore_error_handler();\n\n		if($ext == \'html\' && $production_status == \'debug\') {\n			echo \n				n.comment(\'Runtime: \'.substr(getmicrotime() - $microstart, 0, 6)).\n				n.comment(\'Query time: \'.sprintf(\'%02.6f\', $qtime)).\n				n.comment(\'Queries: \'.$qcount).\n				maxMemUsage(\'end of textpattern()\', 1).\n				n.comment(\'txp tag trace: \'.n.str_replace(\'--\', \'&shy;&shy;\', implode(n, (array) $txptrace)));\n		}\n		\n		callback_event(\'rah_external_output.snippet_end\');\n		exit;\n	}\n\n	/**\n	 * Adds a view link to the form editor\n	 */\n	\n	static public function view() {\n		\n		$view = escape_js(gTxt(\'view\'));\n		$hu = escape_js(hu);\n	\n		$js = <<<EOF\n			$(document).ready(function(){\n				var input = $(\'input[name=\"name\"]\');\n			\n				if(input.val().indexOf(\'rah_eo_\') !== 0) {\n					return;\n				}\n				\n				var uri = \'{$hu}?rah_external_output=\' + input.val().substr(7);\n				var link = $(\'<a class=\"navlink\" href=\"#\">{$view}</a>\').attr(\'href\', uri);\n				input.after(link).after(\' \');\n			\n				link.click(function(e) {\n					e.preventDefault();\n					window.open(uri);\n				});\n			});\nEOF;\n\n		echo script_js($js);\n	}\n}\n\n','4ae1c9077bedb41c06debfc79c4b1923',1,5,2),
	('jmd_csv',1,'Jon-Michael Deldin','http://jmdeldin.com','0.2','Batch-import articles from a CSV','	<h1>jmd_csv</h1>\n\n	<p><a href=\"http://forum.textpattern.com/viewtopic.php?id=27782\" rel=\"nofollow\">Forum thread</a>, <a href=\"http://www.bitbucket.org/jmdeldin/jmd_csv/\" rel=\"nofollow\">hg repo</a></p>\n\n	<p><strong>Requires:</strong> <span class=\"caps\">PHP</span> 5, <span class=\"caps\">TXP</span> 4.0.6</p>\n\n	<p>jmd_csv imports rows from <span class=\"caps\">CSV</span> files as Textpattern articles.</p>\n\n	<h2>Instructions</h2>\n\n	<ol>\n		<li>Create a file category, &#8220;jmd_csv&#8221;</li>\n		<li>Content&gt;Files: Upload a file to the &#8220;jmd_csv&#8221; category</li>\n		<li>Extensions&gt;jmd_csv: Click import</li>\n	</ol>\n\n	<h2><span class=\"caps\">CSV</span> template</h2>\n\n	<p>The plugin requires you specify a header row. An example header row:</p>\n\n<pre><code>Title, Body, Excerpt, Section, Category1, Category2, custom_1, custom_2, custom_3, custom_4, custom_5, custom_6, custom_7, custom_8, custom_9, custom_10\n</code></pre>\n\n	<p>Note: You may remove Category* and custom_*.</p>','if (txpinterface === \'admin\')\r\n{\r\n    global $textarray;\r\n    add_privs(\'jmd_csv\', 1);\r\n    register_callback(\'jmd_csv\', \'jmd_csv\');\r\n    register_tab(\'extensions\', \'jmd_csv\', \'jmd_csv\');\r\n    // i18n\r\n    $textarray = array_merge($textarray, array(\r\n        \'jmd_csv_file\' => \'CSV file:\',\r\n        \'jmd_csv_file_error\' => \'Error reading CSV\',\r\n        \'jmd_csv_import\' => \'Import\',\r\n        \'jmd_csv_import_csv\' => \'Import CSV\',\r\n        \'jmd_csv_imported\' => \'CSV imported successfully.\',\r\n    ));\r\n}\r\n\r\n/**\r\n * Interface for the CSV import.\r\n *\r\n * @param string $event\r\n * @param string $step\r\n */\r\nfunction jmd_csv($event, $step)\r\n{\r\n    global $jmd_csv, $file_base_path;\r\n    ob_start(\'jmd_csv_head\');\r\n    $jmd_csv = new JMD_CSV();\r\n    if ($step === \'import\')\r\n    {\r\n        $file = gps(\'file\');\r\n        if ($file)\r\n        {\r\n            $handle = fopen($file_base_path . DS . $file, \'r\');\r\n            if ($handle)\r\n            {\r\n                $jmd_csv->import($handle, gps(\'status\'));\r\n                $msg = gTxt(\'jmd_csv_imported\');\r\n            }\r\n            else\r\n            {\r\n                $msg = gTxt(\'jmd_csv_file_error\');\r\n            }\r\n        }\r\n    }\r\n    pageTop(\'jmd_csv\', (isset($msg) ? $msg : \'\'));\r\n\r\n    $gTxt = \'gTxt\';\r\n    $out = <<<EOD\r\n<fieldset id=\"jmd_csv\">\r\n    <legend>{$gTxt(\'jmd_csv_import_csv\')}</legend>\r\n    <div>\r\n        <label>{$gTxt(\'jmd_csv_file\')}\r\n            {$jmd_csv->fileList()}\r\n        </label>\r\n    </div>\r\n    <div>\r\n        <label>{$gTxt(\'import_status\')}\r\n            {$jmd_csv->statusList()}\r\n        </label>\r\n    </div>\r\n    <button type=\"submit\">{$gTxt(\'jmd_csv_import\')}</button>\r\n</fieldset>\r\nEOD;\r\n    echo form($out . eInput(\'jmd_csv\') . sInput(\'import\'));\r\n}\r\n\r\n/**\r\n * Inserts CSS into the head.\r\n *\r\n * @param string $buffer\r\n */\r\nfunction jmd_csv_head($buffer)\r\n{\r\n    $find = \'</head>\';\r\n    $insert = <<<EOD\r\n<style type=\"text/css\">\r\n#jmd_csv\r\n{\r\n    margin: 0 auto;\r\n    /*padding: 0.5em;*/\r\n    width: 50%;\r\n}\r\n    #jmd_csv legend\r\n    {\r\n        font-weight: 900;\r\n    }\r\n    #jmd_csv div\r\n    {\r\n        margin: 0 0 1em;\r\n    }\r\n</style>\r\nEOD;\r\n\r\n    return str_replace($find, $insert . $find, $buffer);\r\n}\r\n\r\n\r\nclass JMD_CSV\r\n{\r\n    /**\r\n     * Returns a select box of available CSVs.\r\n     */\r\n    public function fileList()\r\n    {\r\n        $files = safe_column(\'filename\', \'txp_file\',\r\n            \'category=\"jmd_csv\"\');\r\n        if ($files)\r\n        {\r\n            $out = \'<select name=\"file\">\';\r\n            foreach ($files as $file)\r\n            {\r\n                $out .= \'<option value=\"\' . $file . \'\">\' . $file . \'</option>\';\r\n            }\r\n            $out .= \'</select>\';\r\n\r\n            return $out;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a select box of article-statuses.\r\n     */\r\n    public function statusList()\r\n    {\r\n        $statuses = array(\r\n            \'draft\' => 1,\r\n            \'hidden\' => 2,\r\n            \'pending\' => 3,\r\n            \'live\' => 4,\r\n            \'sticky\' => 5,\r\n        );\r\n        $out = \'<select name=\"status\">\';\r\n        foreach ($statuses as $key => $value)\r\n        {\r\n            $out .= \'<option value=\"\' . $value .\'\">\' . gTxt($key) . \'</option>\';\r\n        }\r\n        $out .= \'</select>\';\r\n\r\n        return $out;\r\n    }\r\n\r\n    /**\r\n     * Reads a CSV and inserts it into the textpattern table.\r\n     *\r\n     * @param resource $handle File opened with fopen()\r\n     * @param int $status Article status.\r\n     */\r\n    public function import($handle, $status)\r\n    {\r\n        global $prefs, $txp_user;\r\n        $row = 1;\r\n        while (($csv = fgetcsv($handle, 0, \',\')) !== FALSE)\r\n        {\r\n            $fields = count($csv);\r\n            if ($row === 1)\r\n            {\r\n                for ($i = 0; $i < $fields; $i++)\r\n                {\r\n                    $header[$i] = $csv[$i];\r\n                }\r\n            }\r\n            else\r\n            {\r\n                $insert = \'\';\r\n                foreach ($header as $key => $value)\r\n                {\r\n                    // escape all fields\r\n                    $csv[$key] = doSlash($csv[$key]);\r\n                    if ($value === \'Title\')\r\n                    {\r\n                        $url_title = stripSpace($csv[$key], 1);\r\n                    }\r\n                    if ($value === \'Body\' || $value === \'Excerpt\')\r\n                    {\r\n                        $insert .= \"{$value}_html=\'{$csv[$key]}\',\";\r\n                    }\r\n                    $insert .= \"{$value}=\'{$csv[$key]}\',\";\r\n                }\r\n                $uid = md5(uniqid(rand(),true));\r\n                $insert .= <<<EOD\r\nAuthorID=\'{$txp_user}\',\r\nLastModID=\'{$txp_user}\',\r\nAnnotateInvite=\'{$prefs[\'comments_default_invite\']}\',\r\nurl_title=\'{$url_title}\',\r\nuid=\'{$uid}\',\r\nfeed_time=now(),\r\nPosted=now(),\r\nLastMod=now(),\r\nStatus={$status},\r\ntextile_body=0,\r\ntextile_excerpt=0\r\nEOD;\r\n                safe_insert(\'textpattern\', $insert);\r\n            }\r\n            $row++;\r\n        }\r\n    }\r\n}\r\n','\nif (txpinterface === \'admin\')\n{\n    global $textarray;\n    add_privs(\'jmd_csv\', 1);\n    register_callback(\'jmd_csv\', \'jmd_csv\');\n    register_tab(\'extensions\', \'jmd_csv\', \'jmd_csv\');\n    // i18n\n    $textarray = array_merge($textarray, array(\n        \'jmd_csv_file\' => \'CSV file:\',\n        \'jmd_csv_file_error\' => \'Error reading CSV\',\n        \'jmd_csv_import\' => \'Import\',\n        \'jmd_csv_import_csv\' => \'Import CSV\',\n        \'jmd_csv_imported\' => \'CSV imported successfully.\',\n    ));\n}\n\n/**\n * Interface for the CSV import.\n *\n * @param string $event\n * @param string $step\n */\nfunction jmd_csv($event, $step)\n{\n    global $jmd_csv, $file_base_path;\n    ob_start(\'jmd_csv_head\');\n    $jmd_csv = new JMD_CSV();\n    if ($step === \'import\')\n    {\n        $file = gps(\'file\');\n        if ($file)\n        {\n            $handle = fopen($file_base_path . DS . $file, \'r\');\n            if ($handle)\n            {\n                $jmd_csv->import($handle, gps(\'status\'));\n                $msg = gTxt(\'jmd_csv_imported\');\n            }\n            else\n            {\n                $msg = gTxt(\'jmd_csv_file_error\');\n            }\n        }\n    }\n    pageTop(\'jmd_csv\', (isset($msg) ? $msg : \'\'));\n\n    $gTxt = \'gTxt\';\n    $out = <<<EOD\n<fieldset id=\"jmd_csv\">\n    <legend>{$gTxt(\'jmd_csv_import_csv\')}</legend>\n    <div>\n        <label>{$gTxt(\'jmd_csv_file\')}\n            {$jmd_csv->fileList()}\n        </label>\n    </div>\n    <div>\n        <label>{$gTxt(\'import_status\')}\n            {$jmd_csv->statusList()}\n        </label>\n    </div>\n    <button type=\"submit\">{$gTxt(\'jmd_csv_import\')}</button>\n</fieldset>\nEOD;\n    echo form($out . eInput(\'jmd_csv\') . sInput(\'import\'));\n}\n\n/**\n * Inserts CSS into the head.\n *\n * @param string $buffer\n */\nfunction jmd_csv_head($buffer)\n{\n    $find = \'</head>\';\n    $insert = <<<EOD\n<style type=\"text/css\">\n#jmd_csv\n{\n    margin: 0 auto;\n    padding: 0.5em;\n    width: 50%;\n}\n    #jmd_csv legend\n    {\n        font-weight: 900;\n    }\n    #jmd_csv div\n    {\n        margin: 0 0 1em;\n    }\n</style>\nEOD;\n\n    return str_replace($find, $insert . $find, $buffer);\n}\n\n\nclass JMD_CSV\n{\n    /**\n     * Returns a select box of available CSVs.\n     */\n    public function fileList()\n    {\n        $files = safe_column(\'filename\', \'txp_file\',\n            \'category=\"jmd_csv\"\');\n        if ($files)\n        {\n            $out = \'<select name=\"file\">\';\n            foreach ($files as $file)\n            {\n                $out .= \'<option value=\"\' . $file . \'\">\' . $file . \'</option>\';\n            }\n            $out .= \'</select>\';\n\n            return $out;\n        }\n    }\n\n    /**\n     * Returns a select box of article-statuses.\n     */\n    public function statusList()\n    {\n        $statuses = array(\n            \'draft\' => 1,\n            \'hidden\' => 2,\n            \'pending\' => 3,\n            \'live\' => 4,\n            \'sticky\' => 5,\n        );\n        $out = \'<select name=\"status\">\';\n        foreach ($statuses as $key => $value)\n        {\n            $out .= \'<option value=\"\' . $value .\'\">\' . gTxt($key) . \'</option>\';\n        }\n        $out .= \'</select>\';\n\n        return $out;\n    }\n\n    /**\n     * Reads a CSV and inserts it into the textpattern table.\n     *\n     * @param resource $handle File opened with fopen()\n     * @param int $status Article status.\n     */\n    public function import($handle, $status)\n    {\n        global $prefs, $txp_user;\n        $row = 1;\n        while (($csv = fgetcsv($handle, 0, \',\')) !== FALSE)\n        {\n            $fields = count($csv);\n            if ($row === 1)\n            {\n                for ($i = 0; $i < $fields; $i++)\n                {\n                    $header[$i] = $csv[$i];\n                }\n            }\n            else\n            {\n                $insert = \'\';\n                foreach ($header as $key => $value)\n                {\n                    // escape all fields\n                    $csv[$key] = doSlash($csv[$key]);\n                    if ($value === \'Title\')\n                    {\n                        $url_title = stripSpace($csv[$key], 1);\n                    }\n                    if ($value === \'Body\' || $value === \'Excerpt\')\n                    {\n                        $insert .= \"{$value}_html=\'{$csv[$key]}\',\";\n                    }\n                    $insert .= \"{$value}=\'{$csv[$key]}\',\";\n                }\n                $uid = md5(uniqid(rand(),true));\n                $insert .= <<<EOD\nAuthorID=\'{$txp_user}\',\nLastModID=\'{$txp_user}\',\nAnnotateInvite=\'{$prefs[\'comments_default_invite\']}\',\nurl_title=\'{$url_title}\',\nuid=\'{$uid}\',\nfeed_time=now(),\nPosted=now(),\nLastMod=now(),\nStatus={$status},\ntextile_body=0,\ntextile_excerpt=0\nEOD;\n                safe_insert(\'textpattern\', $insert);\n            }\n            $row++;\n        }\n    }\n}\n','4009516c3dc33cd4f4e46627f3eda876',1,5,0),
	('adi_gps',1,'Adi Gilbert','http://www.greatoceanmedia.com.au/','0.4','Extract GET & POST variables','	<h1><strong>adi_gps</strong> &#8211; Extract <span class=\"caps\">GET</span> &amp; <span class=\"caps\">POST</span> variables</h1>\n\n	<p>This plugin extracts <span class=\"caps\">GET</span>/POST variables and assigns them to <span class=\"caps\">TXP</span> variables.</p>\n\n	<h2><strong>Attributes</strong></h2>\n\n	<p><code>name=&quot;var name&quot;</code></p>\n\n	<p>- a comma separated list of <span class=\"caps\">GET</span>/POST variables to extract. Default = &#8220;&#8221; (extract all <span class=\"caps\">GET</span>/POST variables). See <code>type</code> attribute for restricting retrieval to <span class=\"caps\">POST</span> variables only.</p>\n\n	<p><code>new=&quot;var name&quot;</code></p>\n\n	<p>- create a differently named variable. Default = &#8220;&#8221; (replicate variable name). Only applies when retrieving a single <span class=\"caps\">GET</span>/POST variable.</p>\n\n	<p><code>type=&quot;var type&quot;</code></p>\n\n	<p>- type of variable to extract. Default = &#8220;all&#8221; (extract <span class=\"caps\">GET</span> &amp; <span class=\"caps\">POST</span> variables). Use <code>type=&quot;post&quot;</code> to extract <span class=\"caps\">POST</span> variables only.</p>\n\n	<p><code>quiet=&quot;boolean&quot;</code></p>\n\n	<p>- don&#8217;t display variable value. Default = &#8220;0&#8221; (display variable value). Only applies if retrieving a single <span class=\"caps\">GET</span>/POST variable. Quiet mode automatically switched on if retrieving multiple variables.</p>\n\n	<p><code>escape=&quot;mode&quot;</code></p>\n\n	<p>- escape <span class=\"caps\">HTML</span> entities in variable value. Default = &#8220;html&#8221; (escape <span class=\"caps\">HTML</span> entities). Use <code>escape=&quot;&quot;</code> to switch off.</p>\n\n	<p><code>decode=&quot;boolean&quot;</code></p>\n\n	<p>- decodes any remaining %## encoding in the variable values. Default = &#8220;0&#8221; (No). Not normally required but may be needed if <span class=\"caps\">URL</span> has been processed by htaccess.</p>\n\n	<p><code>glue=&quot;separator&quot;</code></p>\n\n	<p>- separator to use when retrieving checkbox values. Default = &#8220;,&#8221; (comma).</p>\n\n	<p><code>post=&quot;boolean&quot;</code></p>\n\n	<p>- attribute deprecated and ignored. Default behaviour (v0.2+) now extracts both <span class=\"caps\">GET</span> &amp; <span class=\"caps\">POST</span> vars. Use <code>type=&quot;post&quot;</code> if you want to extract <span class=\"caps\">POST</span> variables only.</p>\n\n	<h2><strong>Examples</strong></h2>\n\n	<p><code>&lt;txp:adi_gps /&gt;</code></p>\n\n	<p>- extract all <span class=\"caps\">GET</span>/POST variables and duplicate them as <span class=\"caps\">TXP</span> variables. No values are displayed.</p>\n\n	<p><code>&lt;txp:adi_gps type=&quot;post&quot; /&gt;</code></p>\n\n	<p>- extract only <span class=\"caps\">POST</span> variables and duplicate them as <span class=\"caps\">TXP</span> variables. No values are displayed.</p>\n\n	<p><code>&lt;txp:adi_gps name=&quot;myvar1&quot; /&gt;</code></p>\n\n	<p>- extract a single <span class=\"caps\">GET</span>/POST variable called <em>myvar1</em>, create a <span class=\"caps\">TXP</span> variable of the same name and display it&#8217;s value.</p>\n\n	<p><code>&lt;txp:adi_gps name=&quot;myvar2&quot; new=&quot;newvar2&quot; /&gt;</code></p>\n\n	<p>- extract a single <span class=\"caps\">GET</span>/POST variable called <em>myvar2</em>, but create it as a <span class=\"caps\">TXP</span> variable called <em>newvar2</em>, and display it&#8217;s value.</p>\n\n	<p><code>&lt;txp:adi_gps single name=&quot;myvar3&quot; quiet=&quot;1&quot; /&gt;</code></p>\n\n	<p>- extract a <span class=\"caps\">GET</span>/POST variable called <em>myvar3</em>, create a <span class=\"caps\">TXP</span> variable of the same name but don&#8217;t display it&#8217;s value.</p>\n\n	<p><code>&lt;txp:adi_gps name=&quot;myvar1,myvar2,myvar3&quot; /&gt;</code></p>\n\n	<p>- extract three named <span class=\"caps\">GET</span>/POST variables, where <span class=\"caps\">TXP</span> variables of the same name are created, but no values displayed.</p>\n\n	<h2><strong>Retrieving multiple values from checkboxes</strong></h2>\n\n	<p>For example, if you have the following form:</p>\n\n<pre><code>&lt;form&gt;\n	&lt;input name=&quot;multiple[]&quot; type=&quot;checkbox&quot; value=&quot;first&quot;/&gt;First&lt;br&gt;\n	&lt;input name=&quot;multiple[]&quot; type=&quot;checkbox&quot; value=&quot;second&quot;/&gt;Second&lt;br&gt;\n	&lt;input name=&quot;multiple[]&quot; type=&quot;checkbox&quot; value=&quot;third&quot;/&gt;Third&lt;br&gt;\n	&lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&gt;\n&lt;/form&gt;\n</code></pre>\n\n	<p>and a user ticks the first and second checkbox, then the <span class=\"caps\">TXP</span> variable called <em>multiple</em> will contain &#8220;first,second&#8221;.  The comma is the glue which can be changed using an attribute.</p>\n\n	<h2><strong>Using the <span class=\"caps\">GET</span>/POST variables in pages or forms</strong></h2>\n\n	<p>Because, by default, <strong>adi_gps</strong> duplicates the extracted <span class=\"caps\">URL</span> variables as <span class=\"caps\">TXP</span> variables you can use all the standard <span class=\"caps\">TXP</span> variable tags to process them:</p>\n\n	<ul>\n		<li><code>&lt;txp:variable /&gt;</code></li>\n		<li><code>&lt;txp:if_variable /&gt;</code></li>\n	</ul>\n\n	<p>For example:</p>\n\n<pre><code>&lt;txp:adi_gps name=&quot;myvar&quot; quiet=&quot;1&quot; /&gt;\n&lt;txp:if_variable name=&quot;myvar&quot; value=&quot;some_value&quot;&gt;\n    do something different ...\n&lt;txp:else /&gt;\n    the same old thing ...\n&lt;/txp:if_variable&gt;\n</code></pre>\n\n	<h2><strong>Using <span class=\"caps\">URL</span> variables in articles</strong></h2>\n\n	<p>You can also use <code>&lt;txp:adi_gps /&gt;</code> within articles.  For example:</p>\n\n	<blockquote>\n		<p><i>The value of myvar is <code>&lt;txp:adi_gps name=&quot;myvar&quot; /&gt;</code> &#8230;</i></p>\n	</blockquote>\n\n	<p>or if you&#8217;ve already extracted the variable elsewhere:</p>\n\n	<blockquote>\n		<p><i>The value of myvar is <code>&lt;txp:variable name=&quot;myvar&quot; /&gt;</code> &#8230;</i></p>\n	</blockquote>\n\n	<p>No escaping from Textile is required (e.g. using <code>notextile.</code> or <code>== ... ==</code>).</p>','\n/*\n	adi_gps - Extract GET & POST variables\n\n	Written by Adi Gilbert\n\n	Released under the GNU General Public License\n\n	Version history:\n	0.4		- updated for TXP 4.6 trace\n	0.3		- copes with forms which supply data as arrays (checkboxes)\n			- new attribute \'glue\'\n			- TXP 4.6 tag registration\n	0.2		- multiple security & functionality improvements (thanks to Gocom)\n			- \'name\' attribute now accepts comma separated list\n			- removed \'txpvar\' attribute - TXP variables now always set\n			- \'post\' attribute deprecated & now ignored (default behaviour now retrieves POST vars)\n			- removed \'global\' attribute & functionality - not secure\n			- \'escape\' now enabled by default\n			- removed \'list\' & \'debug\' attributes - debug info now in TXP tag trace (when Production Status = debugging)\n			- new attribute \'type\'\n	0.1		- initial release\n\n*/\n\n// TXP 4.6 tag registration\nif (class_exists(\'\\Textpattern\\Tag\\Registry\')) {\n	Txp::get(\'\\Textpattern\\Tag\\Registry\')\n		->register(\'adi_gps\')\n	;\n}\n\nfunction adi_gps($atts) {\n\n	global $variable,$trace; // i.e. $GLOBALS[\'variable\']\n\n	extract(lAtts(array(\n		\'name\'		=> \'\',		// comma separated list of GET/POST vars\n		\'new\'		=> \'\',		// new variable name\n		\'quiet\'		=> \'0\',		// return value or not\n		\'type\'		=> \'all\',	// \'all\' = GET & POST, \'post\' = POST only\n		\'post\'		=> \'0\',		// deprecated & ignored - POST vars now auto extracted\n		\'escape\'	=> \'html\',	// escape HTML entities\n		\'decode\'	=> \'0\',		// perform a urldecode\n		\'glue\'		=> \',\',		// join array values together\n	), $atts));\n\n	if ($name == \'\') // all vars extracted (GET/POST filtered later)\n		$name_list = array_keys(array_merge((array) $_GET, (array) $_POST));\n	else\n		$name_list = doArray(explode(\',\',$name),\'trim\');\n\n	// remove blanks from list (e.g if \"var1,var2,\" supplied)\n	$name_list = array_filter($name_list,\'strlen\');\n\n	// massage options if retrieving all vars or multiple vars requested\n	if (($name == \'\') || (count($name_list) > 1)) {\n		$quiet = 1; // force quiet mode\n		$new = \'\'; // disable var rename\n	}\n\n	// gps() or ps()\n	if (strtolower($type) == \'post\')\n		$func = \'ps\';\n	else\n		$func = \'gps\';\n\n	// process var list\n	foreach ($name_list as $index => $name) {\n		$value = $func($name); // extract value\n		if (is_array($value)) // if array then glue it together as a string\n			$value = implode($glue,$value);\n		$name = htmlspecialchars($new !== \'\' ? $new : $name);\n		if ($decode) // convert %chars\n			$value = urldecode($value);\n		if ($escape) // encode chars (e.g. ampersand becomes &amp;)\n			$value = htmlspecialchars($value);\n		if ($new) // rename var (single var mode only)\n			$name = $new;\n		$variable[$name] = $value; // set $GLOBALS[\'variable\'][$name]\n		// trace\n		if (is_object($trace)) // TXP 4.6\n			$trace->log(\'[\'.__FUNCTION__.\': \'.$name.\' = \'.$value.\']\');\n		else\n			trace_add(\'[\'.__FUNCTION__.\': \'.$name.\' = \'.$value.\']\');\n	}\n\n	if (!$quiet && isset($value)) // return value\n		return $value;\n\n	return \'\';\n}\n','\n/*\n	adi_gps - Extract GET & POST variables\n\n	Written by Adi Gilbert\n\n	Released under the GNU General Public License\n\n	Version history:\n	0.4		- updated for TXP 4.6 trace\n	0.3		- copes with forms which supply data as arrays (checkboxes)\n			- new attribute \'glue\'\n			- TXP 4.6 tag registration\n	0.2		- multiple security & functionality improvements (thanks to Gocom)\n			- \'name\' attribute now accepts comma separated list\n			- removed \'txpvar\' attribute - TXP variables now always set\n			- \'post\' attribute deprecated & now ignored (default behaviour now retrieves POST vars)\n			- removed \'global\' attribute & functionality - not secure\n			- \'escape\' now enabled by default\n			- removed \'list\' & \'debug\' attributes - debug info now in TXP tag trace (when Production Status = debugging)\n			- new attribute \'type\'\n	0.1		- initial release\n\n*/\n\n// TXP 4.6 tag registration\nif (class_exists(\'\\Textpattern\\Tag\\Registry\')) {\n	Txp::get(\'\\Textpattern\\Tag\\Registry\')\n		->register(\'adi_gps\')\n	;\n}\n\nfunction adi_gps($atts) {\n\n	global $variable,$trace; // i.e. $GLOBALS[\'variable\']\n\n	extract(lAtts(array(\n		\'name\'		=> \'\',		// comma separated list of GET/POST vars\n		\'new\'		=> \'\',		// new variable name\n		\'quiet\'		=> \'0\',		// return value or not\n		\'type\'		=> \'all\',	// \'all\' = GET & POST, \'post\' = POST only\n		\'post\'		=> \'0\',		// deprecated & ignored - POST vars now auto extracted\n		\'escape\'	=> \'html\',	// escape HTML entities\n		\'decode\'	=> \'0\',		// perform a urldecode\n		\'glue\'		=> \',\',		// join array values together\n	), $atts));\n\n	if ($name == \'\') // all vars extracted (GET/POST filtered later)\n		$name_list = array_keys(array_merge((array) $_GET, (array) $_POST));\n	else\n		$name_list = doArray(explode(\',\',$name),\'trim\');\n\n	// remove blanks from list (e.g if \"var1,var2,\" supplied)\n	$name_list = array_filter($name_list,\'strlen\');\n\n	// massage options if retrieving all vars or multiple vars requested\n	if (($name == \'\') || (count($name_list) > 1)) {\n		$quiet = 1; // force quiet mode\n		$new = \'\'; // disable var rename\n	}\n\n	// gps() or ps()\n	if (strtolower($type) == \'post\')\n		$func = \'ps\';\n	else\n		$func = \'gps\';\n\n	// process var list\n	foreach ($name_list as $index => $name) {\n		$value = $func($name); // extract value\n		if (is_array($value)) // if array then glue it together as a string\n			$value = implode($glue,$value);\n		$name = htmlspecialchars($new !== \'\' ? $new : $name);\n		if ($decode) // convert %chars\n			$value = urldecode($value);\n		if ($escape) // encode chars (e.g. ampersand becomes &amp;)\n			$value = htmlspecialchars($value);\n		if ($new) // rename var (single var mode only)\n			$name = $new;\n		$variable[$name] = $value; // set $GLOBALS[\'variable\'][$name]\n		// trace\n		if (is_object($trace)) // TXP 4.6\n			$trace->log(\'[\'.__FUNCTION__.\': \'.$name.\' = \'.$value.\']\');\n		else\n			trace_add(\'[\'.__FUNCTION__.\': \'.$name.\' = \'.$value.\']\');\n	}\n\n	if (!$quiet && isset($value)) // return value\n		return $value;\n\n	return \'\';\n}\n','1a384514648c109ec37993b237348e82',0,5,0),
	('mem_simple_form',1,'Michael Manfre','http://manfre.net/','0.3.2','Store a form to a table.','	<h1>mem_simple_form plugin</h1>\n\n	<h2>Summary</h2>\n\n	<p>This plugin allows for a site owner to have a form accept input and store the data in an existing table. Basic processing can be done to<br />\nthe data before writing to the table.</p>\n\n	<p>This plugin requires mem_form.</p>\n\n	<p>This plugin has <span class=\"caps\">MLP</span> support.</p>\n\n	<h2>Author Contact</h2>\n\n	<p><a href=\"mailto:mmanfre@gmail.com?subject=Textpattern%20mem_simple_form%20plugin\" rel=\"nofollow\">Michael Manfre</a><br />\n<a href=\"http://manfre.net\" rel=\"nofollow\">http://manfre.net</a></p>\n\n	<h2>License</h2>\n\n	<p>This plugin is licensed under the <a href=\"http://www.fsf.org/licensing/licenses/info/GPLv2.html\" rel=\"nofollow\">GPLv2</a>.</p>\n\n	<h2>Installation</h2>\n\n	<p>No extra installation steps</p>\n\n	<h2>Tags</h2>\n\n	<ul>\n		<li><a href=\"#mem_simple_form\" rel=\"nofollow\">mem_simple_form</a></li>\n		<li><a href=\"#mem_simple_if_ps\" rel=\"nofollow\">mem_simple_if_ps</a></li>\n		<li><a href=\"#mem_simple_ps\" rel=\"nofollow\">mem_simple_ps</a></li>\n	</ul>\n\n	<h3>mem_simple_form</h3>\n\n	<p>This tag will output an <span class=\"caps\">HTML</span> form. The <span class=\"caps\">HTML</span> form field names must follow the pattern &#8220;@&lt;type&gt;_&lt;name&gt;@&#8221;, where <code>&lt;type&gt;</code> is a value from\n	the below type list. The database table&#8217;s field name must match <code>&lt;name&gt;</code> exactly (case sensitive).</p>\n\n	<p>Form Types:\n	<ul>\n		<li>now &#8211; MySQL &#8220;<acronym title=\"\"><span class=\"caps\">NOW</span></acronym>&#8221; function. Use with mem_form_secret or mem_form_hidden.</li>\n		<li>password &#8211; MySQL &#8220;<acronym title=\"\"><span class=\"caps\">PASSWORD</span></acronym>&#8221; function</li>\n		<li>oldpassword &#8211; MySQL &#8220;<span class=\"caps\">OLD</span>_PASSWORD()&#8221; function</li>\n		<li>md5 &#8211; MySQL &#8220;<acronym title=\"\">MD5</acronym>&#8221; function</li>\n		<li>sha1 &#8211; MySQL &#8220;<acronym title=\"\">SHA1</acronym>&#8221; function</li>\n		<li>rand &#8211; MySQL &#8220;<acronym title=\"\"><span class=\"caps\">RAND</span></acronym>&#8221; function. Use with mem_form_secret or mem_form_hidden.</li>\n		<li>textile &#8211; Textile parse field</li>\n		<li>nl2br &#8211; Convert newlines to br tags</li>\n		<li>randuid &#8211; Generate a random unique id (md5 hash). Use with mem_form_secret or mem_form_hidden.</li>\n		<li>lower &#8211; Convert to lower case</li>\n		<li>upper &#8211; Convert to upper case</li>\n		<li>base64encode &#8211; Base64 encode</li>\n		<li>base64decode &#8211; Base64 decode</li>\n		<li>string &#8211; No processing</li>\n		<li>int &#8211; Field contains a numeric value</li>\n	</ul></p>\n\n	<ul>\n		<li><span>table</span> <span>string</span> Name of the table to insert data on a successful form submission.</li>\n		<li><span>id_field</span> <span>string</span> If specified, this is the name of the table field that is a <span class=\"caps\">PRIMARY</span> <span class=\"caps\">KEY</span> or <span class=\"caps\">UNIQUE</span> <span class=\"caps\">INDEX</span>. This allows updates if a record with a matching ID already exists.</li>\n		<li><span>id_insert</span> <span>int</span> If &#8220;1&#8221;, the ID field will be inserted/updated. Otherwise, the field is assumed to be auto generated by the database.</li>\n		<li><span>ignore_fields</span> <span>string</span> A comma separated string of field names (including prefixes) that will not be written to the table. These are handy for ToS checkboxes and <span class=\"caps\">CAPTCHA</span>s.</li>\n		<li><span>form</span> <span>string</span> Name of form that contains the mem_simple_form form tags.</li>\n		<li><span>success_form</span> <span>string</span> Name of the form that will be shown after a successful post.</li>\n		<li><span>failure_form</span> <span>string</span> Name of the form that will be shown after a failed post.</li>\n	</ul>\n\n	<h3>mem_simple_if_ps</h3>\n\n	<p>Conditional tag that checks to see if a <span class=\"caps\">HTML</span> field was posted, or if it has a specific value.</p>\n\n	<ul>\n		<li><span>name</span> <span>string</span> <span class=\"caps\">HTML</span> field name posted with the form.</li>\n		<li><span>equal</span> <span>string</span> Value to compare against the value of name. If not specified, tag checks to see if form posted variable <span class=\"caps\">HTML</span> field name.</li>\n	</ul>\n\n	<h3>mem_simple_ps</h3>\n\n	<p>This tag will output the value of the posted <span class=\"caps\">HTML</span> form field.</p>\n\n	<ul>\n		<li><span>name</span> <span>string</span> <span class=\"caps\">HTML</span> field name posted with the form.</li>\n	</ul>','\n\n\n\n// MLP\nglobal $mem_simple_lang;\nif (!is_array($mem_simple_lang))\n{\n	$mem_simple_lang = array(\n		\'table_name_required\'	=> \'You must provide a table name as an attribute to mem_simple_form\',\n		\'form_submit_failed\'	=> \'The form submission failed\',\n		\'no_fields_received\'	=> \'No data submitted with form.\',\n		\'attribute_missing\'		=> \'Required attribute {name} not provided\',\n	);\n}\ndefine( \'MEM_SIMPLE_PREFIX\' , \'mem_self\' );\n\nregister_callback( \'mem_simple_enumerate_strings\' , \'l10n.enumerate_strings\' );\nfunction mem_simple_enumerate_strings($event , $step=\'\' , $pre=0)\n{\n	global $mem_simple_lang;\n	$r = array	(\n				\'owner\'		=> \'mem_simple_form\',			#	Change to your plugin\'s name\n				\'prefix\'	=> MEM_SIMPLE_PREFIX,				#	Its unique string prefix\n				\'lang\'		=> \'en-gb\',						#	The language of the initial strings.\n				\'event\'		=> \'public\',					#	public/admin/common = which interface the strings will be loaded into\n				\'strings\'	=> $mem_simple_lang,				#	The strings themselves.\n				);\n	return $r;\n}\nfunction mem_simple_gTxt($what,$args = array())\n{\n	global $mem_simple_lang, $textarray;\n\n	$key = strtolower( MEM_SIMPLE_PREFIX . \'-\' . $what );\n\n	if (isset($textarray[$key]))\n	{\n		$str = $textarray[$key];\n	}\n	else\n	{\n		$key = strtolower($what);\n\n		if (isset($mem_simple_lang[$key]))\n			$str = $mem_simple_lang[$key];\n		elseif (isset($textarray[$key]))\n			$str = $textarray[$key];\n		else\n			$str = $what;\n	}\n\n	if( !empty($args) )\n		$str = strtr( $str , $args );\n\n	return $str;\n}\n\n\nrequire_plugin(\'mem_form\');\n\n\nfunction mem_simple_form($atts, $thing=\'\')\n{\n    $atts = lAtts(array(\n        \'type\'  =>  \'mem_simple_form\',\n        \'table\' =>  false,\n        \'id_field\'  => false,\n        \'id_insert\'	=> false,\n        \'ignore_fields\'	=> false,\n        \'form\'	=> \'\',\n        \'success_form\'	=> false,\n        \'failure_form\'	=> false,\n    ),$atts,0);\n\n    if (empty($atts[\'table\']))\n        trigger_error(gTxt(\'attribute_required\', array(\'{att}\' => \'table\')));\n\n		if (!empty($atts[\'form\'])) {\n			$thing = fetch_form($atts[\'form\']);\n			unset($atts[\'form\']);\n		}\n\n		foreach(array(\'table\', \'id_field\', \'id_insert\', \'ignore_fields\', \'success_form\', \'failure_form\') as $a) {\n			$thing .= \'<txp:mem_form_secret name=\"mem_simple_\'.$a.\'\" value=\"\'.$atts[$a].\'\" />\';\n			unset($atts[$a]);\n		}\n\n    return mem_form($atts, $thing);\n}\n\n\nregister_callback(\'mem_simple_form_submitted\', \'mem_form.submit\');\nfunction mem_simple_form_submitted()\n{\n	global $mem_form_type, $mem_form_values, $production_status;\n\n	if ($mem_form_type !== \'mem_simple_form\')\n		return;\n\n  $table = @$mem_form_values[\'mem_simple_table\'];\n\n  if (empty($table))\n  {\n  	trigger_error(mem_simple_gTxt(\'table_name_required\'));\n      // table name required\n      return;\n  }\n\n	$id_field = @$mem_form_values[\'mem_simple_id_field\'];\n	$id_insert = @$mem_form_values[\'mem_simple_id_insert\'];\n\n	$ignore_fields = @$mem_form_values[\'mem_simple_ignore_fields\'];\n	$ignore_fields = empty($ignore_fields) ? array() : explode(\',\', $ignore_fields);\n	$ignore_fields_names = array_values($ignore_fields);\n	$ignore_fields_names[] = \'mem_form_submit\';\n\n	$textile = false;\n  $fields = array();\n\n  $id = false;\n\n	foreach($mem_form_values as $k=>$v)\n	{\n			// skip plugin config values and ignorable fields\n			if (strncmp($k, \'mem_simple_\', 11) == 0 || in_array($k, $ignore_fields_names) )\n			{\n				continue;\n			}\n\n	    // split the type from name. int_number_value ==> int, number_value\n	    list($type, $name) = explode(\'_\', $k, 2);\n\n			if ($type == \'int\')\n				$format = \"%s = %d\";\n			else\n			{\n				// standard string format\n				$format = \"%s = \'%s\'\";\n\n				// mysql functions\n				$funcs = array(\n									\'now\' => \"NOW()\",\n									\'password\' => \"PASSWORD(\'%s\')\",\n									\'oldpassword\' => \"OLD_PASSWORD(\'%s\')\",\n									\'md5\' => \"MD5(\'%s\')\",\n									\'sha1\' => \"SHA1(\'%s\')\",\n									\'rand\' => \'RAND()\',\n								);\n\n				if (array_key_exists($type, $funcs))\n				{\n					$format = \"%s = \" . $funcs[$type];\n				}\n				else if ($type == \'textile\')\n				{\n					if (!$textile)\n					{\n						// load textile singleton\n						include_once txpath.\'/lib/classTextile.php\';\n						$textile = new Textile();\n					}\n\n					$v = $textile->TextileThis($v);\n				}\n				else if ($type == \'nl2br\')\n					$v = nl2br(trim($v));\n				else if ($type == \'urltitle\')\n					$v = stripSpace($v,1);\n				else if ($type == \'randuid\')\n					$v = md5(uniqid(rand(),true));\n				else if ($type == \'lower\')\n					$v = strtolower($v);\n				else if ($type == \'upper\')\n					$v = strtoupper($v);\n				else if ($type == \'base64encode\')\n					$v = base64_encode($v);\n				else if ($type == \'base64decode\')\n					$v = base64_decode($v);\n			}\n\n			// store the processed value so others can access\n			$_POST[$k] = $v;\n\n      $s = sprintf($format, doSlash($name), doSlash($v));\n\n	    if ($id_field == $name && !$id_insert)\n	    {\n	        $id = $s;\n	        // don\'t update id field\n	        continue;\n	    }\n\n        $fields[] = $s;\n	}\n\n	if (!empty($fields))\n	{\n        $insert = empty($id);\n\n   	    if ($insert)\n   	    {\n   	        $rs = safe_insert( doSlash($table), join(\', \',$fields) );\n   	    }\n   	    else\n   	    {\n   	        $rs = safe_upsert( doSlash($table), join(\', \',$fields), $id );\n   	    }\n\n   	    if ($rs)\n   	    {\n   	        // yay\n   	        $form = @$mem_form_values[\'mem_simple_success_form\'];\n   	        if (!empty($form))\n   	        {\n   	        	$form = @fetch_form($form);\n\n   	        	if (!empty($form))\n   	        	{\n   	        		return parse($form);\n   	        	}\n   	        }\n   	    }\n   	    else\n   	    {\n   	        // boo\n   	        if ($production_status != \'live\')\n	   	        trigger_error(\'Failed to store data to table. \' . mysql_error($rs));\n\n   	    	$form = @$mem_form_values[\'mem_simple_failure_form\'];\n   	    	if (!empty($form))\n   	    	{\n   	    		$form = @fetch_form($form);\n\n   	    		if (!empty($form))\n   	    		{\n   	    			return parse($form);\n   	    		}\n   	    	}\n\n   	        return mem_simple_gTxt(\'form_submit_failed\');\n   	    }\n	}\n	else\n	{\n	    return mem_simple_gTxt(\'no_fields_received\');\n	}\n}\n\nfunction mem_simple_ps($atts,$thing=\'\')\n{\n	extract(lAtts(array(\n		\'name\'	=>	false,\n	),$atts));\n\n	if (!empty($name))\n	{\n			$n = gps($name);\n			if (!empty($n))\n				return $n;\n	}\n	return \'\';\n}\n\nfunction mem_simple_if_ps($atts, $thing=\'\')\n{\n	extract(lAtts(array(\n		\'name\'	=>	false,\n		\'equal\'	=>	false,\n	),$atts));\n\n	if ($name === false)\n		trigger_error(gTxt(\'attribute_missing\', array(\'{name}\' => $name)));\n\n	if ($equal === false)\n		$condition = isset($_POST[$name]);\n	else\n		$condition = (gps(\'name\') == $equal);\n	$thing = EvalElse($thing, $condition);\n\n	return parse($thing);\n}\n','\n\n\n\n// MLP\nglobal $mem_simple_lang;\nif (!is_array($mem_simple_lang))\n{\n	$mem_simple_lang = array(\n		\'table_name_required\'	=> \'You must provide a table name as an attribute to mem_simple_form\',\n		\'form_submit_failed\'	=> \'The form submission failed\',\n		\'no_fields_received\'	=> \'No data submitted with form.\',\n		\'attribute_missing\'		=> \'Required attribute {name} not provided\',\n	);\n}\ndefine( \'MEM_SIMPLE_PREFIX\' , \'mem_self\' );\n\nregister_callback( \'mem_simple_enumerate_strings\' , \'l10n.enumerate_strings\' );\nfunction mem_simple_enumerate_strings($event , $step=\'\' , $pre=0)\n{\n	global $mem_simple_lang;\n	$r = array	(\n				\'owner\'		=> \'mem_simple_form\',			#	Change to your plugin\'s name\n				\'prefix\'	=> MEM_SIMPLE_PREFIX,				#	Its unique string prefix\n				\'lang\'		=> \'en-gb\',						#	The language of the initial strings.\n				\'event\'		=> \'public\',					#	public/admin/common = which interface the strings will be loaded into\n				\'strings\'	=> $mem_simple_lang,				#	The strings themselves.\n				);\n	return $r;\n}\nfunction mem_simple_gTxt($what,$args = array())\n{\n	global $mem_simple_lang, $textarray;\n\n	$key = strtolower( MEM_SIMPLE_PREFIX . \'-\' . $what );\n\n	if (isset($textarray[$key]))\n	{\n		$str = $textarray[$key];\n	}\n	else\n	{\n		$key = strtolower($what);\n\n		if (isset($mem_simple_lang[$key]))\n			$str = $mem_simple_lang[$key];\n		elseif (isset($textarray[$key]))\n			$str = $textarray[$key];\n		else\n			$str = $what;\n	}\n\n	if( !empty($args) )\n		$str = strtr( $str , $args );\n\n	return $str;\n}\n\n\nrequire_plugin(\'mem_form\');\n\n\nfunction mem_simple_form($atts, $thing=\'\')\n{\n    $atts = lAtts(array(\n        \'type\'  =>  \'mem_simple_form\',\n        \'table\' =>  false,\n        \'id_field\'  => false,\n        \'id_insert\'	=> false,\n        \'ignore_fields\'	=> false,\n        \'form\'	=> \'\',\n        \'success_form\'	=> false,\n        \'failure_form\'	=> false,\n    ),$atts,0);\n\n    if (empty($atts[\'table\']))\n        trigger_error(gTxt(\'attribute_required\', array(\'{att}\' => \'table\')));\n\n		if (!empty($atts[\'form\'])) {\n			$thing = fetch_form($atts[\'form\']);\n			unset($atts[\'form\']);\n		}\n\n		foreach(array(\'table\', \'id_field\', \'id_insert\', \'ignore_fields\', \'success_form\', \'failure_form\') as $a) {\n			$thing .= \'<txp:mem_form_secret name=\"mem_simple_\'.$a.\'\" value=\"\'.$atts[$a].\'\" />\';\n			unset($atts[$a]);\n		}\n\n    return mem_form($atts, $thing);\n}\n\n\nregister_callback(\'mem_simple_form_submitted\', \'mem_form.submit\');\nfunction mem_simple_form_submitted()\n{\n	global $mem_form_type, $mem_form_values, $production_status;\n\n	if ($mem_form_type !== \'mem_simple_form\')\n		return;\n\n  $table = @$mem_form_values[\'mem_simple_table\'];\n\n  if (empty($table))\n  {\n  	trigger_error(mem_simple_gTxt(\'table_name_required\'));\n      // table name required\n      return;\n  }\n\n	$id_field = @$mem_form_values[\'mem_simple_id_field\'];\n	$id_insert = @$mem_form_values[\'mem_simple_id_insert\'];\n\n	$ignore_fields = @$mem_form_values[\'mem_simple_ignore_fields\'];\n	$ignore_fields = empty($ignore_fields) ? array() : explode(\',\', $ignore_fields);\n	$ignore_fields_names = array_values($ignore_fields);\n	$ignore_fields_names[] = \'mem_form_submit\';\n\n	$textile = false;\n  $fields = array();\n\n  $id = false;\n\n	foreach($mem_form_values as $k=>$v)\n	{\n			// skip plugin config values and ignorable fields\n			if (strncmp($k, \'mem_simple_\', 11) == 0 || in_array($k, $ignore_fields_names) )\n			{\n				continue;\n			}\n\n	    // split the type from name. int_number_value ==> int, number_value\n	    list($type, $name) = explode(\'_\', $k, 2);\n\n			if ($type == \'int\')\n				$format = \"%s = %d\";\n			else\n			{\n				// standard string format\n				$format = \"%s = \'%s\'\";\n\n				// mysql functions\n				$funcs = array(\n									\'now\' => \"NOW()\",\n									\'password\' => \"PASSWORD(\'%s\')\",\n									\'oldpassword\' => \"OLD_PASSWORD(\'%s\')\",\n									\'md5\' => \"MD5(\'%s\')\",\n									\'sha1\' => \"SHA1(\'%s\')\",\n									\'rand\' => \'RAND()\',\n								);\n\n				if (array_key_exists($type, $funcs))\n				{\n					$format = \"%s = \" . $funcs[$type];\n				}\n				else if ($type == \'textile\')\n				{\n					if (!$textile)\n					{\n						// load textile singleton\n						include_once txpath.\'/lib/classTextile.php\';\n						$textile = new Textile();\n					}\n\n					$v = $textile->TextileThis($v);\n				}\n				else if ($type == \'nl2br\')\n					$v = nl2br(trim($v));\n				else if ($type == \'urltitle\')\n					$v = stripSpace($v,1);\n				else if ($type == \'randuid\')\n					$v = md5(uniqid(rand(),true));\n				else if ($type == \'lower\')\n					$v = strtolower($v);\n				else if ($type == \'upper\')\n					$v = strtoupper($v);\n				else if ($type == \'base64encode\')\n					$v = base64_encode($v);\n				else if ($type == \'base64decode\')\n					$v = base64_decode($v);\n			}\n\n			// store the processed value so others can access\n			$_POST[$k] = $v;\n\n      $s = sprintf($format, doSlash($name), doSlash($v));\n\n	    if ($id_field == $name && !$id_insert)\n	    {\n	        $id = $s;\n	        // don\'t update id field\n	        continue;\n	    }\n\n        $fields[] = $s;\n	}\n\n	if (!empty($fields))\n	{\n        $insert = empty($id);\n\n   	    if ($insert)\n   	    {\n   	        $rs = safe_insert( doSlash($table), join(\', \',$fields) );\n   	    }\n   	    else\n   	    {\n   	        $rs = safe_upsert( doSlash($table), join(\', \',$fields), $id );\n   	    }\n\n   	    if ($rs)\n   	    {\n   	        // yay\n   	        $form = @$mem_form_values[\'mem_simple_success_form\'];\n   	        if (!empty($form))\n   	        {\n   	        	$form = @fetch_form($form);\n\n   	        	if (!empty($form))\n   	        	{\n   	        		return parse($form);\n   	        	}\n   	        }\n   	    }\n   	    else\n   	    {\n   	        // boo\n   	        if ($production_status != \'live\')\n	   	        trigger_error(\'Failed to store data to table. \' . mysql_error($rs));\n\n   	    	$form = @$mem_form_values[\'mem_simple_failure_form\'];\n   	    	if (!empty($form))\n   	    	{\n   	    		$form = @fetch_form($form);\n\n   	    		if (!empty($form))\n   	    		{\n   	    			return parse($form);\n   	    		}\n   	    	}\n\n   	        return mem_simple_gTxt(\'form_submit_failed\');\n   	    }\n	}\n	else\n	{\n	    return mem_simple_gTxt(\'no_fields_received\');\n	}\n}\n\nfunction mem_simple_ps($atts,$thing=\'\')\n{\n	extract(lAtts(array(\n		\'name\'	=>	false,\n	),$atts));\n\n	if (!empty($name))\n	{\n			$n = gps($name);\n			if (!empty($n))\n				return $n;\n	}\n	return \'\';\n}\n\nfunction mem_simple_if_ps($atts, $thing=\'\')\n{\n	extract(lAtts(array(\n		\'name\'	=>	false,\n		\'equal\'	=>	false,\n	),$atts));\n\n	if ($name === false)\n		trigger_error(gTxt(\'attribute_missing\', array(\'{name}\' => $name)));\n\n	if ($equal === false)\n		$condition = isset($_POST[$name]);\n	else\n		$condition = (gps(\'name\') == $equal);\n	$thing = EvalElse($thing, $condition);\n\n	return parse($thing);\n}\n','15d426e236d878950a9fb33954736ad3',0,5,0),
	('mem_form',1,'Michael Manfre','http://manfre.net/','0.8.4','A library plugin that provides support for html forms.','	<h1>mem_form plugin</h1>\n\n	<h2>Summary</h2>\n\n	<p>This plugin provides <span class=\"caps\">HTML</span> form capabilities for other plugins. This allows for consistent form tags and behaviors, while reducing overall plugin size and development time.</p>\n\n	<h2>Author Contact</h2>\n\n	<p><a href=\"mailto:mmanfre@gmail.com?subject=Textpattern%20mem_form%20plugin\" rel=\"nofollow\">Michael Manfre</a><br />\n<a href=\"http://manfre.net\" rel=\"nofollow\">http://manfre.net</a></p>\n\n	<h2>License</h2>\n\n	<p>This plugin is licensed under the <a href=\"http://www.fsf.org/licensing/licenses/info/GPLv2.html\" rel=\"nofollow\">GPLv2</a>.</p>\n\n	<h2>Tags</h2>\n\n	<ul>\n		<li><a href=\"#mem_form\" rel=\"nofollow\">mem_form</a></li>\n		<li><a href=\"#mem_form_checkbox\" rel=\"nofollow\">mem_form_checkbox</a></li>\n		<li><a href=\"#mem_form_email\" rel=\"nofollow\">mem_form_email</a></li>\n		<li><a href=\"#mem_form_file\" rel=\"nofollow\">mem_form_file</a></li>\n		<li><a href=\"#mem_form_hidden\" rel=\"nofollow\">mem_form_hidden</a></li>\n		<li><a href=\"#mem_form_radio\" rel=\"nofollow\">mem_form_radio</a></li>\n		<li><a href=\"#mem_form_secret\" rel=\"nofollow\">mem_form_secret</a></li>\n		<li><a href=\"#mem_form_select\" rel=\"nofollow\">mem_form_select</a></li>\n		<li><a href=\"#mem_form_select_category\" rel=\"nofollow\">mem_form_select_category</a></li>\n		<li><a href=\"#mem_form_select_section\" rel=\"nofollow\">mem_form_select_section</a></li>\n		<li><a href=\"#mem_form_serverinfo\" rel=\"nofollow\">mem_form_serverinfo</a></li>\n		<li><a href=\"#mem_form_submit\" rel=\"nofollow\">mem_form_submit</a></li>\n		<li><a href=\"#mem_form_text\" rel=\"nofollow\">mem_form_text</a></li>\n		<li><a href=\"#mem_form_textarea\" rel=\"nofollow\">mem_form_textarea</a></li>\n		<li><a href=\"#mem_form_value\" rel=\"nofollow\">mem_form_value</a></li>\n	</ul>\n\n	<h3>mem_form</h3>\n\n	<p>This tag will create an <span class=\"caps\">HTML</span> form and contains all of the processing and validation.</p>\n\n	<ul>\n		<li><span>form</span> <span>string</span> Name of a form that will be parsed to display the form.</li>\n		<li><span>thanks_form</span> <span>string</span> Name of a form that will be parsed upon successful form submission.</li>\n		<li><span>label</span> <span>string</span> Accessible name for the form.</li>\n		<li><span>type</span> <span>string</span> Name of the form to identify itself to bound plugin.</li>\n		<li><span>thanks</span> <span>string</span> Message to display to user upon successful form submission.</li>\n		<li><span>redirect</span> <span>url</span> <span class=\"caps\">URL</span> to redirect upon successful form submission. Overrides &#8220;thanks&#8221; and &#8220;thanks_form&#8221;.</li>\n		<li><span>redirect_form</span> <span>string</span> Name of a form that will be parsed as displayed to the user on a redirect. The string &#8220;<em>{uri}</em>&#8221; will be replaced with the redirect url.</li>\n		<li><span>enctype</span> <span>string</span> <span class=\"caps\">HTML</span> encoding type used when the form is submitted. <code>enctype=\"multipart/form-data\"</code> is required when using mem_form_file.</li>\n	</ul>\n\n	<h3>mem_form_checkbox</h3>\n\n	<p>This will output an <span class=\"caps\">HTML</span> checkbox field.</p>\n\n	<ul>\n		<li><span>break</span> <span>string</span> Separator between label tag and input tag.</li>\n		<li><span>checked</span> <span>int</span> Is this box checked. Default &#8220;0&#8221;.</li>\n		<li><span>label</span> <span>string</span> Friendly name for the input field. If set, this will output an <span class=\"caps\">HTML</span> &lt;label&gt; tag linked to the input field.</li>\n		<li><span>name</span> <span>string</span> Input field name.</li>\n		<li><span>required</span> <span>int</span> Specifies if input is required.</li>\n		<li><span>class</span> <span>string</span> <span class=\"caps\">CSS</span> class name.</li>\n	</ul>\n\n	<h3>mem_form_email</h3>\n\n	<p>This will output an <span class=\"caps\">HTML</span> text input field and validates the submitted value as an email address.</p>\n\n	<ul>\n		<li><span>break</span> <span>string</span> Separator between label tag and input tag.</li>\n		<li><span>label</span> <span>string</span> Friendly name for the input field. If set, this will output an <span class=\"caps\">HTML</span> &lt;label&gt; tag linked to the input field.</li>\n		<li><span>name</span> <span>string</span> Input field name.</li>\n		<li><span>required</span> <span>int</span> Specifies if input is required.</li>\n		<li><span>class</span> <span>string</span> <span class=\"caps\">CSS</span> class name.</li>\n		<li><span>default</span> <span>string</span> The default value.</li>\n		<li><span>max</span> <span>int</span> Max character length.</li>\n		<li><span>min</span> <span>int</span> Min character length.</li>\n		<li><span>size</span> <span>int</span> Size of input field.</li>\n	</ul>\n\n	<h3>mem_form_file</h3>\n\n	<p>+p(tag-summary). This will output an <span class=\"caps\">HTML</span> file input field. You must add the <code>enctype=\"multipart/form-data\"</code> attribute to your enclosing mem_form for this to work.</p>\n\n	<ul>\n		<li><span>label</span> <span>string</span> Friendly name for the input field. If set, this will output an <span class=\"caps\">HTML</span> &lt;label&gt; tag linked to the input field.</li>\n		<li><span>name</span> <span>string</span> Input field name.</li>\n		<li><span>class</span> <span>string</span> <span class=\"caps\">CSS</span> class name.</li>\n		<li><span>break</span> <span>string</span> Separator between label tag and input tag.</li>\n		<li><span>no_replace</span> <span>int</span> Specifies whether a user can upload another file and replace the existing file that will be submitted on successful completion of the form. If &#8220;1&#8221;, the file input field will be replaced with details about the already uploaded file.</li>\n		<li><span>required</span> <span>int</span> Specifies if input is required.</li>\n		<li><span>size</span> <span>int</span> Size of input field.</li>\n		<li><span>max_file_size</span> <span>int</span> Maximum size for the uploaded file. Checked server-side.</li>\n		<li><span>accept</span> <span>string</span> The <span class=\"caps\">HTML</span> file input field&#8217;s &#8220;accept&#8221; argument that specifies which file types the field should permit.</li>\n	</ul>\n\n	<h3>mem_form_hidden</h3>\n\n	<p>This will output an <span class=\"caps\">HTML</span> hidden text input field.</p>\n\n	<ul>\n		<li><span>label</span> <span>string</span> Friendly name for the input field. If set, this will output an <span class=\"caps\">HTML</span> &lt;label&gt; tag linked to the input field.</li>\n		<li><span>name</span> <span>string</span> Input field name.</li>\n		<li><span>value</span> <span>string</span> The input value.</li>\n		<li><span>required</span> <span>int</span> Specifies if input is required.</li>\n		<li><span>class</span> <span>string</span> <span class=\"caps\">CSS</span> class name.</li>\n		<li><span>escape_value</span> <span>int</span> Set to &#8220;0&#8221; to prevent html escaping the value. Default &#8220;1&#8221;.</li>\n	</ul>\n\n	<h3>mem_form_radio</h3>\n\n	<p>This will output an <span class=\"caps\">HTML</span> radio button.</p>\n\n	<ul>\n		<li><span>break</span> <span>string</span> Separator between label tag and input tag.</li>\n		<li><span>label</span> <span>string</span> Friendly name for the input field. If set, this will output an <span class=\"caps\">HTML</span> &lt;label&gt; tag linked to the input field.</li>\n		<li><span>name</span> <span>string</span> Input field name.</li>\n		<li><span>class</span> <span>string</span> <span class=\"caps\">CSS</span> class name.</li>\n		<li><span>group</span> <span>string</span> A name that identifies a group of radio buttons.</li>\n		<li><span>value</span> <span>string</span> The value of the radio button. If not set, a unique value is generated.</li>\n		<li><span>checked</span> <span>int</span> Is this box checked. Default &#8220;0&#8221;.</li>\n	</ul>\n\n	<h3>mem_form_secret</h3>\n\n	<p>This will output nothing in <span class=\"caps\">HTML</span> and is meant to pass information to the sumbit handler plugins.</p>\n\n	<ul>\n		<li><span>label</span> <span>string</span> Friendly name for the input field. If set, this will output an <span class=\"caps\">HTML</span> &lt;label&gt; tag linked to the input field.</li>\n		<li><span>name</span> <span>string</span> Input field name.</li>\n		<li><span>value</span> <span>string</span> The input value.</li>\n	</ul>\n\n	<h3>mem_form_select</h3>\n\n	<p>This will output an <span class=\"caps\">HTML</span> select field.</p>\n\n	<ul>\n		<li><span>label</span> <span>string</span> Friendly name for the input field. If set, this will output an <span class=\"caps\">HTML</span> &lt;label&gt; tag linked to the input field.</li>\n		<li><span>name</span> <span>string</span> Input field name.</li>\n		<li><span>break</span> <span>string</span> Separator between label tag and input tag.</li>\n		<li><span>delimiter</span> <span>string</span> List separator. Default &#8220;,&#8221;</li>\n		<li><span>items</span> <span>string</span> Delimited list containing a select list display values.</li>\n		<li><span>values</span> <span>string</span> Delimited list containing a select list item values.</li>\n		<li><span>required</span> <span>int</span> Specifies if input is required.</li>\n		<li><span>selected</span> <span>string</span> The value of the selected item.</li>\n		<li><span>first</span> <span>string</span> Display value of the first item in the list. E.g. &#8220;Select a Section&#8221; or &#8220;&#8221; for a blank option.</li>\n		<li><span>class</span> <span>string</span> <span class=\"caps\">CSS</span> class name.</li>\n		<li><span>select_limit</span> <span>int</span> Specifies the maximum number of items that may be selected. If set to a value greater than 1, a multiselect will be used. The stored value will be an array.</li>\n		<li><span>as_csv</span> <span>int</span> If set to 1, the value will be stored as a delimited string of values instead of an array. This does nothing when select_limit is less than 2.</li>\n	</ul>\n\n	<h3>mem_form_select_category</h3>\n\n	<p>This will output an <span class=\"caps\">HTML</span> select field populated with the specified Textpattern categories.</p>\n\n	<ul>\n		<li><span>label</span> <span>string</span> Friendly name for the input field. If set, this will output an <span class=\"caps\">HTML</span> &lt;label&gt; tag linked to the input field.</li>\n		<li><span>name</span> <span>string</span> Input field name.</li>\n		<li><span>break</span> <span>string</span> Separator between label tag and input tag.</li>\n		<li><span>delimiter</span> <span>string</span> List separator. Default &#8220;,&#8221;</li>\n		<li><span>items</span> <span>string</span> Delimited list containing a select list display values.</li>\n		<li><span>values</span> <span>string</span> Delimited list containing a select list item values.</li>\n		<li><span>required</span> <span>int</span> Specifies if input is required.</li>\n		<li><span>selected</span> <span>string</span> The value of the selected item.</li>\n		<li><span>first</span> <span>string</span> Display value of the first item in the list. E.g. &#8220;Select a Section&#8221; or &#8220;&#8221; for a blank option.</li>\n		<li><span>class</span> <span>string</span> <span class=\"caps\">CSS</span> class name.</li>\n		<li><span>exclude</span> <span>string</span> List of item values that will not be included.</li>\n		<li><span>sort</span> <span>string</span>  How will the list values be sorted.</li>\n		<li><span>type</span> <span>string</span> Category type name. E.g. &#8220;article&#8221;</li>\n	</ul>\n\n	<h3>mem_form_select_section</h3>\n\n	<p>This will output an <span class=\"caps\">HTML</span> select field populated with the specified Textpattern sections.</p>\n\n	<ul>\n		<li><span>label</span> <span>string</span> Friendly name for the input field. If set, this will output an <span class=\"caps\">HTML</span> &lt;label&gt; tag linked to the input field.</li>\n		<li><span>name</span> <span>string</span> Input field name.</li>\n		<li><span>break</span> <span>string</span> Separator between label tag and input tag.</li>\n		<li><span>delimiter</span> <span>string</span> List separator. Default &#8220;,&#8221;</li>\n		<li><span>items</span> <span>string</span> Delimited list containing a select list display values.</li>\n		<li><span>values</span> <span>string</span> Delimited list containing a select list item values.</li>\n		<li><span>required</span> <span>int</span> Specifies if input is required.</li>\n		<li><span>selected</span> <span>string</span> The value of the selected item.</li>\n		<li><span>first</span> <span>string</span> Display value of the first item in the list. E.g. &#8220;Select a Section&#8221; or &#8220;&#8221; for a blank option.</li>\n		<li><span>class</span> <span>string</span> <span class=\"caps\">CSS</span> class name.</li>\n		<li><span>exclude</span> <span>string</span> List of item values that will not be included.</li>\n		<li><span>sort</span> <span>string</span>  How will the list values be sorted.</li>\n	</ul>\n\n	<h3>mem_form_serverinfo</h3>\n\n	<p>This will output no <span class=\"caps\">HTML</span> and is used to pass server information to the plugin handling the form submission.</p>\n\n	<ul>\n		<li><span>label</span> <span>string</span> Friendly name for the input field. If set, this will output an <span class=\"caps\">HTML</span> &lt;label&gt; tag linked to the input field.</li>\n		<li><span>name</span> <span>string</span> Input field name.</li>\n	</ul>\n\n	<h3>mem_form_submit</h3>\n\n	<p>This will output either an <span class=\"caps\">HTML</span> submit input field or an <span class=\"caps\">HTML</span> button.</p>\n\n	<ul>\n		<li><span>label</span> <span>string</span> Friendly name for the input field. If set, this will output an <span class=\"caps\">HTML</span> &lt;label&gt; tag linked to the input field.</li>\n		<li><span>name</span> <span>string</span> Input field name.</li>\n		<li><span>class</span> <span>string</span> <span class=\"caps\">CSS</span> class name.</li>\n		<li><span>button</span> <span>int</span> If &#8220;1&#8221;, an html button tag will be used instead of an input tag.</li>\n	</ul>\n\n	<h3>mem_form_text</h3>\n\n	<p>This will output an <span class=\"caps\">HTML</span> text input field.</p>\n\n	<ul>\n		<li><span>label</span> <span>string</span> Friendly name for the input field. If set, this will output an <span class=\"caps\">HTML</span> &lt;label&gt; tag linked to the input field.</li>\n		<li><span>name</span> <span>string</span> Input field name.</li>\n		<li><span>class</span> <span>string</span> <span class=\"caps\">CSS</span> class name.</li>\n		<li><span>break</span> <span>string</span> Separator between label tag and input tag.</li>\n		<li><span>default</span> <span>string</span> The default value.</li>\n		<li><span>format</span> <span>string</span> A regex pattern that will be matched against the input value. You must escape all backslashes &#8216;\\&#8217;. E.g &#8220;/\\\\d/&#8221; is a single digit.</li>\n		<li><span>example</span> <span>string</span> An example of a correctly formatted input value.</li>\n		<li><span>password</span> <span>int</span> Specifies if the input field is a password field.</li>\n		<li><span>required</span> <span>int</span> Specifies if input is required.</li>\n		<li><span>max</span> <span>int</span> Max character length.</li>\n		<li><span>min</span> <span>int</span> Min character length.</li>\n		<li><span>size</span> <span>int</span> Size of input field.</li>\n		<li><span>escape_value</span> <span>int</span> Set to &#8220;0&#8221; to prevent html escaping the value. Default &#8220;1&#8221;.</li>\n	</ul>\n\n	<h3>mem_form_textarea</h3>\n\n	<p>This will output an <span class=\"caps\">HTML</span> textarea.</p>\n\n	<ul>\n		<li><span>label</span> <span>string</span> Friendly name for the input field. If set, this will output an <span class=\"caps\">HTML</span> &lt;label&gt; tag linked to the input field.</li>\n		<li><span>name</span> <span>string</span> Input field name.</li>\n		<li><span>class</span> <span>string</span> <span class=\"caps\">CSS</span> class name.</li>\n		<li><span>break</span> <span>string</span> Separator between label tag and input tag.</li>\n		<li><span>default</span> <span>string</span> The default value.</li>\n		<li><span>max</span> <span>int</span> Max character length.</li>\n		<li><span>min</span> <span>int</span> Min character length.</li>\n		<li><span>required</span> <span>int</span> Specifies if input is required.</li>\n		<li><span>rows</span> <span>int</span> Number of rows in the textarea.</li>\n		<li><span>cols</span> <span>int</span> Number of columns in the textarea.</li>\n		<li><span>escape_value</span> <span>int</span> Set to &#8220;0&#8221; to prevent html escaping the value. Default &#8220;1&#8221;.</li>\n	</ul>\n\n	<h3>mem_form_value</h3>\n\n	<p>This will output the value associated with a form field. Useful to mix <span class=\"caps\">HTML</span> input fields with mem_form.</p>\n\n	<ul>\n		<li><span>id</span> <span>string</span> ID for output wrap tag.</li>\n		<li><span>class</span> <span>string</span> <span class=\"caps\">CSS</span> class name.</li>\n		<li><span>class</span> <span>string</span> <span class=\"caps\">CSS</span> class.</li>\n		<li><span>wraptag</span> <span>string</span> <span class=\"caps\">HTML</span> tag to wrap around the value.</li>\n		<li><span>attributes</span> <span>string</span> Additional <span class=\"caps\">HTML</span> tag attributes that should be passed to the output tag.</li>\n	</ul>\n\n	<h2>Exposed Functions</h2>\n\n	<h3>mem_form_mail</h3>\n\n	<p>This will send an email message.</p>\n\n	<ul>\n		<li><span>Return Value</span> <span>bool</span> Returns true or false, indicating whether the email was successfully given to the mail system. This does not indicate the validity of the email address or that the recipient actually received the email.</li>\n		<li><span>from</span> <span>string</span> The From email address.</li>\n		<li><span>reply</span> <span>string</span> The Reply To email address.</li>\n		<li><span>to</span> <span>string</span> The To email address(es).</li>\n		<li><span>subject</span> <span>string</span> The email&#8217;s Subject.</li>\n		<li><span>msg</span> <span>string</span> The email message.</li>\n	</ul>\n\n	<h3>mem_form_error</h3>\n\n	<p>This will set or get errors associated with the form.</p>\n\n	<ul>\n		<li><span>Return Value</span> <span>mixed</span> If err is <span class=\"caps\">NULL</span>, then it will return an array of errors that have been set.</li>\n		<li><span>err</span> <span>string</span> An error that will be added to the list of form errors that will be displayed to the form user.</li>\n	</ul>\n\n	<h3>mem_form_default</h3>\n\n	<p>This will get or set a default value for a form.</p>\n\n	<ul>\n		<li><span>Return Value</span> <span>mixed</span> If <span>val is <span class=\"caps\">NULL</span>, then it will return the default value set for the input field matching %(atts-name)key</span>. If <span>key</span> does not exist, then it will return <span class=\"caps\">FALSE</span>.</li>\n		<li><span>key</span> <span>string</span> The name of the input field.</li>\n		<li><span>val</span> <span>string</span> If specified, this will be specified as the default value for the input field named &#8220;key&#8221;.</li>\n	</ul>\n\n	<h3>mem_form_store</h3>\n\n	<p>This will store the name, label and value for a field in to the appropriate global variables.</p>\n\n	<ul>\n		<li><span>name</span> <span>string</span> The name of the field.</li>\n		<li><span>label</span> <span>string</span> The label of the field.</li>\n		<li><span>value</span> <span>mixed</span> The value of the field.</li>\n	</ul>\n\n	<h3>mem_form_remove</h3>\n\n	<p>This will remove the information associated with a field that has been stored.</p>\n\n	<ul>\n		<li><span>name</span> <span>string</span> The name of the field.</li>\n	</ul>\n\n	<h2>Global Variables</h2>\n\n	<p>This library allows other plugins to hook in to events with the <code>register_callback</code> function.</p>\n\n	<ul>\n		<li><span>$mem_form_type</span> <span>string</span> A text value that allows a plugin determine if it should process the current form.</li>\n		<li><span>$mem_form_submit</span> <span>bool</span> This specifies if the form is doing a postback.</li>\n		<li><span>$mem_form_default</span> <span>array</span> An array containing the default values to use when displaying the form.</li>\n		<li><span>$mem_form</span> <span>array</span> An array mapping all input labels to their values.</li>\n		<li><span>$mem_form_labels</span> <span>array</span> An array mapping all input names to their labels.</li>\n		<li><span>$mem_form_values</span> <span>array</span> An array mapping all input names to their values.</li>\n		<li><span>$mem_form_thanks_form</span> <span>string</span> Contains the message that will be shown to the user after a successful submission. Either the &#8220;thanks_form&#8221; or the &#8220;thanks&#8221; attribute. A plugin can modify this value or return a string to over</li>\n	</ul>\n\n	<h2>Plugin Events</h2>\n\n	<h3>mem_form.defaults</h3>\n\n	<p>Allows a plugin to alter the default values for a form prior to being displayed.</p>\n\n	<h3>mem_form.display</h3>\n\n	<p>Allows a plugin to insert additional html in the rendered html form tag.</p>\n\n	<h3>mem_form.submit</h3>\n\n	<p>Allows a plugin to act upon a successful form submission.</p>\n\n	<h3>mem_form.spam</h3>\n\n	<p>Allows a plugin to test a submission as spam. The function get_mem_form_evaluator() returns the evaluator.</p>\n\n	<h3>mem_form.store_value</h3>\n\n	<p>On submit, this event is called for each field that passed the builtin checks and was just stored in to the global variables. The callback step is the field name. This callback can be used for custom field validation. If the value is invalid, return <span class=\"caps\">FALSE</span>. Warning: This event is called for each field even if a previously checked field has failed.</p>\n\n	<h3>mem_form.validate</h3>\n\n	<p>This event is called on form submit, after the individual fields are parsed and validated. This event is not called if there are any errors after the fields are validated. Any multi-field or form specific validation should happen here. Use mem_form_error() to set any validation error messages to prevent a successful post.</p>','\n\n$mem_glz_custom_fields_plugin = load_plugin(\'glz_custom_fields\');\n\n// needed for MLP\ndefine( \'MEM_FORM_PREFIX\' , \'mem_form\' );\n\nglobal $mem_form_lang;\n\nif (!is_array($mem_form_lang))\n{\n	$mem_form_lang = array(\n		\'error_file_extension\'	=> \'File upload failed for field {label}.\',\n		\'error_file_failed\'	=> \'Failed to upload file for field {label}.\',\n		\'error_file_size\'	=> \'Failed to upload File for field {label}. File is too large.\',\n		\'field_missing\'	=> \'The field {label} is required.\',\n		\'form_expired\'	=>	\'The form has expired.\',\n		\'form_misconfigured\'	=> \'The mem_form is misconfigured. You must specify the \"form\" attribute.\',\n		\'form_sorry\'	=> \'The form is currently unavailable.\',\n		\'form_used\'	=>	\'This form has already been used to submit.\',\n		\'general_inquiry\'	=> \'\',\n		\'invalid_email\'	=> \'The email address {email} is invalid.\',\n		\'invalid_host\'	=> \'The host {domain} is invalid.\',\n		\'invalid_utf8\'	=> \'Invalid UTF8 string for field {label}.\',\n		\'invalid_value\'	=> \'The value \"{value}\" is invalid for the input field {label}.\',\n		\'invalid_format\'	=>	\'The input field {label} must match the format \"{example}\".\',\n		\'invalid_too_many_selected\'	=> \'The input field {label} only allows {count} selected {plural}.\',\n		\'item\'	=> \'item\',\n		\'items\'	=> \'items\',\n		\'max_warning\'	=> \'The input field {label} must be smaller than {max} characters long.\',\n		\'min_warning\'	=> \'The input field {label} must be at least {min} characters long.\',\n		\'refresh\'	=> \'Refresh\',\n		\'spam\'	=> \'Your submission was blocked by a spam filter.\',\n		\'submitted_thanks\'	=>	\'You have successfully submitted the form. Thank you.\',\n	);\n}\n\nregister_callback( \'mem_form_enumerate_strings\' , \'l10n.enumerate_strings\' );\nfunction mem_form_enumerate_strings($event , $step=\'\' , $pre=0)\n{\n	global $mem_form_lang;\n	$r = array	(\n				\'owner\'		=> \'mem_form\',			#	Change to your plugin\'s name\n				\'prefix\'	=> MEM_FORM_PREFIX,		#	Its unique string prefix\n				\'lang\'		=> \'en-gb\',				#	The language of the initial strings.\n				\'event\'		=> \'public\',			#	public/admin/common = which interface the strings will be loaded into\n				\'strings\'	=> $mem_form_lang,		#	The strings themselves.\n				);\n	return $r;\n}\n\n\nfunction mem_form_gTxt($what,$args = array())\n{\n	global $mem_form_lang, $textarray;\n\n	$key = strtolower( MEM_FORM_PREFIX . \'-\' . $what );\n\n	if (isset($textarray[$key]))\n	{\n		$str = $textarray[$key];\n	}\n	else\n	{\n		$key = strtolower($what);\n\n		if (isset($mem_form_lang[$key]))\n			$str = $mem_form_lang[$key];\n		elseif (isset($textarray[$key]))\n			$str = $textarray[$key];\n		else\n			$str = $what;\n	}\n\n	if( !empty($args) )\n		$str = strtr( $str , $args );\n\n	return $str;\n}\n\n\nfunction mem_form($atts, $thing=\'\', $default=false)\n{\n	global $sitename, $prefs, $file_max_upload_size, $mem_form_error, $mem_form_submit,\n		$mem_form, $mem_form_labels, $mem_form_values,\n		$mem_form_default, $mem_form_type, $mem_form_thanks_form,\n		$mem_glz_custom_fields_plugin;\n\n	extract(mem_form_lAtts(array(\n		\'form\'		=> \'\',\n		\'thanks_form\'	=> \'\',\n		\'thanks\'	=> graf(mem_form_gTxt(\'submitted_thanks\')),\n		\'label\'		=> \'\',\n		\'type\'		=> \'\',\n		\'redirect\'	=> \'\',\n		\'redirect_form\'	=> \'\',\n		\'class\'		=> \'memForm\',\n		\'enctype\'	=> \'\',\n		\'file_accept\'	=> \'\',\n		\'max_file_size\'	=> $file_max_upload_size,\n		\'form_expired_msg\' => mem_form_gTxt(\'form_expired\'),\n		\'show_error\'	=> 1,\n		\'show_input\'	=> 1,\n	), $atts));\n\n	if (empty($type) or (empty($form) && empty($thing))) {\n		trigger_error(\'Argument not specified for mem_form tag\', E_USER_WARNING);\n\n		return \'\';\n	}\n	$out = \'\';\n\n	// init error structure\n	mem_form_error();\n\n	$mem_form_type = $type;\n\n	$mem_form_default = is_array($default) ? $default : array();\n	callback_event(\'mem_form.defaults\');\n\n	unset($atts[\'show_error\'], $atts[\'show_input\']);\n	$mem_form_id = md5(serialize($atts).preg_replace(\'/[\\t\\s\\r\\n]/\',\'\',$thing));\n	$mem_form_submit = (ps(\'mem_form_id\') == $mem_form_id);\n\n	$nonce   = doSlash(ps(\'mem_form_nonce\'));\n	$renonce = false;\n\n	if ($mem_form_submit) {\n		safe_delete(\'txp_discuss_nonce\', \'issue_time < date_sub(now(), interval 10 minute)\');\n		if ($rs = safe_row(\'used\', \'txp_discuss_nonce\', \"nonce = \'$nonce\'\"))\n		{\n			if ($rs[\'used\'])\n			{\n				unset($mem_form_error);\n				mem_form_error(mem_form_gTxt(\'form_used\'));\n				$renonce = true;\n\n				$_POST[\'mem_form_submit\'] = TRUE;\n				$_POST[\'mem_form_id\'] = $mem_form_id;\n				$_POST[\'mem_form_nonce\'] = $nonce;\n			}\n		}\n		else\n		{\n			mem_form_error($form_expired_msg);\n			$renonce = true;\n		}\n	}\n\n	if ($mem_form_submit and $nonce and !$renonce)\n	{\n		$mem_form_nonce = $nonce;\n	}\n\n	elseif (!$show_error or $show_input)\n	{\n		$mem_form_nonce = md5(uniqid(rand(), true));\n		safe_insert(\'txp_discuss_nonce\', \"issue_time = now(), nonce = \'$mem_form_nonce\'\");\n	}\n\n	$form = ($form) ? fetch_form($form) : $thing;\n	$form = parse($form);\n\n	if ($mem_form_submit && empty($mem_form_error))\n	{\n		// let plugins validate after individual fields are validated\n		callback_event(\'mem_form.validate\');\n	}\n\n	if (!$mem_form_submit) {\n	  # don\'t show errors or send mail\n	}\n	elseif (mem_form_error())\n	{\n		if ($show_error or !$show_input)\n		{\n			$out .= mem_form_display_error();\n\n			if (!$show_input) return $out;\n		}\n	}\n	elseif ($show_input and is_array($mem_form))\n	{\n		if ($mem_glz_custom_fields_plugin) {\n			// prep the values\n			glz_custom_fields_before_save();\n		}\n\n		callback_event(\'mem_form.spam\');\n\n		/// load and check spam plugins/\n		$evaluator =& get_mem_form_evaluator();\n		$is_spam = $evaluator->is_spam();\n\n		if ($is_spam) {\n			return mem_form_gTxt(\'spam\');\n		}\n\n		$mem_form_thanks_form = ($thanks_form ? fetch_form($thanks_form) : $thanks);\n\n		safe_update(\'txp_discuss_nonce\', \"used = \'1\', issue_time = now()\", \"nonce = \'$nonce\'\");\n\n		$result = callback_event(\'mem_form.submit\');\n\n		if (mem_form_error()) {\n			$out .= mem_form_display_error();\n			$redirect = false;\n		}\n\n		$thanks_form = $mem_form_thanks_form;\n		unset($mem_form_thanks_form);\n\n		if (!empty($result))\n			return $result;\n\n		if (mem_form_error() and $show_input)\n		{\n			// no-op, reshow form with errors\n		}\n		else if ($redirect)\n		{\n			$_POST = array();\n\n			while (@ob_end_clean());\n			$uri = hu.ltrim($redirect,\'/\');\n			if (empty($_SERVER[\'FCGI_ROLE\']) and empty($_ENV[\'FCGI_ROLE\']))\n			{\n				txp_status_header(\'303 See Other\');\n				header(\'Location: \'.$uri);\n				header(\'Connection: close\');\n				header(\'Content-Length: 0\');\n			}\n			else\n			{\n				$uri = htmlspecialchars($uri);\n				$refresh = mem_form_gTxt(\'refresh\');\n\n				if (!empty($redirect_form))\n				{\n					$redirect_form = fetch_form($redirect_form);\n\n					echo str_replace(\'{uri}\', $uri, $redirect_form);\n				}\n\n				if (empty($redirect_form))\n				{\n					echo <<<END\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n	<title>$sitename</title>\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n	<meta http-equiv=\"refresh\" content=\"0;url=$uri\" />\n</head>\n<body>\n<a href=\"$uri\">$refresh</a>\n</body>\n</html>\nEND;\n				}\n			}\n			exit;\n		}\n		else {\n			return \'<div class=\"memThanks\" id=\"mem\'.$mem_form_id.\'\">\' .\n				$thanks_form . \'</div>\';\n		}\n	}\n\n	if ($show_input)\n	{\n		$file_accept = (!empty($file_accept) ? \' accept=\"\'.$file_accept.\'\"\' : \'\');\n\n		$class = htmlspecialchars($class);\n\n		$enctype = !empty($enctype) ? \' enctype=\"\'.$enctype.\'\"\' : \'\';\n\n		return \'<form method=\"post\"\'.((!$show_error and $mem_form_error) ? \'\' : \' id=\"mem\'.$mem_form_id.\'\"\').\' class=\"\'.$class.\'\" action=\"\'.htmlspecialchars(serverSet(\'REQUEST_URI\')).\'#mem\'.$mem_form_id.\'\"\'.$file_accept.$enctype.\'>\'.\n			( $label ? n.\'<fieldset>\' : n.\'<div>\' ).\n			( $label ? n.\'<legend>\'.htmlspecialchars($label).\'</legend>\' : \'\' ).\n			$out.\n			n.\'<input type=\"hidden\" name=\"mem_form_nonce\" value=\"\'.$mem_form_nonce.\'\" />\'.\n			n.\'<input type=\"hidden\" name=\"mem_form_id\" value=\"\'.$mem_form_id.\'\" />\'.\n			(!empty($max_file_size) ? n.\'<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"\'.$max_file_size.\'\" />\' : \'\' ).\n			callback_event(\'mem_form.display\',\'\',1).\n			$form.\n			callback_event(\'mem_form.display\').\n			( $label ? (n.\'</fieldset>\') : (n.\'</div>\') ).\n			n.\'</form>\';\n	}\n\n	return \'\';\n}\n\nfunction mem_form_text($atts)\n{\n	global $mem_form_error, $mem_form_submit, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'break\'		=> br,\n		\'default\'	=> \'\',\n		\'isError\'	=> \'\',\n		\'label\'		=> mem_form_gTxt(\'text\'),\n		\'max\'		=> 100,\n		\'min\'		=> 0,\n		\'name\'		=> \'\',\n		\'class\'		=> \'memText\',\n		\'required\'	=> 1,\n		\'size\'		=> \'\',\n		\'password\'	=> 0,\n		\'format\'	=> \'\',\n		\'example\'	=> \'\',\n		\'escape_value\'	=> 1\n	), $atts));\n\n	$min = intval($min);\n	$max = intval($max);\n	$size = intval($size);\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	if ($mem_form_submit)\n	{\n		$value = trim(ps($name));\n		$utf8len = preg_match_all(\"/./su\", $value, $utf8ar);\n		$hlabel = empty($label) ? htmlspecialchars($name) : htmlspecialchars($label);\n\n\n		if (strlen($value) == 0 && $required)\n		{\n			$mem_form_error[] = mem_form_gTxt(\'field_missing\', array(\'{label}\'=>$hlabel));\n			$isError = true;\n		}\n		elseif ($required && !empty($format) && !preg_match($format, $value))\n		{\n			//echo \"format=$format<br />value=$value<br />\";\n			$mem_form_error[] = mem_form_gTxt(\'invalid_format\', array(\'{label}\'=>$hlabel, \'{example}\'=> htmlspecialchars($example)));\n			$isError = true;\n		}\n		elseif (strlen($value))\n		{\n			if (!$utf8len)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'invalid_utf8\', array(\'{label}\'=>$hlabel));\n				$isError = true;\n			}\n\n			elseif ($min and $utf8len < $min)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'min_warning\', array(\'{label}\'=>$hlabel, \'{min}\'=>$min));\n				$isError = true;\n			}\n\n			elseif ($max and $utf8len > $max)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'max_warning\', array(\'{label}\'=>$hlabel, \'{max}\'=>$max));\n				$isError = true;\n			}\n\n			else\n			{\n				$isError = false === mem_form_store($name, $label, $value);\n			}\n		}\n	}\n\n	else\n	{\n		if (isset($mem_form_default[$name]))\n			$value = $mem_form_default[$name];\n		else\n			$value = $default;\n	}\n\n	$size = ($size) ? \' size=\"\'.$size.\'\"\' : \'\';\n	$maxlength = ($max) ? \' maxlength=\"\'.$max.\'\"\' : \'\';\n\n	$isError = $isError ? \"errorElement\" : \'\';\n\n	$memRequired = $required ? \'memRequired\' : \'\';\n	$class = htmlspecialchars($class);\n\n	if ($escape_value)\n	{\n		$value = htmlspecialchars($value);\n	}\n\n    return \'<label for=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break.\n		\'<input type=\"\'.($password ? \'password\' : \'text\').\'\" id=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\'\" name=\"\'.$name.\'\" value=\"\'.$value.\'\"\'.$size.$maxlength.\' />\';\n}\n\n\nfunction mem_form_file($atts)\n{\n	global $mem_form_submit, $mem_form_error, $mem_form_default, $file_max_upload_size, $tempdir;\n\n	extract(mem_form_lAtts(array(\n		\'break\'		=> br,\n		\'isError\'	=> \'\',\n		\'label\'		=> mem_form_gTxt(\'file\'),\n		\'name\'		=> \'\',\n		\'class\'		=> \'memFile\',\n		\'size\'		=> \'\',\n		\'accept\'	=> \'\',\n		\'no_replace\' => 1,\n		\'max_file_size\'	=> $file_max_upload_size,\n		\'required\'	=> 1,\n		\'default\'	=> FALSE,\n	), $atts));\n\n	$fname = ps(\'file_\'.$name);\n	$frealname = ps(\'file_info_\'.$name.\'_name\');\n	$ftype = ps(\'file_info_\'.$name.\'_type\');\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	$out = \'\';\n\n	if ($mem_form_submit)\n	{\n		if (!empty($fname))\n		{\n			// see if user uploaded a different file to replace already uploaded\n			if (isset($_FILES[$name]) && !empty($_FILES[$name][\'tmp_name\']))\n			{\n				// unlink last temp file\n				if (file_exists($fname) && substr_compare($fname, $tempdir, 0, strlen($tempdir), 1)==0)\n					unlink($fname);\n\n				$fname = \'\';\n			}\n			else\n			{\n				// pass through already uploaded filename\n				mem_form_store($name, $label, array(\'tmp_name\'=>$fname, \'name\' => $frealname, \'type\' => $ftype));\n				$out .= \"<input type=\'hidden\' name=\'file_\".$name.\"\' value=\'\".htmlspecialchars($fname).\"\' />\"\n						. \"<input type=\'hidden\' name=\'file_info_\".$name.\"_name\' value=\'\".htmlspecialchars($frealname).\"\' />\"\n						. \"<input type=\'hidden\' name=\'file_info_\".$name.\"_type\' value=\'\".htmlspecialchars($ftype).\"\' />\";\n			}\n		}\n\n		if (empty($fname))\n		{\n			$hlabel = empty($label) ? htmlspecialchars($name) : htmlspecialchars($label);\n\n			$fname = $_FILES[$name][\'tmp_name\'];\n			$frealname = $_FILES[$name][\'name\'];\n			$ftype = $_FILES[$name][\'type\'];\n			$err = 0;\n\n			switch ($_FILES[$name][\'error\']) {\n				case UPLOAD_ERR_OK:\n					if (is_uploaded_file($fname) and $max_file_size >= filesize($fname))\n						mem_form_store($name, $label, $_FILES[$name]);\n					elseif (!is_uploaded_file($fname)) {\n						if ($required) {\n							$mem_form_error[] = mem_form_gTxt(\'error_file_failed\', array(\'{label}\'=>$hlabel));\n							$err = 1;\n						}\n					}\n					else {\n						$mem_form_error[] = mem_form_gTxt(\'error_file_size\', array(\'{label}\'=>$hlabel));\n						$err = 1;\n					}\n					break;\n\n				case UPLOAD_ERR_NO_FILE:\n					if ($required) {\n						$mem_form_error[] = mem_form_gTxt(\'field_missing\', array(\'{label}\'=>$hlabel));\n						$err = 1;\n					}\n					break;\n\n				case UPLOAD_ERR_EXTENSION:\n					$mem_form_error[] = mem_form_gTxt(\'error_file_extension\', array(\'{label}\'=>$hlabel));\n					$err = 1;\n					break;\n\n				case UPLOAD_ERR_INI_SIZE:\n				case UPLOAD_ERR_FORM_SIZE:\n					$mem_form_error[] = mem_form_gTxt(\'error_file_size\', array(\'{label}\'=>$hlabel));\n					$err = 1;\n					break;\n\n				default:\n					$mem_form_error[] = mem_form_gTxt(\'error_file_failed\', array(\'{label}\'=>$hlabel));\n					$err = 1;\n					break;\n			}\n\n			if (!$err)\n			{\n				// store as a txp tmp file to be used later\n				$fname = get_uploaded_file($fname);\n				$err = false === mem_form_store($name, $label, array(\'tmp_name\'=>$fname, \'name\' => $frealname, \'type\' => $ftype));\n				if ($err)\n				{\n					// clean up file\n					@unlink($fname);\n				}\n				else\n				{\n					$out .= \"<input type=\'hidden\' name=\'file_\".$name.\"\' value=\'\".htmlspecialchars($fname).\"\' />\"\n							. \"<input type=\'hidden\' name=\'file_info_\".$name.\"_name\' value=\'\".htmlspecialchars($_FILES[$name][\'name\']).\"\' />\"\n							. \"<input type=\'hidden\' name=\'file_info_\".$name.\"_type\' value=\'\".htmlspecialchars($_FILES[$name][\'type\']).\"\' />\";\n				}\n			}\n\n			$isError = $err ? \'errorElement\' : \'\';\n		}\n	}\n	else\n	{\n		if (isset($mem_form_default[$name]))\n			$value = $mem_form_default[$name];\n		else if (is_array($default))\n			$value = $default;\n\n		if (is_array(@$value))\n		{\n			$fname = @$value[\'tmp_name\'];\n			$frealname = @$value[\'name\'];\n			$ftype = @$value[\'type\'];\n			$out .= \"<input type=\'hidden\' name=\'file_\".$name.\"\' value=\'\".htmlspecialchars($fname).\"\' />\"\n				. \"<input type=\'hidden\' name=\'file_info_\".$name.\"_name\' value=\'\".htmlspecialchars($frealname).\"\' />\"\n				. \"<input type=\'hidden\' name=\'file_info_\".$name.\"_type\' value=\'\".htmlspecialchars($ftype).\"\' />\";\n		}\n	}\n\n	$memRequired = $required ? \'memRequired\' : \'\';\n	$class = htmlspecialchars($class);\n\n	$size = ($size) ? \' size=\"\'.$size.\'\"\' : \'\';\n	$accept = (!empty($accept) ? \' accept=\"\'.$accept.\'\"\' : \'\');\n\n\n	$field_out = \'<label for=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break;\n\n	if (!empty($frealname) && $no_replace)\n	{\n		$field_out .= \'<div id=\"\'.$name.\'\">\'.htmlspecialchars($frealname) . \' <span id=\"\'.$name.\'_ftype\">(\'. htmlspecialchars($ftype).\')</span></div>\';\n	}\n	else\n	{\n		$field_out .= \'<input type=\"file\" id=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\'\" name=\"\'.$name.\'\"\' .$size.\' />\';\n	}\n\n  return $out.$field_out;\n}\n\nfunction mem_form_textarea($atts, $thing=\'\')\n{\n	global $mem_form_error, $mem_form_submit, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'break\'		=> br,\n		\'cols\'		=> 58,\n		\'default\'	=> \'\',\n		\'isError\'	=> \'\',\n		\'label\'		=> mem_form_gTxt(\'textarea\'),\n		\'max\'		=> 10000,\n		\'min\'		=> 0,\n		\'name\'		=> \'\',\n		\'class\'		=> \'memTextarea\',\n		\'required\'	=> 1,\n		\'rows\'		=> 8,\n		\'escape_value\'	=> 1\n	), $atts));\n\n	$min = intval($min);\n	$max = intval($max);\n	$cols = intval($cols);\n	$rows = intval($rows);\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	if ($mem_form_submit)\n	{\n		$value = preg_replace(\'/^\\s*[\\r\\n]/\', \'\', rtrim(ps($name)));\n		$utf8len = preg_match_all(\"/./su\", ltrim($value), $utf8ar);\n		$hlabel = htmlspecialchars($label);\n\n		if (strlen(ltrim($value)))\n		{\n			if (!$utf8len)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'invalid_utf8\', array(\'{label}\'=>$hlabel));\n				$isError = true;\n			}\n\n			elseif ($min and $utf8len < $min)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'min_warning\', array(\'{label}\'=>$hlabel, \'{min}\'=>$min));\n				$isError = true;\n			}\n\n			elseif ($max and $utf8len > $max)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'max_warning\', array(\'{label}\'=>$hlabel, \'{max}\'=>$max));\n				$isError = true;\n			}\n\n			else\n			{\n				$isError = false === mem_form_store($name, $label, $value);\n			}\n		}\n\n		elseif ($required)\n		{\n			$mem_form_error[] = mem_form_gTxt(\'field_missing\', array(\'{label}\'=>$hlabel));\n			$isError = true;\n		}\n	}\n\n	else\n	{\n		if (isset($mem_form_default[$name]))\n			$value = $mem_form_default[$name];\n		else if (!empty($default))\n			$value = $default;\n		else\n			$value = parse($thing);\n	}\n\n	$isError = $isError ? \'errorElement\' : \'\';\n	$memRequired = $required ? \'memRequired\' : \'\';\n	$class = htmlspecialchars($class);\n\n	if ($escape_value)\n	{\n		$value = htmlspecialchars($value);\n	}\n\n	return \'<label for=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break.\n		\'<textarea id=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\'\" name=\"\'.$name.\'\" cols=\"\'.$cols.\'\" rows=\"\'.$rows.\'\">\'.$value.\'</textarea>\';\n}\n\nfunction mem_form_email($atts)\n{\n	global $mem_form_error, $mem_form_submit, $mem_form_from, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'default\'	=> \'\',\n		\'isError\'	=> \'\',\n		\'label\'		=> mem_form_gTxt(\'email\'),\n		\'max\'		=> 100,\n		\'min\'		=> 0,\n		\'name\'		=> \'\',\n		\'required\'	=> 1,\n		\'break\'		=> br,\n		\'size\'		=> \'\',\n		\'class\'		=> \'memEmail\',\n	), $atts));\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	if ($mem_form_submit)\n	{\n		$email = trim(ps($name));\n\n		if (strlen($email))\n		{\n			if (!is_valid_email($email))\n			{\n				$mem_form_error[] = mem_form_gTxt(\'invalid_email\', array(\'{email}\'=>htmlspecialchars($email)));\n				$isError = true;\n			}\n			else\n			{\n				preg_match(\"/@(.+)$/\", $email, $match);\n				$domain = $match[1];\n\n				if (is_callable(\'checkdnsrr\') and checkdnsrr(\'textpattern.com.\',\'A\') and !checkdnsrr($domain.\'.\',\'MX\') and !checkdnsrr($domain.\'.\',\'A\'))\n				{\n					$mem_form_error[] = mem_form_gTxt(\'invalid_host\', array(\'{domain}\'=>htmlspecialchars($domain)));\n					$isError = true;\n				}\n				else\n				{\n					$mem_form_from = $email;\n				}\n			}\n		}\n	}\n	else\n	{\n		if (isset($mem_form_default[$name]))\n			$email = $mem_form_default[$name];\n		else\n			$email = $default;\n	}\n\n	return mem_form_text(array(\n		\'default\'	=> $email,\n		\'isError\'	=> $isError,\n		\'label\'		=> $label,\n		\'max\'		=> $max,\n		\'min\'		=> $min,\n		\'name\'		=> $name,\n		\'required\'	=> $required,\n		\'break\'		=> $break,\n		\'size\'		=> $size,\n		\'class\'		=> $class,\n	));\n}\n\nfunction mem_form_select_section($atts)\n{\n	extract(mem_form_lAtts(array(\n		\'exclude\'	=> \'\',\n		\'sort\'		=> \'name ASC\',\n		\'delimiter\'	=> \',\',\n	),$atts,false));\n\n	if (!empty($exclude)) {\n		$exclusion = array_map(\'trim\', explode($delimiter, preg_replace(\'/[\\r\\n\\t\\s]+/\', \' \',$exclude)));\n		$exclusion = array_map(\'strtolower\', $exclusion);\n\n		if (count($exclusion))\n			$exclusion = join($delimiter, quote_list($exclusion));\n	}\n\n	$where = empty($exclusion) ? \'1=1\' : \'LOWER(name) NOT IN (\'.$exclusion.\')\';\n\n	$sort = empty($sort) ? \'\' : \' ORDER BY \'. doSlash($sort);\n\n	$rs = safe_rows(\'name, title\',\'txp_section\',$where . $sort);\n\n	$items = array();\n	$values = array();\n\n	if ($rs) {\n		foreach($rs as $r) {\n			$items[] = $r[\'title\'];\n			$values[] = $r[\'name\'];\n		}\n	}\n\n	unset($atts[\'exclude\'], $atts[\'sort\']);\n\n	$atts[\'items\'] = join($delimiter, $items);\n	$atts[\'values\'] = join($delimiter, $values);\n\n	return mem_form_select($atts);\n}\n\nfunction mem_form_select_category($atts)\n{\n	extract(mem_form_lAtts(array(\n		\'root\'	=> \'root\',\n		\'exclude\'	=> \'\',\n		\'delimiter\'	=> \',\',\n		\'type\'	=> \'article\'\n	),$atts,false));\n\n	$rs = getTree($root, $type);\n\n	if (!empty($exclude)) {\n		$exclusion = array_map(\'trim\', explode($delimiter, preg_replace(\'/[\\r\\n\\t\\s]+/\', \' \',$exclude)));\n		$exclusion = array_map(\'strtolower\', $exclusion);\n	}\n	else\n		$exclusion = array();\n\n	$items = array();\n	$values = array();\n\n	if ($rs) {\n		foreach ($rs as $cat) {\n			if (count($exclusion) && in_array(strtolower($cat[\'name\']), $exclusion))\n				continue;\n\n			$items[] = $cat[\'title\'];\n			$values[] = $cat[\'name\'];\n		}\n	}\n\n	unset($atts[\'root\'], $atts[\'type\']);\n\n	$atts[\'items\'] = join($delimiter, $items);\n	$atts[\'values\'] = join($delimiter, $values);\n\n	return mem_form_select($atts);\n}\n\nfunction mem_form_select($atts)\n{\n	global $mem_form_error, $mem_form_submit, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'name\'		=> \'\',\n		\'break\'		=> \' \',\n		\'delimiter\'	=> \',\',\n		\'isError\'	=> \'\',\n		\'label\'		=> mem_form_gTxt(\'option\'),\n		\'items\'		=> mem_form_gTxt(\'general_inquiry\'),\n		\'values\'	=> \'\',\n		\'first\'		=> FALSE,\n		\'required\'	=> 1,\n		\'select_limit\'	=> FALSE,\n		\'as_csv\'	=> FALSE,\n		\'selected\'	=> \'\',\n		\'class\'		=> \'memSelect\',\n	), $atts, false));\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	if (!empty($items) && $items[0] == \'<\') $items = parse($items);\n	if (!empty($values) && $values[0] == \'<\') $values = parse($values);\n\n	if ($first !== FALSE) {\n		$items = $first.$delimiter.$atts[\'items\'];\n		$values = $first.$delimiter.$atts[\'values\'];\n	}\n\n	$select_limit = empty($select_limit) ? 1 : assert_int($select_limit);\n\n	$items = array_map(\'trim\', explode($delimiter, preg_replace(\'/[\\r\\n\\t\\s]+/\', \' \',$items)));\n	$values = array_map(\'trim\', explode($delimiter, preg_replace(\'/[\\r\\n\\t\\s]+/\', \' \',$values)));\n	if ($select_limit > 1)\n	{\n		$selected = array_map(\'trim\', explode($delimiter, preg_replace(\'/[\\r\\n\\t\\s]+/\', \' \',$seelcted)));\n	}\n	else\n	{\n		$selected = array(trim($selected));\n	}\n\n	$use_values_array = (count($items) == count($values));\n\n	if ($mem_form_submit)\n	{\n		if (strpos($name, \'[]\'))\n		{\n			$value = ps(substr($name, 0, strlen($name)-2));\n\n			$selected = $value;\n\n			if ($as_csv)\n			{\n				$value = implode($delimiter, $value);\n			}\n		}\n		else\n		{\n			$value = trim(ps($name));\n\n			$selected = array($value);\n		}\n\n		if (!empty($selected))\n		{\n			if (count($selected) <= $select_limit)\n			{\n				foreach ($selected as $v)\n				{\n					$is_valid = ($use_values_array && in_array($v, $values)) or (!$use_values_array && in_array($v, $items));\n					if (!$is_valid)\n					{\n						$invalid_value = $v;\n						break;\n					}\n				}\n\n				if ($is_valid)\n				{\n					$isError = false === mem_form_store($name, $label, $value);\n				}\n				else\n				{\n					$mem_form_error[] = mem_form_gTxt(\'invalid_value\', array(\'{label}\'=> htmlspecialchars($label), \'{value}\'=> htmlspecialchars($invalid_value)));\n					$isError = true;\n				}\n			}\n			else\n			{\n				$mem_form_error[] = mem_form_gTxt(\'invalid_too_many_selected\', array(\n											\'{label}\'=> htmlspecialchars($label),\n											\'{count}\'=> $select_limit,\n											\'{plural}\'=> ($select_limit==1 ? mem_form_gTxt(\'item\') : mem_form_gTxt(\'items\'))\n										));\n				$isError = true;\n			}\n		}\n\n		elseif ($required)\n		{\n			$mem_form_error[] = mem_form_gTxt(\'field_missing\', array(\'{label}\'=> htmlspecialchars($label)));\n			$isError = true;\n		}\n	}\n	else if (isset($mem_form_default[$name]))\n	{\n		$selected = array($mem_form_default[$name]);\n	}\n\n	$out = \'\';\n\n	foreach ($items as $item)\n	{\n		$v = $use_values_array ? array_shift($values) : $item;\n\n		$sel = !empty($selected) && in_array($v, $selected);\n\n		$out .= n.t.\'<option\'.($use_values_array ? \' value=\"\'.$v.\'\"\' : \'\').($sel ? \' selected=\"selected\">\' : \'>\').\n				(strlen($item) ? htmlspecialchars($item) : \' \').\'</option>\';\n	}\n\n	$isError = $isError ? \'errorElement\' : \'\';\n	$memRequired = $required ? \'memRequired\' : \'\';\n	$class = htmlspecialchars($class);\n\n	$multiple = $select_limit > 1 ? \' multiple=\"multiple\"\' : \'\';\n\n	return \'<label for=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break.\n		n.\'<select id=\"\'.$name.\'\" name=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\'\"\' . $multiple . \'>\'.\n			$out.\n		n.\'</select>\';\n}\n\nfunction mem_form_checkbox($atts)\n{\n	global $mem_form_error, $mem_form_submit, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'break\'		=> \' \',\n		\'checked\'	=> 0,\n		\'isError\'	=> \'\',\n		\'label\'		=> mem_form_gTxt(\'checkbox\'),\n		\'name\'		=> \'\',\n		\'class\'		=> \'memCheckbox\',\n		\'required\'	=> 1\n	), $atts));\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	if ($mem_form_submit)\n	{\n		$value = (bool) ps($name);\n\n		if ($required and !$value)\n		{\n			$mem_form_error[] = mem_form_gTxt(\'field_missing\', array(\'{label}\'=> htmlspecialchars($label)));\n			$isError = true;\n		}\n\n		else\n		{\n			$isError = false === mem_form_store($name, $label, $value ? gTxt(\'yes\') : gTxt(\'no\'));\n		}\n	}\n\n	else {\n		if (isset($mem_form_default[$name]))\n			$value = $mem_form_default[$name];\n		else\n			$value = $checked;\n	}\n\n	$isError = $isError ? \'errorElement\' : \'\';\n	$memRequired = $required ? \'memRequired\' : \'\';\n	$class = htmlspecialchars($class);\n\n	return \'<input type=\"checkbox\" id=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\'\" name=\"\'.$name.\'\"\'.\n		($value ? \' checked=\"checked\"\' : \'\').\' />\'.$break.\n		\'<label for=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\';\n}\n\n\nfunction mem_form_serverinfo($atts)\n{\n	global $mem_form_submit;\n\n	extract(mem_form_lAtts(array(\n		\'label\'		=> \'\',\n		\'name\'		=> \'\'\n	), $atts));\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	if (strlen($name) and $mem_form_submit)\n	{\n		if (!$label) $label = $name;\n		mem_form_store($name, $label, serverSet($name));\n	}\n}\n\nfunction mem_form_secret($atts, $thing = \'\')\n{\n	global $mem_form_submit;\n\n	extract(mem_form_lAtts(array(\n		\'name\'	=> \'\',\n		\'label\'	=> mem_form_gTxt(\'secret\'),\n		\'value\'	=> \'\'\n	), $atts));\n\n\n	$name = mem_form_label2name($name ? $name : $label);\n\n	if ($mem_form_submit)\n	{\n		if ($thing)\n			$value = trim(parse($thing));\n		else\n			$value = trim(parse($value));\n\n		mem_form_store($name, $label, $value);\n	}\n\n	return \'\';\n}\n\nfunction mem_form_hidden($atts, $thing=\'\')\n{\n	global $mem_form_submit, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'name\'		=> \'\',\n		\'label\'		=> mem_form_gTxt(\'hidden\'),\n		\'value\'		=> \'\',\n		\'isError\'	=> \'\',\n		\'required\'	=> 1,\n		\'class\'		=> \'memHidden\',\n		\'escape_value\'	=> 1,\n	), $atts));\n\n	$name = mem_form_label2name($name ? $name : $label);\n\n	if ($mem_form_submit)\n	{\n		$value = preg_replace(\'/^\\s*[\\r\\n]/\', \'\', rtrim(ps($name)));\n		$utf8len = preg_match_all(\"/./su\", ltrim($value), $utf8ar);\n		$hlabel = htmlspecialchars($label);\n\n		if (strlen($value))\n		{\n			if (!$utf8len)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'invalid_utf8\', $hlabel);\n				$isError = true;\n			}\n			else\n			{\n				$isError = false === mem_form_store($name, $label, $value);\n			}\n		}\n	}\n	else\n	{\n		if (isset($mem_form_default[$name]))\n			$value = $mem_form_default[$name];\n		else if ($thing)\n			$value = trim(parse($thing));\n	}\n\n	$isError = $isError ? \'errorElement\' : \'\';\n	$memRequired = $required ? \'memRequired\' : \'\';\n\n	if ($escape_value)\n	{\n		$value = htmlspecialchars($value);\n	}\n\n	return \'<input type=\"hidden\" class=\"\'.$class.\' \'.$memRequired.$isError.\' \'.$name\n			. \'\" name=\"\'.$name.\'\" value=\"\'.$value.\'\" id=\"\'.$name.\'\" />\';\n}\n\nfunction mem_form_radio($atts)\n{\n	global $mem_form_error, $mem_form_submit, $mem_form_values, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'break\'		=> \' \',\n		\'checked\'	=> 0,\n		\'group\'		=> \'\',\n		\'label\'		=> mem_form_gTxt(\'option\'),\n		\'name\'		=> \'\',\n		\'class\'		=> \'memRadio\',\n		\'isError\'	=> \'\',\n		\'value\'		=> false\n	), $atts));\n\n	static $cur_name = \'\';\n	static $cur_group = \'\';\n\n	if (!$name and !$group and !$cur_name and !$cur_group) {\n		$cur_group = mem_form_gTxt(\'radio\');\n		$cur_name = $cur_group;\n	}\n	if ($group and !$name and $group != $cur_group) $name = $group;\n\n	if ($name) $cur_name = $name;\n	else $name = $cur_name;\n\n	if ($group) $cur_group = $group;\n	else $group = $cur_group;\n\n	$id   = \'q\'.md5($name.\'=>\'.$label);\n	$name = mem_form_label2name($name);\n\n	$value = $value === false ? $id : $value;\n\n	if ($mem_form_submit)\n	{\n		$is_checked = (ps($name) == $value);\n\n		if ($is_checked or $checked and !isset($mem_form_values[$name]))\n		{\n			$isError = false === mem_form_store($name, $group, $value);\n		}\n	}\n\n	else\n	{\n		if (isset($mem_form_default[$name]))\n			$is_checked = $mem_form_default[$name] == $value;\n		else\n			$is_checked = $checked;\n	}\n\n	$class = htmlspecialchars($class);\n\n	$isError = $isError ? \' errorElement\' : \'\';\n\n	return \'<input value=\"\'.$value.\'\" type=\"radio\" id=\"\'.$id.\'\" class=\"\'.$class.\' \'.$name.$isError.\'\" name=\"\'.$name.\'\"\'.\n		( $is_checked ? \' checked=\"checked\" />\' : \' />\').$break.\n		\'<label for=\"\'.$id.\'\" class=\"\'.$class.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\';\n}\n\nfunction mem_form_submit($atts, $thing=\'\')\n{\n	global $mem_form_submit;\n\n	extract(mem_form_lAtts(array(\n		\'button\'	=> 0,\n		\'label\'		=> mem_form_gTxt(\'save\'),\n		\'name\'		=> \'mem_form_submit\',\n		\'class\'		=> \'memSubmit\',\n	), $atts));\n\n	$label = htmlspecialchars($label);\n	$name = htmlspecialchars($name);\n	$class = htmlspecialchars($class);\n\n	if ($mem_form_submit)\n	{\n		$value = ps($name);\n\n		if (!empty($value) && $value == $label)\n		{\n			// save the clicked button value\n			mem_form_store($name, $label, $value);\n		}\n	}\n\n	if ($button or strlen($thing))\n	{\n		return \'<button type=\"submit\" class=\"\'.$class.\'\" name=\"\'.$name.\'\" value=\"\'.$label.\'\">\'.($thing ? trim(parse($thing)) : $label).\'</button>\';\n	}\n	else\n	{\n		return \'<input type=\"submit\" class=\"\'.$class.\'\" name=\"\'.$name.\'\" value=\"\'.$label.\'\" />\';\n	}\n}\n\nfunction mem_form_lAtts($arr, $atts, $warn=true)\n{\n	foreach(array(\'button\', \'checked\', \'required\', \'show_input\', \'show_error\') as $key)\n	{\n		if (isset($atts[$key]))\n		{\n			$atts[$key] = ($atts[$key] === \'yes\' or intval($atts[$key])) ? 1 : 0;\n		}\n	}\n	if (isset($atts[\'break\']) and $atts[\'break\'] == \'br\') $atts[\'break\'] = \'<br />\';\n	return lAtts($arr, $atts, $warn);\n}\n\nfunction mem_form_label2name($label)\n{\n	$label = trim($label);\n	if (strlen($label) == 0) return \'invalid\';\n	if (strlen($label) <= 32 and preg_match(\'/^[a-zA-Z][A-Za-z0-9:_-]*$/\', $label)) return $label;\n	else return \'q\'.md5($label);\n}\n\nfunction mem_form_store($name, $label, $value)\n{\n	global $mem_form, $mem_form_labels, $mem_form_values;\n\n	$mem_form[$label] = $value;\n	$mem_form_labels[$name] = $label;\n	$mem_form_values[$name] = $value;\n\n	$is_valid = false !== callback_event(\'mem_form.store_value\', $name);\n\n	// invalid data, unstore it\n	if (!$is_valid)\n		mem_form_remove($name);\n\n	return $is_valid;\n}\n\nfunction mem_form_remove($name)\n{\n	global $mem_form, $mem_form_labels, $mem_form_values;\n\n	$label = $mem_form_labels[$name];\n	unset($mem_form_labels[$name], $mem_form[$label], $mem_form_values[$name]);\n}\n\nfunction mem_form_display_error()\n{\n	global $mem_form_error;\n\n	$out = n.\'<ul class=\"memError\">\';\n\n	foreach (array_unique($mem_form_error) as $error)\n	{\n		$out .= n.t.\'<li>\'.$error.\'</li>\';\n	}\n\n	$out .= n.\'</ul>\';\n\n	return $out;\n}\n\nfunction mem_form_value($atts, $thing)\n{\n	global $mem_form_submit, $mem_form_values, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'name\'		=> \'\',\n		\'wraptag\'	=> \'\',\n		\'class\'		=> \'\',\n		\'attributes\'=> \'\',\n		\'id\'		=> \'\',\n	), $atts));\n\n	$out = \'\';\n\n	if ($mem_form_submit)\n	{\n		if (isset($mem_form_values[$name]))\n			$out = $mem_form_values[$name];\n	}\n	else {\n		if (isset($mem_form_default[$name]))\n			$out = $mem_form_default[$name];\n	}\n\n	return doTag($out, $wraptag, $class, $attributes, $id);\n}\n\nfunction mem_form_error($err=NULL)\n{\n	global $mem_form_error;\n\n	if (!is_array($mem_form_error))\n		$mem_form_error = array();\n\n	if ($err == NULL)\n		return !empty($mem_form_error) ? $mem_form_error : false;\n\n	$mem_form_error[] = $err;\n}\n\nfunction mem_form_default($key,$val=NULL)\n{\n	global $mem_form_default;\n\n	if (is_array($key))\n	{\n		foreach ($key as $k=>$v)\n		{\n			mem_form_default($k,$v);\n		}\n		return;\n	}\n\n	$name = mem_form_label2name($key);\n\n	if ($val == NULL)\n	{\n		return (isset($mem_form_default[$name]) ? $mem_form_default[$name] : false);\n	}\n\n	$mem_form_default[$name] = $val;\n\n	return $val;\n}\n\n\n\nfunction mem_form_mail($from,$reply,$to,$subject,$msg, $content_type=\'text/plain\')\n{\n	global $prefs;\n\n	if (!is_callable(\'mail\'))\n		return false;\n\n	$to = mem_form_strip($to);\n	$from = mem_form_strip($from);\n	$reply = mem_form_strip($reply);\n	$subject = mem_form_strip($subject);\n	$msg = mem_form_strip($msg,FALSE);\n\n	if ($prefs[\'override_emailcharset\'] and is_callable(\'utf8_decode\')) {\n		$charset = \'ISO-8859-1\';\n		$subject = utf8_decode($subject);\n		$msg     = utf8_decode($msg);\n	}\n	else {\n		$charset = \'UTF-8\';\n	}\n\n	$subject = mem_form_mailheader($subject,\'text\');\n\n	$sep = !is_windows() ? \"\\n\" : \"\\r\\n\";\n\n	$headers = \'From: \'.$from.\n		($reply ? ($sep.\'Reply-To: \'.$reply) : \'\').\n		$sep.\'X-Mailer: Textpattern (mem_form)\'.\n		$sep.\'X-Originating-IP: \'.mem_form_strip((!empty($_SERVER[\'HTTP_X_FORWARDED_FOR\']) ? $_SERVER[\'HTTP_X_FORWARDED_FOR\'].\' via \' : \'\').$_SERVER[\'REMOTE_ADDR\']).\n		$sep.\'Content-Transfer-Encoding: 8bit\'.\n		$sep.\'Content-Type: \'.$content_type.\'; charset=\"\'.$charset.\'\"\';\n\n	return mail($to, $subject, $msg, $headers);\n}\n\nfunction mem_form_mailheader($string, $type)\n{\n	global $prefs;\n\n	if (!strstr($string,\'=?\') and !preg_match(\'/[\\x00-\\x1F\\x7F-\\xFF]/\', $string)) {\n		if (\"phrase\" == $type) {\n			if (preg_match(\'/[][()<>@,;:\".\\x5C]/\', $string)) {\n				$string = \'\"\'. strtr($string, array(\"\\\\\" => \"\\\\\\\\\", \'\"\' => \'\\\"\')) . \'\"\';\n			}\n		}\n		elseif (\"text\" != $type) {\n			trigger_error(\'Unknown encode_mailheader type\', E_USER_WARNING);\n		}\n		return $string;\n	}\n	if ($prefs[\'override_emailcharset\']) {\n		$start = \'=?ISO-8859-1?B?\';\n		$pcre  = \'/.{1,42}/s\';\n	}\n	else {\n		$start = \'=?UTF-8?B?\';\n		$pcre  = \'/.{1,45}(?=[\\x00-\\x7F\\xC0-\\xFF]|$)/s\';\n	}\n	$end = \'?=\';\n	$sep = is_windows() ? \"\\r\\n\" : \"\\n\";\n	preg_match_all($pcre, $string, $matches);\n	return $start . join($end.$sep.\' \'.$start, array_map(\'base64_encode\',$matches[0])) . $end;\n}\n\nfunction mem_form_strip($str, $header = TRUE) {\n	if ($header) $str = strip_rn($str);\n	return preg_replace(\'/[\\x00]/\', \' \', $str);\n}\n\n///////////////////////////////////////////////\n// Spam Evaluator\nclass mem_form_evaluation\n{\n	var $status;\n\n	function mem_form_evaluation() {\n		$this->status = 0;\n	}\n\n	function add_status($rating=-1) {\n		$this->status += $rating;\n	}\n\n	function get_status() {\n		return $this->status;\n	}\n\n	function is_spam() {\n		return ($this->status < 0);\n	}\n}\n\nfunction &get_mem_form_evaluator()\n{\n	static $instance;\n\n	if(!isset($instance)) {\n		$instance = new mem_form_evaluation();\n	}\n	return $instance;\n}\n','\n\n$mem_glz_custom_fields_plugin = load_plugin(\'glz_custom_fields\');\n\n// needed for MLP\ndefine( \'MEM_FORM_PREFIX\' , \'mem_form\' );\n\nglobal $mem_form_lang;\n\nif (!is_array($mem_form_lang))\n{\n	$mem_form_lang = array(\n		\'error_file_extension\'	=> \'File upload failed for field {label}.\',\n		\'error_file_failed\'	=> \'Failed to upload file for field {label}.\',\n		\'error_file_size\'	=> \'Failed to upload File for field {label}. File is too large.\',\n		\'field_missing\'	=> \'The field {label} is required.\',\n		\'form_expired\'	=>	\'The form has expired.\',\n		\'form_misconfigured\'	=> \'The mem_form is misconfigured. You must specify the \"form\" attribute.\',\n		\'form_sorry\'	=> \'The form is currently unavailable.\',\n		\'form_used\'	=>	\'This form has already been used to submit.\',\n		\'general_inquiry\'	=> \'\',\n		\'invalid_email\'	=> \'The email address {email} is invalid.\',\n		\'invalid_host\'	=> \'The host {domain} is invalid.\',\n		\'invalid_utf8\'	=> \'Invalid UTF8 string for field {label}.\',\n		\'invalid_value\'	=> \'The value \"{value}\" is invalid for the input field {label}.\',\n		\'invalid_format\'	=>	\'The input field {label} must match the format \"{example}\".\',\n		\'invalid_too_many_selected\'	=> \'The input field {label} only allows {count} selected {plural}.\',\n		\'item\'	=> \'item\',\n		\'items\'	=> \'items\',\n		\'max_warning\'	=> \'The input field {label} must be smaller than {max} characters long.\',\n		\'min_warning\'	=> \'The input field {label} must be at least {min} characters long.\',\n		\'refresh\'	=> \'Refresh\',\n		\'spam\'	=> \'Your submission was blocked by a spam filter.\',\n		\'submitted_thanks\'	=>	\'You have successfully submitted the form. Thank you.\',\n	);\n}\n\nregister_callback( \'mem_form_enumerate_strings\' , \'l10n.enumerate_strings\' );\nfunction mem_form_enumerate_strings($event , $step=\'\' , $pre=0)\n{\n	global $mem_form_lang;\n	$r = array	(\n				\'owner\'		=> \'mem_form\',			#	Change to your plugin\'s name\n				\'prefix\'	=> MEM_FORM_PREFIX,		#	Its unique string prefix\n				\'lang\'		=> \'en-gb\',				#	The language of the initial strings.\n				\'event\'		=> \'public\',			#	public/admin/common = which interface the strings will be loaded into\n				\'strings\'	=> $mem_form_lang,		#	The strings themselves.\n				);\n	return $r;\n}\n\n\nfunction mem_form_gTxt($what,$args = array())\n{\n	global $mem_form_lang, $textarray;\n\n	$key = strtolower( MEM_FORM_PREFIX . \'-\' . $what );\n\n	if (isset($textarray[$key]))\n	{\n		$str = $textarray[$key];\n	}\n	else\n	{\n		$key = strtolower($what);\n\n		if (isset($mem_form_lang[$key]))\n			$str = $mem_form_lang[$key];\n		elseif (isset($textarray[$key]))\n			$str = $textarray[$key];\n		else\n			$str = $what;\n	}\n\n	if( !empty($args) )\n		$str = strtr( $str , $args );\n\n	return $str;\n}\n\n\nfunction mem_form($atts, $thing=\'\', $default=false)\n{\n	global $sitename, $prefs, $file_max_upload_size, $mem_form_error, $mem_form_submit,\n		$mem_form, $mem_form_labels, $mem_form_values,\n		$mem_form_default, $mem_form_type, $mem_form_thanks_form,\n		$mem_glz_custom_fields_plugin;\n\n	extract(mem_form_lAtts(array(\n		\'form\'		=> \'\',\n		\'thanks_form\'	=> \'\',\n		\'thanks\'	=> graf(mem_form_gTxt(\'submitted_thanks\')),\n		\'label\'		=> \'\',\n		\'type\'		=> \'\',\n		\'redirect\'	=> \'\',\n		\'redirect_form\'	=> \'\',\n		\'class\'		=> \'memForm\',\n		\'enctype\'	=> \'\',\n		\'file_accept\'	=> \'\',\n		\'max_file_size\'	=> $file_max_upload_size,\n		\'form_expired_msg\' => mem_form_gTxt(\'form_expired\'),\n		\'show_error\'	=> 1,\n		\'show_input\'	=> 1,\n	), $atts));\n\n	if (empty($type) or (empty($form) && empty($thing))) {\n		trigger_error(\'Argument not specified for mem_form tag\', E_USER_WARNING);\n\n		return \'\';\n	}\n	$out = \'\';\n\n	// init error structure\n	mem_form_error();\n\n	$mem_form_type = $type;\n\n	$mem_form_default = is_array($default) ? $default : array();\n	callback_event(\'mem_form.defaults\');\n\n	unset($atts[\'show_error\'], $atts[\'show_input\']);\n	$mem_form_id = md5(serialize($atts).preg_replace(\'/[\\t\\s\\r\\n]/\',\'\',$thing));\n	$mem_form_submit = (ps(\'mem_form_id\') == $mem_form_id);\n\n	$nonce   = doSlash(ps(\'mem_form_nonce\'));\n	$renonce = false;\n\n	if ($mem_form_submit) {\n		safe_delete(\'txp_discuss_nonce\', \'issue_time < date_sub(now(), interval 10 minute)\');\n		if ($rs = safe_row(\'used\', \'txp_discuss_nonce\', \"nonce = \'$nonce\'\"))\n		{\n			if ($rs[\'used\'])\n			{\n				unset($mem_form_error);\n				mem_form_error(mem_form_gTxt(\'form_used\'));\n				$renonce = true;\n\n				$_POST[\'mem_form_submit\'] = TRUE;\n				$_POST[\'mem_form_id\'] = $mem_form_id;\n				$_POST[\'mem_form_nonce\'] = $nonce;\n			}\n		}\n		else\n		{\n			mem_form_error($form_expired_msg);\n			$renonce = true;\n		}\n	}\n\n	if ($mem_form_submit and $nonce and !$renonce)\n	{\n		$mem_form_nonce = $nonce;\n	}\n\n	elseif (!$show_error or $show_input)\n	{\n		$mem_form_nonce = md5(uniqid(rand(), true));\n		safe_insert(\'txp_discuss_nonce\', \"issue_time = now(), nonce = \'$mem_form_nonce\'\");\n	}\n\n	$form = ($form) ? fetch_form($form) : $thing;\n	$form = parse($form);\n\n	if ($mem_form_submit && empty($mem_form_error))\n	{\n		// let plugins validate after individual fields are validated\n		callback_event(\'mem_form.validate\');\n	}\n\n	if (!$mem_form_submit) {\n	  # don\'t show errors or send mail\n	}\n	elseif (mem_form_error())\n	{\n		if ($show_error or !$show_input)\n		{\n			$out .= mem_form_display_error();\n\n			if (!$show_input) return $out;\n		}\n	}\n	elseif ($show_input and is_array($mem_form))\n	{\n		if ($mem_glz_custom_fields_plugin) {\n			// prep the values\n			glz_custom_fields_before_save();\n		}\n\n		callback_event(\'mem_form.spam\');\n\n		/// load and check spam plugins/\n		$evaluator =& get_mem_form_evaluator();\n		$is_spam = $evaluator->is_spam();\n\n		if ($is_spam) {\n			return mem_form_gTxt(\'spam\');\n		}\n\n		$mem_form_thanks_form = ($thanks_form ? fetch_form($thanks_form) : $thanks);\n\n		safe_update(\'txp_discuss_nonce\', \"used = \'1\', issue_time = now()\", \"nonce = \'$nonce\'\");\n\n		$result = callback_event(\'mem_form.submit\');\n\n		if (mem_form_error()) {\n			$out .= mem_form_display_error();\n			$redirect = false;\n		}\n\n		$thanks_form = $mem_form_thanks_form;\n		unset($mem_form_thanks_form);\n\n		if (!empty($result))\n			return $result;\n\n		if (mem_form_error() and $show_input)\n		{\n			// no-op, reshow form with errors\n		}\n		else if ($redirect)\n		{\n			$_POST = array();\n\n			while (@ob_end_clean());\n			$uri = hu.ltrim($redirect,\'/\');\n			if (empty($_SERVER[\'FCGI_ROLE\']) and empty($_ENV[\'FCGI_ROLE\']))\n			{\n				txp_status_header(\'303 See Other\');\n				header(\'Location: \'.$uri);\n				header(\'Connection: close\');\n				header(\'Content-Length: 0\');\n			}\n			else\n			{\n				$uri = htmlspecialchars($uri);\n				$refresh = mem_form_gTxt(\'refresh\');\n\n				if (!empty($redirect_form))\n				{\n					$redirect_form = fetch_form($redirect_form);\n\n					echo str_replace(\'{uri}\', $uri, $redirect_form);\n				}\n\n				if (empty($redirect_form))\n				{\n					echo <<<END\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n	<title>$sitename</title>\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n	<meta http-equiv=\"refresh\" content=\"0;url=$uri\" />\n</head>\n<body>\n<a href=\"$uri\">$refresh</a>\n</body>\n</html>\nEND;\n				}\n			}\n			exit;\n		}\n		else {\n			return \'<div class=\"memThanks\" id=\"mem\'.$mem_form_id.\'\">\' .\n				$thanks_form . \'</div>\';\n		}\n	}\n\n	if ($show_input)\n	{\n		$file_accept = (!empty($file_accept) ? \' accept=\"\'.$file_accept.\'\"\' : \'\');\n\n		$class = htmlspecialchars($class);\n\n		$enctype = !empty($enctype) ? \' enctype=\"\'.$enctype.\'\"\' : \'\';\n\n		return \'<form method=\"post\"\'.((!$show_error and $mem_form_error) ? \'\' : \' id=\"mem\'.$mem_form_id.\'\"\').\' class=\"\'.$class.\'\" action=\"\'.htmlspecialchars(serverSet(\'REQUEST_URI\')).\'#mem\'.$mem_form_id.\'\"\'.$file_accept.$enctype.\'>\'.\n			( $label ? n.\'<fieldset>\' : n.\'<div>\' ).\n			( $label ? n.\'<legend>\'.htmlspecialchars($label).\'</legend>\' : \'\' ).\n			$out.\n			n.\'<input type=\"hidden\" name=\"mem_form_nonce\" value=\"\'.$mem_form_nonce.\'\" />\'.\n			n.\'<input type=\"hidden\" name=\"mem_form_id\" value=\"\'.$mem_form_id.\'\" />\'.\n			(!empty($max_file_size) ? n.\'<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"\'.$max_file_size.\'\" />\' : \'\' ).\n			callback_event(\'mem_form.display\',\'\',1).\n			$form.\n			callback_event(\'mem_form.display\').\n			( $label ? (n.\'</fieldset>\') : (n.\'</div>\') ).\n			n.\'</form>\';\n	}\n\n	return \'\';\n}\n\nfunction mem_form_text($atts)\n{\n	global $mem_form_error, $mem_form_submit, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'break\'		=> br,\n		\'default\'	=> \'\',\n		\'isError\'	=> \'\',\n		\'label\'		=> mem_form_gTxt(\'text\'),\n		\'max\'		=> 100,\n		\'min\'		=> 0,\n		\'name\'		=> \'\',\n		\'class\'		=> \'memText\',\n		\'required\'	=> 1,\n		\'size\'		=> \'\',\n		\'password\'	=> 0,\n		\'format\'	=> \'\',\n		\'example\'	=> \'\',\n		\'escape_value\'	=> 1\n	), $atts));\n\n	$min = intval($min);\n	$max = intval($max);\n	$size = intval($size);\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	if ($mem_form_submit)\n	{\n		$value = trim(ps($name));\n		$utf8len = preg_match_all(\"/./su\", $value, $utf8ar);\n		$hlabel = empty($label) ? htmlspecialchars($name) : htmlspecialchars($label);\n\n\n		if (strlen($value) == 0 && $required)\n		{\n			$mem_form_error[] = mem_form_gTxt(\'field_missing\', array(\'{label}\'=>$hlabel));\n			$isError = true;\n		}\n		elseif ($required && !empty($format) && !preg_match($format, $value))\n		{\n			//echo \"format=$format<br />value=$value<br />\";\n			$mem_form_error[] = mem_form_gTxt(\'invalid_format\', array(\'{label}\'=>$hlabel, \'{example}\'=> htmlspecialchars($example)));\n			$isError = true;\n		}\n		elseif (strlen($value))\n		{\n			if (!$utf8len)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'invalid_utf8\', array(\'{label}\'=>$hlabel));\n				$isError = true;\n			}\n\n			elseif ($min and $utf8len < $min)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'min_warning\', array(\'{label}\'=>$hlabel, \'{min}\'=>$min));\n				$isError = true;\n			}\n\n			elseif ($max and $utf8len > $max)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'max_warning\', array(\'{label}\'=>$hlabel, \'{max}\'=>$max));\n				$isError = true;\n			}\n\n			else\n			{\n				$isError = false === mem_form_store($name, $label, $value);\n			}\n		}\n	}\n\n	else\n	{\n		if (isset($mem_form_default[$name]))\n			$value = $mem_form_default[$name];\n		else\n			$value = $default;\n	}\n\n	$size = ($size) ? \' size=\"\'.$size.\'\"\' : \'\';\n	$maxlength = ($max) ? \' maxlength=\"\'.$max.\'\"\' : \'\';\n\n	$isError = $isError ? \"errorElement\" : \'\';\n\n	$memRequired = $required ? \'memRequired\' : \'\';\n	$class = htmlspecialchars($class);\n\n	if ($escape_value)\n	{\n		$value = htmlspecialchars($value);\n	}\n\n    return \'<label for=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break.\n		\'<input type=\"\'.($password ? \'password\' : \'text\').\'\" id=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\'\" name=\"\'.$name.\'\" value=\"\'.$value.\'\"\'.$size.$maxlength.\' />\';\n}\n\n\nfunction mem_form_file($atts)\n{\n	global $mem_form_submit, $mem_form_error, $mem_form_default, $file_max_upload_size, $tempdir;\n\n	extract(mem_form_lAtts(array(\n		\'break\'		=> br,\n		\'isError\'	=> \'\',\n		\'label\'		=> mem_form_gTxt(\'file\'),\n		\'name\'		=> \'\',\n		\'class\'		=> \'memFile\',\n		\'size\'		=> \'\',\n		\'accept\'	=> \'\',\n		\'no_replace\' => 1,\n		\'max_file_size\'	=> $file_max_upload_size,\n		\'required\'	=> 1,\n		\'default\'	=> FALSE,\n	), $atts));\n\n	$fname = ps(\'file_\'.$name);\n	$frealname = ps(\'file_info_\'.$name.\'_name\');\n	$ftype = ps(\'file_info_\'.$name.\'_type\');\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	$out = \'\';\n\n	if ($mem_form_submit)\n	{\n		if (!empty($fname))\n		{\n			// see if user uploaded a different file to replace already uploaded\n			if (isset($_FILES[$name]) && !empty($_FILES[$name][\'tmp_name\']))\n			{\n				// unlink last temp file\n				if (file_exists($fname) && substr_compare($fname, $tempdir, 0, strlen($tempdir), 1)==0)\n					unlink($fname);\n\n				$fname = \'\';\n			}\n			else\n			{\n				// pass through already uploaded filename\n				mem_form_store($name, $label, array(\'tmp_name\'=>$fname, \'name\' => $frealname, \'type\' => $ftype));\n				$out .= \"<input type=\'hidden\' name=\'file_\".$name.\"\' value=\'\".htmlspecialchars($fname).\"\' />\"\n						. \"<input type=\'hidden\' name=\'file_info_\".$name.\"_name\' value=\'\".htmlspecialchars($frealname).\"\' />\"\n						. \"<input type=\'hidden\' name=\'file_info_\".$name.\"_type\' value=\'\".htmlspecialchars($ftype).\"\' />\";\n			}\n		}\n\n		if (empty($fname))\n		{\n			$hlabel = empty($label) ? htmlspecialchars($name) : htmlspecialchars($label);\n\n			$fname = $_FILES[$name][\'tmp_name\'];\n			$frealname = $_FILES[$name][\'name\'];\n			$ftype = $_FILES[$name][\'type\'];\n			$err = 0;\n\n			switch ($_FILES[$name][\'error\']) {\n				case UPLOAD_ERR_OK:\n					if (is_uploaded_file($fname) and $max_file_size >= filesize($fname))\n						mem_form_store($name, $label, $_FILES[$name]);\n					elseif (!is_uploaded_file($fname)) {\n						if ($required) {\n							$mem_form_error[] = mem_form_gTxt(\'error_file_failed\', array(\'{label}\'=>$hlabel));\n							$err = 1;\n						}\n					}\n					else {\n						$mem_form_error[] = mem_form_gTxt(\'error_file_size\', array(\'{label}\'=>$hlabel));\n						$err = 1;\n					}\n					break;\n\n				case UPLOAD_ERR_NO_FILE:\n					if ($required) {\n						$mem_form_error[] = mem_form_gTxt(\'field_missing\', array(\'{label}\'=>$hlabel));\n						$err = 1;\n					}\n					break;\n\n				case UPLOAD_ERR_EXTENSION:\n					$mem_form_error[] = mem_form_gTxt(\'error_file_extension\', array(\'{label}\'=>$hlabel));\n					$err = 1;\n					break;\n\n				case UPLOAD_ERR_INI_SIZE:\n				case UPLOAD_ERR_FORM_SIZE:\n					$mem_form_error[] = mem_form_gTxt(\'error_file_size\', array(\'{label}\'=>$hlabel));\n					$err = 1;\n					break;\n\n				default:\n					$mem_form_error[] = mem_form_gTxt(\'error_file_failed\', array(\'{label}\'=>$hlabel));\n					$err = 1;\n					break;\n			}\n\n			if (!$err)\n			{\n				// store as a txp tmp file to be used later\n				$fname = get_uploaded_file($fname);\n				$err = false === mem_form_store($name, $label, array(\'tmp_name\'=>$fname, \'name\' => $frealname, \'type\' => $ftype));\n				if ($err)\n				{\n					// clean up file\n					@unlink($fname);\n				}\n				else\n				{\n					$out .= \"<input type=\'hidden\' name=\'file_\".$name.\"\' value=\'\".htmlspecialchars($fname).\"\' />\"\n							. \"<input type=\'hidden\' name=\'file_info_\".$name.\"_name\' value=\'\".htmlspecialchars($_FILES[$name][\'name\']).\"\' />\"\n							. \"<input type=\'hidden\' name=\'file_info_\".$name.\"_type\' value=\'\".htmlspecialchars($_FILES[$name][\'type\']).\"\' />\";\n				}\n			}\n\n			$isError = $err ? \'errorElement\' : \'\';\n		}\n	}\n	else\n	{\n		if (isset($mem_form_default[$name]))\n			$value = $mem_form_default[$name];\n		else if (is_array($default))\n			$value = $default;\n\n		if (is_array(@$value))\n		{\n			$fname = @$value[\'tmp_name\'];\n			$frealname = @$value[\'name\'];\n			$ftype = @$value[\'type\'];\n			$out .= \"<input type=\'hidden\' name=\'file_\".$name.\"\' value=\'\".htmlspecialchars($fname).\"\' />\"\n				. \"<input type=\'hidden\' name=\'file_info_\".$name.\"_name\' value=\'\".htmlspecialchars($frealname).\"\' />\"\n				. \"<input type=\'hidden\' name=\'file_info_\".$name.\"_type\' value=\'\".htmlspecialchars($ftype).\"\' />\";\n		}\n	}\n\n	$memRequired = $required ? \'memRequired\' : \'\';\n	$class = htmlspecialchars($class);\n\n	$size = ($size) ? \' size=\"\'.$size.\'\"\' : \'\';\n	$accept = (!empty($accept) ? \' accept=\"\'.$accept.\'\"\' : \'\');\n\n\n	$field_out = \'<label for=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break;\n\n	if (!empty($frealname) && $no_replace)\n	{\n		$field_out .= \'<div id=\"\'.$name.\'\">\'.htmlspecialchars($frealname) . \' <span id=\"\'.$name.\'_ftype\">(\'. htmlspecialchars($ftype).\')</span></div>\';\n	}\n	else\n	{\n		$field_out .= \'<input type=\"file\" id=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\'\" name=\"\'.$name.\'\"\' .$size.\' />\';\n	}\n\n  return $out.$field_out;\n}\n\nfunction mem_form_textarea($atts, $thing=\'\')\n{\n	global $mem_form_error, $mem_form_submit, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'break\'		=> br,\n		\'cols\'		=> 58,\n		\'default\'	=> \'\',\n		\'isError\'	=> \'\',\n		\'label\'		=> mem_form_gTxt(\'textarea\'),\n		\'max\'		=> 10000,\n		\'min\'		=> 0,\n		\'name\'		=> \'\',\n		\'class\'		=> \'memTextarea\',\n		\'required\'	=> 1,\n		\'rows\'		=> 8,\n		\'escape_value\'	=> 1\n	), $atts));\n\n	$min = intval($min);\n	$max = intval($max);\n	$cols = intval($cols);\n	$rows = intval($rows);\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	if ($mem_form_submit)\n	{\n		$value = preg_replace(\'/^\\s*[\\r\\n]/\', \'\', rtrim(ps($name)));\n		$utf8len = preg_match_all(\"/./su\", ltrim($value), $utf8ar);\n		$hlabel = htmlspecialchars($label);\n\n		if (strlen(ltrim($value)))\n		{\n			if (!$utf8len)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'invalid_utf8\', array(\'{label}\'=>$hlabel));\n				$isError = true;\n			}\n\n			elseif ($min and $utf8len < $min)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'min_warning\', array(\'{label}\'=>$hlabel, \'{min}\'=>$min));\n				$isError = true;\n			}\n\n			elseif ($max and $utf8len > $max)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'max_warning\', array(\'{label}\'=>$hlabel, \'{max}\'=>$max));\n				$isError = true;\n			}\n\n			else\n			{\n				$isError = false === mem_form_store($name, $label, $value);\n			}\n		}\n\n		elseif ($required)\n		{\n			$mem_form_error[] = mem_form_gTxt(\'field_missing\', array(\'{label}\'=>$hlabel));\n			$isError = true;\n		}\n	}\n\n	else\n	{\n		if (isset($mem_form_default[$name]))\n			$value = $mem_form_default[$name];\n		else if (!empty($default))\n			$value = $default;\n		else\n			$value = parse($thing);\n	}\n\n	$isError = $isError ? \'errorElement\' : \'\';\n	$memRequired = $required ? \'memRequired\' : \'\';\n	$class = htmlspecialchars($class);\n\n	if ($escape_value)\n	{\n		$value = htmlspecialchars($value);\n	}\n\n	return \'<label for=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break.\n		\'<textarea id=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\'\" name=\"\'.$name.\'\" cols=\"\'.$cols.\'\" rows=\"\'.$rows.\'\">\'.$value.\'</textarea>\';\n}\n\nfunction mem_form_email($atts)\n{\n	global $mem_form_error, $mem_form_submit, $mem_form_from, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'default\'	=> \'\',\n		\'isError\'	=> \'\',\n		\'label\'		=> mem_form_gTxt(\'email\'),\n		\'max\'		=> 100,\n		\'min\'		=> 0,\n		\'name\'		=> \'\',\n		\'required\'	=> 1,\n		\'break\'		=> br,\n		\'size\'		=> \'\',\n		\'class\'		=> \'memEmail\',\n	), $atts));\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	if ($mem_form_submit)\n	{\n		$email = trim(ps($name));\n\n		if (strlen($email))\n		{\n			if (!is_valid_email($email))\n			{\n				$mem_form_error[] = mem_form_gTxt(\'invalid_email\', array(\'{email}\'=>htmlspecialchars($email)));\n				$isError = true;\n			}\n			else\n			{\n				preg_match(\"/@(.+)$/\", $email, $match);\n				$domain = $match[1];\n\n				if (is_callable(\'checkdnsrr\') and checkdnsrr(\'textpattern.com.\',\'A\') and !checkdnsrr($domain.\'.\',\'MX\') and !checkdnsrr($domain.\'.\',\'A\'))\n				{\n					$mem_form_error[] = mem_form_gTxt(\'invalid_host\', array(\'{domain}\'=>htmlspecialchars($domain)));\n					$isError = true;\n				}\n				else\n				{\n					$mem_form_from = $email;\n				}\n			}\n		}\n	}\n	else\n	{\n		if (isset($mem_form_default[$name]))\n			$email = $mem_form_default[$name];\n		else\n			$email = $default;\n	}\n\n	return mem_form_text(array(\n		\'default\'	=> $email,\n		\'isError\'	=> $isError,\n		\'label\'		=> $label,\n		\'max\'		=> $max,\n		\'min\'		=> $min,\n		\'name\'		=> $name,\n		\'required\'	=> $required,\n		\'break\'		=> $break,\n		\'size\'		=> $size,\n		\'class\'		=> $class,\n	));\n}\n\nfunction mem_form_select_section($atts)\n{\n	extract(mem_form_lAtts(array(\n		\'exclude\'	=> \'\',\n		\'sort\'		=> \'name ASC\',\n		\'delimiter\'	=> \',\',\n	),$atts,false));\n\n	if (!empty($exclude)) {\n		$exclusion = array_map(\'trim\', explode($delimiter, preg_replace(\'/[\\r\\n\\t\\s]+/\', \' \',$exclude)));\n		$exclusion = array_map(\'strtolower\', $exclusion);\n\n		if (count($exclusion))\n			$exclusion = join($delimiter, quote_list($exclusion));\n	}\n\n	$where = empty($exclusion) ? \'1=1\' : \'LOWER(name) NOT IN (\'.$exclusion.\')\';\n\n	$sort = empty($sort) ? \'\' : \' ORDER BY \'. doSlash($sort);\n\n	$rs = safe_rows(\'name, title\',\'txp_section\',$where . $sort);\n\n	$items = array();\n	$values = array();\n\n	if ($rs) {\n		foreach($rs as $r) {\n			$items[] = $r[\'title\'];\n			$values[] = $r[\'name\'];\n		}\n	}\n\n	unset($atts[\'exclude\'], $atts[\'sort\']);\n\n	$atts[\'items\'] = join($delimiter, $items);\n	$atts[\'values\'] = join($delimiter, $values);\n\n	return mem_form_select($atts);\n}\n\nfunction mem_form_select_category($atts)\n{\n	extract(mem_form_lAtts(array(\n		\'root\'	=> \'root\',\n		\'exclude\'	=> \'\',\n		\'delimiter\'	=> \',\',\n		\'type\'	=> \'article\'\n	),$atts,false));\n\n	$rs = getTree($root, $type);\n\n	if (!empty($exclude)) {\n		$exclusion = array_map(\'trim\', explode($delimiter, preg_replace(\'/[\\r\\n\\t\\s]+/\', \' \',$exclude)));\n		$exclusion = array_map(\'strtolower\', $exclusion);\n	}\n	else\n		$exclusion = array();\n\n	$items = array();\n	$values = array();\n\n	if ($rs) {\n		foreach ($rs as $cat) {\n			if (count($exclusion) && in_array(strtolower($cat[\'name\']), $exclusion))\n				continue;\n\n			$items[] = $cat[\'title\'];\n			$values[] = $cat[\'name\'];\n		}\n	}\n\n	unset($atts[\'root\'], $atts[\'type\']);\n\n	$atts[\'items\'] = join($delimiter, $items);\n	$atts[\'values\'] = join($delimiter, $values);\n\n	return mem_form_select($atts);\n}\n\nfunction mem_form_select($atts)\n{\n	global $mem_form_error, $mem_form_submit, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'name\'		=> \'\',\n		\'break\'		=> \' \',\n		\'delimiter\'	=> \',\',\n		\'isError\'	=> \'\',\n		\'label\'		=> mem_form_gTxt(\'option\'),\n		\'items\'		=> mem_form_gTxt(\'general_inquiry\'),\n		\'values\'	=> \'\',\n		\'first\'		=> FALSE,\n		\'required\'	=> 1,\n		\'select_limit\'	=> FALSE,\n		\'as_csv\'	=> FALSE,\n		\'selected\'	=> \'\',\n		\'class\'		=> \'memSelect\',\n	), $atts, false));\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	if (!empty($items) && $items[0] == \'<\') $items = parse($items);\n	if (!empty($values) && $values[0] == \'<\') $values = parse($values);\n\n	if ($first !== FALSE) {\n		$items = $first.$delimiter.$atts[\'items\'];\n		$values = $first.$delimiter.$atts[\'values\'];\n	}\n\n	$select_limit = empty($select_limit) ? 1 : assert_int($select_limit);\n\n	$items = array_map(\'trim\', explode($delimiter, preg_replace(\'/[\\r\\n\\t\\s]+/\', \' \',$items)));\n	$values = array_map(\'trim\', explode($delimiter, preg_replace(\'/[\\r\\n\\t\\s]+/\', \' \',$values)));\n	if ($select_limit > 1)\n	{\n		$selected = array_map(\'trim\', explode($delimiter, preg_replace(\'/[\\r\\n\\t\\s]+/\', \' \',$seelcted)));\n	}\n	else\n	{\n		$selected = array(trim($selected));\n	}\n\n	$use_values_array = (count($items) == count($values));\n\n	if ($mem_form_submit)\n	{\n		if (strpos($name, \'[]\'))\n		{\n			$value = ps(substr($name, 0, strlen($name)-2));\n\n			$selected = $value;\n\n			if ($as_csv)\n			{\n				$value = implode($delimiter, $value);\n			}\n		}\n		else\n		{\n			$value = trim(ps($name));\n\n			$selected = array($value);\n		}\n\n		if (!empty($selected))\n		{\n			if (count($selected) <= $select_limit)\n			{\n				foreach ($selected as $v)\n				{\n					$is_valid = ($use_values_array && in_array($v, $values)) or (!$use_values_array && in_array($v, $items));\n					if (!$is_valid)\n					{\n						$invalid_value = $v;\n						break;\n					}\n				}\n\n				if ($is_valid)\n				{\n					$isError = false === mem_form_store($name, $label, $value);\n				}\n				else\n				{\n					$mem_form_error[] = mem_form_gTxt(\'invalid_value\', array(\'{label}\'=> htmlspecialchars($label), \'{value}\'=> htmlspecialchars($invalid_value)));\n					$isError = true;\n				}\n			}\n			else\n			{\n				$mem_form_error[] = mem_form_gTxt(\'invalid_too_many_selected\', array(\n											\'{label}\'=> htmlspecialchars($label),\n											\'{count}\'=> $select_limit,\n											\'{plural}\'=> ($select_limit==1 ? mem_form_gTxt(\'item\') : mem_form_gTxt(\'items\'))\n										));\n				$isError = true;\n			}\n		}\n\n		elseif ($required)\n		{\n			$mem_form_error[] = mem_form_gTxt(\'field_missing\', array(\'{label}\'=> htmlspecialchars($label)));\n			$isError = true;\n		}\n	}\n	else if (isset($mem_form_default[$name]))\n	{\n		$selected = array($mem_form_default[$name]);\n	}\n\n	$out = \'\';\n\n	foreach ($items as $item)\n	{\n		$v = $use_values_array ? array_shift($values) : $item;\n\n		$sel = !empty($selected) && in_array($v, $selected);\n\n		$out .= n.t.\'<option\'.($use_values_array ? \' value=\"\'.$v.\'\"\' : \'\').($sel ? \' selected=\"selected\">\' : \'>\').\n				(strlen($item) ? htmlspecialchars($item) : \' \').\'</option>\';\n	}\n\n	$isError = $isError ? \'errorElement\' : \'\';\n	$memRequired = $required ? \'memRequired\' : \'\';\n	$class = htmlspecialchars($class);\n\n	$multiple = $select_limit > 1 ? \' multiple=\"multiple\"\' : \'\';\n\n	return \'<label for=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\'.$break.\n		n.\'<select id=\"\'.$name.\'\" name=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\'\"\' . $multiple . \'>\'.\n			$out.\n		n.\'</select>\';\n}\n\nfunction mem_form_checkbox($atts)\n{\n	global $mem_form_error, $mem_form_submit, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'break\'		=> \' \',\n		\'checked\'	=> 0,\n		\'isError\'	=> \'\',\n		\'label\'		=> mem_form_gTxt(\'checkbox\'),\n		\'name\'		=> \'\',\n		\'class\'		=> \'memCheckbox\',\n		\'required\'	=> 1\n	), $atts));\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	if ($mem_form_submit)\n	{\n		$value = (bool) ps($name);\n\n		if ($required and !$value)\n		{\n			$mem_form_error[] = mem_form_gTxt(\'field_missing\', array(\'{label}\'=> htmlspecialchars($label)));\n			$isError = true;\n		}\n\n		else\n		{\n			$isError = false === mem_form_store($name, $label, $value ? gTxt(\'yes\') : gTxt(\'no\'));\n		}\n	}\n\n	else {\n		if (isset($mem_form_default[$name]))\n			$value = $mem_form_default[$name];\n		else\n			$value = $checked;\n	}\n\n	$isError = $isError ? \'errorElement\' : \'\';\n	$memRequired = $required ? \'memRequired\' : \'\';\n	$class = htmlspecialchars($class);\n\n	return \'<input type=\"checkbox\" id=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\'\" name=\"\'.$name.\'\"\'.\n		($value ? \' checked=\"checked\"\' : \'\').\' />\'.$break.\n		\'<label for=\"\'.$name.\'\" class=\"\'.$class.\' \'.$memRequired.$isError.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\';\n}\n\n\nfunction mem_form_serverinfo($atts)\n{\n	global $mem_form_submit;\n\n	extract(mem_form_lAtts(array(\n		\'label\'		=> \'\',\n		\'name\'		=> \'\'\n	), $atts));\n\n	if (empty($name)) $name = mem_form_label2name($label);\n\n	if (strlen($name) and $mem_form_submit)\n	{\n		if (!$label) $label = $name;\n		mem_form_store($name, $label, serverSet($name));\n	}\n}\n\nfunction mem_form_secret($atts, $thing = \'\')\n{\n	global $mem_form_submit;\n\n	extract(mem_form_lAtts(array(\n		\'name\'	=> \'\',\n		\'label\'	=> mem_form_gTxt(\'secret\'),\n		\'value\'	=> \'\'\n	), $atts));\n\n\n	$name = mem_form_label2name($name ? $name : $label);\n\n	if ($mem_form_submit)\n	{\n		if ($thing)\n			$value = trim(parse($thing));\n		else\n			$value = trim(parse($value));\n\n		mem_form_store($name, $label, $value);\n	}\n\n	return \'\';\n}\n\nfunction mem_form_hidden($atts, $thing=\'\')\n{\n	global $mem_form_submit, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'name\'		=> \'\',\n		\'label\'		=> mem_form_gTxt(\'hidden\'),\n		\'value\'		=> \'\',\n		\'isError\'	=> \'\',\n		\'required\'	=> 1,\n		\'class\'		=> \'memHidden\',\n		\'escape_value\'	=> 1,\n	), $atts));\n\n	$name = mem_form_label2name($name ? $name : $label);\n\n	if ($mem_form_submit)\n	{\n		$value = preg_replace(\'/^\\s*[\\r\\n]/\', \'\', rtrim(ps($name)));\n		$utf8len = preg_match_all(\"/./su\", ltrim($value), $utf8ar);\n		$hlabel = htmlspecialchars($label);\n\n		if (strlen($value))\n		{\n			if (!$utf8len)\n			{\n				$mem_form_error[] = mem_form_gTxt(\'invalid_utf8\', $hlabel);\n				$isError = true;\n			}\n			else\n			{\n				$isError = false === mem_form_store($name, $label, $value);\n			}\n		}\n	}\n	else\n	{\n		if (isset($mem_form_default[$name]))\n			$value = $mem_form_default[$name];\n		else if ($thing)\n			$value = trim(parse($thing));\n	}\n\n	$isError = $isError ? \'errorElement\' : \'\';\n	$memRequired = $required ? \'memRequired\' : \'\';\n\n	if ($escape_value)\n	{\n		$value = htmlspecialchars($value);\n	}\n\n	return \'<input type=\"hidden\" class=\"\'.$class.\' \'.$memRequired.$isError.\' \'.$name\n			. \'\" name=\"\'.$name.\'\" value=\"\'.$value.\'\" id=\"\'.$name.\'\" />\';\n}\n\nfunction mem_form_radio($atts)\n{\n	global $mem_form_error, $mem_form_submit, $mem_form_values, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'break\'		=> \' \',\n		\'checked\'	=> 0,\n		\'group\'		=> \'\',\n		\'label\'		=> mem_form_gTxt(\'option\'),\n		\'name\'		=> \'\',\n		\'class\'		=> \'memRadio\',\n		\'isError\'	=> \'\',\n		\'value\'		=> false\n	), $atts));\n\n	static $cur_name = \'\';\n	static $cur_group = \'\';\n\n	if (!$name and !$group and !$cur_name and !$cur_group) {\n		$cur_group = mem_form_gTxt(\'radio\');\n		$cur_name = $cur_group;\n	}\n	if ($group and !$name and $group != $cur_group) $name = $group;\n\n	if ($name) $cur_name = $name;\n	else $name = $cur_name;\n\n	if ($group) $cur_group = $group;\n	else $group = $cur_group;\n\n	$id   = \'q\'.md5($name.\'=>\'.$label);\n	$name = mem_form_label2name($name);\n\n	$value = $value === false ? $id : $value;\n\n	if ($mem_form_submit)\n	{\n		$is_checked = (ps($name) == $value);\n\n		if ($is_checked or $checked and !isset($mem_form_values[$name]))\n		{\n			$isError = false === mem_form_store($name, $group, $value);\n		}\n	}\n\n	else\n	{\n		if (isset($mem_form_default[$name]))\n			$is_checked = $mem_form_default[$name] == $value;\n		else\n			$is_checked = $checked;\n	}\n\n	$class = htmlspecialchars($class);\n\n	$isError = $isError ? \' errorElement\' : \'\';\n\n	return \'<input value=\"\'.$value.\'\" type=\"radio\" id=\"\'.$id.\'\" class=\"\'.$class.\' \'.$name.$isError.\'\" name=\"\'.$name.\'\"\'.\n		( $is_checked ? \' checked=\"checked\" />\' : \' />\').$break.\n		\'<label for=\"\'.$id.\'\" class=\"\'.$class.\' \'.$name.\'\">\'.htmlspecialchars($label).\'</label>\';\n}\n\nfunction mem_form_submit($atts, $thing=\'\')\n{\n	global $mem_form_submit;\n\n	extract(mem_form_lAtts(array(\n		\'button\'	=> 0,\n		\'label\'		=> mem_form_gTxt(\'save\'),\n		\'name\'		=> \'mem_form_submit\',\n		\'class\'		=> \'memSubmit\',\n	), $atts));\n\n	$label = htmlspecialchars($label);\n	$name = htmlspecialchars($name);\n	$class = htmlspecialchars($class);\n\n	if ($mem_form_submit)\n	{\n		$value = ps($name);\n\n		if (!empty($value) && $value == $label)\n		{\n			// save the clicked button value\n			mem_form_store($name, $label, $value);\n		}\n	}\n\n	if ($button or strlen($thing))\n	{\n		return \'<button type=\"submit\" class=\"\'.$class.\'\" name=\"\'.$name.\'\" value=\"\'.$label.\'\">\'.($thing ? trim(parse($thing)) : $label).\'</button>\';\n	}\n	else\n	{\n		return \'<input type=\"submit\" class=\"\'.$class.\'\" name=\"\'.$name.\'\" value=\"\'.$label.\'\" />\';\n	}\n}\n\nfunction mem_form_lAtts($arr, $atts, $warn=true)\n{\n	foreach(array(\'button\', \'checked\', \'required\', \'show_input\', \'show_error\') as $key)\n	{\n		if (isset($atts[$key]))\n		{\n			$atts[$key] = ($atts[$key] === \'yes\' or intval($atts[$key])) ? 1 : 0;\n		}\n	}\n	if (isset($atts[\'break\']) and $atts[\'break\'] == \'br\') $atts[\'break\'] = \'<br />\';\n	return lAtts($arr, $atts, $warn);\n}\n\nfunction mem_form_label2name($label)\n{\n	$label = trim($label);\n	if (strlen($label) == 0) return \'invalid\';\n	if (strlen($label) <= 32 and preg_match(\'/^[a-zA-Z][A-Za-z0-9:_-]*$/\', $label)) return $label;\n	else return \'q\'.md5($label);\n}\n\nfunction mem_form_store($name, $label, $value)\n{\n	global $mem_form, $mem_form_labels, $mem_form_values;\n\n	$mem_form[$label] = $value;\n	$mem_form_labels[$name] = $label;\n	$mem_form_values[$name] = $value;\n\n	$is_valid = false !== callback_event(\'mem_form.store_value\', $name);\n\n	// invalid data, unstore it\n	if (!$is_valid)\n		mem_form_remove($name);\n\n	return $is_valid;\n}\n\nfunction mem_form_remove($name)\n{\n	global $mem_form, $mem_form_labels, $mem_form_values;\n\n	$label = $mem_form_labels[$name];\n	unset($mem_form_labels[$name], $mem_form[$label], $mem_form_values[$name]);\n}\n\nfunction mem_form_display_error()\n{\n	global $mem_form_error;\n\n	$out = n.\'<ul class=\"memError\">\';\n\n	foreach (array_unique($mem_form_error) as $error)\n	{\n		$out .= n.t.\'<li>\'.$error.\'</li>\';\n	}\n\n	$out .= n.\'</ul>\';\n\n	return $out;\n}\n\nfunction mem_form_value($atts, $thing)\n{\n	global $mem_form_submit, $mem_form_values, $mem_form_default;\n\n	extract(mem_form_lAtts(array(\n		\'name\'		=> \'\',\n		\'wraptag\'	=> \'\',\n		\'class\'		=> \'\',\n		\'attributes\'=> \'\',\n		\'id\'		=> \'\',\n	), $atts));\n\n	$out = \'\';\n\n	if ($mem_form_submit)\n	{\n		if (isset($mem_form_values[$name]))\n			$out = $mem_form_values[$name];\n	}\n	else {\n		if (isset($mem_form_default[$name]))\n			$out = $mem_form_default[$name];\n	}\n\n	return doTag($out, $wraptag, $class, $attributes, $id);\n}\n\nfunction mem_form_error($err=NULL)\n{\n	global $mem_form_error;\n\n	if (!is_array($mem_form_error))\n		$mem_form_error = array();\n\n	if ($err == NULL)\n		return !empty($mem_form_error) ? $mem_form_error : false;\n\n	$mem_form_error[] = $err;\n}\n\nfunction mem_form_default($key,$val=NULL)\n{\n	global $mem_form_default;\n\n	if (is_array($key))\n	{\n		foreach ($key as $k=>$v)\n		{\n			mem_form_default($k,$v);\n		}\n		return;\n	}\n\n	$name = mem_form_label2name($key);\n\n	if ($val == NULL)\n	{\n		return (isset($mem_form_default[$name]) ? $mem_form_default[$name] : false);\n	}\n\n	$mem_form_default[$name] = $val;\n\n	return $val;\n}\n\n\n\nfunction mem_form_mail($from,$reply,$to,$subject,$msg, $content_type=\'text/plain\')\n{\n	global $prefs;\n\n	if (!is_callable(\'mail\'))\n		return false;\n\n	$to = mem_form_strip($to);\n	$from = mem_form_strip($from);\n	$reply = mem_form_strip($reply);\n	$subject = mem_form_strip($subject);\n	$msg = mem_form_strip($msg,FALSE);\n\n	if ($prefs[\'override_emailcharset\'] and is_callable(\'utf8_decode\')) {\n		$charset = \'ISO-8859-1\';\n		$subject = utf8_decode($subject);\n		$msg     = utf8_decode($msg);\n	}\n	else {\n		$charset = \'UTF-8\';\n	}\n\n	$subject = mem_form_mailheader($subject,\'text\');\n\n	$sep = !is_windows() ? \"\\n\" : \"\\r\\n\";\n\n	$headers = \'From: \'.$from.\n		($reply ? ($sep.\'Reply-To: \'.$reply) : \'\').\n		$sep.\'X-Mailer: Textpattern (mem_form)\'.\n		$sep.\'X-Originating-IP: \'.mem_form_strip((!empty($_SERVER[\'HTTP_X_FORWARDED_FOR\']) ? $_SERVER[\'HTTP_X_FORWARDED_FOR\'].\' via \' : \'\').$_SERVER[\'REMOTE_ADDR\']).\n		$sep.\'Content-Transfer-Encoding: 8bit\'.\n		$sep.\'Content-Type: \'.$content_type.\'; charset=\"\'.$charset.\'\"\';\n\n	return mail($to, $subject, $msg, $headers);\n}\n\nfunction mem_form_mailheader($string, $type)\n{\n	global $prefs;\n\n	if (!strstr($string,\'=?\') and !preg_match(\'/[\\x00-\\x1F\\x7F-\\xFF]/\', $string)) {\n		if (\"phrase\" == $type) {\n			if (preg_match(\'/[][()<>@,;:\".\\x5C]/\', $string)) {\n				$string = \'\"\'. strtr($string, array(\"\\\\\" => \"\\\\\\\\\", \'\"\' => \'\\\"\')) . \'\"\';\n			}\n		}\n		elseif (\"text\" != $type) {\n			trigger_error(\'Unknown encode_mailheader type\', E_USER_WARNING);\n		}\n		return $string;\n	}\n	if ($prefs[\'override_emailcharset\']) {\n		$start = \'=?ISO-8859-1?B?\';\n		$pcre  = \'/.{1,42}/s\';\n	}\n	else {\n		$start = \'=?UTF-8?B?\';\n		$pcre  = \'/.{1,45}(?=[\\x00-\\x7F\\xC0-\\xFF]|$)/s\';\n	}\n	$end = \'?=\';\n	$sep = is_windows() ? \"\\r\\n\" : \"\\n\";\n	preg_match_all($pcre, $string, $matches);\n	return $start . join($end.$sep.\' \'.$start, array_map(\'base64_encode\',$matches[0])) . $end;\n}\n\nfunction mem_form_strip($str, $header = TRUE) {\n	if ($header) $str = strip_rn($str);\n	return preg_replace(\'/[\\x00]/\', \' \', $str);\n}\n\n///////////////////////////////////////////////\n// Spam Evaluator\nclass mem_form_evaluation\n{\n	var $status;\n\n	function mem_form_evaluation() {\n		$this->status = 0;\n	}\n\n	function add_status($rating=-1) {\n		$this->status += $rating;\n	}\n\n	function get_status() {\n		return $this->status;\n	}\n\n	function is_spam() {\n		return ($this->status < 0);\n	}\n}\n\nfunction &get_mem_form_evaluator()\n{\n	static $instance;\n\n	if(!isset($instance)) {\n		$instance = new mem_form_evaluation();\n	}\n	return $instance;\n}\n','c01fb0861a5b423f451b555d59f225ef',2,5,0),
	('smd_query',1,'Stef Dawson','http://stefdawson.com/','0.50','Generic database access via SQL','<div id=\"smd_help\">\n\n	<h1>smd_query</h1>\n\n	<p>The laziest tag ever! Allows you to make ad-hoc queries to the database and process the results, row by row, in a form or container.</p>\n\n	<h2>Features</h2>\n\n	<ul>\n		<li>Supports simple queries with a reduced syntax (<span class=\"caps\">SELECT</span> cols <span class=\"caps\">FROM</span> table <span class=\"caps\">WHERE</span> clause) or your own custom queries</li>\n		<li>Read information from any part of the current article, image (planned), file, link, <code>&lt;txp:variable /&gt;</code> or <span class=\"caps\">URL</span> line. If any fields are missing you can specify a default value</li>\n		<li>Optionally filter the <span class=\"caps\">URL</span> input using regular expressions, for safety</li>\n		<li>Each row can be passed to a form (or the plugin can be used as a container tag with or without <code>&lt;txp:else /&gt;</code>) to display the results</li>\n		<li>Column headings may be output using a second form</li>\n		<li>Result sets can be paginated, with support for a paging form</li>\n	</ul>\n\n	<h2>Author</h2>\n\n	<p><a href=\"http://stefdawson.com/contact\">Stef Dawson</a></p>\n\n	<h2>Installation / Uninstallation</h2>\n\n	<p>Download the plugin from either <a href=\"http://textpattern.org/plugins/976/smd_query\">textpattern.org</a>, or the <a href=\"http://stefdawson.com/sw\">software page</a>, paste the code into the <span class=\"caps\">TXP</span> Admin -&gt; Plugins pane, install and enable the plugin. Visit the <a href=\"http://forum.textpattern.com/viewtopic.php?id=27279\">forum thread</a> for more info or to report on the success or otherwise of the plugin.</p>\n\n	<p>Uninstall by simply deleting the plugin from the Admin-&gt;Plugins pane.</p>\n\n	<h2><code>&lt;txp:smd_query /&gt;</code> usage</h2>\n\n	<p>Use this tag in any page, form, article, file, link, etc context to grab stuff from the database. The plugin can operate in one of two modes:</p>\n\n	<ol>\n		<li>simple mode just allows <code>SELECT stuff FROM table WHERE clause</code></li>\n		<li>advanced mode uses the <code>query</code> attribute so you can design your own query. It can include <span class=\"caps\">COUNT</span> (*), joins, anything; perhaps even <span class=\"caps\">INSERT</span> and <span class=\"caps\">UPDATE</span> (?) although it&#8217;s untested and liable to flooding</li>\n	</ol>\n\n	<h3 class=\"atts \" id=\"attributes\">Attributes</h3>\n\n	<h4>Simple queries</h4>\n\n	<ul class=\"atts\">\n		<li><span class=\"atnm\">column</span> : comma-separated list of columns to retrieve from the database</li>\n		<li><span class=\"atnm\">table</span> : name of the table to retrieve the columns from (yes, non-<span class=\"caps\">TXP</span> tables are also supported if they are in the same database :-)</li>\n		<li><span class=\"atnm\">where</span> : any extra clause you wish to specify. Defaults to &#8220;the whole darn table&#8221;</li>\n	</ul>\n\n	<h4>Advanced queries</h4>\n\n	<ul>\n		<li><span class=\"atnm\">query</span> : any query you like can be used here. Overrides <code>column</code>, <code>table</code> and <code>where</code></li>\n		<li><span class=\"atnm\">mode</span> : you should not need to alter this parameter as it is set to automatically detect the query type. If you are using <span class=\"caps\">SELECT</span> or <span class=\"caps\">SHOW</span> statements, the mode is set to <code>output</code>; for any other type of query (e.g. <span class=\"caps\">INSERT</span>/UPDATE) it is set to <code>input</code>. The only difference between the two modes is that if it set to <code>input</code> you can use smd_query as a self-closing tag because it does not use the form/container to parse the result set. Change this parameter only if the plugin detects the mode wrongly or you are doing something unorthodox with your query. Default: <code>auto</code></li>\n		<li><span class=\"atnm\">populate</span> : you usually use <code>{replacement}</code> variables in your smd_query container but if you are dealing with the native Textpattern content types (article, image, file, link) you can inform smd_query which of the four you are using via this attribute. You can then use <span class=\"caps\">TXP</span> tags inside your form/container. See <a href=\"#eg13\">example 13</a></li>\n	</ul>\n\n	<h4>Forms and paging</h4>\n\n	<ul>\n		<li><span class=\"atnm\">form</span> : the form to use to parse each returned row. See <a href=\"#replacements\">replacements</a>. If not specified, the plugin will use anything contained between its opening and closing tag</li>\n		<li><span class=\"atnm\">colsform</span> : optional <span class=\"caps\">TXP</span> form to parse any header row containing column names (of limited use)</li>\n		<li><span class=\"atnm\">pageform</span> : optional <span class=\"caps\">TXP</span> form used to specify the layout of any paging navigation and statistics such as page number, quantity of records per page, total number of records, etc.</li>\n		<li><span class=\"atnm\">pagepos</span> : the position of the paging information. Options are <code>below</code> (the default), <code>above</code>, or both of them separated by <code>delim</code></li>\n		<li><span class=\"atnm\">preparse</span> : normally, any container or form will have its replacement variables swapped for content and <em>then</em> it will be parsed to process any <span class=\"caps\">TXP</span> tags. If you wish to reverse this order so that the container is parsed first before the replacements are made, specify <code>preparse=&quot;1&quot;</code>. Very useful when using the <code>&lt;txp:yield /&gt;</code> tag (see <a href=\"#eg9\">example 9</a>). Default: 0</li>\n		<li><span class=\"atnm\">limit</span> : show this many results per page. Has no bearing on any <span class=\"caps\">SQL</span> <code>LIMIT</code> you may set. Setting a <code>limit</code> in the smd_query tag switches paging on automatically so you can use the <code>&lt;txp:older /&gt;</code> and <code>&lt;txp:newer /&gt;</code> tags inside your <code>pageform</code> to step through each page of results. You may also construct your own paging (see <a href=\"#eg11\">example 11</a>)</li>\n		<li><span class=\"atnm\">offset</span> : skip this many rows before outputting the results</li>\n		<li><span class=\"atnm\">pagevar</span> : if you are putting an smd_query on the same page as a standard article list, the built-in newer and older tags will clash with those of smd_query; clicking next/prev will step through both your result set and your article list. Specify a different variable name here so the two lists can be navigated independently, e.g. <code>pagevar=&quot;qpage&quot;</code>. Note that if you change this, you will have to generate your own custom newer/older links (see <a href=\"#eg11\">example 11</a>) and the <a href=\"#smd_qif\">conditional tags</a>. You may also use the special value <code>pagevar=&quot;SMD_QUERY_UNIQUE_ID&quot;</code> which will assign the paging variable to this specific instance of your query. This will allow you to use multiple smd_query tags on a single page and navigate them independently using the same <code>pageform</code> (see <a href=\"#eg12\">example 12</a> for details). Default: <code>pg</code></li>\n	</ul>\n\n	<h4>Filters</h4>\n\n	<ul>\n		<li><span class=\"atnm\">urlfilter</span> : filter <span class=\"caps\">URL</span> input with this list of regular expressions (each separated by <code>delim</code>)</li>\n		<li><span class=\"atnm\">urlreplace</span> : replace each filtered <span class=\"caps\">URL</span> element listed in <code>urlfilter</code> with this list of regular expressions (each separated by <code>delim</code>). If not used, anything matching <code>urlfilter</code> will be removed from any <span class=\"caps\">URL</span> variables. See <a href=\"#filtering\">Filtering and injection</a></li>\n		<li><span class=\"atnm\">defaults</span> : comma separated list of values to use in the event some field you specified doesn&#8217;t exist. Each default should be given as <code>name: value</code> (the <code>:</code> is configurable via the <code>paramdelim</code> attribute). For example <code>defaults=&quot;id: 1, my_cat: mammals, user_sec: ?defsec&quot;</code> would mean that if the <code>id</code> field was blank, the number 1 would be used; if the variable <code>my_cat</code> was empty, the word <code>mammals</code> would be used; and if the <code>user_sec</code> variable was empty, use the default value as found in the variable <code>defsec</code> (which could have been set via a <code>&lt;txp:variable /&gt;</code> earlier in the page)</li>\n		<li><span class=\"atnm\">escape</span> : list of column names with which to escape <span class=\"caps\">HTML</span> entities. Useful if you have returned body or excerpt blocks that may contain apostrophes that could kill tags inside the smd_query container</li>\n	</ul>\n\n	<h4>Tag/class/formatting attributes</h4>\n\n	<ul>\n		<li><span class=\"atnm\">label</span> : label to display above the entire output</li>\n		<li><span class=\"atnm\">labeltag</span> : the (X)HTML tag to surround the label with. Specify it without angle brackets (e.g. <code>labeltag=&quot;h3&quot;</code>)</li>\n		<li><span class=\"atnm\">wraptag</span> : the (X)HTML tag to surround the entire output (e.g. <code>wraptag=&quot;table&quot;</code>)</li>\n		<li><span class=\"atnm\">html_id</span> : <span class=\"caps\">HTML</span> ID to apply to the wraptag</li>\n		<li><span class=\"atnm\">class</span> : <span class=\"caps\">CSS</span> class name to apply to the wraptag</li>\n		<li><span class=\"atnm\">break</span> : each returned row of data will be wrapped with this tag (e.g. <code>break=&quot;tr&quot;</code>)</li>\n		<li><span class=\"atnm\">breakclass</span> : <span class=\"caps\">CSS</span> class name to apply to the break tag</li>\n	</ul>\n\n	<h4>Plugin customisation</h4>\n\n	<ul>\n		<li><span class=\"atnm\">strictfields</span> : when using &#8216;?&#8217; fields, spaces are allowed in field names. Set <code>strictfields=&quot;1&quot;</code> to forbid spaces. Default: 0</li>\n		<li><span class=\"atnm\">delim</span> : the delimiter to use between patterns in <code>urlfilter</code> and <code>urlreplace</code>. Default: comma (<code>,</code>)</li>\n		<li><span class=\"atnm\">paramdelim</span> : the delimiter to use between name-value pairs in <code>defaults</code>. Default: colon (<code>:</code>)</li>\n		<li><span class=\"atnm\">hashsize</span> : (should not be needed) the plugin assigns a 32-character, unique reference to the current smd_query based on your query attributes. <code>hashsize</code> governs the mechanism for making this long reference shorter. It comprises two numbers separated by a colon; the first is the length of the uniqe ID, the second is how many characters to skip past each time a character is chosen. For example, if the unique_reference was <code>0cf285879bf9d6b812539eb748fbc8f6</code> then <code>hashsize=&quot;6:5&quot;</code> would make a 6-character unique ID using every 5th character; in other words <code>05f898</code>. If at any time, you &#8220;fall off&#8221; the end of the long string, the plugin wraps back to the beginning of the string and continues counting. Default: <code>6:5</code></li>\n		<li><span class=\"atnm\">silent</span> : if your query contains an error (wrong column name or some malformed input), the plugin will issue a <span class=\"caps\">TXP</span> error message. Using <code>silent=&quot;1&quot;</code> will attempt to hide this error message</li>\n		<li><span class=\"atnm\">count</span> : Can be either &#8220;up&#8221; (the default) or &#8220;down&#8221;. See <a href=\"#replacements\">{smd_thisrow}</a></li>\n		<li><span class=\"atnm\">debug</span> : set to 1 to show some debug output; use 2 to show a bit more detail</li>\n	</ul>\n\n	<p>The attributes <code>query</code>, <code>column</code>, <code>table</code> and <code>where</code> can contain replacements themselves to read values from the current context. Specify the field name with a <code>?</code> in front of it (e.g. <code>query=&quot;SELECT * FROM txp_image WHERE category=&#39;?category1&#39; OR category=&#39;?category2&#39;</code>) would show images that had their category set to one of the article&#8217;s categories.</p>\n\n	<p>The &#8216;?&#8217; fields can be any item from the <span class=\"caps\">TXP</span> universe, including anything set in a <code>&lt;txp:variable /&gt;</code> or some user-input on the <span class=\"caps\">URL</span> address bar. Fields are processed in the following order; as soon as a matching entry is found, the rest are not checked:</p>\n\n	<p><code>&lt;txp:variable /&gt;</code> -&gt; <code>$_SERVER</code> var -&gt; image -&gt; file -&gt; link -&gt; global article -&gt; current article -&gt; <span class=\"caps\">URL</span> var -&gt; default value -&gt; verbatim (without &#8216;?&#8217;)</p>\n\n	<p>This hierarchy allows some degree of safety: since <span class=\"caps\">TXP</span> variables are ultimately set by you, they are checked first, then gradually less specific stuff is checked until <span class=\"caps\">URL</span> variables are considered at the bottom of the food chain.</p>\n\n	<h2 class=\"atts \" id=\"replacements\">Replacement tags</h2>\n\n	<p>In your output form you may specify any column name surrounded with <code>{}</code> characters to display that field. So if your query was <code>SELECT id, name, category FROM txp_image WHERE ext=&quot;.jpg&quot;</code> you would have the following replacements available:</p>\n\n	<ul>\n		<li><span class=\"atnm\">{id}</span> : the image ID</li>\n		<li><span class=\"atnm\">{name}</span> : the image filename</li>\n		<li><span class=\"atnm\">{category}</span> : the image category</li>\n	</ul>\n\n	<p>Just put those names into your <code>form</code> among other normal <span class=\"caps\">HTML</span> or <span class=\"caps\">TXP</span> tags, and the relevant value from that row will be displayed. The replacements honour any <code>AS</code> statement you may employ to rename them.</p>\n\n	<p>In addition, the following replacements are added to each row:</p>\n\n	<ul>\n		<li><span class=\"atnm\">{smd_allrows}</span> : the total number of rows in the result set<sup id=\"fnrev18296387764c7d6d832a491\" class=\"footnote\"><a href=\"#fn18296387764c7d6d832a491\">1</a></sup></li>\n		<li><span class=\"atnm\">{smd_rows}</span> : the total number of rows visible on this page</li>\n		<li><span class=\"atnm\">{smd_pages}</span> : the total number of pages in this result set<sup class=\"footnote\"><a href=\"#fn18296387764c7d6d832a491\">1</a></sup></li>\n		<li><span class=\"atnm\">{smd_thispage}</span> : the current page number being viewed<sup class=\"footnote\"><a href=\"#fn18296387764c7d6d832a491\">1</a></sup></li>\n		<li><span class=\"atnm\">{smd_thisrow}</span> : the current row number on this page</li>\n		<li><span class=\"atnm\">{smd_thisindex}</span> : the current row number (zero-based) on this page</li>\n		<li><span class=\"atnm\">{smd_cursor}</span> : the current row number from the start of the result set</li>\n		<li><span class=\"atnm\">{smd_cursorindex}</span> : the current row number from the start of the result set (zero-based)</li>\n	</ul>\n\n	<p id=\"fn18296387764c7d6d832a491\" class=\"footnote\"><sup>1</sup> These three items are also available in your designated <code>pageform</code>. The pageform can also utilise these extra replacements:</p>\n\n	<ul>\n		<li><span class=\"atnm\">{smd_prevpage}</span> : the previous page number (empty if on first page)</li>\n		<li><span class=\"atnm\">{smd_nextpage}</span> : the next page number (empty if on last page)</li>\n		<li><span class=\"atnm\">{smd_row_start}</span> : the first row number being displayed</li>\n		<li><span class=\"atnm\">{smd_row_end}</span> : the last row number being displayed</li>\n		<li><span class=\"atnm\">{smd_rows_prev}</span> : the number of rows on the previous page. Will either be the value of your <code>limit</code>, or 0 if on the first page</li>\n		<li><span class=\"atnm\">{smd_rows_next}</span> : the number of rows on the next page</li>\n		<li><span class=\"atnm\">{smd_query_unique_id}</span> : the unique ID assigned to this smd_query tag (see the <code>hashsize</code> attribute and <a href=\"#eg12\">example 12</a> for more)</li>\n	</ul>\n\n	<p>These are useful for tables to show row numbers, but can also be used for pagination or can be tested with smd_if to take action from within your form. <code>{smd_thisrow}</code>, <code>{smd_thisindex}</code>, <code>{smd_cursor}</code>, and <code>{smd_cursorindex}</code> count up or down depending on the <code>count</code> attribute (<code>{smd_row_start}</code> and <code>{smd_row_end}</code> also change accordingly).</p>\n\n	<h2 id=\"smd_qif\"><code>&lt;txp:smd_query_if_prev&gt; / &lt;txp:smd_query_if_next&gt;</code></h2>\n\n	<p>Use these container tags to determine if there is a next or previous page and take action if so. Can only be used inside <code>pageform</code>, thus all <a href=\"#replacements\">paging replacement variables</a> are available inside these tags.</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query_if_prev&gt;Previous page&lt;/txp:smd_query_if_prev&gt;\n&lt;txp:smd_query_if_next&gt;Next page&lt;/txp:smd_query_if_next&gt;\n</code></pre>\n\n	<p>See <a href=\"#eg11\">example 11</a> for more.</p>\n\n	<h2 id=\"filtering\">Filtering and injection</h2>\n\n	<p>After great deliberation, access to the <span class=\"caps\">URL</span> line has been granted so you may employ user-entered data in your queries, allowing complete flexibility for your user base. However, as Peter Parker&#8217;s conscience might say:</p>\n\n	<blockquote>\n		<p>With great power comes great responsibility</p>\n	</blockquote>\n\n	<p>Not everybody out there is trustworthy so heed this warning: <strong>Assume <span class=\"caps\">ALL</span> user input is tainted</strong>. Check everything. If you want to know more about what people can do with access to one simple portion of your <span class=\"caps\">SQL</span> query, Google for &#8216;<span class=\"caps\">SQL</span> injection&#8217;.</p>\n\n	<p>For those still reading, the good news is that the plugin does everything it can to pre-filter stuff on the <span class=\"caps\">URL</span> line before it gets to the query. This should make your user input safe enough, but for the paranoid (or sensible) there are two attributes you can use to clamp down allowable user input. If you know anything about <a href=\"http://www.regular-expressions.info/quickstart.html\">regular expressions</a> or are familiar with the <span class=\"caps\">PHP</span> function <a href=\"http://uk2.php.net/preg_replace\">preg_replace()</a> then you&#8217;ll be right at home because, put simply, you can optionally pass every <span class=\"caps\">URL</span> variable through it to remove stuff you don&#8217;t want.</p>\n\n	<h3 id=\"urlfilter\">urlfilter</h3>\n\n	<p>This takes a comma-separated list (at least by default; override the comma with the <code>delim</code> attribute if you need to use commas in your filter strings) of complete regular expression patterns that you wish to search for, in every <span class=\"caps\">URL</span> variable. For example, if you wanted to ensure that your users only entered digits you could specify this:</p>\n\n<pre class=\"block\"><code class=\"block\">urlfilter=&quot;/[^\\d]+/&quot;\n</code></pre>\n\n	<p>Briefly, the starting and trailing <code>/</code> marks delimit a regular expression &#8212; they must always be present. The square brackets denote a group of characters, the circumflex negates the group, the <code>\\d</code> means &#8220;any digit&#8221; and the <code>+</code> specifies that you want it to check for one or more of the preceding things. In other words, look for anything in the input that is <strong>not</strong> one or more digits. That would match any letters, quotes, special characters, anything at all that wasn&#8217;t a zero to nine.</p>\n\n	<p>You can specify more than one filter like this:</p>\n\n<pre class=\"block\"><code class=\"block\">urlfilter=&quot;/\\d/, /\\s/&quot;\n</code></pre>\n\n	<p>That would look for any single digit and any single space character. That&#8217;s a simple example and you could do it all in one regex, but splitting them up can help you filter stuff better (see <a href=\"#urlreplace\">urlreplace</a> for an example).</p>\n\n	<p>By default, if you just specify <code>urlfilter</code> without <code>urlreplace</code>, anything that matches your filter patterns will be removed from the user input.</p>\n\n	<h3 id=\"urlreplace\">urlreplace</h3>\n\n	<p>The other half of the filtering jigsaw allows you to not just remove anything that matches, but actually replace it with something else. Specify a fixed string, a list of fixed strings or more <span class=\"caps\">URL</span> patterns to replace whatever matches your <code>urlfilter</code>. Using the first filter example from above, you could replace anything that is not a digit with a hyphen by specifying:</p>\n\n<pre class=\"block\"><code class=\"block\">urlreplace=&quot;-&quot;\n</code></pre>\n\n	<p>So if you allowed a <span class=\"caps\">URL</span> variable called <code>digits</code> and a site visitor entered <code>?digits=Zaphod 4 Trillian</code>, your <span class=\"caps\">URL</span> variable would become: <code>-------4--------</code>. Not much use, but hey, it&#8217;s an example!</p>\n\n	<p>As with <code>urlfilter</code> you can specify more than one replacement and they will pair up with their corresponding filter. In other words, if you take the second filter above (<code>urlfilter=&quot;/\\d/, /\\s/&quot;</code>) and used this:</p>\n\n<pre class=\"block\"><code class=\"block\">urlreplace=&quot;, -&quot;\n</code></pre>\n\n	<p>Then any digit in your user input would be removed (there is nothing before the comma) and any space character would be replaced with a hyphen.</p>\n\n	<p>If at any time a field gives an empty result (i.e. it totally fails any <code>urlfilter</code> tests or simply returns nothing because it has not been set), any <code>defaults</code> assigned to that variable will be used instead. If there are no defaults, the name of the variable itself (minus its <code>?</code>) will be used.</p>\n\n	<p>With these two filters at your disposal and the ability to specify default values for user variables, you can make your queries much safer to the outside world and start using <span class=\"caps\">HTML</span> forms to gather input from users that can then be plugged into queries, fairly safe in the knowledge that your database is not going to implode.</p>\n\n	<p>But please remember:</p>\n\n	<blockquote>\n		<p>Assume <strong>all</strong> user input is tainted: check everything.</p>\n	</blockquote>\n\n	<h2 id=\"examples\">Examples</h2>\n\n	<h3 id=\"eg1\">Example 1: Simple image select query</h3>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query column=&quot;*&quot;\n     table=&quot;txp_image&quot;\n     where=&quot;category=&#39;mammal&#39; OR category=&#39;bird&#39;&quot;\n     form=&quot;dbout&quot; wraptag=&quot;ul&quot; break=&quot;li&quot; /&gt;\n</code></pre>\n\n	<p>With form <code>dbout</code> containing:</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;a href=&quot;/images/{id}{ext}&quot; /&gt;&lt;txp:thumbnail name=&quot;{name}&quot; /&gt;&lt;/a&gt;\n</code></pre>\n\n	<p>Will render an unordered list of thumbnails with links to the fullsize image if the category is either <code>mammal</code> or <code>bird</code>.</p>\n\n	<h3 id=\"eg2\">Example 2: link category list to parent</h3>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query query=&quot;SELECT DISTINCT\n     txc.name FROM txp_category AS txc, textpattern AS txp\n     WHERE type=&#39;article&#39; AND parent=&#39;animals&#39;\n     AND (txc.name = txp.category1 OR txc.name = txp.category2)\n     form=&quot;dbout&quot; wraptag=&quot;ul&quot; break=&quot;li&quot; /&gt;\n</code></pre>\n\n	<p>With form <code>dbout</code> containing:</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:category name=&quot;{name}&quot; link=&quot;1&quot; title=&quot;1&quot; /&gt;\n</code></pre>\n\n	<p>Will render a list of linkable category names that contain articles with categories that have the given parent. If a category is unused it will not be listed.</p>\n\n	<h3 id=\"eg3\">Example 3: child category counts</h3>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query query=&quot;SELECT DISTINCT\n     txc.name, COUNT(*) AS count FROM txp_category AS txc,\n     textpattern AS txp\n     WHERE type=&#39;article&#39; AND parent=&#39;?custom3&#39;\n     AND (txc.name = txp.category1 OR txc.name = txp.category2)\n     GROUP BY txc.name&quot;\n     form=&quot;dbout&quot; wraptag=&quot;ul&quot; break=&quot;li&quot; /&gt;\n</code></pre>\n\n	<p>With form <code>dbout</code> containing:</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:category name=&quot;{name}&quot; link=&quot;1&quot; title=&quot;1&quot; /&gt; ({count})\n</code></pre>\n\n	<p>Will read the parent item from the <code>custom3</code> field and render a similar list to Example 2 but with the article counts added in parentheses afterwards.</p>\n\n	<h3 id=\"eg4\">Example 4: Top 10 downloads</h3>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query column=&quot;*&quot; table=&quot;txp_file&quot;\n     where=&quot;(category=&#39;?category1&#39; OR category=&#39;?category2&#39;)\n     AND status=4 ORDER BY downloads desc LIMIT 10&quot;\n     wraptag=&quot;table&quot; break=&quot;tr&quot;\n     label=&quot;Most popular downloads&quot; labeltag=&quot;h3&quot;&gt;\n  &lt;td&gt;&lt;txp:file_download_link id=&quot;{id}&quot;&gt;{filename}&lt;/txp:file_download_link&gt;&lt;/td&gt;\n  &lt;td&gt;{description}&lt;/td&gt;\n  &lt;td&gt;downloads: {downloads}&lt;/td&gt;\n&lt;txp:else /&gt;\n  &lt;p&gt;No recent downloads, sorry&lt;/p&gt;\n&lt;/txp:smd_query&gt;\n</code></pre>\n\n	<p>This one uses the plugin as a container tag instead of a form and tabulates the top 10 downloads (status=live) that have a category matching either of the current article&#8217;s categories, with most popular listed first. If there are no downloads, the <code>&lt;txp:else /&gt;</code> portion displays a message.</p>\n\n	<h3 id=\"eg5\">Example 5: Article keywords related to link</h3>\n\n	<p>Very interesting use case here. Put this in the plainlinks form:</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:linkdesctitle /&gt;\n&lt;txp:smd_query query=&quot;SELECT DISTINCT\n     txp.id, txp.title FROM textpattern AS txp\n     WHERE (txp.keywords LIKE &#39;%,?category%,&#39;\n     OR txp.keywords LIKE &#39;%?category%,&#39;\n     OR txp.keywords LIKE &#39;%,?category%&#39;)\n     GROUP BY txp.title&quot;\n     wraptag=&quot;ul&quot; break=&quot;li&quot;&gt;\n  &lt;txp:permlink id=&quot;{id}&quot;&gt;{title}&lt;/txp:permlink&gt;\n&lt;/txp:smd_query&gt;\n</code></pre>\n\n	<p>When you execute <code>&lt;txp:linklist /&gt;</code> from a page you will get a list of links as usual, but under each one you will see a hyperlinked list of articles that are related (by keyword) to the category of the link.</p>\n\n	<p>The reason it is compared three times is because article keywords are stored like this in the database:</p>\n\n	<p><code>government,conspiracy,id,card,data,biometric,bad,idea</code></p>\n\n	<p>If each category word was compared only once without commas (i.e. <code>txp.keywords LIKE &#39;%?category%&#39;</code>) then a link with category <code>piracy</code> would cause any article containing keyword <code>conspiracy</code> to be included. Essentially, by comparing the category either surrounded by commas, with a comma after it, or with a comma before it, the search is restricted to only match whole words.</p>\n\n	<h3 id=\"eg6\">Example 6: Comparison in queries</h3>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query query=&quot;SELECT *\n     FROM txp_file WHERE downloads &amp;gt;= 42&quot;&gt;\n  &lt;txp:file_download_link id=&quot;{id}&quot;&gt;\n     {filename}\n  &lt;/txp:file_download_link&gt;\n&lt;/txp:smd_query&gt;\n</code></pre>\n\n	<p>Shows links to all downloads where the download count is greater than or equal to 42. Note that under <span class=\"caps\">TXP</span> 4.0.6 and below you must use the <span class=\"caps\">HTML</span> entity names for <code>&amp;gt;</code> and <code>&amp;lt;</code> or the parser gets confused.</p>\n\n	<h3 id=\"eg7\">Example 7: unfiltered <span class=\"caps\">URL</span> params (bad)</h3>\n\n	<p>(a bad query)</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:variable name=&quot;cutoff&quot;\n     value=&quot;42&quot; /&gt;\n&lt;txp:smd_query query=&quot;SELECT Title\n     FROM textpattern\n     WHERE id &lt; &#39;?usercut&#39;&quot;\n     defaults=&quot;usercut: ?cutoff&quot;&gt;\n   &lt;txp:permlink&gt;{Title}&lt;/txp:permlink&gt;\n&lt;/txp:smd_query&gt;\n</code></pre>\n\n	<p>Shows hyperlinks to only those articles with an ID below the number given by the user on the <span class=\"caps\">URL</span> line. If the value is not supplied, the default value from the <span class=\"caps\">TXP</span> variable is used instead (42 in this case).</p>\n\n	<p><strong><span class=\"caps\">NOTE</span></strong>: validation is not performed and you cannot guarantee that the <code>usercut</code> variable is going to be numeric. You should not use this query on a production site unless you add a <code>urlfilter</code> to remove any non-numeric characters (see next example for a better query).</p>\n\n	<h3 id=\"eg8\">Example 8: filtered <span class=\"caps\">URL</span> params (better!)</h3>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query query=&quot;SELECT Title\n     FROM textpattern\n     WHERE status = &#39;?user_status&#39;&quot;\n     urlfilter=&quot;/[^1-5]/&quot;\n     defaults=&quot;user_status: 4&quot;&gt;\n   &lt;txp:permlink&gt;{Title}&lt;/txp:permlink&gt;\n&lt;/txp:smd_query&gt;\n</code></pre>\n\n	<p>Pulls all articles out of the database that match the given status. This is a more robust query than Example 7 because it checks if the <code>user_status</code> field is 1, 2, 3, 4, or 5 (the regex specifies to remove everything from the user_status variable that is not in the range 1-5). If this condition is not met &#8212; e.g. the user specifies <code>user_status=6</code> or <code>user_status=&quot;abc&quot;</code> &#8212; then user_status will be set to <code>4</code>. Note that using <code>user_status=&quot;Zaphod 4 Trillian&quot;</code> on the <span class=\"caps\">URL</span> address bar will actually pass the test because all characters other than the number &#8216;4&#8217; will be removed.</p>\n\n	<p>You could use a <code>&lt;txp:variable /&gt;</code> if you wish and set all your defaults in a special form, ready to use throughout your page. In that case &#8212; if you had created a variable called <code>dflt_stat</code> &#8212; you might prefer to use <code>defaults=&quot;user_status: ?dflt_stat&quot;</code>.</p>\n\n	<p>Query-tastic :-)</p>\n\n	<h3 id=\"eg9\">Example 9: Using preparse with <code>&lt;txp:yield /&gt;</code></h3>\n\n	<p>Sometimes you may want to re-use a query in a few places throughout your site and show different content. For example, the same query could be used for logged-in and not-logged-in users but you&#8217;d see more detail if you were logged in. Normally you would need to write the query more than once, which is far from ideal. This technique allows you to write the query just once and reuse the form. Put this in a form called <code>user_table</code>:</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query query=&quot;SELECT * FROM txp_users&quot;\n     wraptag=&quot;table&quot; break=&quot;tr&quot; preparse=&quot;1&quot;&gt;\n   &lt;txp:yield /&gt;\n&lt;/txp:smd_query&gt;\n</code></pre>\n\n	<p>Using <code>&lt;txp:output_form&gt;</code> as a container (in <span class=\"caps\">TXP</span> 4.2.0 or higher) you can then call the query like this to show basic info:</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:output_form form=&quot;user_table&quot;&gt;\n&lt;td&gt;{name}&lt;/td&gt;\n&lt;td&gt;{RealName}&lt;/td&gt;\n&lt;/txp:output_form&gt;\n</code></pre>\n\n	<p>and like this for more detailed output:</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:output_form form=&quot;user_table&quot;&gt;\n&lt;td&gt;{name}&lt;/td&gt;\n&lt;td&gt;{RealName}&lt;/td&gt;\n&lt;td&gt;{email}&lt;/td&gt;\n&lt;td&gt;{last_access}&lt;/td&gt;\n&lt;/txp:output_form&gt;\n</code></pre>\n\n	<p>Note that when using smd_query in this manner you must remember to use <code>preparse=&quot;1&quot;</code> because you need to fetch the contents of the smd_query container (the <code>&lt;txp:yield /&gt;</code> tag in this case), parse it so it gets the contents of <code>&lt;txp:output_form&gt;</code>&#8217;s container and <em>then</em> applies the replacements. Without the <code>preparse</code>, the plugin tries to apply the replacements directly to the smd_query container, which does not actually contain any <code>{...}</code> tags.</p>\n\n	<h3 id=\"eg10\">Example 10: pagination</h3>\n\n	<p>Iterate over some <span class=\"caps\">TXP</span> user information, 5 people at a time:</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query query=&quot;SELECT * from txp_users&quot;\n     limit=&quot;5&quot; wraptag=&quot;ul&quot; break=&quot;li&quot;\n     pageform=&quot;page_info&quot;&gt;\n   {RealName} ({privs})\n&lt;/txp:smd_query&gt;\n</code></pre>\n\n	<p>In <code>page_info</code>:</p>\n\n<pre class=\"block\"><code class=\"block\">Page {smd_thispage} of {smd_pages} |\nShowing records {smd_row_start} to {smd_row_end}\nof {smd_allrows} |\n&lt;txp:older&gt;Next {smd_rows_next}&lt;/txp:older&gt; |\n&lt;txp:newer&gt;Previous {smd_rows_prev}&lt;/txp:newer&gt;\n</code></pre>\n\n	<p>Underneath your result set you would then see the information regarding which page and rows your visitors were currently viewing. You would also see next/prev links to the rest of the results.</p>\n\n	<h3 id=\"eg11\">Example 11: custom pagination</h3>\n\n	<p>There is a problem with <a href=\"#eg10\">example 10</a> ; if you use txp:older and txp:newer when you are showing a standard article list; the paging tags will step through <em>both</em> your result set and your articles. To break the association between them you need to alter the variable that <span class=\"caps\">TXP</span> uses to control paging. It is called <code>pg</code>and you&#8217;ll notice it in the <span class=\"caps\">URL</span> (<code>?pg=2</code> for example) as you step through article lists.</p>\n\n	<p>Using the <code>pagevar</code> attribute you can tell smd_query to watch for your own variable instead of the default <code>pg</code> and thus build your own next/prev links that only control smd_query.</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query query=&quot;SELECT * from txp_users&quot;\n     limit=&quot;5&quot; wraptag=&quot;ul&quot; break=&quot;li&quot;\n     pageform=&quot;page_info&quot; pagevar=&quot;smd_qpg&quot;&gt;\n   {RealName} ({privs})\n&lt;/txp:smd_query&gt;\n</code></pre>\n\n	<p>In <code>page_info</code>:</p>\n\n<pre class=\"block\"><code class=\"block\">Page {smd_thispage} of {smd_pages} |\n   Showing records {smd_row_start}\n   to {smd_row_end} of {smd_allrows} |\n&lt;txp:smd_query_if_prev&gt;\n  &lt;a href=&quot;&lt;txp:permlink /&gt;?smd_qpg={smd_prevpage}&quot;&gt;\n     Previous {smd_rows_prev}&lt;/a&gt;\n&lt;/txp:smd_query_if_prev&gt;\n&lt;txp:smd_query_if_next&gt;\n  &lt;a href=&quot;&lt;txp:permlink /&gt;?smd_qpg={smd_nextpage}&quot;&gt;\n     Next {smd_rows_next}&lt;/a&gt;\n&lt;/txp:smd_query_if_next&gt;\n</code></pre>\n\n	<h3 id=\"eg12\">Example 12: using <code>SMD_QUERY_UNIQUE_ID</code></h3>\n\n	<p>If you wish to use more than one smd_query on a single page but share a pageform between them you can use <span class=\"caps\">SMD</span>_QUERY_UNIQUE_ID as the paging variable:</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query query=&quot;SELECT * from txp_users&quot;\n     limit=&quot;5&quot; wraptag=&quot;ul&quot; break=&quot;li&quot;\n     pageform=&quot;page_info&quot;\n     pagevar=&quot;SMD_QUERY_UNIQUE_ID&quot;&gt;\n   {RealName} ({privs})\n&lt;/txp:smd_query&gt;\n</code></pre>\n\n	<p>In <code>page_info</code>:</p>\n\n<pre class=\"block\"><code class=\"block\">Page {smd_thispage} of {smd_pages} |\n   Showing records {smd_row_start}\n   to {smd_row_end} of {smd_allrows} |\n&lt;txp:smd_query_if_prev&gt;\n  &lt;a href=&quot;&lt;txp:permlink /&gt;?{smd_query_unique_id}={smd_prevpage}&quot;&gt;\n     Previous {smd_rows_prev}&lt;/a&gt;\n&lt;/txp:smd_query_if_prev&gt;\n&lt;txp:smd_query_if_next&gt;\n  &lt;a href=&quot;&lt;txp:permlink /&gt;?{smd_query_unique_id}={smd_nextpage}&quot;&gt;\n     Next {smd_rows_next}&lt;/a&gt;\n&lt;/txp:smd_query_if_next&gt;\n</code></pre>\n\n	<p>Note this is just a simple example: you will have to be more clever than that if you are paging independent sets of rows because you will need to incorporate the paging variable from both smd_query tags in your pageform.</p>\n\n	<h3 id=\"eg13\">Example 13: <span class=\"caps\">TXP</span> tags in container</h3>\n\n<pre class=\"block\"><code class=\"block\">==&lt;txp:smd_query query=&quot;SELECT *,\n     unix_timestamp(Posted) as uPosted,\n     unix_timestamp(LastMod) as uLastMod,\n     unix_timestamp(Expires) as uExpires\n     FROM textpattern WHERE Status IN (4,5)&quot;\n     wraptag=&quot;ul&quot; break=&quot;li&quot; html_id=&quot;myQuery&quot;\n     populate=&quot;article&quot;&gt;\n   &lt;txp:title /&gt; [ &lt;txp:posted /&gt; ]\n&lt;/txp:smd_query&gt;==\n</code></pre>\n\n	<p>Note that the <code>populate</code> attribute relies on you extracting <strong>all</strong> columns to satisfy textpattern&#8217;s internal functions so this feature works correctly. A simple <code>select * from ...</code> will not work. In future versions of <span class=\"caps\">TXP</span> this might change and a simple select * may then be enough.</p>\n\n	<p>For reference, these are the extra columns required in 4.2.0 (and earlier):</p>\n\n	<ul>\n		<li>Article: <code>unix_timestamp(Posted) as uPosted, unix_timestamp(LastMod) as uLastMod, unix_timestamp(Expires) as uExpires</code></li>\n		<li>Image: none</li>\n		<li>File: none</li>\n		<li>Link: <code>unix_timestamp(date) as uDate</code></li>\n	</ul>\n\n	<h3 id=\"eg14\">Example 14: <code>&lt;txp:else /&gt;</code> with forms</h3>\n\n	<p>If you wish to use txp tags with an &#8216;else&#8217; clause, you usually need to employ a container. As a convenience, smd_query allows you to use the container&#8217;s <code>&lt;txp:else /&gt;</code> clause with a form so you can re-use the query output and display different results in the event the query returns nothing.</p>\n\n<pre class=\"block\"><code class=\"block\">&lt;txp:smd_query query=&quot;SELECT * FROM txp_users&quot;\n     form=&quot;show_users&quot;&gt;\n&lt;txp:else /&gt;\n&lt;p&gt;No user info&lt;/p&gt;\n&lt;/txp:smd_query&gt;\n</code></pre>\n\n	<p>Your <code>show_users</code> form can contain usual replacement variables and markup to format the results. Perhaps later you may wish to re-use the show_users output in another query:</p>\n\n<pre class=\"block\"><code class=\"block\">==&lt;txp:smd_query query=&quot;SELECT * FROM txp_users WHERE\n     RealName like &#39;%?usr%&#39;&quot; form=&quot;show_users&quot;&gt;\n&lt;txp:else /&gt;\n&lt;p&gt;No matching users found&lt;/p&gt;\n&lt;/txp:smd_query&gt;==\n</code></pre>\n\n	<p>Note that you can display a different error message but use the same form (we&#8217;re escaping Textile here with <code>==</code> so it doesn&#8217;t interpret the percent signs as <code>&lt;span&gt;</code> elements).</p>\n\n	<p>If you are careful and know you will <em>never</em> use a particular form with an smd_query container you can hard-code your &#8216;else&#8217; clause directly in your form and use smd_query as a self-closing tag. Your form will look a bit odd with a seeming &#8216;dangling&#8217; else, but it will work due to the way the <span class=\"caps\">TXP</span> parser operates. If you do try and use a form with a <code>&lt;txp:else /&gt;</code> in it as well as calling the form using an smd_query with a <code>&lt;txp:else /&gt;</code> in its container, Textpattern will throw an error (usually the, perhaps unexpected, <code>tag does not exist</code> error). Be careful!</p>\n\n	<h2 class=\"changelog\">Changelog</h2>\n\n	<ul>\n		<li>22 May 08 | 0.10 | Initial release</li>\n		<li>23 May 08 | 0.11 | Allowed maths in queries (use html entities in TXP4.0.6) and fixed <span class=\"caps\">WHERE</span> clause to default to 1=1 if none supplied (both thanks jm) ; added more detailed file and link support</li>\n		<li>14 Jul 08 | 0.12 | Added <code>txp:else</code> support in container (thanks jakob) ; added <code>silent</code> and <code>count</code> attributes, and the replacement tags <code>{smd_rows} {smd_thisrow} {smd_thisindex}</code></li>\n		<li>23 Nov 08 | 0.20 | Added <code>&lt;txp:variable /&gt;</code> support ; enabled <span class=\"caps\">URL</span> variable support ; added <code>urlfilter</code>, <code>urlreplace</code>, <code>delim</code>, <code>paramdelim</code> and <code>defaults</code> attributes</li>\n		<li>17 Mar 09 | 0.21 | Added <code>$_SERVER</code> var support</li>\n		<li>16 Oct 09 | 0.22 | Added <code>escape</code> attribute (thanks jakob) ; added <code>preparse</code> attribute</li>\n		<li>02 Dec 09 | 0.30 | Added unicode support and <code>strictfields</code> to fix a few bugs (thanks speeke) ; added direct pagination support</li>\n		<li>05 Dec 09 | 0.40 | Added <code>pagevar</code>, <code>{smd_prevpage}</code>, <code>{smd_nextpage}</code>, <code>{smd_rows_prev}</code> and <code>{smd_rows_next}</code>, <code>&lt;txp:smd_query_if_prev&gt;</code> and <code>&lt;txp:smd_query_if_next&gt;</code> ; removed <code>pgonly</code> as paging can now <em>only</em> be performed in the <code>pageform</code></li>\n		<li>17 Jan 10 | 0.41 | Added <code>hashsize</code>, <code>mode</code> and <code>{smd_query_unique_id}</code></li>\n		<li>31 Aug 10 | 0.50 | <code>form</code> overrides container ; container&#8217;s else automatically works in <code>form</code>s ; added <code>populate</code> (thanks atbradley); fixed <span class=\"caps\">PHP</span> 4 compatibility and added <code>html_id</code> and <code>breakclass</code> (thanks makss) ; <span class=\"caps\">SHOW</span> defaults to output mode</li>\n	</ul>\n\n</div>\n<!-- *** BEGIN PLUGIN CSS *** -->\n<style type=\"text/css\">\n#smd_help { line-height:1.5 ;}\n#smd_help code { font-weight:bold; font: 105%/130% \"Courier New\", courier, monospace; background-color: #FFFFCC;}\n#smd_help code.block { font-weight:normal; border:1px dotted #999; background-color: #f0e68c; display:block; margin:10px 10px 20px; padding:10px; }\n#smd_help a:link, #smd_help a:visited { color: #00c; text-decoration: none; border-bottom: 1px solid blue; padding-bottom:1px;}\n#smd_help a:hover, #smd_help a:active { color: blue; text-decoration: none; border-bottom: 2px solid blue; padding-bottom:1px;}\n#smd_help h1 { color: #369; font: 20px Georgia, sans-serif; margin: 0; text-align: center; }\n#smd_help h2 { border-bottom: 1px solid black; padding:10px 0 0; color: #369; font: 17px Georgia, sans-serif; }\n#smd_help h3 { color: #079; font: bold 12px Arial, sans-serif; letter-spacing: 1px; margin: 10px 0 0;text-transform: uppercase; text-decoration:underline;}\n#smd_help h4 { font: bold 11px Arial, sans-serif; letter-spacing: 1px; margin: 10px 0 0 ;text-transform: uppercase; }\n#smd_help .atnm { font-weight:bold; color:#33d; }\n#smd_help .mand { background:#eee; border:1px dotted #999; }\n#smd_help table {width:90%; text-align:center; padding-bottom:1em;}\n#smd_help td, #smd_help th {border:1px solid #999; padding:.5em 0;}\n#smd_help ul { list-style-type:square; }\n#smd_help .required {color:red;}\n#smd_help li { margin:5px 20px 5px 30px; }\n#smd_help .break { margin-top:5px; }\n</style>\n<!-- *** END PLUGIN CSS *** -->\n','function smd_query($atts, $thing=\'\') {\r\n	global $pretext, $smd_query_pginfo, $thispage, $thisarticle, $thisimage, $thisfile, $thislink;\r\n\r\n	extract(lAtts(array(\r\n		\'column\' => \'\',\r\n		\'table\' => \'\',\r\n		\'where\' => \'\',\r\n		\'query\' => \'\',\r\n		\'form\' => \'\',\r\n		\'pageform\' => \'\',\r\n		\'pagevar\' => \'pg\',\r\n		\'pagepos\' => \'below\',\r\n		\'colsform\' => \'\',\r\n		\'escape\' => \'\',\r\n		\'strictfields\' => \'0\',\r\n		\'preparse\' => \'0\',\r\n		\'populate\' => \'\', // one of article, image, file, or link\r\n		\'urlfilter\' => \'\',\r\n		\'urlreplace\' => \'\',\r\n		\'defaults\' => \'\',\r\n		\'delim\' => \',\',\r\n		\'paramdelim\' => \':\',\r\n		\'silent\' => \'0\',\r\n		\'mode\' => \'auto\', // auto chooses one of input (INSERT/UPDATE) or output (QUERY)\r\n		\'count\' => \'up\',\r\n		\'limit\' => 0,\r\n		\'offset\' => 0,\r\n		\'hashsize\' => \'6:5\',\r\n		\'label\' => \'\',\r\n		\'labeltag\' => \'\',\r\n		\'wraptag\' => \'\',\r\n		\'break\' => \'\',\r\n		\'class\' => \'\',\r\n		\'breakclass\' => \'\',\r\n		\'html_id\' => \'\',\r\n		\'debug\' => \'0\',\r\n	),$atts));\r\n\r\n	// Grab the form or embedded $thing\r\n	$falsePart = EvalElse($thing, 0);\r\n\r\n	$thing = ($form) ? fetch_form($form) . (($falsePart) ? \'<txp:else />\' . $falsePart : \'\') : (($thing) ? $thing : \'\');\r\n	$colsform = (empty($colsform)) ? \'\' : fetch_form($colsform);\r\n	$pagebit = array();\r\n	if ($pageform) {\r\n		$pagePosAllowed = array(\"below\", \"above\");\r\n		$paging = 1;\r\n		$pageform = fetch_form($pageform);\r\n		$pagepos = str_replace(\'smd_\', \'\', $pagepos);\r\n		$pagepos = do_list($pagepos, $delim);\r\n		foreach ($pagepos as $pageitem) {\r\n			$pagebit[] = (in_array($pageitem, $pagePosAllowed)) ? $pageitem : $pagePosAllowed[0];\r\n		}\r\n	}\r\n\r\n	// Make a unique hash value for this instance so the queries can be paged independently\r\n	$uniq = \'\';\r\n	$md5 = md5($column.$table.$where.$query.$defaults);\r\n	list($hashLen, $hashSkip) = explode(\':\', $hashsize);\r\n	for ($idx = 0, $cnt = 0; $cnt < $hashLen; $cnt++, $idx = (($idx+$hashSkip) % strlen($md5))) {\r\n		$uniq .= $md5[$idx];\r\n	}\r\n\r\n	$pagevar = ($pagevar == \'SMD_QUERY_UNIQUE_ID\') ? $uniq : $pagevar;\r\n	$urlfilter = (!empty($urlfilter)) ? do_list($urlfilter, $delim) : \'\';\r\n	$urlreplace = (!empty($urlreplace)) ? do_list($urlreplace, $delim) : \'\';\r\n	if ($debug > 0) {\r\n		echo \"++ URL FILTERS ++\";\r\n		dmp($urlfilter);\r\n		dmp($urlreplace);\r\n	}\r\n\r\n	// Process any defaults\r\n	$spc = ($strictfields) ? 0 : 1;\r\n	$defaults = do_list($defaults, $delim);\r\n	$dflts = array();\r\n	foreach ($defaults as $item) {\r\n		$item = do_list($item, $paramdelim);\r\n		if ($item[0] == \'\') continue;\r\n		if (count($item) == 2) {\r\n			$dflts[$item[0]] = smd_query_parse($item[1], array(\'\'), array(\'\'), array(\'\'), $spc);\r\n		}\r\n	}\r\n\r\n	if ($debug > 0) {\r\n		echo \"++ DEFAULTS ++\";\r\n		dmp($dflts);\r\n	}\r\n\r\n	// Get a list of fields to escape\r\n	$escapes = do_list($escape, $delim);\r\n	foreach ($escapes as $idx => $val) {\r\n		if ($val == \'\') {\r\n			unset($escapes[$idx]);\r\n		}\r\n	}\r\n\r\n	$rs = array();\r\n	$out = array();\r\n	$colout = $finalout = array();\r\n	$pageout = \'\';\r\n\r\n	// query overrides column/table/where\r\n	if ($query) {\r\n		$query = smd_query_parse($query, $dflts, $urlfilter, $urlreplace, $spc);\r\n		$mode = ($mode == \'auto\') ? ((preg_match(\'/(select|show)/i\', $query)) ? \'output\' : \'input\') : $mode;\r\n		if ($mode == \'input\') {\r\n			$rs = ($silent) ? @safe_query($query, $debug) : safe_query($query, $debug);\r\n		} else {\r\n			$rs = ($silent) ? @getRows($query, $debug) : getRows($query, $debug);\r\n		}\r\n	} else {\r\n		if ($column && $table) {\r\n			// TODO: Perhaps doSlash() these?\r\n			$column = smd_query_parse($column, $dflts, $urlfilter, $urlreplace, $spc);\r\n			$table = smd_query_parse($table, $dflts, $urlfilter, $urlreplace, $spc);\r\n			$where = smd_query_parse($where, $dflts, $urlfilter, $urlreplace, $spc);\r\n			$where = ($where) ? $where : \"1=1\";\r\n			$mode = \'output\';\r\n			$rs = ($silent) ? @safe_rows($column, $table, $where, $debug) : safe_rows($column, $table, $where, $debug);\r\n		} else {\r\n			trigger_error(\"You must specify at least 1 \'column\' and a \'table\'.\");\r\n		}\r\n	}\r\n\r\n	if ($mode == \'output\') {\r\n		$numrows = count($rs);\r\n		$truePart = EvalElse($thing, 1);\r\n\r\n		if ($rs) {\r\n			if ($debug > 1) {\r\n				echo \"++ QUERY RESULT SET ++\";\r\n				dmp($numrows . \" ROWS\");\r\n				dmp($rs);\r\n			}\r\n\r\n			if ($limit > 0) {\r\n				$safepage = $thispage;\r\n				$total = $numrows - $offset;\r\n				$numPages = ceil($total/$limit);\r\n				$pg = (!gps($pagevar)) ? 1 : gps($pagevar);\r\n				$pgoffset = $offset + (($pg - 1) * $limit);\r\n				// send paging info to txp:newer and txp:older\r\n				$pageout[\'pg\'] = $pg;\r\n				$pageout[\'numPages\'] = $numPages;\r\n				$pageout[\'s\'] = $pretext[\'s\'];\r\n				$pageout[\'c\'] = $pretext[\'c\'];\r\n				$pageout[\'grand_total\'] = $numrows;\r\n				$pageout[\'total\'] = $total;\r\n				$thispage = $pageout;\r\n			} else {\r\n				$pgoffset = $offset;\r\n			}\r\n\r\n			$rs = array_slice($rs, $pgoffset, (($limit==0) ? 99999 : $limit));\r\n			$pagerows = count($rs);\r\n\r\n			$replacements = $repagements = $colreplacements = array();\r\n			$page_rowcnt = ($count==\"up\") ? 0 : $pagerows-1;\r\n			$qry_rowcnt = ($count==\"up\") ? $pgoffset-$offset : $numrows-$pgoffset-1;\r\n			$first_row = $qry_rowcnt + 1;\r\n\r\n			// Preserve any external context\r\n			switch ($populate) {\r\n				case \'article\':\r\n					$safe = ($thisarticle) ? $thisarticle : array();\r\n					break;\r\n				case \'image\':\r\n					$safe = ($thisimage) ? $thisimage : array();\r\n					break;\r\n				case \'file\':\r\n					$safe = ($thisfile) ? $thisfile : array();\r\n					break;\r\n				case \'link\':\r\n					$safe = ($thislink) ? $thislink : array();\r\n					break;\r\n			}\r\n\r\n			foreach ($rs as $row) {\r\n				foreach ($row as $colid => $val) {\r\n					if ($page_rowcnt == 0 && $colsform) {\r\n						$colreplacements[\'{\'.$colid.\'}\'] = $colid;\r\n					}\r\n					// Construct the replacement arrays\r\n					$replacements[\'{\'.$colid.\'}\'] = (in_array($colid, $escapes) ? htmlspecialchars($val, ENT_QUOTES) : $val);\r\n					if ($page_rowcnt == (($count==\"up\") ? $pagerows-1 : 0) && $pageform && $limit>0) {\r\n						$prevpg = (($pg-1) > 0) ? $pg-1 : \'\';\r\n						$nextpg = (($pg+1) <= $numPages) ? $pg+1 : \'\';\r\n						$repagements[\'{smd_allrows}\'] = $total;\r\n						$repagements[\'{smd_pages}\'] = $numPages;\r\n						$repagements[\'{smd_prevpage}\'] = $prevpg;\r\n						$repagements[\'{smd_thispage}\'] = $pg;\r\n						$repagements[\'{smd_nextpage}\'] = $nextpg;\r\n						$repagements[\'{smd_row_start}\'] = $first_row;\r\n						$repagements[\'{smd_row_end}\'] = $qry_rowcnt + 1;\r\n						$repagements[\'{smd_rows_prev}\'] = (($prevpg) ? $limit : 0);\r\n						$repagements[\'{smd_rows_next}\'] = (($nextpg) ? (($qry_rowcnt+$limit+1) > $total ? $total-$qry_rowcnt-1 : $limit) : 0);\r\n						$repagements[\'{smd_query_unique_id}\'] = $uniq;\r\n						$smd_query_pginfo = $repagements;\r\n					}\r\n				}\r\n				$replacements[\'{smd_allrows}\'] = (($limit>0) ? $total : $numrows-$pgoffset);\r\n				$replacements[\'{smd_rows}\'] = $pagerows;\r\n				$replacements[\'{smd_pages}\'] = (($limit>0) ? $numPages : 1);\r\n				$replacements[\'{smd_thispage}\'] = (($limit>0) ? $pg : 1);\r\n				$replacements[\'{smd_thisindex}\'] = $page_rowcnt;\r\n				$replacements[\'{smd_thisrow}\'] = $page_rowcnt + 1;\r\n				$replacements[\'{smd_cursorindex}\'] = $qry_rowcnt;\r\n				$replacements[\'{smd_cursor}\'] = $qry_rowcnt + 1;\r\n				if ($debug > 0) {\r\n					echo \"++ REPLACEMENTS ++\";\r\n					dmp($replacements);\r\n				}\r\n\r\n				// Attempt to set up contexts to allow TXP tags to be used.\r\n				// This facility relies on the correct columns being pulled out by the query: caveat utilitor\r\n				switch ($populate) {\r\n					case \'article\':\r\n						populateArticleData($row);\r\n						$thisarticle[\'is_first\'] = ($page_rowcnt == 1);\r\n						$thisarticle[\'is_last\'] = (($page_rowcnt + 1) == $pagerows);\r\n						break;\r\n					case \'image\':\r\n						$thisimage = image_format_info($row);\r\n						break;\r\n					case \'file\':\r\n						$thisfile = file_download_format_info($row);\r\n						break;\r\n					case \'link\':\r\n						$thislink = array(\r\n							\'id\'          => $row[\'id\'],\r\n							\'linkname\'    => $row[\'linkname\'],\r\n							\'url\'         => $row[\'url\'],\r\n							\'description\' => $row[\'description\'],\r\n							\'date\'        => $row[\'uDate\'],\r\n							\'category\'    => $row[\'category\'],\r\n							\'author\'      => $row[\'author\'],\r\n						);\r\n						break;\r\n				}\r\n\r\n				$out[] = ($preparse) ? strtr(parse($truePart), $replacements) : parse(strtr($truePart, $replacements));\r\n				$qry_rowcnt = ($count==\"up\") ? $qry_rowcnt+1 : $qry_rowcnt-1;\r\n				$page_rowcnt = ($count==\"up\") ? $page_rowcnt+1 : $page_rowcnt-1;\r\n			}\r\n\r\n			if ($out) {\r\n				if ($colreplacements) {\r\n					$colout[] = ($preparse) ? strtr(parse($colsform), $colreplacements) : parse(strtr($colsform, $colreplacements));\r\n				}\r\n				if ($repagements) {\r\n					$pageout = ($preparse) ? strtr(parse($pageform), $repagements) : parse(strtr($pageform, $repagements));\r\n				}\r\n\r\n				// Make up the final output\r\n				if (in_array(\"above\", $pagebit)) {\r\n					$finalout[] = $pageout;\r\n				}\r\n				$finalout[] = doLabel($label, $labeltag).doWrap(array_merge($colout, $out), $wraptag, $break, $class, $breakclass, \'\', \'\', $html_id);\r\n				if (in_array(\"below\", $pagebit)) {\r\n					$finalout[] = $pageout;\r\n				}\r\n\r\n				// Restore the paging outside the plugin container\r\n				if ($limit > 0) {\r\n					$thispage = $safepage;\r\n				}\r\n\r\n				// Restore the other contexts\r\n				if (isset($safe)) {\r\n					switch ($populate) {\r\n						case \'article\':\r\n							$thisarticle = $safe;\r\n							break;\r\n						case \'image\':\r\n							$thisimage = $safe;\r\n							break;\r\n						case \'file\':\r\n							$thisfile = $safe;\r\n							break;\r\n						case \'link\':\r\n							$thislink = $safe;\r\n							break;\r\n					}\r\n				}\r\n				return join(\'\', $finalout);\r\n			}\r\n		} else {\r\n			return parse(EvalElse($thing, 0));\r\n		}\r\n	}\r\n	return \'\';\r\n}\r\n\r\n// Returns a string with any ? variables replaced with their globals\r\n// URL Variables are optionally run through preg_replace() to sanitize them.\r\n//  $pat is an array of regex search patterns\r\n//  $rep is an array of regex search repalcements (default = \'\', i.e. remove whatever matches)\r\nfunction smd_query_parse($item, $dflts=array(\'\'), $pat=array(\'\'), $rep=array(\'\'), $lax=true) {\r\n	global $pretext, $thisarticle, $thisimage, $thisfile, $thislink, $variable;\r\n\r\n	$item = html_entity_decode($item);\r\n\r\n	// Sometimes pesky Unicode is not compiled in. Detect if so and fall back to ASCII\r\n	if (!@preg_match(\'/\\pL/u\', \'a\')) {\r\n		$modRE = ($lax) ? \'/(\\?)([A-Za-z0-9_\\- ]+)/\' : \'/(\\?)([A-Za-z0-9_\\-]+)/\';\r\n	} else {\r\n		$modRE = ($lax) ? \'/(\\?)([\\p{L}\\p{N}\\p{Pc}\\p{Pd}\\p{Zs}]+)/\' : \'/(\\?)([\\p{L}\\p{N}\\p{Pc}\\p{Pd}]+)/\';\r\n	}\r\n\r\n	$numMods = preg_match_all($modRE, $item, $mods);\r\n\r\n	for ($modCtr = 0; $modCtr < $numMods; $modCtr++) {\r\n		$modChar = $mods[1][$modCtr];\r\n		$modItem = trim($mods[2][$modCtr]);\r\n		$lowitem = strtolower($modItem);\r\n		$urlvar = $svrvar = \'\';\r\n\r\n		if (gps($lowitem) != \'\') {\r\n			$urlvar = doSlash(gps($lowitem));\r\n			if ($urlvar && $pat) {\r\n				$urlvar = preg_replace($pat, $rep, $urlvar);\r\n			}\r\n		}\r\n		if (serverSet($modItem) != \'\') {\r\n			$svrvar = doSlash(serverSet($modItem));\r\n			if ($svrvar && $pat) {\r\n				$svrvar = preg_replace($pat, $rep, $svrvar);\r\n			}\r\n		}\r\n\r\n		if (isset($variable[$lowitem]) && $variable[$lowitem] != \'\') {\r\n			$item = str_replace($modChar.$modItem, $variable[$lowitem], $item);\r\n		} else if ($svrvar != \'\') {\r\n			$item = str_replace($modChar.$modItem, $svrvar, $item);\r\n		} else if (isset($thisimage[$lowitem]) && !empty($thisimage[$lowitem])) {\r\n			$item = str_replace($modChar.$modItem, $thisimage[$lowitem], $item);\r\n		} else if (isset($thisfile[$lowitem]) && !empty($thisfile[$lowitem])) {\r\n			$item = str_replace($modChar.$modItem, $thisfile[$lowitem], $item);\r\n		} else if (isset($thislink[$lowitem]) && !empty($thislink[$lowitem])) {\r\n			$item = str_replace($modChar.$modItem, $thislink[$lowitem], $item);\r\n		} else if (array_key_exists($lowitem, $pretext) && !empty($pretext[$lowitem])) {\r\n			$item = str_replace($modChar.$modItem, $pretext[$lowitem], $item);\r\n		} else if (isset($thisarticle[$lowitem]) && !empty($thisarticle[$lowitem])) {\r\n			$item = str_replace($modChar.$modItem, $thisarticle[$lowitem], $item);\r\n		} else if ($urlvar != \'\') {\r\n			$item = str_replace($modChar.$modItem, $urlvar, $item);\r\n		} else if (isset($dflts[$lowitem])) {\r\n			$item = str_replace($modChar.$modItem, $dflts[$lowitem], $item);\r\n		} else {\r\n			$item = str_replace($modChar.$modItem, $modItem, $item);\r\n		}\r\n	}\r\n	return $item;\r\n}\r\n// Convenience functions to check if there\'s a prev/next page defined. Could also use smd_if\r\nfunction smd_query_if_prev($atts, $thing) {\r\n	global $smd_query_pginfo;\r\n\r\n	$res = $smd_query_pginfo && $smd_query_pginfo[\'{smd_prevpage}\'] != \'\';\r\n	return parse(EvalElse(strtr($thing, $smd_query_pginfo), $res));\r\n}\r\nfunction smd_query_if_next($atts, $thing) {\r\n	global $smd_query_pginfo;\r\n\r\n	$res = $smd_query_pginfo && $smd_query_pginfo[\'{smd_nextpage}\'] != \'\';\r\n	return parse(EvalElse(strtr($thing, $smd_query_pginfo), $res));\r\n\r\n}','function smd_query($atts, $thing=\'\') {\r\n	global $pretext, $smd_query_pginfo, $thispage, $thisarticle, $thisimage, $thisfile, $thislink;\r\n\r\n	extract(lAtts(array(\r\n		\'column\' => \'\',\r\n		\'table\' => \'\',\r\n		\'where\' => \'\',\r\n		\'query\' => \'\',\r\n		\'form\' => \'\',\r\n		\'pageform\' => \'\',\r\n		\'pagevar\' => \'pg\',\r\n		\'pagepos\' => \'below\',\r\n		\'colsform\' => \'\',\r\n		\'escape\' => \'\',\r\n		\'strictfields\' => \'0\',\r\n		\'preparse\' => \'0\',\r\n		\'populate\' => \'\', // one of article, image, file, or link\r\n		\'urlfilter\' => \'\',\r\n		\'urlreplace\' => \'\',\r\n		\'defaults\' => \'\',\r\n		\'delim\' => \',\',\r\n		\'paramdelim\' => \':\',\r\n		\'silent\' => \'0\',\r\n		\'mode\' => \'auto\', // auto chooses one of input (INSERT/UPDATE) or output (QUERY)\r\n		\'count\' => \'up\',\r\n		\'limit\' => 0,\r\n		\'offset\' => 0,\r\n		\'hashsize\' => \'6:5\',\r\n		\'label\' => \'\',\r\n		\'labeltag\' => \'\',\r\n		\'wraptag\' => \'\',\r\n		\'break\' => \'\',\r\n		\'class\' => \'\',\r\n		\'breakclass\' => \'\',\r\n		\'html_id\' => \'\',\r\n		\'debug\' => \'0\',\r\n	),$atts));\r\n\r\n	// Grab the form or embedded $thing\r\n	$falsePart = EvalElse($thing, 0);\r\n\r\n	$thing = ($form) ? fetch_form($form) . (($falsePart) ? \'<txp:else />\' . $falsePart : \'\') : (($thing) ? $thing : \'\');\r\n	$colsform = (empty($colsform)) ? \'\' : fetch_form($colsform);\r\n	$pagebit = array();\r\n	if ($pageform) {\r\n		$pagePosAllowed = array(\"below\", \"above\");\r\n		$paging = 1;\r\n		$pageform = fetch_form($pageform);\r\n		$pagepos = str_replace(\'smd_\', \'\', $pagepos);\r\n		$pagepos = do_list($pagepos, $delim);\r\n		foreach ($pagepos as $pageitem) {\r\n			$pagebit[] = (in_array($pageitem, $pagePosAllowed)) ? $pageitem : $pagePosAllowed[0];\r\n		}\r\n	}\r\n\r\n	// Make a unique hash value for this instance so the queries can be paged independently\r\n	$uniq = \'\';\r\n	$md5 = md5($column.$table.$where.$query.$defaults);\r\n	list($hashLen, $hashSkip) = explode(\':\', $hashsize);\r\n	for ($idx = 0, $cnt = 0; $cnt < $hashLen; $cnt++, $idx = (($idx+$hashSkip) % strlen($md5))) {\r\n		$uniq .= $md5[$idx];\r\n	}\r\n\r\n	$pagevar = ($pagevar == \'SMD_QUERY_UNIQUE_ID\') ? $uniq : $pagevar;\r\n	$urlfilter = (!empty($urlfilter)) ? do_list($urlfilter, $delim) : \'\';\r\n	$urlreplace = (!empty($urlreplace)) ? do_list($urlreplace, $delim) : \'\';\r\n	if ($debug > 0) {\r\n		echo \"++ URL FILTERS ++\";\r\n		dmp($urlfilter);\r\n		dmp($urlreplace);\r\n	}\r\n\r\n	// Process any defaults\r\n	$spc = ($strictfields) ? 0 : 1;\r\n	$defaults = do_list($defaults, $delim);\r\n	$dflts = array();\r\n	foreach ($defaults as $item) {\r\n		$item = do_list($item, $paramdelim);\r\n		if ($item[0] == \'\') continue;\r\n		if (count($item) == 2) {\r\n			$dflts[$item[0]] = smd_query_parse($item[1], array(\'\'), array(\'\'), array(\'\'), $spc);\r\n		}\r\n	}\r\n\r\n	if ($debug > 0) {\r\n		echo \"++ DEFAULTS ++\";\r\n		dmp($dflts);\r\n	}\r\n\r\n	// Get a list of fields to escape\r\n	$escapes = do_list($escape, $delim);\r\n	foreach ($escapes as $idx => $val) {\r\n		if ($val == \'\') {\r\n			unset($escapes[$idx]);\r\n		}\r\n	}\r\n\r\n	$rs = array();\r\n	$out = array();\r\n	$colout = $finalout = array();\r\n	$pageout = \'\';\r\n\r\n	// query overrides column/table/where\r\n	if ($query) {\r\n		$query = smd_query_parse($query, $dflts, $urlfilter, $urlreplace, $spc);\r\n		$mode = ($mode == \'auto\') ? ((preg_match(\'/(select|show)/i\', $query)) ? \'output\' : \'input\') : $mode;\r\n		if ($mode == \'input\') {\r\n			$rs = ($silent) ? @safe_query($query, $debug) : safe_query($query, $debug);\r\n		} else {\r\n			$rs = ($silent) ? @getRows($query, $debug) : getRows($query, $debug);\r\n		}\r\n	} else {\r\n		if ($column && $table) {\r\n			// TODO: Perhaps doSlash() these?\r\n			$column = smd_query_parse($column, $dflts, $urlfilter, $urlreplace, $spc);\r\n			$table = smd_query_parse($table, $dflts, $urlfilter, $urlreplace, $spc);\r\n			$where = smd_query_parse($where, $dflts, $urlfilter, $urlreplace, $spc);\r\n			$where = ($where) ? $where : \"1=1\";\r\n			$mode = \'output\';\r\n			$rs = ($silent) ? @safe_rows($column, $table, $where, $debug) : safe_rows($column, $table, $where, $debug);\r\n		} else {\r\n			trigger_error(\"You must specify at least 1 \'column\' and a \'table\'.\");\r\n		}\r\n	}\r\n\r\n	if ($mode == \'output\') {\r\n		$numrows = count($rs);\r\n		$truePart = EvalElse($thing, 1);\r\n\r\n		if ($rs) {\r\n			if ($debug > 1) {\r\n				echo \"++ QUERY RESULT SET ++\";\r\n				dmp($numrows . \" ROWS\");\r\n				dmp($rs);\r\n			}\r\n\r\n			if ($limit > 0) {\r\n				$safepage = $thispage;\r\n				$total = $numrows - $offset;\r\n				$numPages = ceil($total/$limit);\r\n				$pg = (!gps($pagevar)) ? 1 : gps($pagevar);\r\n				$pgoffset = $offset + (($pg - 1) * $limit);\r\n				// send paging info to txp:newer and txp:older\r\n				$pageout[\'pg\'] = $pg;\r\n				$pageout[\'numPages\'] = $numPages;\r\n				$pageout[\'s\'] = $pretext[\'s\'];\r\n				$pageout[\'c\'] = $pretext[\'c\'];\r\n				$pageout[\'grand_total\'] = $numrows;\r\n				$pageout[\'total\'] = $total;\r\n				$thispage = $pageout;\r\n			} else {\r\n				$pgoffset = $offset;\r\n			}\r\n\r\n			$rs = array_slice($rs, $pgoffset, (($limit==0) ? 99999 : $limit));\r\n			$pagerows = count($rs);\r\n\r\n			$replacements = $repagements = $colreplacements = array();\r\n			$page_rowcnt = ($count==\"up\") ? 0 : $pagerows-1;\r\n			$qry_rowcnt = ($count==\"up\") ? $pgoffset-$offset : $numrows-$pgoffset-1;\r\n			$first_row = $qry_rowcnt + 1;\r\n\r\n			// Preserve any external context\r\n			switch ($populate) {\r\n				case \'article\':\r\n					$safe = ($thisarticle) ? $thisarticle : array();\r\n					break;\r\n				case \'image\':\r\n					$safe = ($thisimage) ? $thisimage : array();\r\n					break;\r\n				case \'file\':\r\n					$safe = ($thisfile) ? $thisfile : array();\r\n					break;\r\n				case \'link\':\r\n					$safe = ($thislink) ? $thislink : array();\r\n					break;\r\n			}\r\n\r\n			foreach ($rs as $row) {\r\n				foreach ($row as $colid => $val) {\r\n					if ($page_rowcnt == 0 && $colsform) {\r\n						$colreplacements[\'{\'.$colid.\'}\'] = $colid;\r\n					}\r\n					// Construct the replacement arrays\r\n					$replacements[\'{\'.$colid.\'}\'] = (in_array($colid, $escapes) ? htmlspecialchars($val, ENT_QUOTES) : $val);\r\n					if ($page_rowcnt == (($count==\"up\") ? $pagerows-1 : 0) && $pageform && $limit>0) {\r\n						$prevpg = (($pg-1) > 0) ? $pg-1 : \'\';\r\n						$nextpg = (($pg+1) <= $numPages) ? $pg+1 : \'\';\r\n						$repagements[\'{smd_allrows}\'] = $total;\r\n						$repagements[\'{smd_pages}\'] = $numPages;\r\n						$repagements[\'{smd_prevpage}\'] = $prevpg;\r\n						$repagements[\'{smd_thispage}\'] = $pg;\r\n						$repagements[\'{smd_nextpage}\'] = $nextpg;\r\n						$repagements[\'{smd_row_start}\'] = $first_row;\r\n						$repagements[\'{smd_row_end}\'] = $qry_rowcnt + 1;\r\n						$repagements[\'{smd_rows_prev}\'] = (($prevpg) ? $limit : 0);\r\n						$repagements[\'{smd_rows_next}\'] = (($nextpg) ? (($qry_rowcnt+$limit+1) > $total ? $total-$qry_rowcnt-1 : $limit) : 0);\r\n						$repagements[\'{smd_query_unique_id}\'] = $uniq;\r\n						$smd_query_pginfo = $repagements;\r\n					}\r\n				}\r\n				$replacements[\'{smd_allrows}\'] = (($limit>0) ? $total : $numrows-$pgoffset);\r\n				$replacements[\'{smd_rows}\'] = $pagerows;\r\n				$replacements[\'{smd_pages}\'] = (($limit>0) ? $numPages : 1);\r\n				$replacements[\'{smd_thispage}\'] = (($limit>0) ? $pg : 1);\r\n				$replacements[\'{smd_thisindex}\'] = $page_rowcnt;\r\n				$replacements[\'{smd_thisrow}\'] = $page_rowcnt + 1;\r\n				$replacements[\'{smd_cursorindex}\'] = $qry_rowcnt;\r\n				$replacements[\'{smd_cursor}\'] = $qry_rowcnt + 1;\r\n				if ($debug > 0) {\r\n					echo \"++ REPLACEMENTS ++\";\r\n					dmp($replacements);\r\n				}\r\n\r\n				// Attempt to set up contexts to allow TXP tags to be used.\r\n				// This facility relies on the correct columns being pulled out by the query: caveat utilitor\r\n				switch ($populate) {\r\n					case \'article\':\r\n						populateArticleData($row);\r\n						$thisarticle[\'is_first\'] = ($page_rowcnt == 1);\r\n						$thisarticle[\'is_last\'] = (($page_rowcnt + 1) == $pagerows);\r\n						break;\r\n					case \'image\':\r\n						$thisimage = image_format_info($row);\r\n						break;\r\n					case \'file\':\r\n						$thisfile = file_download_format_info($row);\r\n						break;\r\n					case \'link\':\r\n						$thislink = array(\r\n							\'id\'          => $row[\'id\'],\r\n							\'linkname\'    => $row[\'linkname\'],\r\n							\'url\'         => $row[\'url\'],\r\n							\'description\' => $row[\'description\'],\r\n							\'date\'        => $row[\'uDate\'],\r\n							\'category\'    => $row[\'category\'],\r\n							\'author\'      => $row[\'author\'],\r\n						);\r\n						break;\r\n				}\r\n\r\n				$out[] = ($preparse) ? strtr(parse($truePart), $replacements) : parse(strtr($truePart, $replacements));\r\n				$qry_rowcnt = ($count==\"up\") ? $qry_rowcnt+1 : $qry_rowcnt-1;\r\n				$page_rowcnt = ($count==\"up\") ? $page_rowcnt+1 : $page_rowcnt-1;\r\n			}\r\n\r\n			if ($out) {\r\n				if ($colreplacements) {\r\n					$colout[] = ($preparse) ? strtr(parse($colsform), $colreplacements) : parse(strtr($colsform, $colreplacements));\r\n				}\r\n				if ($repagements) {\r\n					$pageout = ($preparse) ? strtr(parse($pageform), $repagements) : parse(strtr($pageform, $repagements));\r\n				}\r\n\r\n				// Make up the final output\r\n				if (in_array(\"above\", $pagebit)) {\r\n					$finalout[] = $pageout;\r\n				}\r\n				$finalout[] = doLabel($label, $labeltag).doWrap(array_merge($colout, $out), $wraptag, $break, $class, $breakclass, \'\', \'\', $html_id);\r\n				if (in_array(\"below\", $pagebit)) {\r\n					$finalout[] = $pageout;\r\n				}\r\n\r\n				// Restore the paging outside the plugin container\r\n				if ($limit > 0) {\r\n					$thispage = $safepage;\r\n				}\r\n\r\n				// Restore the other contexts\r\n				if (isset($safe)) {\r\n					switch ($populate) {\r\n						case \'article\':\r\n							$thisarticle = $safe;\r\n							break;\r\n						case \'image\':\r\n							$thisimage = $safe;\r\n							break;\r\n						case \'file\':\r\n							$thisfile = $safe;\r\n							break;\r\n						case \'link\':\r\n							$thislink = $safe;\r\n							break;\r\n					}\r\n				}\r\n				return join(\'\', $finalout);\r\n			}\r\n		} else {\r\n			return parse(EvalElse($thing, 0));\r\n		}\r\n	}\r\n	return \'\';\r\n}\r\n\r\n// Returns a string with any ? variables replaced with their globals\r\n// URL Variables are optionally run through preg_replace() to sanitize them.\r\n//  $pat is an array of regex search patterns\r\n//  $rep is an array of regex search repalcements (default = \'\', i.e. remove whatever matches)\r\nfunction smd_query_parse($item, $dflts=array(\'\'), $pat=array(\'\'), $rep=array(\'\'), $lax=true) {\r\n	global $pretext, $thisarticle, $thisimage, $thisfile, $thislink, $variable;\r\n\r\n	$item = html_entity_decode($item);\r\n\r\n	// Sometimes pesky Unicode is not compiled in. Detect if so and fall back to ASCII\r\n	if (!@preg_match(\'/\\pL/u\', \'a\')) {\r\n		$modRE = ($lax) ? \'/(\\?)([A-Za-z0-9_\\- ]+)/\' : \'/(\\?)([A-Za-z0-9_\\-]+)/\';\r\n	} else {\r\n		$modRE = ($lax) ? \'/(\\?)([\\p{L}\\p{N}\\p{Pc}\\p{Pd}\\p{Zs}]+)/\' : \'/(\\?)([\\p{L}\\p{N}\\p{Pc}\\p{Pd}]+)/\';\r\n	}\r\n\r\n	$numMods = preg_match_all($modRE, $item, $mods);\r\n\r\n	for ($modCtr = 0; $modCtr < $numMods; $modCtr++) {\r\n		$modChar = $mods[1][$modCtr];\r\n		$modItem = trim($mods[2][$modCtr]);\r\n		$lowitem = strtolower($modItem);\r\n		$urlvar = $svrvar = \'\';\r\n\r\n		if (gps($lowitem) != \'\') {\r\n			$urlvar = doSlash(gps($lowitem));\r\n			if ($urlvar && $pat) {\r\n				$urlvar = preg_replace($pat, $rep, $urlvar);\r\n			}\r\n		}\r\n		if (serverSet($modItem) != \'\') {\r\n			$svrvar = doSlash(serverSet($modItem));\r\n			if ($svrvar && $pat) {\r\n				$svrvar = preg_replace($pat, $rep, $svrvar);\r\n			}\r\n		}\r\n\r\n		if (isset($variable[$lowitem]) && $variable[$lowitem] != \'\') {\r\n			$item = str_replace($modChar.$modItem, $variable[$lowitem], $item);\r\n		} else if ($svrvar != \'\') {\r\n			$item = str_replace($modChar.$modItem, $svrvar, $item);\r\n		} else if (isset($thisimage[$lowitem]) && !empty($thisimage[$lowitem])) {\r\n			$item = str_replace($modChar.$modItem, $thisimage[$lowitem], $item);\r\n		} else if (isset($thisfile[$lowitem]) && !empty($thisfile[$lowitem])) {\r\n			$item = str_replace($modChar.$modItem, $thisfile[$lowitem], $item);\r\n		} else if (isset($thislink[$lowitem]) && !empty($thislink[$lowitem])) {\r\n			$item = str_replace($modChar.$modItem, $thislink[$lowitem], $item);\r\n		} else if (array_key_exists($lowitem, $pretext) && !empty($pretext[$lowitem])) {\r\n			$item = str_replace($modChar.$modItem, $pretext[$lowitem], $item);\r\n		} else if (isset($thisarticle[$lowitem]) && !empty($thisarticle[$lowitem])) {\r\n			$item = str_replace($modChar.$modItem, $thisarticle[$lowitem], $item);\r\n		} else if ($urlvar != \'\') {\r\n			$item = str_replace($modChar.$modItem, $urlvar, $item);\r\n		} else if (isset($dflts[$lowitem])) {\r\n			$item = str_replace($modChar.$modItem, $dflts[$lowitem], $item);\r\n		} else {\r\n			$item = str_replace($modChar.$modItem, $modItem, $item);\r\n		}\r\n	}\r\n	return $item;\r\n}\r\n// Convenience functions to check if there\'s a prev/next page defined. Could also use smd_if\r\nfunction smd_query_if_prev($atts, $thing) {\r\n	global $smd_query_pginfo;\r\n\r\n	$res = $smd_query_pginfo && $smd_query_pginfo[\'{smd_prevpage}\'] != \'\';\r\n	return parse(EvalElse(strtr($thing, $smd_query_pginfo), $res));\r\n}\r\nfunction smd_query_if_next($atts, $thing) {\r\n	global $smd_query_pginfo;\r\n\r\n	$res = $smd_query_pginfo && $smd_query_pginfo[\'{smd_nextpage}\'] != \'\';\r\n	return parse(EvalElse(strtr($thing, $smd_query_pginfo), $res));\r\n\r\n}','587d0f6248a28293aba731d95c335554',0,5,0),
	('smd_bio',1,'Stef Dawson','http://stefdawson.com/','0.40','Customisable user biographies / profile info','<div id=\"smd_help\">\n\n	<h1>smd_bio</h1>\n\n	<p>Configure additional user biographical information to be collected when authors are created, then show that info as bylines against your articles. A bit like custom fields for user info.</p>\n\n	<h2>Features</h2>\n\n	<ul>\n		<li>Define only the info you require to be collected about your users &#8212; totally customisable</li>\n		<li>Info is entered/edited on the <em>Admin-&gt;Users</em> tab beneath the existing user info (i.e. Publishers only) but also integrates with smd_user_manager</li>\n		<li>Choose from a variety of types of content: text, radio buttons, select lists, checkboxes, images&#8230;</li>\n		<li>Output any pieces of biographical info in your article flow in a variety of ways</li>\n		<li>Image thumbnail preview/selection on the <em>Admin-&gt;Users</em> tab</li>\n		<li>Optional <span class=\"caps\">CSS</span> to modify the layout of the <em>Admin-&gt;Users</em> tab</li>\n	</ul>\n\n	<h2>Installation / Uninstallation</h2>\n\n	<p class=\"important\">Requires Textpattern 4.4.1+ and jQuery 1.6.1+</p>\n\n	<p>Download the plugin from either <a href=\"http://textpattern.org/plugins/1116/smd_bio\">textpattern.org</a>, or the <a href=\"http://stefdawson.com/sw\">software page</a>, paste the code into the Textpattern <em>Admin-&gt;Plugins</em> pane, install and enable the plugin. The plugin&#8217;s tables will be installed automatically. Visit the <a href=\"http://forum.textpattern.com/viewtopic.php?id=31496\">forum thread</a> for more info or to report on the success or otherwise of the plugin.</p>\n\n	<p>When you visit the <em>Extensions-&gt;Bio config</em> page, the plugin&#8217;s tables will be checked and installed/upgraded automatically if not present already. This is a convenience for people who run the plugin from the cache directory.</p>\n\n	<p>To uninstall, delete the plugin from the <em>Admin-&gt;Plugins</em> page. <strong>All additional user tables and bio information will be removed</strong> so be sure you have backed everything up first.</p>\n\n	<h2 id=\"smd_bio_config\">Configuring bio fields</h2>\n\n	<p>Visit the <em>Extensions-&gt;Bio config</em> tab. Add bio fields such as cell/work/fax numbers, department, mugshot, postal address, job title, whatever you wish. Just add one at a time and hit Save in between. The fields will be listed below the form, and can be sorted at will. Each field comprises:</p>\n\n	<dl>\n		<dt><span class=\"atnm\">Name</span></dt>\n		<dd>An internal name with which you wish to refer to your bio field. Avoid characters such as spaces and &#8216;weird&#8217; characters here. <strong>This cannot be changed, once set</strong></dd>\n		<dt><span class=\"atnm\">Title</span></dt>\n		<dd>A human-friendly name for your bio field. This is displayed to the left of the input control on the <em>Admin-&gt;Users</em> panel, and as a label on your article pages</dd>\n		<dt><span class=\"atnm\">Type</span></dt>\n		<dd>The type of data you wish to collect. This will be the flavour of input control you see on the <em>Admin-&gt;Users</em> panel</dd>\n		<dt><span class=\"atnm\">Column type</span> (click &#8216;More&#8217; to toggle)</dt>\n		<dd>The database column type that is created. If you don&#8217;t know what this is, just accept the default, otherwise specify which type of data this column is to hold</dd>\n		<dd>Note that some types of biographical information (e.g. images) are forced to be of a certain column type</dd>\n		<dd><span class=\"caps\">IMPORTANT</span>: if you alter this after it has been created, any existing bio data in the field will be altered to suit and <strong>you may lose information</strong>. Please backup first</dd>\n		<dt><span class=\"atnm\">Column size</span> (click &#8216;More&#8217; to toggle)</dt>\n		<dd>Some column types &#8212; most notably the varchar types &#8212; require a column width (or display width) to be specified. Put a value here if you wish to use a size other than the default. If you don&#8217;t know what this is, just accept the default</dd>\n		<dd>Note that most column types do not require a size so if you do specify one it will be ignored</dd>\n		<dd><span class=\"caps\">IMPORTANT</span>: if you alter this after it has been created, any existing bio data in the field will be altered to suit and <strong>you may lose information</strong>. Please backup first</dd>\n		<dt><span class=\"atnm\">Size</span></dt>\n		<dd>The dimensions of the chosen input control. Takes one or two comma-separated values, the interpretation of which depends on the field <em>Type</em>:\n	<dl>\n		<dd>For text-based input fields, the first is the width of the box (in characters) and the second is the maximum number of characters a user can type (0 = leave at default)</dd>\n		<dd>For numeric-based input fields, the values are the minimum permitted value, the maximum permitted value, and the acceptable interval (step) that value can take</dd>\n		<dd>For textareas, it is the width and height of the box in characters, respectively</dd>\n		<dd>For images, the two values are the x and y dimensions of the image/thumbnail on the <em>Admin-&gt;Users</em> tab. If only one value is given, the image will be square. If either value is omitted, the image or thumbnail dimensions (as stored in the database) are used instead</dd>\n		<dd>For other types, the Size is currently unused</dd>\n	</dl></dd>\n		<dt><span class=\"atnm\">Value</span></dt>\n		<dd>Depends on the field <em>Type</em>:\n	<dl>\n		<dd>For text- and number-based fields, this is the default value that will be placed in the text box. You can use this to initialise an entry, or offer instructions like &#8220;Type your job description here&#8221;</dd>\n		<dd>For images, it can be used to specify the parent category name under which the desired images are stored. If omitted, all images are available in the image select list</dd>\n		<dd>For list, radio and checkbox items, this is used to configure the available options:\n	<dl>\n		<dd>Either put one item per line or use a comma to separate each item</dd>\n		<dd>If you just list items, they will be used as labels exactly as you define them. When referring to them with the public tags, the field <em>names</em> will be all lower case, have &#8216;non-web-safe&#8217; characters removed, and will have spaces converted to underscores. See the <a href=\"#smd_bio_list_example\">example</a> for further details</dd>\n		<dd>In select lists, you may put an empty item at the top if you wish by beginning the list with a comma</dd>\n		<dd>In select lists, checkbox and radio sets you may also mark label(s) with <code>[*]</code> to indicate it is a default checked/selected value. Radio sets and single-select lists only permit one marker</dd>\n	</dl></dd>\n	</dl></dd>\n		<dt><span class=\"atnm\">Position</span></dt>\n		<dd>The order in which the items appear on the <em>Admin-&gt;Users</em> tab</dd>\n		<dd>You can use any alphanumeric system to sort, e.g <code>10, 20, 30,...</code> or <code>a, b, c...</code>. The lower the value the higher up the screen it will be</dd>\n	</dl>\n\n	<h3 id=\"smd_bio_list_example\">Defining your own lists</h3>\n\n	<p>There are a few of ways to define your own names and/or labels for use in select lists, radio sets and checkbox groups:</p>\n\n<pre class=\"block\"><code>label_1\nlabel_2\nlabel_3\n...\n</code></pre>\n\n	<p>or</p>\n\n<pre class=\"block\"><code>label_1, label_2, label_3, ...\n</code></pre>\n\n	<p>or</p>\n\n<pre class=\"block\"><code>name_1 =&gt; label_1, name_2 =&gt; label_2, name_3...\n</code></pre>\n\n	<p>(you may also put each name-label pair on a separate line if you wish). Here&#8217;s an example for a dropdown list of Departments:</p>\n\n<pre class=\"block\"><code>sales =&gt; Sales\nmktg =&gt; Marketing\neng =&gt; Engineering\nqual =&gt; Quality assurance\nit =&gt; Tech support\n</code></pre>\n\n	<p>If you defined the list as above, your field names would be <code>sales</code>, <code>mktg</code>, <code>eng</code>, <code>qual</code> and <code>it</code>, respectively.</p>\n\n	<p>If, however, you omit the field names, viz:</p>\n\n<pre class=\"block\"><code>Sales\nMarketing\nEngineering\nQuality assurance\nTech support\n</code></pre>\n\n	<p>then you would refer to the fields with: <code>sales</code>, <code>marketing</code>, <code>engineering</code>, <code>quality_assurance</code>, and <code>tech_support</code>, respectively.</p>\n\n	<p>For multiple select lists and checkbox groups you can optionally define some of the entries as defaults. For example in your <code>subscriptions</code> checkbox group:</p>\n\n<pre class=\"block\"><code>Kerrang\nFuture Music[*]\nNME\nSound on Sound[*]\n</code></pre>\n\n	<p>The same system applies to single or multiple select lists and radio sets, although for single selects and radio sets, only one element may be starred (if you star more, only one of the defaults will prevail).</p>\n\n	<p>There is one further method of entering data, and that is to call another <span class=\"caps\">PHP</span> function. Perhaps you want to offer a select list of all countries of the world. You could type them in or copy and paste them from the Internet as long as they were in the correct <code>key =&gt; value</code> or comma-separated format. Alternatively you could put this in the <em>Value</em> box:</p>\n\n<pre><code>SMD_BIO_FN|function_name|param_1|param_2|...\n</code></pre>\n\n	<p>As long as that named function returns a standard <span class=\"caps\">PHP</span> array, the values and any keys returned will be injected into the <em>Value</em> box automatically.</p>\n\n	<h2>Entering user data: <em>Admin-&gt;Users</em></h2>\n\n	<p>Your configured fields will appear on the <em>Admin-&gt;Users</em> panel, beneath the usual crop of data input fields. Simply enter data in them and it will be saved along with the existing user data. Hit <em>Edit</em> and any configured info will be retrieved for editing.</p>\n\n	<p>When choosing an image, you can either type its ID in the box or use the dropdown select list to choose an image. The chosen image will appear below the input controls.</p>\n\n	<p>If you wish to alter the layout of the input controls, you may create a standard stylesheet in <em>Presentation-&gt;Style</em> and name it <code>smd_bio</code>. It will be loaded automatically when you visit the <em>Admin-&gt;Users</em> panel.</p>\n\n	<p>To quickly view the extended bio information for a user, hover over the <em>Edit</em> link of an item in the list; a tooltip will appear showing some of the extended bio. The data is fetched from the server when you first hover over the <em>Edit</em> link, so it may take a few seconds to load (and may require you to wiggle the mouse around a bit to get it to display, sorry!)</p>\n\n	<h2>Entering user data: <em>Admin-&gt;User manager</em></h2>\n\n	<p>If you have the smd_user_manager plugin installed, smd_bio will hook into that plugin. When you hover over the login name of an entry in the User list, detailed bio information is retrieved and displayed as a tooltip. Editing a user will also permit Bio information to be entered.</p>\n\n	<h2>Displaying user bio info on your site</h2>\n\n	<p>When you create a new <em>field</em> in the <a href=\"#smd_bio_config\">Bio Config</a> pane, it has various attributes like name, title, size, value, etc. The <code>name</code> is the key: that is how you refer to the field using the <code>field</code> or <code>fields</code> attributes in the various tags (below).</p>\n\n	<p>Each field has a variety of pieces of data that you may display. These are known as <code>items</code> and the primary ones are:</p>\n\n	<ol>\n		<li><code>value</code> : the current value of the field that has been selected / typed by the user in their profile.</li>\n		<li><code>title</code> : the human friendly title (a.k.a. <em>label</em>) that you have assigned to your field in the Bio Config screen &#8212; this is handy if you want to print out the title alongside the data value itself, e.g. Department: sales.</li>\n		<li><code>name</code> : the field&#8217;s key (shown in the &#8216;Name&#8217; column on the Bio Config panel). This is of less everyday use, but when building your own input screens for capturing bio data, it becomes handy so you can tell mem_form the name of the field it needs to store the bio data item in.</li>\n	</ol>\n\n	<p>The other items are useful for displaying counters and such like, or for diving deeper into the available sub-items in lists, radio sets, checkboxes, etc.</p>\n\n	<p>So, to recap: <code>field</code> = your bio thingamybob (it&#8217;s Name / Key), and <code>item</code> = the part of thingamybob you want to display: its value, title or name (a.k.a. key).</p>\n\n	<h2 id=\"smd_bio_info\">Tag: <code>&lt;txp:smd_bio_info&gt;</code></h2>\n\n	<p>Use this tag to display pieces of info from a user&#8217;s biography. One or more of these tags can be employed depending on how you prefer to work. It may also be used as a container (or via the <code>form</code> attribute) to allow you to embed other Textpattern tags and/or special <a href=\"#smd_bio_repkeys\">replacement keys</a> to format the output.</p>\n\n	<p>This tag requires article context so you normally use it inside <code>&lt;txp:if_individual_article&gt;</code> tags. By default it will look up the author of the currently viewed article and display the given bio fields from that author.</p>\n\n	<p>If you&#8217;re trying to display bio info in a sidebar or on a list page that does not necessarily have article context, you need to specify the author(s) that you wish to display bio info from. In v0.3x you did that with the <code>authors</code> attribute; in v0.4x you wrap your <code>&lt;txp:smd_bio_info&gt;</code> tag in an <a href=\"#smd_bio_author\">smd_bio_author</a> tag.</p>\n\n	<p>Use the following attributes to tweak this tag&#8217;s output. The default value is unset unless otherwise noted:</p>\n\n	<dl>\n		<dt><span class=\"atnm\">fields</span></dt>\n		<dd>List of bio field <em>names</em> you wish to display, in the order you wish to display them.</dd>\n		<dd>Note you can also display bio information from the standard Textpattern user table, i.e. you can use any of the following, (case sensitive) : <code>user_id</code>, <code>name</code> (login name), <code>RealName</code>, <code>email</code>, <code>privs</code>, <code>last_access</code></dd>\n		<dd>Default: unset (i.e. all fields)</dd>\n		<dt><span class=\"atnm\">exclude</span></dt>\n		<dd>List of bio field <em>names</em> you do <strong>not</strong> wish to display. This overrides <code>fields</code></dd>\n		<dt><span class=\"atnm\">form</span></dt>\n		<dd>The name of a Txp Form with which to process each record.</dd>\n		<dd>If not specified, the tag&#8217;s container will be used.</dd>\n		<dd>If the container is empty, default output is used (label and field contents).</dd>\n		<dt><span class=\"atnm\">wraptag</span></dt>\n		<dd><span class=\"caps\">HTML</span> tag (without angle brackets) to wrap around each record.</dd>\n		<dt><span class=\"atnm\">class</span></dt>\n		<dd>Fixed <span class=\"caps\">CSS</span> class name to add to each record&#8217;s wraptag.</dd>\n		<dt><span class=\"atnm\">break</span></dt>\n		<dd><span class=\"caps\">HTML</span> tag to put between each field.</dd>\n		<dt><span class=\"atnm\">breakclass</span></dt>\n		<dd><span class=\"caps\">CSS</span> class name to add to each field&#8217;s wraptag.</dd>\n		<dd>The default is to automatically assign <code>smd_bio_*name_of_field*</code> (e.g. smd_bio_cell, smd_bio_dept, etc).</dd>\n		<dt><span class=\"atnm\">labeltag</span></dt>\n		<dd><span class=\"caps\">HTML</span> tag (without angle brackets) to wrap around the field&#8217;s label.</dd>\n		<dt><span class=\"atnm\">label</span></dt>\n		<dd>Whether to display a label or not for each field. Choose from:\n	<dl>\n		<dd><strong>1</strong> : (default) Display the Title of the field</dd>\n		<dd><strong>0</strong> : Display the Name of the field</dd>\n		<dd><strong>some label</strong> : Display the given text as a label</dd>\n		<dd>&#8220;&#8221; (i.e. empty) : Do not display any label</dd>\n	</dl></dd>\n		<dt><span class=\"atnm\">var_prefix</span></dt>\n		<dd>Set the prefix that this tag uses for the replacement keys.</dd>\n		<dd>Default: <code>smd_bio_</code></dd>\n		<dt><span class=\"atnm\">show_empty</span></dt>\n		<dd>Choose if you wish to hide (0) or show (1) any items that have no data assigned to them.</dd>\n		<dd>Default: 0</dd>\n	</dl>\n\n	<h3 id=\"smd_bio_repkeys\"><code>&lt;txp:smd_bio_info&gt;</code> replacement keys</h3>\n\n	<p>Inside the smd_bio_info <code>form</code> or container you may display actual content in one of two ways. Firstly you can utilise special replacement keys that allow you to display any pieces of field content. Alternatively you can use the <a href=\"#smd_bio_data\">smd_bio_data tag</a>.</p>\n\n	<p>The core replacement keys are:</p>\n\n	<dl>\n		<dt><code>{smd_bio_*field*}</code></dt>\n		<dd>The value of the named field (e.g. <code>smd_bio_cell</code>, <code>smd_bio_department</code>, etc).</dd>\n		<dt><code>{smd_bio_*field*_name}</code></dt>\n		<dd>Sanitized name of the column corresponding to this named field.</dd>\n		<dt><code>{smd_bio_*field*_title}</code></dt>\n		<dd>Human-friendly title you assigned this named field.</dd>\n		<dt><code>{smd_bio_*field*_class}</code></dt>\n		<dd>Name of the class associated with this named field.</dd>\n	</dl>\n\n	<p>If you have elected to extract a list item such as radio, list or checkbox you will have some more replacement keys in the following format:</p>\n\n	<dl>\n		<dt><code>{smd_bio_*field*_item_N}</code></dt>\n		<dd>The value of each named item in turn, where N starts at 1 and increments.</dd>\n		<dt><code>{smd_bio_*field*_title_N}</code></dt>\n		<dd>The value of each named item&#8217;s title in turn. Again, N starts at 1 and counts up for every item in your list.</dd>\n		<dt><code>{smd_bio_*field*_chosen_item_N}</code></dt>\n		<dd>The value of each selected item in turn, where N starts at 1 and increments.</dd>\n		<dd>For select and radio lists there will be only one; for checkbox groups there may be more.</dd>\n		<dt><code>{smd_bio_*field*_chosen_title_N}</code></dt>\n		<dd>The value of each selected item&#8217;s label in turn, where N starts at 1 and increments.</dd>\n		<dt><code>{smd_bio_*field*_item_count}</code></dt>\n		<dd>The total number of elements in the named list.</dd>\n		<dt><code>{smd_bio_*field*_chosen_count}</code></dt>\n		<dd>The total number of selected elements in the named list.</dd>\n	</dl>\n\n	<p>Further, if you are displaying just a single <code>field</code>, these replacements (backwards compatible with smd_bio v0.3x) are present:</p>\n\n	<dl>\n		<dt><code>{smd_bio_info_item}</code></dt>\n		<dd>The value of the current field &#8212; Deprecated: use <code>{smd_bio_info_value}</code> instead.</dd>\n		<dt><code>{smd_bio_info_name}</code></dt>\n		<dd>The sanitized name of the column corresponding to the field.</dd>\n		<dt><code>{smd_bio_info_title}</code></dt>\n		<dd>The human-friendly title you assigned the field.</dd>\n		<dt><code>{smd_bio_info_itemclass}</code></dt>\n		<dd>The name of this field&#8217;s class &#8212; Deprecated: use <code>{smd_bio_info_class}</code> instead.</dd>\n	</dl>\n\n	<p>If you wish to see an entire list of available replacement keys, add <code>debug=&quot;1&quot;</code> to your smd_bio_info tag.</p>\n\n	<h2 id=\"smd_bio_author\">Tag: <code>&lt;txp:smd_bio_author&gt;</code></h2>\n\n	<p>Wrap this tag around <code>&lt;txp:smd_bio_info&gt;</code> tags to display information from more than one user. The contained content will be displayed for each author.</p>\n\n	<dl>\n		<dt><span class=\"atnm\">author</span></dt>\n		<dd>Comma-separated list of author login names from which you wish to display info.</dd>\n		<dd>If omitted, the current (individual article) author will be used &#8212; functionally the same as if you just used <code>&lt;txp:smd_bio_info /&gt;</code> without the author wrapper tag.</dd>\n		<dd>You may specify any of your comma-separated items as <code>SMD_PRIVS:</code> and then colon-separate the priv numbers. Any users with those matching level(s) will be displayed.</dd>\n		<dd>You may also use <code>SMD_ALL</code> to return all defined authors.</dd>\n		<dt><span class=\"atnm\">sort</span></dt>\n		<dd>Order the authors by the given comma-separated list of columns and sort directions. You can order the results by any of the built-in user columns (RealName, name, user_id, email, last_access, privs) or your own bio fields.</dd>\n		<dd>For the sort order you can choose from:\n	<dl>\n		<dd><strong>asc</strong>: ascending order</dd>\n		<dd><strong>desc</strong>: descending order</dd>\n	</dl></dd>\n		<dd>Default: <code>RealName asc</code></dd>\n		<dt><span class=\"atnm\">form</span></dt>\n		<dd>The name of a Txp Form with which to process each author.</dd>\n		<dd>If not specified, the tag&#8217;s container will be used.</dd>\n		<dd>If the container is empty, the name of the author is displayed.</dd>\n		<dt><span class=\"atnm\">wraptag</span></dt>\n		<dd><span class=\"caps\">HTML</span> tag (without angle brackets) to wrap around the entire output.</dd>\n		<dt><span class=\"atnm\">class</span></dt>\n		<dd><span class=\"caps\">CSS</span> class name to add to the wraptag.</dd>\n		<dt><span class=\"atnm\">break</span></dt>\n		<dd><span class=\"caps\">HTML</span> tag (without angle brackets) to wrap around each author record.</dd>\n		<dt><span class=\"atnm\">breakclass</span></dt>\n		<dd><span class=\"caps\">CSS</span> class name to apply to each break tag.</dd>\n		<dt><span class=\"atnm\">labeltag</span></dt>\n		<dd><span class=\"caps\">HTML</span> tag (without angle brackets) to wrap around the item&#8217;s label.</dd>\n		<dt><span class=\"atnm\">label</span></dt>\n		<dd>The label text to display above all author info</dd>\n	</dl>\n\n	<h2 id=\"smd_bio_data\">Tag: <code>&lt;txp:smd_bio_data&gt;</code></h2>\n\n	<p>Inside your smd_bio_info form or container you can either use the <a href=\"#smd_bio_repkeys\">replacement keys</a> or this tag. Use the following attributes to select which piece of information to display:</p>\n\n	<dl>\n		<dt><span class=\"atnm\">field</span></dt>\n		<dd>The bio field from you wish to display some information (e.g. cell, phone, address, department, &#8230;).</dd>\n		<dt><span class=\"atnm\">item</span></dt>\n		<dd>Comma-separated list of actual piece(s) of information you need about the field. Choose from:\n	<dl>\n		<dd><strong>value</strong> : the field&#8217;s content. Functionally equivalent to <code>{smd_bio_*field*}</code></dd>\n		<dd><strong>name</strong> : the field&#8217;s name, as defined on the Bio Config tab. Equivalent to <code>{smd_bio_*field*_name}</code></dd>\n		<dd><strong>title</strong> : the field&#8217;s &#8220;human friendly&#8221; title, as defined on the Bio Config tab. Equivalent to <code>{smd_bio_*field*_title}</code></dd>\n		<dd><strong>value_N</strong> : the value of the Nth item in a list (select, radio, checkbox group)</dd>\n		<dd><strong>title_N</strong> : the title of the Nth item in a list</dd>\n		<dd><strong>chosen_item_N</strong> : the value of the Nth selected item in a list  (select, radio, checkbox group)</dd>\n		<dd><strong>chosen_title_N</strong> : the label of the Nth selected item in a list</dd>\n		<dd><strong>value_count</strong> : the total number of list items</dd>\n		<dd><strong>chosen_count</strong> : the total number of selected list items</dd>\n		<dd><strong>widget</strong> : an <span class=\"caps\">HTML</span> input control of the correct type for this field. Use inside one of the following constructs to allow updating of bio fields from the public site / dashboards:\n	<dl>\n		<dd><code>&lt;txp:mem_form type=&quot;smd_bio&quot;&gt;</code></dd>\n		<dd><code>&lt;txp:mem_self_register&gt;</code></dd>\n		<dd><code>&lt;txp:mem_self_user_edit&gt;</code></dd>\n	</dl></dd>\n	</dl></dd>\n		<dd>Default: <code>value</code></dd>\n		<dt><span class=\"atnm\">wraptag</span></dt>\n		<dd><span class=\"caps\">HTML</span> tag (without angle brackets) to wrap around the items.</dd>\n		<dt><span class=\"atnm\">class</span></dt>\n		<dd>Fixed <span class=\"caps\">CSS</span> class name to add to the wraptag.</dd>\n		<dt><span class=\"atnm\">break</span></dt>\n		<dd><span class=\"caps\">HTML</span> tag or characters to put between each item.</dd>\n	</dl>\n\n	<h2 id=\"smd_if_bio\">Tag: <code>&lt;txp:smd_if_bio&gt;</code></h2>\n\n	<p>A simple conditional for testing a field / item. Must be used inside a <code>&lt;tx:smd_bio_info /&gt;</code> tag to test for the existence/value of one of your chosen bio items. Use smd_if for more complex conditional logic.</p>\n\n	<dl>\n		<dt><span class=\"atnm\">field</span></dt>\n		<dd>The bio field from you wish to check (e.g. department, preferred_contact, phone_number,&#8230;)</dd>\n		<dt><span class=\"atnm\">item</span></dt>\n		<dd>The actual piece of information you want to compare from the field. Choose from the same items as defined in the <code>item</code> attribute for <a href=\"#smd_bio_data\">smd_bio_data</a></dd>\n		<dd>Default: <code>value</code></dd>\n		<dt><span class=\"atnm\">value</span></dt>\n		<dd>The value you wish to compare the field/item against.</dd>\n		<dd>If omitted, the tag will just check for the existence of the given field/item</dd>\n	</dl>\n\n	<h2 id=\"smd_bio_iterate\">Tag: <code>&lt;txp:smd_bio_iterate&gt;</code></h2>\n\n	<p>Step through select list, checkbox, and radio sets with this tag, displaying info about each option as you go.</p>\n\n	<dl>\n		<dt><span class=\"atnm\">field</span></dt>\n		<dd>The bio field over which you wish to iterate (e.g. preferred_contact, subscription, favourite_rockstar, &#8230;). Must be a &#8216;list&#8217; or &#8216;group&#8217; field.</dd>\n		<dt><span class=\"atnm\">using</span></dt>\n		<dd>The type of info you want to iterate over. Choose from:\n	<dl>\n		<dd><code>chosen</code>: step over chosen (selected, checked) items</dd>\n		<dd><code>all</code>: step over all items in the group, whether selected or not</dd>\n	</dl></dd>\n		<dd>Default: <code>chosen</code></dd>\n		<dt><span class=\"atnm\">display</span></dt>\n		<dd>The piece of information you wish to output from the option. This attribute is ignored if you use a <code>form</code> or the container. Choose from:\n	<dl>\n		<dd><code>item</code>: the internal name of the option</dd>\n		<dd><code>title</code>: the option&#8217;s human-friendly title</dd>\n	</dl></dd>\n		<dd>Default: <code>title</code></dd>\n		<dt><span class=\"atnm\">form</span></dt>\n		<dd>The name of a Txp Form with which to process each option.</dd>\n		<dd>If not specified, the tag&#8217;s container will be used.</dd>\n		<dd>If the container is empty, default output is used (the option&#8217;s value).</dd>\n		<dt><span class=\"atnm\">wraptag</span></dt>\n		<dd><span class=\"caps\">HTML</span> tag (without angle brackets) to wrap around the group.</dd>\n		<dt><span class=\"atnm\">class</span></dt>\n		<dd>Fixed <span class=\"caps\">CSS</span> class name to add to the group&#8217;s wraptag.</dd>\n		<dt><span class=\"atnm\">break</span></dt>\n		<dd><span class=\"caps\">HTML</span> tag to put between each option.</dd>\n		<dt><span class=\"atnm\">breakclass</span></dt>\n		<dd><span class=\"caps\">CSS</span> class name to add to each option&#8217;s wraptag.</dd>\n		<dt><span class=\"atnm\">var_prefix</span></dt>\n		<dd>Set the prefix that this tag uses for the replacement keys.</dd>\n		<dd>Default: <code>smd_bio_</code></dd>\n		<dt><span class=\"atnm\">limit</span></dt>\n		<dd>The maximum number of options to iterate over.</dd>\n		<dd>Default: 0 (i.e. all of them)</dd>\n		<dt><span class=\"atnm\">offset</span></dt>\n		<dd>The number of options to skip before starting to display options.</dd>\n		<dd>Default: 0</dd>\n	</dl>\n\n	<h3 id=\"smd_bio_iterate_reps\"><code>&lt;txp:smd_bio_iterate&gt;</code> replacement keys</h3>\n\n	<dl>\n		<dt><code>{smd_bio_this_item}</code></dt>\n		<dd>The name of the current field.</dd>\n		<dt><code>{smd_bio_this_title}</code></dt>\n		<dd>The human-friendly title of the current field.</dd>\n		<dt><code>{smd_bio_this_index}</code></dt>\n		<dd>The option number count (starting from 1).</dd>\n	</dl>\n\n	<p>You may also use the <code>&lt;txp:smd_bio_data /&gt;</code> tag to render the relevant items.</p>\n\n	<h2 id=\"smd_bio_articles\">Tag: <code>&lt;txp:smd_bio_articles&gt;</code></h2>\n\n	<p>A simple convenience wrapper for <code>&lt;txp:article_custom /&gt;</code> that sets the <code>author</code> attribute to the person who wrote the current article. If you specify an author, that person will be used instead. In all other regards, the tag functions identically to <a href=\"http://textpattern.net/wiki/index.php?title=article_custom\">article_custom</a> and can be used as a container if you wish.</p>\n\n	<p class=\"important\"><span class=\"caps\">IMPORTANT</span>: take care when using this tag inside your default form. If you do not specify your own container or a dedicated <code>form</code>, you will receive a <em>circular reference error</em> from Textpattern as it tries to call the default form, which calls the default form, which calls the default form&#8230;</p>\n\n	<p><span class=\"caps\">EXAMPLES</span>: TO <span class=\"caps\">REVISE</span>.</p>\n\n	<h2 id=\"eg1\">Example 1: List bio fields from author of current article</h2>\n\n<pre class=\"block\"><code>&lt;txp:smd_bio_info\n     items=&quot;jobtitle, extension, cell, department&quot;\n     labeltag=&quot;dt&quot; wraptag=&quot;dl&quot;\n     break=&quot;dd&quot; class=&quot;profile&quot; /&gt;\n</code></pre>\n\n	<p>Shows the job title, work&#8217;s extension number, cell phone number and department of the current author, as a definition list with class <code>profile</code>.</p>\n\n	<h2 id=\"eg2\">Example 2: List profiles for named + priv level users</h2>\n\n<pre class=\"block\"><code>&lt;txp:smd_bio_author wraptag=&quot;div&quot; class=&quot;authors&quot;\n     author=&quot;mr_pub, SMD_PRIVS:4:3&quot;&gt;\n   &lt;txp:smd_bio_info\n     items=&quot;name, RealName, department&quot;\n     labeltag=&quot;dt&quot; wraptag=&quot;dl&quot;\n     break=&quot;dd&quot; /&gt;\n&lt;/txp:smd_bio_author&gt;\n</code></pre>\n\n	<p>Shows the name, real name and department of all <em>Copy Editors</em> and <em>Staff Writers</em> and the user &#8216;mr_pub&#8217;.</p>\n\n	<h2 id=\"eg3\">Example 3: Using smd_bio_articles and replacement keys</h2>\n\n<pre class=\"block\"><code>&lt;txp:smd_bio_info items=&quot;photo&quot; label=&quot;&quot;&gt;\n   &lt;txp:image id=&quot;{smd_bio_photo}&quot; /&gt;\n&lt;/txp:smd_bio_info&gt;\n&lt;txp:smd_bio_info items=&quot;department, RealName&quot;&gt;\n   Recent articles by\n   &lt;a href=&quot;/desks/{smd_bio_department}&quot;&gt;\n        {smd_bio_RealName}\n     &lt;/a&gt;:\n&lt;/txp:smd_bio_info&gt;\n&lt;txp:smd_bio_articles limit=&quot;6&quot;\n     wraptag=&quot;ul&quot; break=&quot;li&quot;&gt;\n   &lt;txp:permlink&gt;&lt;txp:title /&gt;&lt;/txp:permlink&gt;\n&lt;/txp:smd_bio_articles&gt;\n</code></pre>\n\n	<p>Displays the author photo, the author&#8217;s RealName linked to the section that explains about the department to which she belongs, then lists the 6 most recent articles by her. Note the use of <code>label=&quot;&quot;</code> to suppress the automatic labelling of items and our use of a replacement key to feed <code>&lt;txp:image /&gt;</code> with the ID of the selected photo.</p>\n\n	<h2 id=\"eg4\">Example 4: checkboxes, lists and radios</h2>\n\n<pre class=\"block\"><code>&lt;txp:smd_bio_author=&quot;SMD_PRIVS:5&quot;&gt;\n   &lt;txp:smd_bio_info items=&quot;name, image, contact_by,\n      subscribed, department&quot; prefix=&quot;bio_&quot;&gt;\n   &lt;a class=&quot;image&quot;\n     href=&quot;/blog/{bio_name}&quot;\n     title=&quot;browse other posts by this author&quot;&gt;\n      &lt;img class=&quot;thumb&quot;\n        src=&quot;/images/{bio_image}.jpg&quot; /&gt;\n   &lt;/a&gt;\n   &lt;div class=&quot;summary&quot;&gt;\n      &lt;h3&gt;Department&lt;/h3&gt;{bio_department}\n      &lt;h3&gt;Bio&lt;/h3&gt;{bio_profile}\n      &lt;h3&gt;Preferred contact method&lt;/h3&gt;{bio_contact_by}\n      &lt;h3&gt;Subscribed to&lt;/h3&gt;{bio_subscribed}\n   &lt;/div&gt;\n&lt;/txp:smd_bio_info&gt;\n</code></pre>\n\n	<h2>Author / Credits</h2>\n\n	<p><a href=\"http://stefdawson.com/contact\">Stef Dawson</a>. The plugin is a logical extension of pvc_users_info by Peter V. Cook (the smd_bio_articles tag is essentially the same as pvc_author_articles). Thanks also to pieman for setting the wheels in motion and net-carver for his inimitable knack of making things better.</p>\n\n	<h2>Changelog</h2>\n\n	<ul>\n		<li>14 Jul 2009 | 0.1 | Initial (non-public) release</li>\n		<li>21 Aug 2009 | 0.2 | First public release ; no image/thumb output ; experimental <code>options</code> attribute removed ; container/form accepts Txp tags ; fixed textbox size limit (thanks MattD)</li>\n		<li>31 Aug 2009 | 0.3 | Removed <code>item</code> attribute ; fixed warning message if using single items ; hidden pref <code>smd_bio_sanitize_name</code> forces sanitized login names</li>\n		<li>08 Jun 2010 | 0.31 | Javascript only appears on admin tab (thanks redbot/Gocom)</li>\n		<li>29 May 2012 | 0.40 | Improved performance and reduced server load by up to 90% (thanks jakob) ; plugin lifecycle aware ; permitted configurable database column types/sizes and international characters; removed base64 css ; added smd_bio_author, smd_bio_data, smd_bio_iterate, and smd_if_bio tags ; added <code>var_prefix</code> and <code>show_empty</code> attributes ; deprecated <code>author</code>, <code>items</code> (now <code>fields</code>), <code>labelclass</code>, <code>itemwraptag</code> (now <code>break</code>) and <code>itemclass</code> (now <code>breakclass</code>); altered replacement key names ; fixed and improved hover tooltips on <em>Admin-&gt;Users</em> tab ; increased default varchar size to 255 (thanks hablablow) ; added multi-select lists and permitted checkboxes to be marked as default ; added more field types for <span class=\"caps\">HTML</span> 5 widgets ; enabled <code>SMD_BIO_FN|function|param|param|...</code> support when defining fields to call arbitrary functions; experimental support for item=&#8220;widget&#8221; to display an input control for the given field</li>\n	</ul>\n\n</div>\n<!-- *** BEGIN PLUGIN CSS *** -->\n<style type=\"text/css\">\n#smd_help { line-height:1.5 ;}\n#smd_help code { font-weight:bold; font: 105%/130% \"Courier New\", courier, monospace; background-color: #f0e68c; color:#333; }\n#smd_help code.block { font-weight:normal; border:1px dotted #999; display:block; margin:10px 10px 20px; padding:10px; }\n#smd_help h1 { font: 22px Georgia, serif; margin: 0; text-align: center; }\n#smd_help h2 { border-bottom: 1px solid black; padding:10px 0 0; font: 18px Georgia, serif; }\n#smd_help h3 { font: bold 13px Georgia, serif; letter-spacing: 1px; margin: 20px 0 0; text-decoration:underline; }\n#smd_help h4 { font: bold 12px Georgia, serif; letter-spacing: 1px; margin: 10px 0 0; text-transform: uppercase; }\n#smd_help .atnm { font-weight:bold; }\n#smd_help .mand { background:#eee; border:1px dotted #999; }\n#smd_help table { width:90%; text-align:center; padding-bottom:1em; border-collapse:collapse; }\n#smd_help td, #smd_help th { border:1px solid #999; padding:.5em; }\n#smd_help ul { list-style-type:square; }\n#smd_help .important { color:red; }\n#smd_help li { margin:5px 20px 5px 30px; }\n#smd_help .break { margin-top:5px; }\n#smd_help dl dd { margin:2px 15px; }\n#smd_help dl dd:before { content: \"\\2022\\00a0\"; }\n#smd_help dl dd dl { padding: 0 15px; }\n</style>\n<!-- *** END PLUGIN CSS *** -->\n','/**\n * smd_bio\n *\n * A Textpattern CMS plugin for storing additional biographical author data:\n *  -> Create checkboxes, select lists, radio buttons, text input, image, etc fields\n *  -> Data is captured and stored when a user is created\n *  -> Allow people to manage their own profiles via smd_user_manager\n *\n * @author Stef Dawson\n * @link   http://stefdawson.com/\n */\n// TOFIX:\n//   stop smd_bio_iterate from trashing the bio data for future fields of the same name\n// TODO:\n//   if_first and if_last support for bio_author list?\n//   Ability to specify wildcards/matches for fields/authors in the client tag\n//   Specify tooltip extended bio information in prefs\nif (@txpinterface == \'admin\') {\n	add_privs(\'smd_bio\', \'1\');\n	register_tab(\'extensions\', \'smd_bio\', smd_bio_gTxt(\'smd_bio_admin_tab\'));\n	register_callback(\'smd_bio_dispatcher\', \'smd_bio\');\n	register_callback(\'smd_bio_fields\', \'author_ui\', \'extend_detail_form\');\n	register_callback(\'smd_bio_admin_js\', \'admin_side\', \'head_end\');\n\n	// Note these are all pre Txp\'s involvement\n	register_callback(\'smd_bio_save\', \'admin\', \'author_save\', 1);\n	register_callback(\'smd_bio_save\', \'admin\', \'author_save_new\', 1);\n	register_callback(\'smd_bio_delete\', \'admin\', \'admin_multi_edit\', 1);\n	register_callback(\'smd_bio_welcome\', \'plugin_lifecycle.smd_bio\');\n\n	// Doesn\'t hurt much to add these if the plugin\'s not installed.\n	// Since plugins are loaded in load_order and then alphabetical,\n	// at this point smd_user_manager doesn\'t \'exist\' (b < u)\n	register_callback(\'smd_bio_save\', \'smd_um\', \'smd_um_save\', 1);\n	register_callback(\'smd_bio_save\', \'smd_um\', \'smd_um_save_new\', 1);\n	register_callback(\'smd_bio_delete\', \'smd_um\', \'smd_um_multi_edit\', 1);\n}\n\nregister_callback(\'smd_bio_form_submit\', \'mem_form.submit\');\n\n// Intercept image and extended bio display on Admin->Users panel\n$smd_bio_step = gps(\'smd_bio_step\');\nif ($smd_bio_step == \'smd_bio_get_image\') {\n	smd_bio_get_image();\n}\nif ($smd_bio_step == \'smd_bio_get_ebio\') {\n	smd_bio_get_ebio();\n}\n\nif (!defined(\'SMD_BIO\')) {\n	define(\"SMD_BIO\", \'smd_bio\');\n}\nif (!defined(\'SMD_BIO_META\')) {\n	define(\"SMD_BIO_META\", \'smd_bio_meta\');\n}\n\n// -------------------------------------------------------------\nfunction smd_bio_get_styles() {\n	$smd_bio_styles = array(\n		\'meta\' =>\n         \'.smd_bio_toggler { display:none; }\',\n		\'tooltip\' =>\n         \'#tooltip { position:absolute; border:1px solid #333; background:#f7f5d1; padding:10px 15px; opacity:.9; color:#333; display:none; max-width:60%; }\',\n	);\n	return $smd_bio_styles;\n}\n\n// -------------------------------------------------------------\n// Install/uninstall jumpoff point\nfunction smd_bio_welcome($evt, $stp) {\n	$msg = \'\';\n	switch ($stp) {\n		case \'installed\':\n			smd_bio_table_install(0);\n			$msg = \'Pimp your users\';\n			break;\n		case \'deleted\':\n			smd_bio_table_remove(0);\n			break;\n	}\n	return $msg;\n}\n\n// ************************\n// BIO CONFIGURATION\n// ------------------------\nfunction smd_bio_dispatcher($evt, $stp) {\n	$available_steps = array(\n		\'smd_bio_config\'          => false,\n		\'smd_bio_table_install\'   => false,\n		\'smd_bio_table_remove\'    => false,\n		\'smd_bio_meta_add\'        => true,\n		\'smd_bio_meta_del\'        => true,\n		\'smd_bio_meta_save\'       => true,\n		\'smd_bio_save_pane_state\' => true,\n	);\n\n	if (!$stp or !bouncer($stp, $available_steps)) {\n		$stp = \'smd_bio_config\';\n	}\n	$stp();\n}\n\n// ------------------------\n// The Extensions->Bio config panel, made up of two areas: the edit pane and the list pane\nfunction smd_bio_config($msg=\'\') {\n	smd_bio_table_install(0);\n\n	pagetop(smd_bio_gTxt(\'smd_bio_admin_tab\'), $msg);\n\n	echo smd_bio_meta_edit();\n	echo smd_bio_meta_list();\n}\n\n// ------------------------\nfunction smd_bio_meta_edit() {\n	$smd_bio_types = smd_bio_get_types();\n	$smd_bio_coltypes = smd_bio_get_coltypes();\n\n	$vars = array(\'step\', \'id\', \'title\', \'name\', \'type\', \'coltype\', \'colsize\', \'size\', \'val\', \'position\');\n	$rs = array();\n\n	extract(gpsa($vars));\n	if ($id && $step == \'meta_edit\') {\n		$id = assert_int($id);\n		$rs = safe_row(\'*\', SMD_BIO_META, \"id = $id\");\n		extract($rs);\n	}\n\n	if ($step == \'smd_bio_meta_save\' || $step == \'smd_bio_meta_add\' || $step == \'smd_bio_meta_del\') {\n		foreach ($vars as $var) {\n			$$var = \'\';\n		}\n	}\n\n	$caption = smd_bio_gTxt(($step == \'meta_edit\') ? \'smd_bio_meta_edit\' : \'smd_bio_meta_add\');\n\n	// Make the name/val pairs for the type selectInput\n	$selv = array();\n	foreach ($smd_bio_types as $widx => $wval) {\n		$selv[$widx] = $wval[\'name\'];\n	}\n\n	// Make the name/val pairs for the coltype selectInput\n	foreach($smd_bio_coltypes as $ctype => $cdata) {\n		$coltypes[$ctype] = $cdata[\'title\'];\n	}\n\n	$toggleState = get_pref(\'pane_smd_bio_coltype_visible\') ? true : false;\n\n	return form(\n		hed($caption, 3,\' style=\"text-align: center;\"\').\n\n		startTable(\'edit\', \'\', \'edit\').\n\n		tr(\n			fLabelCell(\'name\').\n			($id && $step == \'meta_edit\' ? td(strong($name)) : fInputCell(\'name\', $name))\n		).\n\n		tr(\n			fLabelCell(\'title\').\n			fInputCell(\'title\', $title)\n		).\n\n		tr(\n			fLabelCell(\'type\').\n			td(selectInput(\'type\', $selv, $type, false, \'\', \'smd_bio_widget_type\') .sp. \'<a id=\"smd_bio_coltype\" class=\"lever\'.(($toggleState) ? \' expanded\' : \'\').\'\" href=\"#\">\'.smd_bio_gTxt(\'smd_bio_more\').\'</a>\')\n		).\n\n		tr(\n			fLabelCell(smd_bio_gTxt(\'smd_bio_coltype\')).\n			td(selectInput(\'coltype\', $coltypes, $coltype, false))\n			, \' class=\"smd_bio_coltype \'.(($toggleState) ? \'\' : \' smd_bio_toggler\').\'\"\'\n		).\n\n		tr(\n			fLabelCell(smd_bio_gTxt(\'smd_bio_colsize\')).\n			fInputCell(\'colsize\', $colsize)\n			, \' class=\"smd_bio_coltype \'.(($toggleState) ? \'\' : \' smd_bio_toggler\').\'\"\'\n		).\n\n		tr(\n			fLabelCell(smd_bio_gTxt(\'smd_bio_size\') . n . tag(smd_bio_gTxt(\'smd_bio_help\'), \'a\', \' class=\"pophelp smd_bio_size\"\')).\n			fInputCell(\'size\', $size)\n		).\n\n		tr(\n			fLabelCell(smd_bio_gTxt(\'smd_bio_value\') . n . tag(smd_bio_gTxt(\'smd_bio_help\'), \'a\', \' class=\"pophelp smd_bio_val\"\')).\n			td(text_area(\'val\', \'100\', \'300\', $val))\n		).\n\n		tr(\n			fLabelCell(smd_bio_gTxt(\'smd_bio_position\')).\n			fInputCell(\'position\', $position)\n		).\n\n		tr(\n			td().\n			td(\n				fInput(\'submit\', \'save\', gTxt(\'save\'), \'publish\')\n			)\n		).\n\n		endTable().\n\n		eInput(\'smd_bio\').\n		tInput().\n		($id ? hInput(\'id\', $id).hInput(\'name\', $name).sInput(\'smd_bio_meta_save\') : sInput(\'smd_bio_meta_add\')).\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_text\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_number\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_numrange\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_range\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_numrange\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_list\" title=\"\'.smd_bio_gTxt(\'smd_bio_help_unused\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_multilist\" title=\"\'.smd_bio_gTxt(\'smd_bio_help_unused\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_radio\" title=\"\'.smd_bio_gTxt(\'smd_bio_help_unused\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_yesnoradio\" title=\"\'.smd_bio_gTxt(\'smd_bio_help_unused\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_checkbox\" title=\"\'.smd_bio_gTxt(\'smd_bio_help_unused\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_textarea\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_textarea\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_image\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_image\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_email\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_url\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_datetime\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_date\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_month\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_week\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_time\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_text\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_number\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_range\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_list\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_lrc\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_multilist\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_lrc\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_radio\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_lrc\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_yesnoradio\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_ynr\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_checkbox\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_lrc\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_textarea\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_image\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_image\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_email\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_url\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_datetime\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_date\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_month\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_week\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_time\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\')\n	);\n}\n\n// ------------------------\nfunction smd_bio_meta_list() {\n\n	$smd_bio_types = smd_bio_get_types();\n\n	extract(gpsa(array(\'sort\', \'dir\', \'crit\', \'search_method\')));\n	if ($sort === \'\') $sort = get_pref(\'smd_bio_meta_sort_column\', \'name\');\n	if ($dir === \'\') $dir = get_pref(\'smd_bio_meta_sort_dir\', \'asc\');\n	$dir = ($dir == \'desc\') ? \'desc\' : \'asc\';\n\n	if (!in_array($sort, array(\'name\', \'title\', \'type\', \'size\', \'val\', \'position\'))) $sort = \'position\';\n\n	$sort_sql   = $sort.\' \'.$dir;\n\n	set_pref(\'smd_bio_meta_sort_column\', $sort, \'smd_bio\', 2, \'\', 0, PREF_PRIVATE);\n	set_pref(\'smd_bio_meta_sort_dir\', $dir, \'smd_bio\', 2, \'\', 0, PREF_PRIVATE);\n\n	$switch_dir = ($dir == \'desc\') ? \'asc\' : \'desc\';\n\n	$rs = safe_rows_start(\'*\', SMD_BIO_META, \'1=1 ORDER BY \'.$sort_sql);\n\n	if ($rs) {\n		echo \'<form id=\"smd_bio_form\" action=\"index.php\" method=\"post\" name=\"longform\" onsubmit=\"return verify(\\\'\'.gTxt(\'are_you_sure\').\'\\\')\">\'.\n\n		startTable(\'list\').\n		tr(\n			column_head(\'name\', \'name\', \'smd_bio\', true, $switch_dir, \'\', \'\', (\'name\' == $sort) ? $dir : \'\').\n			column_head(\'title\', \'title\', \'smd_bio\', true, $switch_dir, \'\', \'\', (\'title\' == $sort) ? $dir : \'\').\n			column_head(\'type\', \'type\', \'smd_bio\', true, $switch_dir, \'\', \'\', (\'type\' == $sort) ? $dir : \'\').\n			column_head(smd_bio_gTxt(\'smd_bio_size\'), \'size\', \'smd_bio\', true, $switch_dir, \'\', \'\', (\'size\' == $sort) ? $dir : \'\').\n			column_head(\'value\', \'val\', \'smd_bio\', true, $switch_dir, \'\', \'\', (\'val\' == $sort) ? $dir : \'\').\n			column_head(smd_bio_gTxt(\'smd_bio_position\'), \'position\', \'smd_bio\', true, $switch_dir, \'\', \'\', (\'position\' == $sort) ? $dir : \'\').\n			hCell().\n			hCell()\n		);\n\n		while ($a = nextRow($rs)) {\n			extract(doSpecial($a));\n\n			echo tr(\n				td($name).\n				td($title).\n				td($smd_bio_types[$type][\'name\']).\n				td($size).\n				td($val,200).\n				td($position).\n				td(eLink(\'smd_bio\', \'meta_edit\', \'id\', $id, gTxt(\'edit\'))).\n				td(dLink(\'smd_bio\', \'smd_bio_meta_del\', \'id\', $id, 1, \'name\', $name))\n			);\n		}\n\n		echo endTable().\'</form>\';\n	}\n}\n\n// ------------------------\nfunction smd_bio_meta_make_list($val) {\n\n	if (strpos(strtolower($val), \'smd_bio_fn\') !== false) {\n		// Special function syntax so call the designated\n		// function to retrieve the value(s)\n		$params = do_list($val, \'|\');\n		array_shift($params); // Remove SMD_BIO_FN\n		$fn = array_shift($params);\n\n		$fnbits = do_list($fn, \'::\');\n		$fncall = (isset($fnbits[1])) ? array($fnbits[0], $fnbits[1]) : $fnbits[0];\n		$val = call_user_func_array($fncall, $params);\n\n		if (is_array($val)) {\n			// Fake a string list of name => val pairs\n			$out = array();\n			foreach ($val as $idx => $item) {\n				$out[] = str_replace(\',\', \'&#44;\', $idx . \' => \' . $item); // Preserve commas by encoding them\n			}\n			$val = join(\', \', $out);\n		}\n	}\n\n	// Parse the values\n	$wvals = do_list($val, \'\\r\\n\');\n	if (count($wvals) == 1) {\n		$wvals = do_list($val);\n	}\n	return join(\', \', doArray($wvals, \'trim\'));\n}\n\n// ------------------------\nfunction smd_bio_meta_save() {\n	$smd_bio_coltypes = smd_bio_get_coltypes();\n	$smd_bio_unused = smd_bio_get_unused();\n\n	extract(doSlash(psa(array(\'id\', \'name\', \'title\', \'type\', \'coltype\', \'colsize\', \'size\', \'position\'))));\n	$val = ps(\'val\'); // Defer doSlash() until later\n\n	$id = assert_int($id);\n	$val = doSlash(smd_bio_meta_make_list($val));\n\n	// Validate the input to ensure items are emptied for types where they\'re unused\n	foreach ($smd_bio_unused as $unused => $excludes) {\n		if (in_array($type, $excludes)) {\n			$$unused = \'\';\n		}\n	}\n\n	// Validate the input to ensure items that require a column size have one...\n	if (empty($colsize) && $smd_bio_coltypes[$coltype][\'size_req\'] !== false) {\n		$colsize = $smd_bio_coltypes[$coltype][\'size_req\'];\n	}\n\n	// ... and that ones that don\'t require one are removed\n	if ($smd_bio_coltypes[$coltype][\'size_req\'] === false) {\n		$colsize = \'\';\n	}\n\n	// Try to adjust column type/size if applicable\n	$rs = safe_alter(SMD_BIO, \"CHANGE `$name` `$name` $coltype\" . (($colsize) ? \"($colsize)\" : \'\') . \" NULL DEFAULT NULL\");\n\n	if ($rs) {\n		$rs = safe_update(SMD_BIO_META, \"\n			title = \'$title\',\n			type = \'$type\',\n			size = \'$size\',\n			coltype = \'$coltype\',\n			colsize = \'$colsize\',\n			val = \'$val\',\n			position = \'$position\'\",\n			\"id = $id\"\n		);\n\n		if ($rs) {\n			$msg = smd_bio_gTxt(\'smd_bio_meta_updated\', array(\'{name}\' => $name));\n		} else {\n			$msg = array(smd_bio_gTxt(\'smd_bio_meta_update_partial\', array(\'{name}\' => $name)), E_WARNING);\n		}\n	} else {\n		$msg = array(smd_bio_gTxt(\'smd_bio_meta_update_failed\', array(\'{name}\' => $name)), E_WARNING);\n	}\n\n	smd_bio_config($msg);\n}\n\n// ------------------------\nfunction smd_bio_meta_add() {\n	$smd_bio_coltypes = smd_bio_get_coltypes();\n	$smd_bio_unused = smd_bio_get_unused();\n\n	extract(doSlash(psa(array(\'name\', \'title\', \'type\', \'coltype\', \'colsize\', \'size\', \'position\'))));\n	$val = ps(\'val\'); // Defer doSlash() until later\n	$name = smd_bio_sanitize($name);\n\n	if (!empty($name) && smd_bio_meta_check($name)) {\n		$size = (empty($size)) ? 25 : $size;\n\n		// Validate the input to ensure items are emptied for types where they\'re unused\n		foreach ($smd_bio_unused as $unused => $excludes) {\n			if (in_array($type, $excludes)) {\n				$$unused = \'\';\n			}\n		}\n\n		// Validate the input to ensure items that require a column size have one...\n		if (empty($colsize) && $smd_bio_coltypes[$coltype][\'size_req\'] !== false) {\n			$colsize = $smd_bio_coltypes[$coltype][\'size_req\'];\n		}\n		// ... and that ones that don\'t require one are removed\n		if ($smd_bio_coltypes[$coltype][\'size_req\'] === false) {\n			$colsize = \'\';\n		}\n\n		$ret = safe_alter(SMD_BIO, \"ADD `$name` $coltype\" . ( ($colsize) ? \"($colsize)\" : \'\') . \" NULL DEFAULT NULL\");\n		$val = doSlash(smd_bio_meta_make_list($val));\n\n		if ($ret) {\n			$rs = safe_insert(SMD_BIO_META, \"\n				name = \'$name\',\n				title = \'$title\',\n				type = \'$type\',\n				size = \'$size\',\n				coltype = \'$coltype\',\n				colsize = \'$colsize\',\n				val = \'$val\',\n				position = \'$position\'\n			\");\n\n			if ($rs) {\n				smd_bio_config(smd_bio_gTxt(\'smd_bio_meta_added\'));\n				return;\n			}\n		}\n	}\n\n	smd_bio_config(array(smd_bio_gTxt(\'smd_bio_meta_not_added\'), E_ERROR));\n}\n\n// ------------------------\nfunction smd_bio_meta_del() {\n	extract(gpsa(array(\'id\',\'name\')));\n\n	$id = assert_int($id);\n	$message = smd_bio_gTxt(\'smd_bio_meta_not_deleted\');\n\n	$exists = smd_bio_meta_check($name);\n	$ret = @safe_alter(SMD_BIO, \"DROP COLUMN `$name`\");\n	if ($ret || $exists) {\n		$ret = safe_delete(SMD_BIO_META, \"id=\'$id\'\");\n		$message = smd_bio_gTxt(\'smd_bio_meta_deleted\');\n	}\n\n	smd_bio_config($message);\n}\n\n// ------------------------\nfunction smd_bio_meta_check($col) {\n	$ucols = getThings(\'describe `\'.PFX.\'txp_users`\');\n	$bcols = getThings(\'describe `\'.PFX.SMD_BIO.\'`\');\n	$cols = array_merge($ucols, $bcols);\n 	return (!in_array($col, $cols));\n}\n\n// ************************\n// ADMIN -> USERS TAB\n// ------------------------\nfunction smd_bio_fields($evt, $stp, $mt, $data) {\n	global $smd_um_event, $txp_user;\n\n	$out = $vals = array();\n\n	$rstep = gps(\'step\');\n	if(smd_bio_table_exist()) {\n		if (in_array($rstep, array(\'\', \'author_edit\', \'smd_um_edit\', \'smd_um_save\', \'smd_um_change_pass\'))) {\n			extract(gpsa(array(\'user_id\')));\n\n			if (empty($user_id) && !has_privs(\'smd_um.usr.create\')) {\n				// This is a self-edit from smd_user_manager, thus the user_id has not been sent\n				$user_id = safe_field(\'user_id\',\'txp_users\',\"name = \'\".doSlash($txp_user).\"\'\");\n			}\n			// Shame we have to double de-clutch here but we can\'t index on user_id unfortunately (\'cos when\n			// inserting new users, the bio functions run _BEFORE_ an auto_increment ID has been generated by Txp)\n			$uname = safe_field(\'name\',\'txp_users\',\"user_id = \'\".doSlash($user_id).\"\'\");\n			$vals = safe_row(\'*\', SMD_BIO, \"user_ref=\'\".doSlash($uname).\"\'\");\n		}\n		$widgets = safe_rows(\'*\', SMD_BIO_META, \'1=1 ORDER BY position\');\n		$tdac = \' class=\"noline\"\';\n		$tdac_image = \' class=\"noline smd_bio_image_cell\"\';\n		foreach ($widgets as $widget) {\n			$val = ($vals && isset($vals[$widget[\'name\']])) ? $vals[$widget[\'name\']] : $widget[\'val\'];\n			$title = ($widget[\'title\']) ? $widget[\'title\'] : $widget[\'name\'];\n			$sizeopts = do_list($widget[\'size\']);\n			$size1 = $sizeopts[0];\n			$size2 = (isset($sizeopts[1])) ? $sizeopts[1] : \'\';\n			$size3 = (isset($sizeopts[2])) ? $sizeopts[2] : \'\';\n			$name = \'smd_bio_\'.$widget[\'name\'];\n			switch($widget[\'type\']) {\n				case \'list\':\n					$selv = smd_bio_splitval($widget[\'val\']);\n					list($selv, $dflt) = smd_bio_get_default($selv, $val);\n					$out[] = tr(fLabelCell($title).tda(selectInput($name, $selv, $dflt, false, \'\', $name), $tdac), \' class=\"smd_bio_select \'.$name.\'\"\');\n					break;\n				case \'multilist\':\n					$val = ($vals && isset($vals[$widget[\'name\']])) ? $vals[$widget[\'name\']] : \'\';\n					$selv = smd_bio_splitval($widget[\'val\']);\n					list($selv, $dflt) = smd_bio_get_default($selv, $val);\n					$use_val = $vals ? $val : $dflt; // Don\'t use defaults if this is a previously saved record\n					$selectedVals = do_list($use_val);\n					$items = array();\n					$items[] = \'<select name=\"\'.$name.\'\" class=\"list multiple\" multiple=\"multiple\" onchange=\"smd_bio_multisel(\\\'\'.$name.\'\\\');\">\';\n					foreach ($selv as $idx => $lbl) {\n						// Not using selectInput() because it doesn\'t support multiples\n						$items[] = \'<option value=\"ms_\'.$idx.\'\" \'.((in_array($idx, $selectedVals)) ? \' selected=\"selected\"\' : \'\') . \'>\' . $lbl . \'</option>\';\n					}\n					$items[] = \'</select>\';\n					$out[] = tr(fLabelCell($title).tda(join(n,$items), $tdac), \' class=\"smd_bio_select \'.$name.\'\"\').fInput(\'hidden\',$name,$use_val,\'\',\'\',\'\',\'\',\'\',$name);\n					break;\n				case \'radio\':\n					$selv = smd_bio_splitval($widget[\'val\']);\n					list($selv, $dflt) = smd_bio_get_default($selv, $val);\n					$out[] = tr(fLabelCell($title).tda(radioSet($selv, $name, $dflt), $tdac), \' class=\"smd_bio_radio \'.$name.\'\"\');\n					break;\n				case \'yesnoradio\':\n					$out[] = tr(fLabelCell($title).tda(yesnoRadio($name, $val), $tdac), \' class=\"smd_bio_radio \'.$name.\'\"\');\n					break;\n				case \'checkbox\':\n					$val = ($vals && isset($vals[$widget[\'name\']])) ? $vals[$widget[\'name\']] : \'\';\n					$selv = smd_bio_splitval($widget[\'val\']);\n					list($selv, $dflt) = smd_bio_get_default($selv, $val);\n					$use_val = $vals ? $val : $dflt; // Don\'t use defaults if this is a previously saved record\n					$checkedVals = do_list($use_val);\n					$items = array();\n					foreach ($selv as $idx => $lbl) {\n						// Not using checkbox() because it doesn\'t support onclick\n						$items[] = \'<input type=\"checkbox\" name=\"cb_\'.$name.\'\" value=\"\'.$idx.\'\"\'.((in_array($idx, $checkedVals)) ? \' checked=\"checked\"\' : \'\') . \' class=\"checkbox\" onclick=\"smd_bio_checkbox(\\\'\'.$name.\'\\\');\" />\'.$lbl;\n					}\n					$out[] = tr(fLabelCell($title).tda(join(\'\', $items), $tdac), \' class=\"smd_bio_checkbox \'.$name.\'\"\').fInput(\'hidden\',$name,$use_val,\'\',\'\',\'\',\'\',\'\',$name);\n					break;\n				case \'textarea\':\n					// Not using text_area() because it forces inline styled width/height which should be in CSS.\n					// TODO: change this to text_area() when 4.5.0 released.\n					$size1 = ($size1 == \'\' || $size1 == 0) ? 40 : $size1;\n					$size2 = ($size2 == \'\' || $size2 == 0) ? 5 : $size2;\n					$out[] = tr(fLabelCell($title).tda(\'<textarea id=\"\'.$name.\'\" name=\"\'.$name.\'\" class=\"smd_bio_textarea\" cols=\"\'.$size1.\'\" rows=\"\'.$size2.\'\">\'.htmlspecialchars($val).\'</textarea>\', $tdac), \' class=\"smd_bio_textarea \'.$name.\'\"\');\n					break;\n				case \'image\':\n					$parent = $widget[\'val\'];\n					$val = ($vals && isset($vals[$widget[\'name\']])) ? $vals[$widget[\'name\']] : \'\';\n					$where = ($parent) ? \"category=\'\".doSlash($parent).\"\'\" : \'1=1\';\n					$tree = safe_rows(\'*\', \'txp_image\', $where. \' ORDER BY name\');\n					$selv = array();\n					foreach ($tree as $row) {\n						$selv[$row[\'id\']] = $row[\'name\'];\n					}\n					$out[] = tr(fLabelCell($title).tda(\'<input type=\"text\" value=\"\'.htmlspecialchars($val).\'\" name=\"\'.$name.\'\" size=\"4\" class=\"smd_bio_image_id\" />\'.selectInput($name.\'_list\', $selv, $val, true, \'\').\'<div class=\"smd_bio_image\"></div><span class=\"smd_bio_image_data\" title=\"\'.(($size1) ? $size1 : \'\').\',\'.(($size2) ? $size2 : $size1).\'\"></span>\', $tdac_image. \' id=\"\'.$name.\'\"\'), \' class=\"smd_bio_image_row \'.$name.\'\"\');\n					break;\n				case \'number\':\n				case \'range\':\n					$min = ($size1 == \'\') ? \'\' : \" min={$size1}\";\n					$max = ($size2 == \'\') ? \'\' : \" max={$size2}\";\n					$jmp = ($size3 == \'\') ? \'\' : \" step={$size3}\";\n					$out[] = tr(fLabelCell($title).tda(\'<input type=\"\'.$widget[\'type\'].\'\" value=\"\'.htmlspecialchars($val).\'\" name=\"\'.$name.\'\" id=\"\'.$name.\'\"\'.$min.$max.$jmp.\'\" class=\"smd_bio_\'.$widget[\'type\'].\' edit\" />\', $tdac), \' class=\"smd_bio_\'.$widget[\'type\'].\' \'.$name.\'\"\');\n					break;\n				case \'date\':\n				case \'month\':\n				case \'week\':\n				case \'time\':\n				case \'datetime\':\n				case \'email\':\n				case \'url\':\n				case \'text\':\n					// Not using fInput() because it has no MAXLENGTH property and doesn\'t support HTML 5 elements\n					$size1 = ($size1 == \'\' || $size1 == 0) ? 25 : $size1;\n					$size2 = ($size2 == \'\' || $size2 == 0) ? $size1 : $size2;\n					$out[] = tr(fLabelCell($title).tda(\'<input type=\"\'.$widget[\'type\'].\'\" value=\"\'.htmlspecialchars($val).\'\" name=\"\'.$name.\'\" id=\"\'.$name.\'\" size=\"\'.$size1.\'\" maxlength=\"\'.$size2.\'\" class=\"smd_bio_\'.$widget[\'type\'].\' edit\" />\', $tdac), \' class=\"smd_bio_\'.$widget[\'type\'].\' \'.$name.\'\"\');\n					break;\n			}\n		}\n	}\n	return join(\'\', $out);\n}\n\n// ------------------------\n// Read a name/val array and remove any [*] marker which indicates a default item\nfunction smd_bio_get_default($list, $curr) {\n	$out = array();\n	$dflt = \'\';\n	$new_dflt = array();\n	foreach ($list as $item => $value) {\n		$value = str_replace(\'&#44;\', \',\', $value);\n		if (($pos = strpos($value, \'[*]\')) !== false) {\n			$out[$item] = substr($value, 0, $pos);\n			$new_dflt[] = $item;\n		} else {\n			$out[$item] = $value;\n		}\n		if ($item == $curr) {\n			$dflt = $item;\n		}\n	}\n	$dflt = ($dflt) ? $dflt : join(\',\', $new_dflt);\n	return array($out, $dflt);\n}\n\n// ------------------------\n// AJAX calls\nfunction smd_bio_get_image() {\n	global $img_dir;\n\n	$id = gps(\'id\');\n	if ($id) {\n		$rs = safe_row(\'*\', \'txp_image\', \"id = \'\".doSlash($id).\"\'\");\n		extract($rs);\n		$out = array();\n		$out[\'thumb\'] = ($thumbnail) ? hu.$img_dir.\'/\'.$id.\'t\'.$ext : \'\';\n		$out[\'image\'] = hu.$img_dir.\'/\'.$id.$ext;\n		$out[\'w\'] = $w;\n		$out[\'h\'] = $h;\n		$out[\'thw\'] = ($thumb_w) ? $thumb_w : \'\';\n		$out[\'thh\'] = ($thumb_h) ? $thumb_h : \'\';\n		send_xml_response($out);\n	} else {\n		send_xml_response();\n	}\n}\n\n// ------------------------\n// IMPORTANT: constants NOT used for table names\nfunction smd_bio_get_ebio() {\n	include_once txpath.\'/publish/taghandlers.php\';\n\n	$id = gps(\'id\');\n	$core = array(\'user_ref\');\n	$rs = safe_row(\'*\', \'smd_bio\', \"user_ref = \'\".doSlash($id).\"\'\");\n	$meta = safe_rows(\'*\', \'smd_bio_meta\', \"1=1\");\n//	$include = array_merge($core, array(\'mug\', \'cell\', \'department\')); // TODO: get these from prefs/meta table\n	$allowed_types = array(\'text\', \'textarea\', \'email\', \'url\', \'date\', \'month\', \'week\', \'time\', \'datetime\', \'number\', \'range\');\n	$out = array();\n	foreach ($rs as $idx => $val) {\n//		if (in_array($idx, $include)) {\n			if (in_array($idx, $core)) {\n				$out[$idx] = doSlash($val);\n			} else {\n				foreach($meta as $row) {\n					if ($row[\'name\'] == $idx) {\n						if ($row[\'type\'] == \"image\") {\n							// Crude str_replace() to remove javascript-breaking single quotes\n							$out[$idx] = \'smd_image::\'.str_replace(\"\'\", \'\', thumbnail(array(\'id\'=> $val)));\n						} else if (in_array($row[\'type\'], $allowed_types)) {\n							$out[$idx] = $row[\'title\'].\'::\'.htmlspecialchars(strip_tags($val), ENT_QUOTES);\n						}\n						break;\n					}\n				}\n			}\n//		}\n	}\n	send_xml_response($out);\n}\n\n// Inject admin-side javascript\n// ------------------------\nfunction smd_bio_admin_js($evt, $stp) {\n	global $event, $step;\n\n	$smd_bio_styles = smd_bio_get_styles();\n\n	$runon = array(\n		\'admin\' => array(\n			\'evt\' => array(\'admin\', \'smd_um\'),\n			\'stp\' => array(\'\', \'smd_um\', \'smd_um_edit\', \'smd_um_edit\', \'smd_um_save\', \'smd_um_save_new\', \'smd_um_change_pass\', \'author_edit\', \'author_save\', \'author_save_new\'),\n		),\n		\'bio\' => array(\n			\'evt\' => array(\'smd_bio\'),\n		),\n	);\n\n	// ********\n	// js+css for Admin->Users tab\n	// ********\n	if (in_array($event, $runon[\'admin\'][\'evt\']) !== false && in_array($step, $runon[\'admin\'][\'stp\']) !== false) {\n		$css_custom = safe_field(\'css\', \'txp_css\', \"name=\'smd_bio\'\");\n		$css = \'<style type=\"text/css\">\' . $css_custom .n. $smd_bio_styles[\'tooltip\'] . \'</style>\';\n\n	echo <<<EOJS\n<script type=\"text/javascript\">\n//<![CDATA[\n\n// Concatenate checkbox options for storage\nfunction smd_bio_checkbox(dest) {\n	var out = [];\n	jQuery(\"#user_edit :checkbox\").each(function() {\n		var item = jQuery(this);\n		if (item.attr(\'name\').replace(\'cb_\',\'\') == dest) {\n			if (item.prop(\'checked\') == true) {\n				out.push(item.val());\n			}\n		}\n	});\n	jQuery(\'#\'+dest).val(out.join(\',\'));\n}\n// Concatenate multi select list options for storage\nfunction smd_bio_multisel(dest) {\n	var out = [];\n	jQuery(\"#user_edit select.multiple\").each(function() {\n		var item = jQuery(this);\n		if (item.attr(\'name\') == dest) {\n			// You\'re the one that I want, ooh ooh oooohhh\n			jQuery(item).children(\":selected\").each(function() {\n				out.push(jQuery(this).val().replace(\'ms_\',\'\'));\n			});\n		}\n	});\n	jQuery(\'#\'+dest).val(out.join(\',\'));\n}\njQuery(function() {\n	// Grab images from the server when the select/textbox change\n	jQuery(\".smd_bio_image_id\").blur(function() {\n		id = jQuery(this).parent().attr(\'id\');\n		val = jQuery(this).val();\n		smd_bio_get_image(id, val);\n	}).blur();\n	jQuery(\".smd_bio_image_cell .list\").change(function() {\n		id = jQuery(this).parent().attr(\'id\');\n		val = jQuery(this).val();\n		smd_bio_get_image(id, val);\n	});\n	function smd_bio_get_image(id, val) {\n		jQuery(\"#\" + id + \" select option[value=\'\"+val+\"\']\").prop(\"selected\", true);\n		jQuery(\"#\" + id + \" input\").val(val);\n		var dims = jQuery(\"#\" + id + \" span.smd_bio_image_data\").attr(\'title\');\n		var size = new Array();\n		if (dims) {\n			size = dims.split(\",\");\n		}\n		sendAsyncEvent({\n				event: textpattern.event,\n				smd_bio_step: \'smd_bio_get_image\',\n				id: val\n			}, function(data) {\n				data = jQuery(data);\n				if (data) {\n					var full = 0;\n					var imgLink = data.find(\'thumb\').attr(\'value\');\n					if (imgLink == \'\') {\n						full = 1;\n						var imgLink = data.find(\'image\').attr(\'value\');\n					}\n					if (size[0] == \'\') {\n						if (full == 1) {\n							size[0] = data.find(\'w\').attr(\'value\');\n						} else {\n							size[0] = data.find(\'thw\').attr(\'value\');\n						}\n					}\n					if (size[1] == \'\') {\n						if (full == 1) {\n							size[1] = data.find(\'h\').attr(\'value\');\n						} else {\n							size[1] = data.find(\'thh\').attr(\'value\');\n						}\n					}\n					jQuery(\"#\" + id + \" .smd_bio_image\").fadeIn().html(\'<img src=\"\'+imgLink+\'\" width=\"\'+size[0]+\'\" height=\"\'+size[1]+\'\" />\');\n				} else {\n					jQuery(\"#\" + id + \" .smd_bio_image\").fadeOut().empty();\n				}\n			}\n		);\n	}\n\n	// Grab the extended info when hovering an author in the list\n	jQuery(\"#users_form tbody tr, #smd_um_form tbody tr\").hover(function(e) {\n		var tt = \'\';\n		var row = jQuery(this);\n		var hovItem = row.find(\".actions\");\n\n		if (row.data(\'tooltip\') == undefined) {\n			var person = row.find(\"td:first\").text();\n\n			sendAsyncEvent({\n					event: textpattern.event,\n					smd_bio_step: \'smd_bio_get_ebio\',\n					id: person\n				}, function(data) {\n					data = jQuery(data);\n						var entry = data.find(\'user_ref\');\n						out = \'\';\n						entry.nextAll().each(function(item) {\n							node = jQuery(this).context.nodeName;\n							if (node != \'http-status\') {\n								vall = jQuery(this).attr(\'value\');\n								if (vall) {\n									vsplit = vall.split(\'::\');\n									if (vsplit[0].indexOf(\'smd_image\') < 0) {\n										out += ((vsplit.length>1) ? vsplit[0] : node) + \': \';\n									}\n									vall = ((vsplit.length>1) ? vsplit[1] : vsplit[0]);\n									out += vall + \'<br/>\';\n								} else {\n									out += node+\': \';\n								}\n							}\n						});\n						row.data(\'tooltip\', out);\n//						hovItem.trigger(\'mouseover\'); // Trigger the hover state when the data is loaded\n					}\n			);\n		}\n\n		xOffset = 30;\n		yOffset = 25;\n		hovItem.hover(function(e) {\n			var tt = jQuery(this).parent().data(\'tooltip\');\n			if (tt != \'\') {\n				jQuery(\"body\").append(\"<p id=\'tooltip\'>\"+ tt +\"</p>\");\n				jQuery(\"#tooltip\")\n					.css(\"top\",(e.pageY - xOffset) + \"px\")\n					.css(\"left\",(e.pageX + yOffset) + \"px\")\n					.fadeIn(\"fast\");\n			}\n		},\n		function() {\n			jQuery(\"#tooltip\").remove();\n	    });\n		hovItem.mousemove(function(e) {\n			jQuery(\"#tooltip\")\n				.css(\"top\",(e.pageY - xOffset) + \"px\")\n				.css(\"left\",(e.pageX + yOffset) + \"px\");\n		});\n	});\n});\n//]]>\n</script>\n{$css}\nEOJS;\n	}\n\n	// ********\n	// js for Extensions->Bio config tab\n	// ********\n	if (in_array($event, $runon[\'bio\'][\'evt\'])) {\n		$smd_bio_types = smd_bio_get_types();\n		$smd_bio_unused = smd_bio_get_unused();\n\n		$css = \'<style type=\"text/css\">\' . $smd_bio_styles[\'meta\'] . \'</style>\';\n		$js_unused = join(\',\', doArray($smd_bio_unused[\'size\'], \'doQuote\'));\n\n		foreach ($smd_bio_types as $type => $data) {\n			$type_json[] = \'smd_bio_types[\"\'.$type.\'\"] = { \"dflt_type\": \"\'.$data[\'coltype\'].\'\", \"dflt_size\": \"\'.$data[\'colsize\'].\'\", \"fixed\": \"\'.$data[\'fixed\'].\'\" };\';\n		}\n		$type_json = join(n, $type_json);\n\n		echo <<<EOJS\n<script type=\"text/javascript\">\n//<![CDATA[\nvar smd_bio_unused = [{$js_unused}];\nvar smd_bio_types = [];\nvar destColtype = \"#page-smd_bio select[name=\'coltype\']\";\nvar destColsize = \"#page-smd_bio input[name=\'colsize\']\";\n{$type_json}\n\njQuery(function() {\n	// Perform actions when the Type is changed\n	// Action #1: size box. Auto-update this when Edit clicked as well as when select list is altered\n	jQuery(\"#smd_bio_widget_type\").change(function() {\n		var theType = jQuery(\"#smd_bio_widget_type option:selected\").val();\n		var destSize = \"#page-smd_bio input[name=\'size\']\";\n\n		// Grey out the Size box for those items that don\'t use it\n		if (jQuery.inArray(theType, smd_bio_unused) > -1) {\n			jQuery(destSize).prop(\"disabled\", true);\n			jQuery(destSize).parent().prev().css(\"color\", \'#999\');\n		} else {\n			jQuery(destSize).prop(\"disabled\", false);\n			jQuery(destSize).parent().prev().css(\"color\", \'\');\n		}\n	}).change();\n\n	// Action #2: coltype/colsize. Can\'t amalgamate these with the \'size\' onchange because\n	// this only changes when select list changed (i.e. not when Edit first clicked)\n	jQuery(\"#smd_bio_widget_type\").change(function() {\n		var theType = jQuery(\"#smd_bio_widget_type option:selected\").val();\n\n		// Preselect the coltype + colsize based on the defaults\n		jQuery(destColtype + \" option[value=\'\"+smd_bio_types[theType].dflt_type+\"\']\").prop(\'selected\', true);\n		jQuery(destColsize).val(smd_bio_types[theType].dflt_size);\n\n		if (smd_bio_types[theType].fixed == \'\') {\n			jQuery(destColtype).prop(\"disabled\", false);\n			jQuery(destColsize).prop(\"disabled\", false);\n			jQuery(destColtype).parent().prev().css(\"color\", \'\');\n			jQuery(destColsize).parent().prev().css(\"color\", \'\');\n		} else {\n			jQuery(destColtype).prop(\"disabled\", true);\n			jQuery(destColsize).prop(\"disabled\", true);\n			jQuery(destColtype).parent().prev().css(\"color\", \'#999\');\n			jQuery(destColsize).parent().prev().css(\"color\", \'#999\');\n		}\n	});\n\n	// Force the auto-change if the type is of a fixed variety\n	theType = jQuery(\"#smd_bio_widget_type option:selected\").val();\n	if (smd_bio_types[theType].fixed != \'\') {\n		jQuery(\"#smd_bio_widget_type\").change();\n	}\n\n	// When clicking Save, enable the coltype/colsize boxes so the values are transmitted in $_POST\n	jQuery(\"#page-smd_bio input[name=\'save\']\").click(function() {\n		jQuery(destColtype).prop(\"disabled\", false);\n		jQuery(destColsize).prop(\"disabled\", false);\n	});\n\n	// Pop up the help tooltips based on the current Type\n	jQuery(\".pophelp.smd_bio_size\").hover(\n		function(e) {\n			var theType = jQuery(\"#smd_bio_widget_type option:selected\").val();\n			spanid = \'span#smd_bio_size_help_\'+theType;\n			this.title = jQuery(spanid).attr(\"title\");\n		}, function(e) {\n			this.title = \'\';\n		}\n	);\n	jQuery(\".pophelp.smd_bio_val\").hover(\n		function(e) {\n			var theType = jQuery(\"#smd_bio_widget_type option:selected\").val();\n			spanid = \'span#smd_bio_val_help_\'+theType;\n			this.title = jQuery(spanid).attr(\"title\");\n		}, function(e) {\n			this.title = \'\';\n		}\n	);\n\n	// Handle opening/closing the coltype area\n	jQuery(\'#smd_bio_coltype\').click(function() {\n		jQuery(this).toggleClass(\'expanded\');\n		jQuery(\'.smd_bio_coltype\').toggle();\n\n		sendAsyncEvent(\n			{\n				event: textpattern.event,\n				step: \'smd_bio_save_pane_state\',\n				pane: \'coltype\',\n				visible: (jQuery(this).hasClass(\'expanded\'))\n			}\n		);\n	});\n});\n//]]>\n</script>\n{$css}\nEOJS;\n	}\n}\n\n// ------------------------\n// Make the name/val pairs for selectInput / radio / checkbox sets\nfunction smd_bio_splitval($val) {\n	$selv = array();\n\n	$wvals = explode(\',\', $val);\n	foreach ($wvals as $wval) {\n		$prts = explode(\'=>\', $wval);\n		if (count($prts) == 1) {\n			$prts[1] = $prts[0];\n			$prts[0] = smd_bio_sanitize($prts[0]);\n		}\n		$selv[trim($prts[0])] = trim($prts[1]);\n	}\n	return $selv;\n}\n\n// ------------------------\n// Super-sanitize the passed value so we can make variable names from the returned string\nfunction smd_bio_sanitize($val) {\n	return strtolower(str_replace(\"-\", \"_\", sanitizeForUrl($val)));\n}\n\n// ------------------------\nfunction smd_bio_save($evt, $stp) {\n	global $prefs;\n\n	if (smd_bio_table_exist()) {\n		$targetvars = array();\n		extract(doSlash(psa(array(\'privs\', \'name\', \'email\', \'RealName\', \'user_id\'))));\n		if (get_pref(\'smd_bio_sanitize_name\', 0) > 0) {\n			// Sanitize and pass the new name forward to the actual txp_user save routine\n			$name = strtolower(sanitizeForUrl($name));\n			$_POST[\'name\'] = $name;\n		}\n		$length = function_exists(\'mb_strlen\') ? mb_strlen($name, \'8bit\') : strlen($name);\n\n		if (($user_id || $name) and $length <= 64 and is_valid_email($email)) {\n			foreach ($_POST as $idx => $item) {\n				if (strpos($idx, \'smd_bio_\') === 0) {\n					$targetvars[] = $idx;\n				}\n			}\n\n			// Double de-clutch again... dammit :-(\n			$user_id = gps(\'user_id\');\n			if ($user_id) {\n				$user_ref = safe_field(\'name\',\'txp_users\',\"user_id = \'$user_id\'\");\n			} else {\n				$user_ref = $name;\n			}\n\n			extract(gpsa($targetvars));\n			$bcols = getThings(\'describe `\'.PFX.SMD_BIO.\'`\');\n			$sqlSet = array();\n			foreach ($targetvars as $var) {\n				$colname = str_replace(\'smd_bio_\', \'\', $var);\n				if (in_array($colname, $bcols)) {\n					$sqlSet[] = \"`$colname` = \'\".doSlash($$var).\"\'\";\n				}\n			}\n			if ($sqlSet) {\n				$rs = safe_upsert(SMD_BIO, join(\',\', $sqlSet), \"`user_ref` = \'\".doSlash($user_ref).\"\'\");\n			}\n		}\n	}\n}\n\n// ------------------------\nfunction smd_bio_delete($evt, $stp) {\n	global $txp_user;\n\n	if (smd_bio_table_exist()) {\n		// Since we are executing \'pre\' delete we need to unfortunately duplicate some of the checks\n		// from txp_admin.php so we minimise the opportunity to delete someone by mistake\n		$selected = ps(\'selected\');\n		$method = ps(\'edit_method\');\n		if (!$selected or !is_array($selected)) {\n			return;\n		}\n		if ($method != \'delete\') {\n			return;\n		}\n\n		$names = safe_column(\'name\', \'txp_users\', \"name IN (\'\".join(\"\',\'\", doSlash($selected)).\"\') AND name != \'\".doSlash($txp_user).\"\'\");\n		if (!$names) return;\n\n		$assign_assets = ps(\'assign_assets\');\n		if ($assign_assets === \'\') {\n			return;\n		} elseif (in_array($assign_assets, $names)) {\n			return;\n		} else {\n			// All the checks passed -- do it\n			safe_delete(SMD_BIO, \"user_ref IN (\'\".join(\"\',\'\", doSlash($names)).\"\')\");\n		}\n	}\n}\n\n// -------------------------------------------------------------\nfunction smd_bio_save_pane_state() {\n	global $event;\n	$panes = array(\'coltype\');\n	$pane = gps(\'pane\');\n	if (in_array($pane, $panes)) {\n		set_pref(\"pane_smd_bio_{$pane}_visible\", (gps(\'visible\') == \'true\' ? \'1\' : \'0\'), $event, PREF_HIDDEN, \'yesnoradio\', 0, PREF_PRIVATE);\n		send_xml_response();\n	} else {\n		send_xml_response(array(\'http-status\' => \'400 Bad Request\'));\n	}\n}\n\n// -------------------------------------------------------------\nfunction smd_bio_form_submit() {\n	global $mem_form_type;\n\n	if (!in_array($mem_form_type, array(\'smd_bio\', \'mem_self_register\', \'mem_self_user_edit\'))) return;\n\n	$author = smd_bio_find_author();\n\n	if ($author) {\n		$core_cols = smd_bio_core_cols();\n		$meta_cols = safe_column(\'name\', SMD_BIO_META, \'1=1\');\n		$query_params = array(\n			\'core\' => array(\n				\'tbl\' => \'txp_users\',\n				\'ref\' => \'name\',\n			),\n			\'bio\' => array(\n				\'tbl\' => SMD_BIO,\n				\'ref\' => \'user_ref\',\n			)\n		);\n\n		foreach (stripPost() as $key => $val) {\n			// Only care about smd_bio_ prefixed entries in $_POST\n			if (strpos($key, \'smd_bio_\') !== false) {\n				// Strip off the known prefix\n				$raw_key = str_replace(\'smd_bio_\', \'\', $key);\n				if (in_array($raw_key, $core_cols)) {\n					$query_params[\'core\'][\'cols\'][] = doSlash($raw_key) . \'=\'. doQuote(doSlash($val));\n				} else if (in_array($raw_key, $meta_cols)) {\n					$query_params[\'bio\'][\'cols\'][] = doSlash($raw_key) . \'=\'. doQuote(doSlash($val));\n				}\n			}\n		}\n\n		// If there are some cols set we\'re good to update/insert depending if $author exists or not\n		foreach ($query_params as $type => $data) {\n			if (isset($data[\'cols\'])) {\n				$params = join(\', \', $data[\'cols\']);\n				safe_upsert($data[\'tbl\'], $params, $data[\'ref\'] .\'=\'. doQuote(doSlash($author)));\n			}\n		}\n	}\n}\n\n// Try some of the usual suspects for locating authorship\nfunction smd_bio_find_author($author_in=\'\', $places=array(\'biotag\', \'txpuser\', \'ili\', \'profile\', \'selfreg\', \'list\', \'article\', \'image\', \'file\', \'link\') ) {\n	global $smd_bio_author, $txp_user, $mem_form_type, $mem_profile, $pretext, $thisarticle, $thisimage, $thisfile, $thislink;\n	static $smd_bio_ili = 0;\n\n	$places = is_array($places) ? $places : do_list($places);\n\n	// Check for any passed-in author first\n	$author = $author_in;\n\n	foreach ($places as $place) {\n		if ($author != \'\') break;\n		switch ($place) {\n			case \'biotag\':\n				// From smd_bio_author tag\n				$author = ($smd_bio_author != \'\') ? $smd_bio_author : $author;\n			break;\n			case \'txpuser\':\n				// From global user variable\n				$author = ($txp_user != \'\') ? $txp_user : $author;\n			break;\n			case \'ili\':\n				// From currently logged-in user\n				$smd_bio_ili = ($smd_bio_ili === 0) ? is_logged_in() : $smd_bio_ili;\n				if ($smd_bio_ili) {\n					$author = $smd_bio_ili[\'name\'];\n				}\n			break;\n			case \'profile\':\n				// From current self-edit user profile\n				$author = (isset($mem_profile[\'name\'])) ? $mem_profile[\'name\'] : $author;\n			break;\n			case \'selfreg\':\n				// New author from mem_self_reg?\n				$aname = ps(\'name\');\n				if ($aname == \'\') {\n					// New author from custom mem_form?\n					$aname = ps(\'smd_bio_name\');\n				}\n				if ( ($mem_form_type == \'mem_self_register\' || $mem_form_type == \'smd_bio\') && ($aname != \'\') ) {\n					// As long as $aname doesn\'t exist, let this new author in\n					//TODO: Cache this?\n					$exists = safe_row(\'*\', \'txp_user\', \"name=\'\".doSlash($aname).\"\'\");\n					if (!$exists) {\n						$author = $aname;\n					}\n				}\n			break;\n			case \'list\':\n				$author = (isset($pretext[\'author\'])) ? $pretext[\'author\'] : $author;\n			break;\n			case \'article\':\n				$author = (isset($thisarticle[\'authorid\'])) ? $thisarticle[\'authorid\'] : $author;\n			break;\n			case \'image\':\n				$author = (isset($thisimage[\'author\'])) ? $thisimage[\'author\'] : $author;\n			break;\n			case \'file\':\n				$author = (isset($thisfile[\'author\'])) ? $thisfile[\'author\'] : $author;\n			break;\n			case \'link\':\n				$author = (isset($thislink[\'author\'])) ? $thislink[\'author\'] : $author;\n			break;\n		}\n	}\n\n	return $author;\n}\n\n// -------------------------------------------------------------\n// Return a list of core columns in the txp_users table.\n// This could be done programmatically but isn\'t: save a\n// query, save the world\nfunction smd_bio_core_cols() {\n	// The indices are the gTxt() names for the associated field\n	return array(\n		\'id\'         => \'user_id\',\n		\'name\'       => \'name\',\n		\'real_name\'  => \'RealName\',\n		\'email\'      => \'email\',\n		\'privileges\' => \'privs\',\n		\'date\'       => \'last_access\'\n	);\n}\n\n// -------------------------------------------------------------\nfunction smd_bio_get_types() {\n	$smd_bio_types = array(\n		\'text\' => array(\n				\'name\'    => \'Text box\',\n				\'coltype\' => \'varchar\',\n				\'colsize\' => \'255\',\n				\'fixed\'   => false,\n				),\n		\'number\' => array(\n				\'name\'    => \'Number\',\n				\'coltype\' => \'int\',\n				\'colsize\' => \'8\',\n				\'fixed\'   => false,\n				),\n		\'range\' => array(\n				\'name\'    => \'Range\',\n				\'coltype\' => \'int\',\n				\'colsize\' => \'8\',\n				\'fixed\'   => false,\n				),\n		\'list\' => array(\n				\'name\'    => \'Select list\',\n				\'coltype\' => \'mediumtext\',\n				\'colsize\' => \'\',\n				\'fixed\'   => true,\n				),\n		\'multilist\' => array(\n				\'name\'    => \'Multi select list\',\n				\'coltype\' => \'mediumtext\',\n				\'colsize\' => \'\',\n				\'fixed\'   => true,\n				),\n		\'radio\' => array(\n				\'name\'    => \'Radio set\',\n				\'coltype\' => \'text\',\n				\'colsize\' => \'\',\n				\'fixed\'   => true,\n				),\n		\'yesnoradio\' => array(\n				\'name\'    => \'Yes/no radio\',\n				\'coltype\' => \'text\',\n				\'colsize\' => \'\',\n				\'fixed\'   => true,\n				),\n		\'checkbox\' => array(\n				\'name\'    => \'Checkbox(es)\',\n				\'coltype\' => \'text\',\n				\'colsize\' => \'\',\n				\'fixed\'   => true,\n				),\n		\'textarea\' => array(\n				\'name\'    => \'Text area\',\n				\'coltype\' => \'mediumtext\',\n				\'colsize\' => \'4096\',\n				\'fixed\'   => false,\n				),\n		\'image\' => array(\n				\'name\'    => \'Image\',\n				\'coltype\' => \'int\',\n				\'colsize\' => \'\',\n				\'fixed\'   => true,\n				),\n		\'email\' => array(\n				\'name\'    => \'E-mail\',\n				\'coltype\' => \'varchar\',\n				\'colsize\' => \'254\',\n				\'fixed\'   => false,\n				),\n		\'url\' => array(\n				\'name\'    => \'URL\',\n				\'coltype\' => \'text\',\n				\'colsize\' => \'255\',\n				\'fixed\'   => false,\n				),\n		\'date\' => array(\n				\'name\'    => \'Date\',\n				\'coltype\' => \'date\',\n				\'colsize\' => \'\',\n				\'fixed\'   => false,\n				),\n		\'month\' => array(\n				\'name\'    => \'Month\',\n				\'coltype\' => \'varchar\',\n				\'colsize\' => \'255\',\n				\'fixed\'   => false,\n				),\n		\'week\' => array(\n				\'name\'    => \'Week\',\n				\'coltype\' => \'varchar\',\n				\'colsize\' => \'255\',\n				\'fixed\'   => false,\n				),\n		\'time\' => array(\n				\'name\'    => \'Time\',\n				\'coltype\' => \'time\',\n				\'colsize\' => \'\',\n				\'fixed\'   => false,\n				),\n		\'datetime\' => array(\n				\'name\'    => \'Date/Time\',\n				\'coltype\' => \'datetime\',\n				\'colsize\' => \'\',\n				\'fixed\'   => false,\n				),\n	);\n	return $smd_bio_types;\n}\n\n// -------------------------------------------------------------\nfunction smd_bio_get_coltypes() {\n	$smd_bio_coltypes = array(\n		\'varchar\'    => array(\'title\' => \'Varchar [up to 255 chars]\', \'size_req\' => \'255\'),\n		\'varbinary\'  => array(\'title\' => \'Binary varchar [up to 255 chars]\', \'size_req\' => \'255\'),\n		\'tinytext\'   => array(\'title\' => \'Tiny text [up to 255 chars]\', \'size_req\' => false),\n		\'text\'       => array(\'title\' => \'Text [up to 64KB chars]\', \'size_req\' => false),\n		\'mediumtext\' => array(\'title\' => \'Medium text [up to 16MB]\', \'size_req\' => false),\n		\'longtext\'   => array(\'title\' => \'Long text [up to 4GB]\', \'size_req\' => false),\n		\'date\'       => array(\'title\' => \'Date [YYYY-MM-DD]\', \'size_req\' => false),\n		\'time\'       => array(\'title\' => \'Time [HH:MN:SS]\', \'size_req\' => false),\n		\'datetime\'   => array(\'title\' => \'Date + time [YYYY-MM-DD HH:MN:SS]\', \'size_req\' => false),\n		\'timestamp\'  => array(\'title\' => \'Timestamp [seconds since UNIX epoch]\', \'size_req\' => false),\n		\'int\'        => array(\'title\' => \'Integer [up to 4294967295]\', \'size_req\' => \'11\'),\n		\'tinyint\'    => array(\'title\' => \'Tiny integer [up to 255]\', \'size_req\' => \'3\'),\n		\'smallint\'   => array(\'title\' => \'Small integer [up to 65535]\', \'size_req\' => \'4\'),\n		\'mediumint\'  => array(\'title\' => \'Medium integer [up to 16777215]\', \'size_req\' => \'8\'),\n		\'float\'      => array(\'title\' => \'Floating point number\', \'size_req\' => false),\n		\'double\'     => array(\'title\' => \'Double precision float\', \'size_req\' => false),\n	);\n\n	return $smd_bio_coltypes;\n}\n\n// -------------------------------------------------------------\nfunction smd_bio_get_unused() {\n	$smd_bio_unused = array(\n		\'size\' => array(\'list\', \'multilist\', \'radio\', \'yesnoradio\', \'checkbox\'),\n	);\n\n	return $smd_bio_unused;\n}\n\n// ************************\n// TABLE MANAGEMENT\n// ------------------------\nfunction smd_bio_table_exist() {\n	if (gps(\'debug\')) {\n		echo \"++ TABLE \".SMD_BIO_META.\" HAS \".count(@safe_show(\'columns\', SMD_BIO_META)).\" COLUMNS;\";\n	}\n	return(@safe_show(\'columns\', SMD_BIO_META));\n}\n\n// ------------------------\nfunction smd_bio_table_install($showpane=1) {\n	global $DB;\n\n	$smd_bio_types = smd_bio_get_types();\n	$smd_bio_coltypes = smd_bio_get_coltypes();\n\n	$version = mysql_get_server_info();\n	$GLOBALS[\'txp_err_count\'] = 0;\n	$msg = \'\';\n	$debug = gps(\'debug\');\n\n	$ret = \'\';\n	$sql = array();\n	if (!smd_bio_table_exist()) {\n		$sql[] = \"CREATE TABLE IF NOT EXISTS `\".PFX.SMD_BIO.\"` (\n			`user_ref` varchar(64) NOT NULL default \'\',\n			UNIQUE KEY `user_ref` (`user_ref`)\n		) ENGINE=MyISAM, CHARACTER SET=utf8, PACK_KEYS=1 \";\n\n		$sql[] = \"CREATE TABLE IF NOT EXISTS `\".PFX.SMD_BIO_META.\"` (\n			`id` int(4) NOT NULL auto_increment,\n			`title` varchar(64) NULL default \'\' COLLATE utf8_general_ci,\n			`name` varchar(64) NOT NULL default \'\' COLLATE utf8_general_ci,\n			`type` set(\".doQuote(join(\"\',\'\", array_keys($smd_bio_types))).\") NOT NULL default \'text\',\n			`size` varchar(10) NULL default 0,\n			`coltype` set(\".doQuote(join(\"\',\'\", array_keys($smd_bio_coltypes))).\") NOT NULL default \'varchar\',\n			`colsize` smallint(4) NULL default 0,\n			`val` text NULL COLLATE utf8_general_ci,\n			`position` varchar(16) NULL default \'\',\n			PRIMARY KEY (`id`),\n			UNIQUE KEY (`name`)\n		) ENGINE=MyISAM, CHARACTER SET=utf8, AUTO_INCREMENT=1\";\n	}\n\n	if ($debug) {\n		dmp($sql);\n	}\n	foreach ($sql as $qry) {\n		$ret = safe_query($qry);\n		if ($ret===false) {\n			$GLOBALS[\'txp_err_count\']++;\n			echo \"<b>\".$GLOBALS[\'txp_err_count\'].\".</b> \".mysql_error().\"<br />\\n\";\n			echo \"<!--\\n $qry \\n-->\\n\";\n		}\n	}\n\n	// Handle upgrades from v0.3x to v0.40.\n	// Upgrade table collation if necessary\n	$ret = getRows(\"SHOW TABLE STATUS WHERE name IN (\'\".PFX.SMD_BIO.\"\', \'\".PFX.SMD_BIO_META.\"\')\");\n	if ($ret[0][\'Collation\'] != \'utf8_general_ci\') {\n		$ret = safe_alter(SMD_BIO_META, \'CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci\');\n	}\n	if ($ret[1][\'Collation\'] != \'utf8_general_ci\') {\n		$ret = safe_alter(SMD_BIO, \'CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci\');\n	}\n\n	// Alter the position field from int to varchar so positioning can be non-numeric\n	$ret = @safe_field(\"DATA_TYPE\", \"INFORMATION_SCHEMA.COLUMNS\", \"table_name = \'\".PFX.SMD_BIO_META.\"\' AND table_schema = \'\" . $DB->db . \"\' AND column_name = \'position\'\");\n	if ($ret != \'varchar\') {\n		safe_alter(SMD_BIO_META, \"CHANGE `position` `position` VARCHAR( 16 ) NULL DEFAULT \'\'\", $debug);\n	}\n	// Add the coltype and colsize columns\n	$flds = getThings(\'SHOW COLUMNS FROM `\'.PFX.SMD_BIO_META.\'`\');\n	if (!in_array(\'coltype\',$flds)) {\n		safe_alter(SMD_BIO_META, \"ADD `coltype` SET(\".doQuote(join(\"\',\'\", array_keys($smd_bio_coltypes))).\") NOT NULL default \'\' after `size`\", $debug);\n		safe_alter(SMD_BIO_META, \"ADD `colsize` SMALLINT(4) NULL default 0 after `coltype`\", $debug);\n	}\n	// Add multiple select list & date flavour support to the \'type\' set, and rename \'text_input\' to just \'text\'\n	$toChange = safe_column(\'id\', SMD_BIO_META, \'type=\"text_input\"\');\n	$fld = getRows(\"SHOW FULL COLUMNS FROM `\".PFX.SMD_BIO_META.\"` LIKE \'type\'\");\n	$ft = $fld[0][\'Type\'];\n	if ( (strpos($ft, \'multilist\') === false) || (strpos($ft, \'text_input\') !== false) || (strpos($ft, \'month\') === false) ) {\n		safe_alter(SMD_BIO_META, \"CHANGE `type` `type` SET(\".doQuote(join(\"\',\'\", array_keys($smd_bio_types))).\")\", $debug);\n	}\n	if ($toChange) {\n		safe_update(SMD_BIO_META, \'type=\"text\"\', \"id in (\'\". join(\"\',\'\", $toChange) .\"\')\", $debug);\n	}\n\n	if ($GLOBALS[\'txp_err_count\'] == 0) {\n		$msg = smd_bio_gTxt(\'smd_bio_tbl_installed\');\n	} else {\n		$msg = smd_bio_gTxt(\'smd_bio_tbl_not_installed\');\n	}\n\n	if ($showpane) {\n		smd_bio_config($msg);\n	}\n}\n\n// ------------------------\n// Drop table if in database\nfunction smd_bio_table_remove($showpane=1) {\n	$ret = $msg = \'\';\n	$sql = array();\n	$GLOBALS[\'txp_err_count\'] = 0;\n	if (smd_bio_table_exist()) {\n		$sql[] = \"DROP TABLE IF EXISTS \" .PFX.SMD_BIO. \"; \";\n		$sql[] = \"DROP TABLE IF EXISTS \" .PFX.SMD_BIO_META. \"; \";\n		if(gps(\'debug\')) {\n			dmp($sql);\n		}\n		foreach ($sql as $qry) {\n			$ret = safe_query($qry);\n			if ($ret===false) {\n				$GLOBALS[\'txp_err_count\']++;\n				echo \"<b>\".$GLOBALS[\'txp_err_count\'].\".</b> \".mysql_error().\"<br />\\n\";\n				echo \"<!--\\n $qry \\n-->\\n\";\n			}\n		}\n	}\n	if ($GLOBALS[\'txp_err_count\'] == 0) {\n		$msg = smd_bio_gTxt(\'smd_bio_tbl_removed\');\n	} else {\n		$msg = smd_bio_gTxt(\'smd_bio_tbl_not_removed\');\n	}\n\n	if ($showpane) {\n		smd_bio_config($msg);\n	}\n}\n\n// ************************\n// PUBLIC-SIDE TAGS\n// ------------------------\n// Wrapper to permit bio info to be displayed for multiple authors\nfunction smd_bio_author($atts, $thing=NULL) {\n	global $smd_bio_author;\n\n	extract(lAtts(array(\n		\'author\'      => \'\',\n		\'form\'        => \'\',\n		\'sort\'        => \'RealName asc\',\n		\'wraptag\'     => \'\',\n		\'break\'       => \'\',\n		\'breakclass\'  => \'\',\n		\'class\'       => \'\',\n		\'label\'       => \'\',\n		\'labeltag\'    => \'\',\n		\'auto_detect\' => \'profile, list, article, image, file, link\',\n	), $atts));\n\n	$author = smd_bio_find_author($author, $auto_detect);\n	$author = do_list($author);\n	$authors = array();\n	$thing = (empty($form)) ? $thing : fetch_form($form);\n\n	// Set up any sorting clause\n	if ($sort != \'\') {\n		$sort = do_list($sort);\n		$sortout = array();\n		foreach ($sort as $sitems) {\n			$sortbits = do_list($sitems, \' \');\n			$sort_col = $sortbits[0];\n			$sort_ord = (isset($sortbits[1]) && in_array($sortbits[1], array(\'asc\', \'desc\'))) ? $sortbits[1] : \'asc\';\n			if ($sort_col) {\n				$sortout[] = \'`\' . $sort_col . \'` \' . $sort_ord;\n			}\n		}\n		if ($sortout) {\n			$sort = \' ORDER BY \'.join(\',\', $sortout);\n		}\n	}\n\n	// Expand any priv levels\n	foreach ($author as $user) {\n		if (strpos(strtolower($user), \"smd_privs\") === 0) {\n			$aprivs = explode(\':\', $user);\n			array_shift($aprivs); // Remove smd_privs token from the array\n			$rows = safe_query(\'SELECT txpu.name FROM \' . PFX . \'txp_users AS txpu LEFT JOIN \' . PFX.SMD_BIO . \' AS smdb ON txpu.name = smdb.user_ref WHERE privs in (\' . doQuote(join(\"\',\'\", $aprivs)) . \')\'.$sort);\n			if ($rows) {\n				while ($a = nextRow($rows)) {\n					$authors[] = $a[\'name\'];\n				}\n			}\n		} else if (strpos(strtolower($user), \"smd_all\") === 0) {\n			$rows = safe_query(\'SELECT txpu.name FROM \' . PFX . \'txp_users AS txpu LEFT JOIN \' . PFX.SMD_BIO . \' AS smdb ON txpu.name = smdb.user_ref WHERE 1=1\'.$sort);\n			if ($rows) {\n				while ($a = nextRow($rows)) {\n					$authors[] = $a[\'name\'];\n				}\n			}\n		} else {\n			$authors[] = $user;\n		}\n	}\n\n	// Parse content for each author: inject current author into global\n	$out = array();\n	foreach ($authors as $smd_bio_author) {\n		$toParse = (empty($thing)) ? $smd_bio_author : $thing;\n		$out[] = parse($toParse);\n	}\n\n	return doLabel($label, $labeltag).doWrap($out, $wraptag, $break, $class, $breakclass);\n}\n\n// Display biographical field data from a given user\'s profile\n// TDOO: permit defaults to be displayed\nfunction smd_bio_info($atts, $thing=NULL) {\n	global $smd_bio_data, $smd_bio_item_data;\n\n	// Data cache\n	static $bio_info = array();\n	static $meta = array();\n	static $cmeta = array();\n	static $metacols = array();\n\n	extract(lAtts(array(\n		\'author\'      => \'\', // Deprecated: use smd_bio_author tag as a wrapper instead\n		\'fields\'      => \'SMD_ALL\',\n		\'items\'       => \'SMD_ALL\', // Deprecated: use fields instead\n		\'exclude\'     => \'\',\n		\'form\'        => \'\',\n		\'wraptag\'     => \'\',\n		\'break\'       => \'\',\n		\'class\'       => \'\',\n		\'label\'       => \'1\',\n		\'labeltag\'    => \'\',\n		\'labelclass\'  => \'SMD_DFLT\', // Deprecated\n		\'itemwraptag\' => \'\', // Deprecated: use break\n		\'itemclass\'   => \'SMD_DFLT\', // Deprecated: use breakclass\n		\'breakclass\'  => \'SMD_DFLT\',\n		\'show_empty\'  => 0,\n		\'var_prefix\'  => \'smd_bio_\',\n		\'auto_detect\' => \'biotag, list, article, image, file, link\',\n		\'debug\'       => 0,\n	), $atts));\n\n	if (isset($atts[\'author\'])) {\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'author\')) . \'. Use the smd_bio_author tag as a wrapper instead.\', E_USER_NOTICE);\n		unset($author);\n	}\n	if (isset($atts[\'items\'])) {\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'items\')) . \'. Use fields instead.\', E_USER_NOTICE);\n		$fields = $items;\n		unset($items);\n	}\n	if (isset($atts[\'itemwraptag\'])) {\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'itemwraptag\')) . \'. Use break instead.\', E_USER_NOTICE);\n		$break = $itemwraptag;\n		unset($itemwraptag);\n	}\n	if (isset($atts[\'itemclass\'])) {\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'itemclass\')) . \'. Use breakclass instead.\', E_USER_NOTICE);\n		$breakclass = $itemclass;\n		unset($itemclass);\n	}\n	if (isset($atts[\'labelclass\'])) {\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'labelclass\')), E_USER_NOTICE);\n		unset($labelclass);\n	}\n\n	$author = smd_bio_find_author(\'\', $auto_detect);\n\n	$thing = (empty($form)) ? $thing : fetch_form($form);\n	$smd_bio_data = $smd_bio_item_data = array();\n	$bio_types = array_keys(smd_bio_get_types());\n\n	$fields = do_list($fields);\n	$exclude = do_list($exclude);\n	$final = \'\';\n\n	$coreCols = smd_bio_core_cols();\n	$list_types = array(\'checkbox\', \'radio\', \'yesnoradio\', \'list\', \'multilist\');\n	$mm_types = array(\'number\', \'range\');\n\n	if ($author) {\n		$meta = (empty($meta)) ? safe_rows(\'*\', SMD_BIO_META, \'1=1\') : $meta;\n		$cmeta = (empty($cmeta)) ? safe_show(\'columns\', \'txp_users\') : $cmeta;\n		$metacols = (empty($metacols)) ? safe_column(\'name\', SMD_BIO_META, \'1=1\') : $metacols;\n		$num = count($meta);\n\n		foreach($cmeta as $info) {\n			if (!in_array($info[\'Field\'], $coreCols)) continue;\n			$meta[$num][\'name\'] = $info[\'Field\'];\n			$tField = join(\'\', array_keys($coreCols, $info[\'Field\']));\n			$meta[$num][\'title\'] = ((gTxt($tField) == $tField) ? smd_bio_gTxt(\'smd_bio_\'.$tField) : gTxt($tField));\n			$length = (($off = strpos($info[\'Type\'], \'(\')) !== false) ? $off : strlen($info[\'Type\']); // Find the first open bracket or end of string\n			$cmtype = substr($info[\'Type\'], 0, $length);\n			$cmtype = in_array($cmtype, $bio_types)? $cmtype : \'text\';\n			$meta[$num][\'type\'] = $cmtype;\n			$num++;\n		}\n		if ($debug > 1) {\n			echo \'++ META DATA ++\';\n			dmp($meta);\n		}\n\n		// Exclusions override given fields\n		if ($exclude[0] != \'\' || in_array(\'SMD_ALL\', $fields)) {\n			$fields = $metacols;\n			$fields = array_merge($fields, $coreCols);\n		}\n\n		if (isset($bio_info[$author])) {\n			$cbio = $bio_info[$author][\'cbio\'];\n			$ebio = $bio_info[$author][\'ebio\'];\n		} else {\n			$cbio = $bio_info[$author][\'cbio\'] = safe_row(\'*\', \'txp_users\', \"name=\'\".doSlash($author).\"\'\");\n			$ebio = $bio_info[$author][\'ebio\'] = safe_row(\'*\', SMD_BIO, \"user_ref=\'\".doSlash($author).\"\'\");\n		}\n\n		$replacements = $out = $toParse = array();\n		$isSingle = (empty($thing)) ? true : false;\n		$numFields = count($fields);\n\n		foreach ($fields as $iref => $whatnot) {\n			$idx = -1;\n			if (in_array($whatnot, $exclude)) continue;\n\n			// Find the meta row\n			foreach ($meta as $num => $data) {\n				if ($data[\'name\'] == $whatnot) {\n					$idx = $num;\n					break;\n				}\n			}\n\n			if ($idx > -1) {\n				if (in_array($whatnot, $coreCols)) {\n					$field = isset($cbio[$whatnot]) ? $cbio[$whatnot] : \'\';\n				} else {\n					$field = isset($ebio[$whatnot]) ? $ebio[$whatnot] : \'\';\n				}\n\n				$theName = $meta[$idx][\'name\'];\n				$theTitle = $meta[$idx][\'title\'];\n				$prefixedName = $var_prefix.$theName;\n				$fixedName = \'smd_bio_\'.$theName; // Used for widget names so we know the indices in the $_POST array\n				$theClass = ($breakclass==\'SMD_DFLT\') ? $prefixedName : (($breakclass) ? $breakclass : \'\');\n				$replacements[\'{\'.$prefixedName.\'_name}\'] = $theName;\n				$replacements[\'{\'.$prefixedName.\'_title}\'] = $theTitle;\n				$replacements[\'{\'.$prefixedName.\'_class}\'] = $theClass;\n				$smd_bio_data[$theName][\'name\'] = $theName;\n				$smd_bio_data[$theName][\'title\'] = $theTitle;\n				$smd_bio_data[$theName][\'class\'] = $theClass;\n				$widget = \'\';\n\n				if ($field || $show_empty) {\n					if (in_array($meta[$idx][\'type\'], $list_types)) {\n						$field = do_list($field);\n						$field = join(\', \',$field);\n					}\n\n					$fieldContent = ($meta[$idx][\'type\'] == \'textarea\') ? nl2br($field) : $field;\n					$replacements[\'{\'.$prefixedName.\'}\'] = $fieldContent;\n					$smd_bio_data[$theName][\'value\'] = $fieldContent;\n\n					// For backwards compatibility(ish) with v0.3x\n					if ($numFields == 1) {\n						$replacements[\'{\'.$var_prefix.\'info_item}\'] = $fieldContent; // Deprecated, use info_value instead\n						$replacements[\'{\'.$var_prefix.\'info_value}\'] = $fieldContent;\n						$replacements[\'{\'.$var_prefix.\'info_name}\'] = $theName;\n						$replacements[\'{\'.$var_prefix.\'info_title}\'] = $theTitle;\n						$replacements[\'{\'.$var_prefix.\'info_itemclass}\'] = $theClass; // Deprecated: use info_class instead\n						$replacements[\'{\'.$var_prefix.\'info_class}\'] = $theClass;\n					}\n\n					if (in_array($meta[$idx][\'type\'], $list_types)) {\n						$chosens = do_list($field);\n						$nv = smd_bio_splitval($meta[$idx][\'val\']);\n						list($nv, $dflt) = smd_bio_get_default($nv, $field);\n						$dflts = do_list($dflt);\n						$listctr=1;\n						$chosenctr=0;\n						foreach($nv as $listitem => $listlabel) {\n							$replacements[\'{\'.$prefixedName.\'_item_\'.$listctr.\'}\'] = $listitem;\n							$replacements[\'{\'.$prefixedName.\'_title_\'.$listctr.\'}\'] = $listlabel;\n							$smd_bio_data[$theName][\'item_\'.$listctr] = $listitem;\n							$smd_bio_data[$theName][\'title_\'.$listctr] = $listlabel;\n							if (in_array($listitem, $chosens)) {\n								$chosenctr++;\n								$replacements[\'{\'.$prefixedName.\'_chosen_item_\'.$chosenctr.\'}\'] = $listitem;\n								$replacements[\'{\'.$prefixedName.\'_chosen_title_\'.$chosenctr.\'}\'] = $listlabel;\n								$smd_bio_data[$theName][\'chosen_item_\'.$chosenctr] = $listitem;\n								$smd_bio_data[$theName][\'chosen_title_\'.$chosenctr] = $listlabel;\n							}\n							$listctr++;\n						}\n						$dfltctr = 1;\n						foreach($dflts as $dfltitem) {\n							$replacements[\'{\'.$prefixedName.\'_default_\'.$dfltctr.\'}\'] = $dfltitem;\n							$smd_bio_data[$theName][\'default_\'.$dfltctr] = $dfltitem;\n							$dfltctr++;\n						}\n\n						// TODO: maybe hand-code all input types so they can have classes added\n						switch ($meta[$idx][\'type\']) {\n							case \'checkbox\':\n								$widget = checkbox($fixedName, $field, $dflt, \'\', $prefixedName);\n							break;\n							case \'yesnoradio\':\n								$widget = yesnoRadio($fixedName, $dflt);\n							break;\n							case \'radio\':\n								$widget = radioSet($nv, $fixedName, $dflt);\n							break;\n							case \'list\':\n								$widget = selectInput($fixedName, $nv, $dflt, false, \'\', $prefixedName);\n							break;\n							case \'multilist\':\n								$mitems = array();\n								$mitems[] = \'<select name=\"\'.$fixedName.\'\" class=\"list multiple \'.$theClass.\'\" multiple=\"multiple\">\';\n								foreach ($nv as $idx => $lbl) {\n									// Not using selectInput() because it doesn\'t support multiples\n									$mitems[] = \'<option value=\"ms_\'.$idx.\'\" \'.((in_array($idx, $dflts)) ? \' selected=\"selected\"\' : \'\') . \'>\' . $lbl . \'</option>\';\n								}\n								$mitems[] = \'</select>\';\n								$widget = join(n, $mitems);\n							break;\n						}\n\n						$replacements[\'{\'.$prefixedName.\'_item_count}\'] = $listctr-1;\n						$replacements[\'{\'.$prefixedName.\'_chosen_count}\'] = $chosenctr;\n						$replacements[\'{\'.$prefixedName.\'_default_count}\'] = $dfltctr-1;\n						$smd_bio_data[$theName][\'item_count\'] = $listctr-1;\n						$smd_bio_data[$theName][\'chosen_count\'] = $chosenctr;\n						$smd_bio_data[$theName][\'default_count\'] = $dfltctr-1;\n					} else if (in_array($meta[$idx][\'type\'], $mm_types)) {\n						$sizes = do_list($meta[$idx][\'size\']);\n						$min = ($sizes[0] == \'\') ? \'\' : \' min=\"\' . $sizes[0] . \'\"\';\n						$max = ($sizes[1] == \'\') ? \'\' : \' max=\"\' . $sizes[1] . \'\"\';\n						$jmp = ($sizes[2] == \'\') ? \'\' : \' step=\"\' . $sizes[2] . \'\"\';\n						$cls = ($theClass) ? \' class=\"\'.$theClass.\'\"\' : \'\';\n						$widget = \'<input type=\"\'.$meta[$idx][\'type\'].\'\" value=\"\'.$field.\'\" name=\"\'.$fixedName.\'\"\'.$cls.$min.$max.$jmp.\' />\';\n					} else if ($meta[$idx][\'type\'] == \'textarea\') {\n						$sizes = do_list($meta[$idx][\'size\']);\n						$w = ($sizes[0] == \'\') ? \'\' : \' cols=\"\' . $sizes[0] . \'\"\';\n						$h = ($sizes[1] == \'\') ? \'\' : \' rows=\"\' . $sizes[1] . \'\"\';\n						$cls = ($theClass) ? \' class=\"\'.$theClass.\'\"\' : \'\';\n						// TODO: use text_area() when 4.5.0 released\n						$widget = \'<textarea name=\"\' . $fixedName . \'\" id=\"\' . $prefixedName . \'\"\'. $cls.$w.$h.\'>\'.$field.\'</textarea>\';\n					} else {\n						$widget = fInput($meta[$idx][\'type\'], $fixedName, $field, $theClass, \'\', \'\', \'\', \'\', $prefixedName);\n					}\n\n					$smd_bio_data[$theName][\'widget\'] = $widget;\n					$replacements[\'{\'.$prefixedName.\'_widget}\'] = $widget;\n\n					// Without container/form, build up generic output\n					if ($isSingle) {\n						$taglab = (($label==1) ? $theTitle : (($label==\'\') ? \'\' : (($label) ? $label : $theName)));\n						$toParse[] = doLabel($taglab, $labeltag) . (($break) ? doTag($field, $break, $theClass) : $field);\n					}\n				}\n			}\n		}\n\n		if ($debug) {\n			echo \'++ REPLACEMENTS ++\';\n			dmp($replacements);\n		}\n\n		if (!$isSingle) {\n			$toParse[] = doTag($thing, $wraptag, $class);\n		}\n\n		$out[] = parse(strtr(join(n, $toParse), $replacements));\n		$final = doWrap($out, $wraptag, \'\', $class);\n	}\n	return $final;\n}\n\n// Convenience tag for those that prefer the security of a tag over {replacements}\nfunction smd_bio_data($atts, $thing=NULL) {\n	global $smd_bio_data, $smd_bio_item_data;\n\n	extract(lAtts(array(\n		\'field\'   => \'\',\n		\'item\'    => \'value\',\n		\'wraptag\' => \'\',\n		\'break\'   => \'\',\n		\'class\'   => \'\',\n		\'debug\'   => 0,\n	), $atts));\n\n	$bdata = is_array($smd_bio_data) ? $smd_bio_data : array();\n	$idata = is_array($smd_bio_item_data) ? $smd_bio_item_data : array();\n	$datapool = array_merge($bdata, $idata);\n\n	if ($debug) {\n		echo \'++ AVAILABLE INFO ++\';\n		dmp($datapool);\n	}\n\n	$items = do_list($item);\n	$out = array();\n	foreach ($items as $it) {\n		if (isset($datapool[$field][$it])) {\n			$out[] = $datapool[$field][$it];\n		}\n	}\n\n	return doWrap($out, $wraptag, $break, $class);\n}\n\n// Iterate over N multi-items\n// TDOO: permit defaults to be displayed\nfunction smd_bio_iterate($atts, $thing=NULL) {\n	global $smd_bio_data, $smd_bio_item_data;\n\n	extract(lAtts(array(\n		\'field\'      => \'\',\n		\'using\'      => \'chosen\', // chosen, all\n		\'display\'    => \'title\', // item, title\n		\'var_prefix\' => \'smd_bio_\',\n		\'wraptag\'    => \'\',\n		\'class\'      => \'\',\n		\'break\'      => \'\',\n		\'form\'       => \'\',\n		\'limit\'      => 0,\n		\'offset\'     => 0,\n		\'debug\'      => 0,\n	), $atts));\n\n	if ($debug > 1) {\n		echo \'++ AVAILABLE INFO ++\';\n		dmp($smd_bio_data);\n	}\n\n	// Validation 1\n	$usingMap = array(\'all\' => \'\', \'chosen\' => \'chosen\');\n	$using = isset($usingMap[$using]) ? $using : \'chosen\';\n\n	// Validation 2\n	$displayMap = array(\'item\' => \'item\', \'title\' => \'title\');\n	$display = isset($displayMap[$display]) ? $display : \'title\';\n\n	$flavour = ($using == \'chosen\') ? 1 : 0;\n	$countType = $flavour ? \'chosen_count\' : \'item_count\';\n\n	$out = $reps = array();\n\n	// Can only iterate over items that have a count\n	if (isset($smd_bio_data[$field][$countType])) {\n		for ($idx = 1; $idx <= $smd_bio_data[$field][$countType]; $idx++) {\n			if (( ($idx-1) >= $offset ) && ( $limit == 0 || (($idx-1) < $limit+$offset) )) {\n				$key = (($usingMap[$using]) ? $usingMap[$using]. \'_\' : \'\') . $displayMap[$display] . \'_\' . $idx;\n				$uval = $usingMap[$using] ? $usingMap[$using].\'_\' : \'\';\n				$itm = $smd_bio_data[$field][$uval . \'item_\'.$idx];\n				$ttl = $smd_bio_data[$field][$uval . \'title_\'.$idx];\n				$reps = array(\n					\'{\'.$var_prefix.\'this_item}\' => $itm,\n					\'{\'.$var_prefix.\'this_title}\' => $ttl,\n					\'{\'.$var_prefix.\'this_index}\' => $idx,\n				);\n				$smd_bio_item_data[$field][\'this_item\'] = $itm;\n				$smd_bio_item_data[$field][\'this_title\'] = $ttl;\n				$smd_bio_item_data[$field][\'this_index\'] = $idx;\n				if ($debug) {\n					echo \'++ ITERATOR REPLACEMENTS ++\';\n					dmp($reps);\n				}\n				$out[] = ($thing) ? parse(strtr($thing, $reps)) : ( ($form) ? parse_form(strtr($form, $reps)) : $smd_bio_data[$field][$key] );\n			}\n		}\n	}\n\n	return doWrap($out, $wraptag, $break, $class);\n}\n\n// Convenience conditional to test a field/item. Use smd_if for more advanced conditional logic\nfunction smd_if_bio($atts, $thing=NULL) {\n	global $smd_bio_data, $smd_bio_item_data;\n\n	extract(lAtts(array(\n		\'field\'          => \'\',\n		\'item\'           => \'value\',\n		\'value\'          => \'\',\n		\'case_sensitive\' => 1,\n		\'debug\'          => 0,\n	), $atts));\n\n	$bdata = is_array($smd_bio_data) ? $smd_bio_data : array();\n	$idata = is_array($smd_bio_item_data) ? $smd_bio_item_data : array();\n	$datapool = array_merge($bdata, $idata);\n	if ($debug) {\n		echo \'++ AVAILABLE INFO ++\';\n		dmp($datapool);\n	}\n\n	$result = false;\n\n	if (isset($datapool[$field][$item])) {\n		if ($value) {\n			$cval = ($case_sensitive) ? $value : strtolower($value);\n			$citm = ($case_sensitive) ? $datapool[$field][$item] : strtolower($datapool[$field][$item]);\n			$result = ($citm == $cval);\n		} else {\n			$result = ($datapool[$field][$item] != \'\');\n		}\n	}\n\n	return parse(EvalElse($thing, $result));\n}\n\n// ------------------------\n// A wrapper to article_custom that auto sets the user to the one specified\n// or the current article\'s author.\n// NOTE: lAtts() is NOT used because that limits the plugin attributes.\nfunction smd_bio_articles($atts, $thing=NULL) {\n	global $thisarticle;\n\n	$author = (isset($atts[\'author\'])) ? $atts[\'author\'] : (isset($thisarticle[\'authorid\']) ? $thisarticle[\'authorid\'] : \'\');\n	$atts[\'author\'] = $author;\n	return parseArticles($atts, \'1\', $thing);\n}\n\n// ------------------------\n// Plugin-specific replacement strings - localise as required\nfunction smd_bio_gTxt($what, $atts = array()) {\n	$lang = array(\n		\'en-gb\' => array(\n			\'smd_bio_admin_tab\' => \'Bio config\',\n			\'smd_bio_colsize\' => \'Column size\',\n			\'smd_bio_coltype\' => \'Column type\',\n			\'smd_bio_help\' => \'?\',\n			\'smd_bio_help_unused\' => \'Unused for this Type\',\n			\'smd_bio_id\' => \'ID\',\n			\'smd_bio_more\' => \'More\',\n			\'smd_bio_meta_add\' => \'Add bio field\',\n			\'smd_bio_meta_added\' => \'Bio field added\',\n			\'smd_bio_meta_not_added\' => \'Problem adding bio field: check name is not already used\',\n			\'smd_bio_meta_deleted\' => \'Bio field and all its data deleted\',\n			\'smd_bio_meta_not_deleted\' => \'Problem deleting bio field: it may still exist\',\n			\'smd_bio_meta_edit\' => \'Edit bio field\',\n			\'smd_bio_meta_update_failed\' => \'Failed to save bio field \"{name}\"\',\n			\'smd_bio_meta_update_partial\' => \'Partially saved bio field \"{name}\"\',\n			\'smd_bio_meta_updated\' => \'Bio field \"{name}\" updated\',\n			\'smd_bio_position\' => \'Position\',\n			\'smd_bio_privileges\' => \'Privileges\',\n			\'smd_bio_real_name\' => \'Full name\',\n			\'smd_bio_size\' => \'Size\',\n			\'smd_bio_sizehelp_text\' => \'Up to two comma-separated values specifying the number of characters: 1) of the input box on the Admin->Users tab, 2) the user is allowed to enter\',\n			\'smd_bio_sizehelp_numrange\' => \'Up to three comma-separated values specifying the: 1) minimum, 2) maximum, 3) permitted step of the input\',\n			\'smd_bio_sizehelp_textarea\' => \'Up to two comma-separated values specifying the dimensions of the textarea in characters: 1) Width, 2) Height\',\n			\'smd_bio_sizehelp_image\' => \'The x,y dimensions of the image/thumbnail on the Admin->Users tab. If only one value is given, the image will be square. If either value is omitted, the dimensions stored in the database will be used\',\n			\'smd_bio_valhelp_text\' => \'The default value that will appear in the text box\',\n			\'smd_bio_valhelp_lrc\' => \'Comma- or newline-separated list of available options in the set. If you list only item labels, the names will be automatically generated (lower case, no spaces). You may specify your own names using: name1 => Label 1, name2 -> Label 2, ...\',\n			\'smd_bio_valhelp_ynr\' => \'Default value of the Yes/No checkbox. 0 (or omitted) = No; 1 = Yes\',\n			\'smd_bio_valhelp_image\' => \'Limit the images in the dropdown to the ones in this given parent image category. If omitted, all images are available\',\n			\'smd_bio_tbl_installed\' => \'Tables installed.\',\n			\'smd_bio_tbl_not_installed\' => \'Tables NOT installed.\',\n			\'smd_bio_tbl_removed\' => \'Tables removed.\',\n			\'smd_bio_tbl_not_removed\' => \'Tables NOT removed.\',\n			\'smd_bio_title\' => \'Title\',\n			\'smd_bio_type\' => \'Type\',\n			\'smd_bio_value\' => \'Value\',\n		),\n	);\n\n	$thislang = get_pref(\'language\', \'en-gb\');\n	$thislang = (isset($lang[$thislang][$what])) ? $thislang : \'en-gb\';\n	return strtr($lang[$thislang][$what], $atts);\n}','/**\n * smd_bio\n *\n * A Textpattern CMS plugin for storing additional biographical author data:\n *  -> Create checkboxes, select lists, radio buttons, text input, image, etc fields\n *  -> Data is captured and stored when a user is created\n *  -> Allow people to manage their own profiles via smd_user_manager\n *\n * @author Stef Dawson\n * @link   http://stefdawson.com/\n */\n// TOFIX:\n//   stop smd_bio_iterate from trashing the bio data for future fields of the same name\n// TODO:\n//   if_first and if_last support for bio_author list?\n//   Ability to specify wildcards/matches for fields/authors in the client tag\n//   Specify tooltip extended bio information in prefs\nif (@txpinterface == \'admin\') {\n	add_privs(\'smd_bio\', \'1\');\n	register_tab(\'extensions\', \'smd_bio\', smd_bio_gTxt(\'smd_bio_admin_tab\'));\n	register_callback(\'smd_bio_dispatcher\', \'smd_bio\');\n	register_callback(\'smd_bio_fields\', \'author_ui\', \'extend_detail_form\');\n	register_callback(\'smd_bio_admin_js\', \'admin_side\', \'head_end\');\n\n	// Note these are all pre Txp\'s involvement\n	register_callback(\'smd_bio_save\', \'admin\', \'author_save\', 1);\n	register_callback(\'smd_bio_save\', \'admin\', \'author_save_new\', 1);\n	register_callback(\'smd_bio_delete\', \'admin\', \'admin_multi_edit\', 1);\n	register_callback(\'smd_bio_welcome\', \'plugin_lifecycle.smd_bio\');\n\n	// Doesn\'t hurt much to add these if the plugin\'s not installed.\n	// Since plugins are loaded in load_order and then alphabetical,\n	// at this point smd_user_manager doesn\'t \'exist\' (b < u)\n	register_callback(\'smd_bio_save\', \'smd_um\', \'smd_um_save\', 1);\n	register_callback(\'smd_bio_save\', \'smd_um\', \'smd_um_save_new\', 1);\n	register_callback(\'smd_bio_delete\', \'smd_um\', \'smd_um_multi_edit\', 1);\n}\n\nregister_callback(\'smd_bio_form_submit\', \'mem_form.submit\');\n\n// Intercept image and extended bio display on Admin->Users panel\n$smd_bio_step = gps(\'smd_bio_step\');\nif ($smd_bio_step == \'smd_bio_get_image\') {\n	smd_bio_get_image();\n}\nif ($smd_bio_step == \'smd_bio_get_ebio\') {\n	smd_bio_get_ebio();\n}\n\nif (!defined(\'SMD_BIO\')) {\n	define(\"SMD_BIO\", \'smd_bio\');\n}\nif (!defined(\'SMD_BIO_META\')) {\n	define(\"SMD_BIO_META\", \'smd_bio_meta\');\n}\n\n// -------------------------------------------------------------\nfunction smd_bio_get_styles() {\n	$smd_bio_styles = array(\n		\'meta\' =>\n         \'.smd_bio_toggler { display:none; }\',\n		\'tooltip\' =>\n         \'#tooltip { position:absolute; border:1px solid #333; background:#f7f5d1; padding:10px 15px; opacity:.9; color:#333; display:none; max-width:60%; }\',\n	);\n	return $smd_bio_styles;\n}\n\n// -------------------------------------------------------------\n// Install/uninstall jumpoff point\nfunction smd_bio_welcome($evt, $stp) {\n	$msg = \'\';\n	switch ($stp) {\n		case \'installed\':\n			smd_bio_table_install(0);\n			$msg = \'Pimp your users\';\n			break;\n		case \'deleted\':\n			smd_bio_table_remove(0);\n			break;\n	}\n	return $msg;\n}\n\n// ************************\n// BIO CONFIGURATION\n// ------------------------\nfunction smd_bio_dispatcher($evt, $stp) {\n	$available_steps = array(\n		\'smd_bio_config\'          => false,\n		\'smd_bio_table_install\'   => false,\n		\'smd_bio_table_remove\'    => false,\n		\'smd_bio_meta_add\'        => true,\n		\'smd_bio_meta_del\'        => true,\n		\'smd_bio_meta_save\'       => true,\n		\'smd_bio_save_pane_state\' => true,\n	);\n\n	if (!$stp or !bouncer($stp, $available_steps)) {\n		$stp = \'smd_bio_config\';\n	}\n	$stp();\n}\n\n// ------------------------\n// The Extensions->Bio config panel, made up of two areas: the edit pane and the list pane\nfunction smd_bio_config($msg=\'\') {\n	smd_bio_table_install(0);\n\n	pagetop(smd_bio_gTxt(\'smd_bio_admin_tab\'), $msg);\n\n	echo smd_bio_meta_edit();\n	echo smd_bio_meta_list();\n}\n\n// ------------------------\nfunction smd_bio_meta_edit() {\n	$smd_bio_types = smd_bio_get_types();\n	$smd_bio_coltypes = smd_bio_get_coltypes();\n\n	$vars = array(\'step\', \'id\', \'title\', \'name\', \'type\', \'coltype\', \'colsize\', \'size\', \'val\', \'position\');\n	$rs = array();\n\n	extract(gpsa($vars));\n	if ($id && $step == \'meta_edit\') {\n		$id = assert_int($id);\n		$rs = safe_row(\'*\', SMD_BIO_META, \"id = $id\");\n		extract($rs);\n	}\n\n	if ($step == \'smd_bio_meta_save\' || $step == \'smd_bio_meta_add\' || $step == \'smd_bio_meta_del\') {\n		foreach ($vars as $var) {\n			$$var = \'\';\n		}\n	}\n\n	$caption = smd_bio_gTxt(($step == \'meta_edit\') ? \'smd_bio_meta_edit\' : \'smd_bio_meta_add\');\n\n	// Make the name/val pairs for the type selectInput\n	$selv = array();\n	foreach ($smd_bio_types as $widx => $wval) {\n		$selv[$widx] = $wval[\'name\'];\n	}\n\n	// Make the name/val pairs for the coltype selectInput\n	foreach($smd_bio_coltypes as $ctype => $cdata) {\n		$coltypes[$ctype] = $cdata[\'title\'];\n	}\n\n	$toggleState = get_pref(\'pane_smd_bio_coltype_visible\') ? true : false;\n\n	return form(\n		hed($caption, 3,\' style=\"text-align: center;\"\').\n\n		startTable(\'edit\', \'\', \'edit\').\n\n		tr(\n			fLabelCell(\'name\').\n			($id && $step == \'meta_edit\' ? td(strong($name)) : fInputCell(\'name\', $name))\n		).\n\n		tr(\n			fLabelCell(\'title\').\n			fInputCell(\'title\', $title)\n		).\n\n		tr(\n			fLabelCell(\'type\').\n			td(selectInput(\'type\', $selv, $type, false, \'\', \'smd_bio_widget_type\') .sp. \'<a id=\"smd_bio_coltype\" class=\"lever\'.(($toggleState) ? \' expanded\' : \'\').\'\" href=\"#\">\'.smd_bio_gTxt(\'smd_bio_more\').\'</a>\')\n		).\n\n		tr(\n			fLabelCell(smd_bio_gTxt(\'smd_bio_coltype\')).\n			td(selectInput(\'coltype\', $coltypes, $coltype, false))\n			, \' class=\"smd_bio_coltype \'.(($toggleState) ? \'\' : \' smd_bio_toggler\').\'\"\'\n		).\n\n		tr(\n			fLabelCell(smd_bio_gTxt(\'smd_bio_colsize\')).\n			fInputCell(\'colsize\', $colsize)\n			, \' class=\"smd_bio_coltype \'.(($toggleState) ? \'\' : \' smd_bio_toggler\').\'\"\'\n		).\n\n		tr(\n			fLabelCell(smd_bio_gTxt(\'smd_bio_size\') . n . tag(smd_bio_gTxt(\'smd_bio_help\'), \'a\', \' class=\"pophelp smd_bio_size\"\')).\n			fInputCell(\'size\', $size)\n		).\n\n		tr(\n			fLabelCell(smd_bio_gTxt(\'smd_bio_value\') . n . tag(smd_bio_gTxt(\'smd_bio_help\'), \'a\', \' class=\"pophelp smd_bio_val\"\')).\n			td(text_area(\'val\', \'100\', \'300\', $val))\n		).\n\n		tr(\n			fLabelCell(smd_bio_gTxt(\'smd_bio_position\')).\n			fInputCell(\'position\', $position)\n		).\n\n		tr(\n			td().\n			td(\n				fInput(\'submit\', \'save\', gTxt(\'save\'), \'publish\')\n			)\n		).\n\n		endTable().\n\n		eInput(\'smd_bio\').\n		tInput().\n		($id ? hInput(\'id\', $id).hInput(\'name\', $name).sInput(\'smd_bio_meta_save\') : sInput(\'smd_bio_meta_add\')).\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_text\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_number\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_numrange\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_range\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_numrange\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_list\" title=\"\'.smd_bio_gTxt(\'smd_bio_help_unused\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_multilist\" title=\"\'.smd_bio_gTxt(\'smd_bio_help_unused\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_radio\" title=\"\'.smd_bio_gTxt(\'smd_bio_help_unused\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_yesnoradio\" title=\"\'.smd_bio_gTxt(\'smd_bio_help_unused\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_checkbox\" title=\"\'.smd_bio_gTxt(\'smd_bio_help_unused\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_textarea\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_textarea\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_image\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_image\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_email\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_url\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_datetime\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_date\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_month\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_week\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_size_help_time\" title=\"\'.smd_bio_gTxt(\'smd_bio_sizehelp_text\').\'\"\').\n\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_text\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_number\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_range\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_list\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_lrc\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_multilist\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_lrc\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_radio\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_lrc\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_yesnoradio\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_ynr\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_checkbox\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_lrc\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_textarea\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_image\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_image\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_email\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_url\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_datetime\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_date\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_month\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_week\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\').\n		tag(\' \', \'span\', \' id=\"smd_bio_val_help_time\" title=\"\'.smd_bio_gTxt(\'smd_bio_valhelp_text\').\'\"\')\n	);\n}\n\n// ------------------------\nfunction smd_bio_meta_list() {\n\n	$smd_bio_types = smd_bio_get_types();\n\n	extract(gpsa(array(\'sort\', \'dir\', \'crit\', \'search_method\')));\n	if ($sort === \'\') $sort = get_pref(\'smd_bio_meta_sort_column\', \'name\');\n	if ($dir === \'\') $dir = get_pref(\'smd_bio_meta_sort_dir\', \'asc\');\n	$dir = ($dir == \'desc\') ? \'desc\' : \'asc\';\n\n	if (!in_array($sort, array(\'name\', \'title\', \'type\', \'size\', \'val\', \'position\'))) $sort = \'position\';\n\n	$sort_sql   = $sort.\' \'.$dir;\n\n	set_pref(\'smd_bio_meta_sort_column\', $sort, \'smd_bio\', 2, \'\', 0, PREF_PRIVATE);\n	set_pref(\'smd_bio_meta_sort_dir\', $dir, \'smd_bio\', 2, \'\', 0, PREF_PRIVATE);\n\n	$switch_dir = ($dir == \'desc\') ? \'asc\' : \'desc\';\n\n	$rs = safe_rows_start(\'*\', SMD_BIO_META, \'1=1 ORDER BY \'.$sort_sql);\n\n	if ($rs) {\n		echo \'<form id=\"smd_bio_form\" action=\"index.php\" method=\"post\" name=\"longform\" onsubmit=\"return verify(\\\'\'.gTxt(\'are_you_sure\').\'\\\')\">\'.\n\n		startTable(\'list\').\n		tr(\n			column_head(\'name\', \'name\', \'smd_bio\', true, $switch_dir, \'\', \'\', (\'name\' == $sort) ? $dir : \'\').\n			column_head(\'title\', \'title\', \'smd_bio\', true, $switch_dir, \'\', \'\', (\'title\' == $sort) ? $dir : \'\').\n			column_head(\'type\', \'type\', \'smd_bio\', true, $switch_dir, \'\', \'\', (\'type\' == $sort) ? $dir : \'\').\n			column_head(smd_bio_gTxt(\'smd_bio_size\'), \'size\', \'smd_bio\', true, $switch_dir, \'\', \'\', (\'size\' == $sort) ? $dir : \'\').\n			column_head(\'value\', \'val\', \'smd_bio\', true, $switch_dir, \'\', \'\', (\'val\' == $sort) ? $dir : \'\').\n			column_head(smd_bio_gTxt(\'smd_bio_position\'), \'position\', \'smd_bio\', true, $switch_dir, \'\', \'\', (\'position\' == $sort) ? $dir : \'\').\n			hCell().\n			hCell()\n		);\n\n		while ($a = nextRow($rs)) {\n			extract(doSpecial($a));\n\n			echo tr(\n				td($name).\n				td($title).\n				td($smd_bio_types[$type][\'name\']).\n				td($size).\n				td($val,200).\n				td($position).\n				td(eLink(\'smd_bio\', \'meta_edit\', \'id\', $id, gTxt(\'edit\'))).\n				td(dLink(\'smd_bio\', \'smd_bio_meta_del\', \'id\', $id, 1, \'name\', $name))\n			);\n		}\n\n		echo endTable().\'</form>\';\n	}\n}\n\n// ------------------------\nfunction smd_bio_meta_make_list($val) {\n\n	if (strpos(strtolower($val), \'smd_bio_fn\') !== false) {\n		// Special function syntax so call the designated\n		// function to retrieve the value(s)\n		$params = do_list($val, \'|\');\n		array_shift($params); // Remove SMD_BIO_FN\n		$fn = array_shift($params);\n\n		$fnbits = do_list($fn, \'::\');\n		$fncall = (isset($fnbits[1])) ? array($fnbits[0], $fnbits[1]) : $fnbits[0];\n		$val = call_user_func_array($fncall, $params);\n\n		if (is_array($val)) {\n			// Fake a string list of name => val pairs\n			$out = array();\n			foreach ($val as $idx => $item) {\n				$out[] = str_replace(\',\', \'&#44;\', $idx . \' => \' . $item); // Preserve commas by encoding them\n			}\n			$val = join(\', \', $out);\n		}\n	}\n\n	// Parse the values\n	$wvals = do_list($val, \'\\r\\n\');\n	if (count($wvals) == 1) {\n		$wvals = do_list($val);\n	}\n	return join(\', \', doArray($wvals, \'trim\'));\n}\n\n// ------------------------\nfunction smd_bio_meta_save() {\n	$smd_bio_coltypes = smd_bio_get_coltypes();\n	$smd_bio_unused = smd_bio_get_unused();\n\n	extract(doSlash(psa(array(\'id\', \'name\', \'title\', \'type\', \'coltype\', \'colsize\', \'size\', \'position\'))));\n	$val = ps(\'val\'); // Defer doSlash() until later\n\n	$id = assert_int($id);\n	$val = doSlash(smd_bio_meta_make_list($val));\n\n	// Validate the input to ensure items are emptied for types where they\'re unused\n	foreach ($smd_bio_unused as $unused => $excludes) {\n		if (in_array($type, $excludes)) {\n			$$unused = \'\';\n		}\n	}\n\n	// Validate the input to ensure items that require a column size have one...\n	if (empty($colsize) && $smd_bio_coltypes[$coltype][\'size_req\'] !== false) {\n		$colsize = $smd_bio_coltypes[$coltype][\'size_req\'];\n	}\n\n	// ... and that ones that don\'t require one are removed\n	if ($smd_bio_coltypes[$coltype][\'size_req\'] === false) {\n		$colsize = \'\';\n	}\n\n	// Try to adjust column type/size if applicable\n	$rs = safe_alter(SMD_BIO, \"CHANGE `$name` `$name` $coltype\" . (($colsize) ? \"($colsize)\" : \'\') . \" NULL DEFAULT NULL\");\n\n	if ($rs) {\n		$rs = safe_update(SMD_BIO_META, \"\n			title = \'$title\',\n			type = \'$type\',\n			size = \'$size\',\n			coltype = \'$coltype\',\n			colsize = \'$colsize\',\n			val = \'$val\',\n			position = \'$position\'\",\n			\"id = $id\"\n		);\n\n		if ($rs) {\n			$msg = smd_bio_gTxt(\'smd_bio_meta_updated\', array(\'{name}\' => $name));\n		} else {\n			$msg = array(smd_bio_gTxt(\'smd_bio_meta_update_partial\', array(\'{name}\' => $name)), E_WARNING);\n		}\n	} else {\n		$msg = array(smd_bio_gTxt(\'smd_bio_meta_update_failed\', array(\'{name}\' => $name)), E_WARNING);\n	}\n\n	smd_bio_config($msg);\n}\n\n// ------------------------\nfunction smd_bio_meta_add() {\n	$smd_bio_coltypes = smd_bio_get_coltypes();\n	$smd_bio_unused = smd_bio_get_unused();\n\n	extract(doSlash(psa(array(\'name\', \'title\', \'type\', \'coltype\', \'colsize\', \'size\', \'position\'))));\n	$val = ps(\'val\'); // Defer doSlash() until later\n	$name = smd_bio_sanitize($name);\n\n	if (!empty($name) && smd_bio_meta_check($name)) {\n		$size = (empty($size)) ? 25 : $size;\n\n		// Validate the input to ensure items are emptied for types where they\'re unused\n		foreach ($smd_bio_unused as $unused => $excludes) {\n			if (in_array($type, $excludes)) {\n				$$unused = \'\';\n			}\n		}\n\n		// Validate the input to ensure items that require a column size have one...\n		if (empty($colsize) && $smd_bio_coltypes[$coltype][\'size_req\'] !== false) {\n			$colsize = $smd_bio_coltypes[$coltype][\'size_req\'];\n		}\n		// ... and that ones that don\'t require one are removed\n		if ($smd_bio_coltypes[$coltype][\'size_req\'] === false) {\n			$colsize = \'\';\n		}\n\n		$ret = safe_alter(SMD_BIO, \"ADD `$name` $coltype\" . ( ($colsize) ? \"($colsize)\" : \'\') . \" NULL DEFAULT NULL\");\n		$val = doSlash(smd_bio_meta_make_list($val));\n\n		if ($ret) {\n			$rs = safe_insert(SMD_BIO_META, \"\n				name = \'$name\',\n				title = \'$title\',\n				type = \'$type\',\n				size = \'$size\',\n				coltype = \'$coltype\',\n				colsize = \'$colsize\',\n				val = \'$val\',\n				position = \'$position\'\n			\");\n\n			if ($rs) {\n				smd_bio_config(smd_bio_gTxt(\'smd_bio_meta_added\'));\n				return;\n			}\n		}\n	}\n\n	smd_bio_config(array(smd_bio_gTxt(\'smd_bio_meta_not_added\'), E_ERROR));\n}\n\n// ------------------------\nfunction smd_bio_meta_del() {\n	extract(gpsa(array(\'id\',\'name\')));\n\n	$id = assert_int($id);\n	$message = smd_bio_gTxt(\'smd_bio_meta_not_deleted\');\n\n	$exists = smd_bio_meta_check($name);\n	$ret = @safe_alter(SMD_BIO, \"DROP COLUMN `$name`\");\n	if ($ret || $exists) {\n		$ret = safe_delete(SMD_BIO_META, \"id=\'$id\'\");\n		$message = smd_bio_gTxt(\'smd_bio_meta_deleted\');\n	}\n\n	smd_bio_config($message);\n}\n\n// ------------------------\nfunction smd_bio_meta_check($col) {\n	$ucols = getThings(\'describe `\'.PFX.\'txp_users`\');\n	$bcols = getThings(\'describe `\'.PFX.SMD_BIO.\'`\');\n	$cols = array_merge($ucols, $bcols);\n 	return (!in_array($col, $cols));\n}\n\n// ************************\n// ADMIN -> USERS TAB\n// ------------------------\nfunction smd_bio_fields($evt, $stp, $mt, $data) {\n	global $smd_um_event, $txp_user;\n\n	$out = $vals = array();\n\n	$rstep = gps(\'step\');\n	if(smd_bio_table_exist()) {\n		if (in_array($rstep, array(\'\', \'author_edit\', \'smd_um_edit\', \'smd_um_save\', \'smd_um_change_pass\'))) {\n			extract(gpsa(array(\'user_id\')));\n\n			if (empty($user_id) && !has_privs(\'smd_um.usr.create\')) {\n				// This is a self-edit from smd_user_manager, thus the user_id has not been sent\n				$user_id = safe_field(\'user_id\',\'txp_users\',\"name = \'\".doSlash($txp_user).\"\'\");\n			}\n			// Shame we have to double de-clutch here but we can\'t index on user_id unfortunately (\'cos when\n			// inserting new users, the bio functions run _BEFORE_ an auto_increment ID has been generated by Txp)\n			$uname = safe_field(\'name\',\'txp_users\',\"user_id = \'\".doSlash($user_id).\"\'\");\n			$vals = safe_row(\'*\', SMD_BIO, \"user_ref=\'\".doSlash($uname).\"\'\");\n		}\n		$widgets = safe_rows(\'*\', SMD_BIO_META, \'1=1 ORDER BY position\');\n		$tdac = \' class=\"noline\"\';\n		$tdac_image = \' class=\"noline smd_bio_image_cell\"\';\n		foreach ($widgets as $widget) {\n			$val = ($vals && isset($vals[$widget[\'name\']])) ? $vals[$widget[\'name\']] : $widget[\'val\'];\n			$title = ($widget[\'title\']) ? $widget[\'title\'] : $widget[\'name\'];\n			$sizeopts = do_list($widget[\'size\']);\n			$size1 = $sizeopts[0];\n			$size2 = (isset($sizeopts[1])) ? $sizeopts[1] : \'\';\n			$size3 = (isset($sizeopts[2])) ? $sizeopts[2] : \'\';\n			$name = \'smd_bio_\'.$widget[\'name\'];\n			switch($widget[\'type\']) {\n				case \'list\':\n					$selv = smd_bio_splitval($widget[\'val\']);\n					list($selv, $dflt) = smd_bio_get_default($selv, $val);\n					$out[] = tr(fLabelCell($title).tda(selectInput($name, $selv, $dflt, false, \'\', $name), $tdac), \' class=\"smd_bio_select \'.$name.\'\"\');\n					break;\n				case \'multilist\':\n					$val = ($vals && isset($vals[$widget[\'name\']])) ? $vals[$widget[\'name\']] : \'\';\n					$selv = smd_bio_splitval($widget[\'val\']);\n					list($selv, $dflt) = smd_bio_get_default($selv, $val);\n					$use_val = $vals ? $val : $dflt; // Don\'t use defaults if this is a previously saved record\n					$selectedVals = do_list($use_val);\n					$items = array();\n					$items[] = \'<select name=\"\'.$name.\'\" class=\"list multiple\" multiple=\"multiple\" onchange=\"smd_bio_multisel(\\\'\'.$name.\'\\\');\">\';\n					foreach ($selv as $idx => $lbl) {\n						// Not using selectInput() because it doesn\'t support multiples\n						$items[] = \'<option value=\"ms_\'.$idx.\'\" \'.((in_array($idx, $selectedVals)) ? \' selected=\"selected\"\' : \'\') . \'>\' . $lbl . \'</option>\';\n					}\n					$items[] = \'</select>\';\n					$out[] = tr(fLabelCell($title).tda(join(n,$items), $tdac), \' class=\"smd_bio_select \'.$name.\'\"\').fInput(\'hidden\',$name,$use_val,\'\',\'\',\'\',\'\',\'\',$name);\n					break;\n				case \'radio\':\n					$selv = smd_bio_splitval($widget[\'val\']);\n					list($selv, $dflt) = smd_bio_get_default($selv, $val);\n					$out[] = tr(fLabelCell($title).tda(radioSet($selv, $name, $dflt), $tdac), \' class=\"smd_bio_radio \'.$name.\'\"\');\n					break;\n				case \'yesnoradio\':\n					$out[] = tr(fLabelCell($title).tda(yesnoRadio($name, $val), $tdac), \' class=\"smd_bio_radio \'.$name.\'\"\');\n					break;\n				case \'checkbox\':\n					$val = ($vals && isset($vals[$widget[\'name\']])) ? $vals[$widget[\'name\']] : \'\';\n					$selv = smd_bio_splitval($widget[\'val\']);\n					list($selv, $dflt) = smd_bio_get_default($selv, $val);\n					$use_val = $vals ? $val : $dflt; // Don\'t use defaults if this is a previously saved record\n					$checkedVals = do_list($use_val);\n					$items = array();\n					foreach ($selv as $idx => $lbl) {\n						// Not using checkbox() because it doesn\'t support onclick\n						$items[] = \'<input type=\"checkbox\" name=\"cb_\'.$name.\'\" value=\"\'.$idx.\'\"\'.((in_array($idx, $checkedVals)) ? \' checked=\"checked\"\' : \'\') . \' class=\"checkbox\" onclick=\"smd_bio_checkbox(\\\'\'.$name.\'\\\');\" />\'.$lbl;\n					}\n					$out[] = tr(fLabelCell($title).tda(join(\'\', $items), $tdac), \' class=\"smd_bio_checkbox \'.$name.\'\"\').fInput(\'hidden\',$name,$use_val,\'\',\'\',\'\',\'\',\'\',$name);\n					break;\n				case \'textarea\':\n					// Not using text_area() because it forces inline styled width/height which should be in CSS.\n					// TODO: change this to text_area() when 4.5.0 released.\n					$size1 = ($size1 == \'\' || $size1 == 0) ? 40 : $size1;\n					$size2 = ($size2 == \'\' || $size2 == 0) ? 5 : $size2;\n					$out[] = tr(fLabelCell($title).tda(\'<textarea id=\"\'.$name.\'\" name=\"\'.$name.\'\" class=\"smd_bio_textarea\" cols=\"\'.$size1.\'\" rows=\"\'.$size2.\'\">\'.htmlspecialchars($val).\'</textarea>\', $tdac), \' class=\"smd_bio_textarea \'.$name.\'\"\');\n					break;\n				case \'image\':\n					$parent = $widget[\'val\'];\n					$val = ($vals && isset($vals[$widget[\'name\']])) ? $vals[$widget[\'name\']] : \'\';\n					$where = ($parent) ? \"category=\'\".doSlash($parent).\"\'\" : \'1=1\';\n					$tree = safe_rows(\'*\', \'txp_image\', $where. \' ORDER BY name\');\n					$selv = array();\n					foreach ($tree as $row) {\n						$selv[$row[\'id\']] = $row[\'name\'];\n					}\n					$out[] = tr(fLabelCell($title).tda(\'<input type=\"text\" value=\"\'.htmlspecialchars($val).\'\" name=\"\'.$name.\'\" size=\"4\" class=\"smd_bio_image_id\" />\'.selectInput($name.\'_list\', $selv, $val, true, \'\').\'<div class=\"smd_bio_image\"></div><span class=\"smd_bio_image_data\" title=\"\'.(($size1) ? $size1 : \'\').\',\'.(($size2) ? $size2 : $size1).\'\"></span>\', $tdac_image. \' id=\"\'.$name.\'\"\'), \' class=\"smd_bio_image_row \'.$name.\'\"\');\n					break;\n				case \'number\':\n				case \'range\':\n					$min = ($size1 == \'\') ? \'\' : \" min={$size1}\";\n					$max = ($size2 == \'\') ? \'\' : \" max={$size2}\";\n					$jmp = ($size3 == \'\') ? \'\' : \" step={$size3}\";\n					$out[] = tr(fLabelCell($title).tda(\'<input type=\"\'.$widget[\'type\'].\'\" value=\"\'.htmlspecialchars($val).\'\" name=\"\'.$name.\'\" id=\"\'.$name.\'\"\'.$min.$max.$jmp.\'\" class=\"smd_bio_\'.$widget[\'type\'].\' edit\" />\', $tdac), \' class=\"smd_bio_\'.$widget[\'type\'].\' \'.$name.\'\"\');\n					break;\n				case \'date\':\n				case \'month\':\n				case \'week\':\n				case \'time\':\n				case \'datetime\':\n				case \'email\':\n				case \'url\':\n				case \'text\':\n					// Not using fInput() because it has no MAXLENGTH property and doesn\'t support HTML 5 elements\n					$size1 = ($size1 == \'\' || $size1 == 0) ? 25 : $size1;\n					$size2 = ($size2 == \'\' || $size2 == 0) ? $size1 : $size2;\n					$out[] = tr(fLabelCell($title).tda(\'<input type=\"\'.$widget[\'type\'].\'\" value=\"\'.htmlspecialchars($val).\'\" name=\"\'.$name.\'\" id=\"\'.$name.\'\" size=\"\'.$size1.\'\" maxlength=\"\'.$size2.\'\" class=\"smd_bio_\'.$widget[\'type\'].\' edit\" />\', $tdac), \' class=\"smd_bio_\'.$widget[\'type\'].\' \'.$name.\'\"\');\n					break;\n			}\n		}\n	}\n	return join(\'\', $out);\n}\n\n// ------------------------\n// Read a name/val array and remove any [*] marker which indicates a default item\nfunction smd_bio_get_default($list, $curr) {\n	$out = array();\n	$dflt = \'\';\n	$new_dflt = array();\n	foreach ($list as $item => $value) {\n		$value = str_replace(\'&#44;\', \',\', $value);\n		if (($pos = strpos($value, \'[*]\')) !== false) {\n			$out[$item] = substr($value, 0, $pos);\n			$new_dflt[] = $item;\n		} else {\n			$out[$item] = $value;\n		}\n		if ($item == $curr) {\n			$dflt = $item;\n		}\n	}\n	$dflt = ($dflt) ? $dflt : join(\',\', $new_dflt);\n	return array($out, $dflt);\n}\n\n// ------------------------\n// AJAX calls\nfunction smd_bio_get_image() {\n	global $img_dir;\n\n	$id = gps(\'id\');\n	if ($id) {\n		$rs = safe_row(\'*\', \'txp_image\', \"id = \'\".doSlash($id).\"\'\");\n		extract($rs);\n		$out = array();\n		$out[\'thumb\'] = ($thumbnail) ? hu.$img_dir.\'/\'.$id.\'t\'.$ext : \'\';\n		$out[\'image\'] = hu.$img_dir.\'/\'.$id.$ext;\n		$out[\'w\'] = $w;\n		$out[\'h\'] = $h;\n		$out[\'thw\'] = ($thumb_w) ? $thumb_w : \'\';\n		$out[\'thh\'] = ($thumb_h) ? $thumb_h : \'\';\n		send_xml_response($out);\n	} else {\n		send_xml_response();\n	}\n}\n\n// ------------------------\n// IMPORTANT: constants NOT used for table names\nfunction smd_bio_get_ebio() {\n	include_once txpath.\'/publish/taghandlers.php\';\n\n	$id = gps(\'id\');\n	$core = array(\'user_ref\');\n	$rs = safe_row(\'*\', \'smd_bio\', \"user_ref = \'\".doSlash($id).\"\'\");\n	$meta = safe_rows(\'*\', \'smd_bio_meta\', \"1=1\");\n//	$include = array_merge($core, array(\'mug\', \'cell\', \'department\')); // TODO: get these from prefs/meta table\n	$allowed_types = array(\'text\', \'textarea\', \'email\', \'url\', \'date\', \'month\', \'week\', \'time\', \'datetime\', \'number\', \'range\');\n	$out = array();\n	foreach ($rs as $idx => $val) {\n//		if (in_array($idx, $include)) {\n			if (in_array($idx, $core)) {\n				$out[$idx] = doSlash($val);\n			} else {\n				foreach($meta as $row) {\n					if ($row[\'name\'] == $idx) {\n						if ($row[\'type\'] == \"image\") {\n							// Crude str_replace() to remove javascript-breaking single quotes\n							$out[$idx] = \'smd_image::\'.str_replace(\"\'\", \'\', thumbnail(array(\'id\'=> $val)));\n						} else if (in_array($row[\'type\'], $allowed_types)) {\n							$out[$idx] = $row[\'title\'].\'::\'.htmlspecialchars(strip_tags($val), ENT_QUOTES);\n						}\n						break;\n					}\n				}\n			}\n//		}\n	}\n	send_xml_response($out);\n}\n\n// Inject admin-side javascript\n// ------------------------\nfunction smd_bio_admin_js($evt, $stp) {\n	global $event, $step;\n\n	$smd_bio_styles = smd_bio_get_styles();\n\n	$runon = array(\n		\'admin\' => array(\n			\'evt\' => array(\'admin\', \'smd_um\'),\n			\'stp\' => array(\'\', \'smd_um\', \'smd_um_edit\', \'smd_um_edit\', \'smd_um_save\', \'smd_um_save_new\', \'smd_um_change_pass\', \'author_edit\', \'author_save\', \'author_save_new\'),\n		),\n		\'bio\' => array(\n			\'evt\' => array(\'smd_bio\'),\n		),\n	);\n\n	// ********\n	// js+css for Admin->Users tab\n	// ********\n	if (in_array($event, $runon[\'admin\'][\'evt\']) !== false && in_array($step, $runon[\'admin\'][\'stp\']) !== false) {\n		$css_custom = safe_field(\'css\', \'txp_css\', \"name=\'smd_bio\'\");\n		$css = \'<style type=\"text/css\">\' . $css_custom .n. $smd_bio_styles[\'tooltip\'] . \'</style>\';\n\n	echo <<<EOJS\n<script type=\"text/javascript\">\n//<![CDATA[\n\n// Concatenate checkbox options for storage\nfunction smd_bio_checkbox(dest) {\n	var out = [];\n	jQuery(\"#user_edit :checkbox\").each(function() {\n		var item = jQuery(this);\n		if (item.attr(\'name\').replace(\'cb_\',\'\') == dest) {\n			if (item.prop(\'checked\') == true) {\n				out.push(item.val());\n			}\n		}\n	});\n	jQuery(\'#\'+dest).val(out.join(\',\'));\n}\n// Concatenate multi select list options for storage\nfunction smd_bio_multisel(dest) {\n	var out = [];\n	jQuery(\"#user_edit select.multiple\").each(function() {\n		var item = jQuery(this);\n		if (item.attr(\'name\') == dest) {\n			// You\'re the one that I want, ooh ooh oooohhh\n			jQuery(item).children(\":selected\").each(function() {\n				out.push(jQuery(this).val().replace(\'ms_\',\'\'));\n			});\n		}\n	});\n	jQuery(\'#\'+dest).val(out.join(\',\'));\n}\njQuery(function() {\n	// Grab images from the server when the select/textbox change\n	jQuery(\".smd_bio_image_id\").blur(function() {\n		id = jQuery(this).parent().attr(\'id\');\n		val = jQuery(this).val();\n		smd_bio_get_image(id, val);\n	}).blur();\n	jQuery(\".smd_bio_image_cell .list\").change(function() {\n		id = jQuery(this).parent().attr(\'id\');\n		val = jQuery(this).val();\n		smd_bio_get_image(id, val);\n	});\n	function smd_bio_get_image(id, val) {\n		jQuery(\"#\" + id + \" select option[value=\'\"+val+\"\']\").prop(\"selected\", true);\n		jQuery(\"#\" + id + \" input\").val(val);\n		var dims = jQuery(\"#\" + id + \" span.smd_bio_image_data\").attr(\'title\');\n		var size = new Array();\n		if (dims) {\n			size = dims.split(\",\");\n		}\n		sendAsyncEvent({\n				event: textpattern.event,\n				smd_bio_step: \'smd_bio_get_image\',\n				id: val\n			}, function(data) {\n				data = jQuery(data);\n				if (data) {\n					var full = 0;\n					var imgLink = data.find(\'thumb\').attr(\'value\');\n					if (imgLink == \'\') {\n						full = 1;\n						var imgLink = data.find(\'image\').attr(\'value\');\n					}\n					if (size[0] == \'\') {\n						if (full == 1) {\n							size[0] = data.find(\'w\').attr(\'value\');\n						} else {\n							size[0] = data.find(\'thw\').attr(\'value\');\n						}\n					}\n					if (size[1] == \'\') {\n						if (full == 1) {\n							size[1] = data.find(\'h\').attr(\'value\');\n						} else {\n							size[1] = data.find(\'thh\').attr(\'value\');\n						}\n					}\n					jQuery(\"#\" + id + \" .smd_bio_image\").fadeIn().html(\'<img src=\"\'+imgLink+\'\" width=\"\'+size[0]+\'\" height=\"\'+size[1]+\'\" />\');\n				} else {\n					jQuery(\"#\" + id + \" .smd_bio_image\").fadeOut().empty();\n				}\n			}\n		);\n	}\n\n	// Grab the extended info when hovering an author in the list\n	jQuery(\"#users_form tbody tr, #smd_um_form tbody tr\").hover(function(e) {\n		var tt = \'\';\n		var row = jQuery(this);\n		var hovItem = row.find(\".actions\");\n\n		if (row.data(\'tooltip\') == undefined) {\n			var person = row.find(\"td:first\").text();\n\n			sendAsyncEvent({\n					event: textpattern.event,\n					smd_bio_step: \'smd_bio_get_ebio\',\n					id: person\n				}, function(data) {\n					data = jQuery(data);\n						var entry = data.find(\'user_ref\');\n						out = \'\';\n						entry.nextAll().each(function(item) {\n							node = jQuery(this).context.nodeName;\n							if (node != \'http-status\') {\n								vall = jQuery(this).attr(\'value\');\n								if (vall) {\n									vsplit = vall.split(\'::\');\n									if (vsplit[0].indexOf(\'smd_image\') < 0) {\n										out += ((vsplit.length>1) ? vsplit[0] : node) + \': \';\n									}\n									vall = ((vsplit.length>1) ? vsplit[1] : vsplit[0]);\n									out += vall + \'<br/>\';\n								} else {\n									out += node+\': \';\n								}\n							}\n						});\n						row.data(\'tooltip\', out);\n//						hovItem.trigger(\'mouseover\'); // Trigger the hover state when the data is loaded\n					}\n			);\n		}\n\n		xOffset = 30;\n		yOffset = 25;\n		hovItem.hover(function(e) {\n			var tt = jQuery(this).parent().data(\'tooltip\');\n			if (tt != \'\') {\n				jQuery(\"body\").append(\"<p id=\'tooltip\'>\"+ tt +\"</p>\");\n				jQuery(\"#tooltip\")\n					.css(\"top\",(e.pageY - xOffset) + \"px\")\n					.css(\"left\",(e.pageX + yOffset) + \"px\")\n					.fadeIn(\"fast\");\n			}\n		},\n		function() {\n			jQuery(\"#tooltip\").remove();\n	    });\n		hovItem.mousemove(function(e) {\n			jQuery(\"#tooltip\")\n				.css(\"top\",(e.pageY - xOffset) + \"px\")\n				.css(\"left\",(e.pageX + yOffset) + \"px\");\n		});\n	});\n});\n//]]>\n</script>\n{$css}\nEOJS;\n	}\n\n	// ********\n	// js for Extensions->Bio config tab\n	// ********\n	if (in_array($event, $runon[\'bio\'][\'evt\'])) {\n		$smd_bio_types = smd_bio_get_types();\n		$smd_bio_unused = smd_bio_get_unused();\n\n		$css = \'<style type=\"text/css\">\' . $smd_bio_styles[\'meta\'] . \'</style>\';\n		$js_unused = join(\',\', doArray($smd_bio_unused[\'size\'], \'doQuote\'));\n\n		foreach ($smd_bio_types as $type => $data) {\n			$type_json[] = \'smd_bio_types[\"\'.$type.\'\"] = { \"dflt_type\": \"\'.$data[\'coltype\'].\'\", \"dflt_size\": \"\'.$data[\'colsize\'].\'\", \"fixed\": \"\'.$data[\'fixed\'].\'\" };\';\n		}\n		$type_json = join(n, $type_json);\n\n		echo <<<EOJS\n<script type=\"text/javascript\">\n//<![CDATA[\nvar smd_bio_unused = [{$js_unused}];\nvar smd_bio_types = [];\nvar destColtype = \"#page-smd_bio select[name=\'coltype\']\";\nvar destColsize = \"#page-smd_bio input[name=\'colsize\']\";\n{$type_json}\n\njQuery(function() {\n	// Perform actions when the Type is changed\n	// Action #1: size box. Auto-update this when Edit clicked as well as when select list is altered\n	jQuery(\"#smd_bio_widget_type\").change(function() {\n		var theType = jQuery(\"#smd_bio_widget_type option:selected\").val();\n		var destSize = \"#page-smd_bio input[name=\'size\']\";\n\n		// Grey out the Size box for those items that don\'t use it\n		if (jQuery.inArray(theType, smd_bio_unused) > -1) {\n			jQuery(destSize).prop(\"disabled\", true);\n			jQuery(destSize).parent().prev().css(\"color\", \'#999\');\n		} else {\n			jQuery(destSize).prop(\"disabled\", false);\n			jQuery(destSize).parent().prev().css(\"color\", \'\');\n		}\n	}).change();\n\n	// Action #2: coltype/colsize. Can\'t amalgamate these with the \'size\' onchange because\n	// this only changes when select list changed (i.e. not when Edit first clicked)\n	jQuery(\"#smd_bio_widget_type\").change(function() {\n		var theType = jQuery(\"#smd_bio_widget_type option:selected\").val();\n\n		// Preselect the coltype + colsize based on the defaults\n		jQuery(destColtype + \" option[value=\'\"+smd_bio_types[theType].dflt_type+\"\']\").prop(\'selected\', true);\n		jQuery(destColsize).val(smd_bio_types[theType].dflt_size);\n\n		if (smd_bio_types[theType].fixed == \'\') {\n			jQuery(destColtype).prop(\"disabled\", false);\n			jQuery(destColsize).prop(\"disabled\", false);\n			jQuery(destColtype).parent().prev().css(\"color\", \'\');\n			jQuery(destColsize).parent().prev().css(\"color\", \'\');\n		} else {\n			jQuery(destColtype).prop(\"disabled\", true);\n			jQuery(destColsize).prop(\"disabled\", true);\n			jQuery(destColtype).parent().prev().css(\"color\", \'#999\');\n			jQuery(destColsize).parent().prev().css(\"color\", \'#999\');\n		}\n	});\n\n	// Force the auto-change if the type is of a fixed variety\n	theType = jQuery(\"#smd_bio_widget_type option:selected\").val();\n	if (smd_bio_types[theType].fixed != \'\') {\n		jQuery(\"#smd_bio_widget_type\").change();\n	}\n\n	// When clicking Save, enable the coltype/colsize boxes so the values are transmitted in $_POST\n	jQuery(\"#page-smd_bio input[name=\'save\']\").click(function() {\n		jQuery(destColtype).prop(\"disabled\", false);\n		jQuery(destColsize).prop(\"disabled\", false);\n	});\n\n	// Pop up the help tooltips based on the current Type\n	jQuery(\".pophelp.smd_bio_size\").hover(\n		function(e) {\n			var theType = jQuery(\"#smd_bio_widget_type option:selected\").val();\n			spanid = \'span#smd_bio_size_help_\'+theType;\n			this.title = jQuery(spanid).attr(\"title\");\n		}, function(e) {\n			this.title = \'\';\n		}\n	);\n	jQuery(\".pophelp.smd_bio_val\").hover(\n		function(e) {\n			var theType = jQuery(\"#smd_bio_widget_type option:selected\").val();\n			spanid = \'span#smd_bio_val_help_\'+theType;\n			this.title = jQuery(spanid).attr(\"title\");\n		}, function(e) {\n			this.title = \'\';\n		}\n	);\n\n	// Handle opening/closing the coltype area\n	jQuery(\'#smd_bio_coltype\').click(function() {\n		jQuery(this).toggleClass(\'expanded\');\n		jQuery(\'.smd_bio_coltype\').toggle();\n\n		sendAsyncEvent(\n			{\n				event: textpattern.event,\n				step: \'smd_bio_save_pane_state\',\n				pane: \'coltype\',\n				visible: (jQuery(this).hasClass(\'expanded\'))\n			}\n		);\n	});\n});\n//]]>\n</script>\n{$css}\nEOJS;\n	}\n}\n\n// ------------------------\n// Make the name/val pairs for selectInput / radio / checkbox sets\nfunction smd_bio_splitval($val) {\n	$selv = array();\n\n	$wvals = explode(\',\', $val);\n	foreach ($wvals as $wval) {\n		$prts = explode(\'=>\', $wval);\n		if (count($prts) == 1) {\n			$prts[1] = $prts[0];\n			$prts[0] = smd_bio_sanitize($prts[0]);\n		}\n		$selv[trim($prts[0])] = trim($prts[1]);\n	}\n	return $selv;\n}\n\n// ------------------------\n// Super-sanitize the passed value so we can make variable names from the returned string\nfunction smd_bio_sanitize($val) {\n	return strtolower(str_replace(\"-\", \"_\", sanitizeForUrl($val)));\n}\n\n// ------------------------\nfunction smd_bio_save($evt, $stp) {\n	global $prefs;\n\n	if (smd_bio_table_exist()) {\n		$targetvars = array();\n		extract(doSlash(psa(array(\'privs\', \'name\', \'email\', \'RealName\', \'user_id\'))));\n		if (get_pref(\'smd_bio_sanitize_name\', 0) > 0) {\n			// Sanitize and pass the new name forward to the actual txp_user save routine\n			$name = strtolower(sanitizeForUrl($name));\n			$_POST[\'name\'] = $name;\n		}\n		$length = function_exists(\'mb_strlen\') ? mb_strlen($name, \'8bit\') : strlen($name);\n\n		if (($user_id || $name) and $length <= 64 and is_valid_email($email)) {\n			foreach ($_POST as $idx => $item) {\n				if (strpos($idx, \'smd_bio_\') === 0) {\n					$targetvars[] = $idx;\n				}\n			}\n\n			// Double de-clutch again... dammit :-(\n			$user_id = gps(\'user_id\');\n			if ($user_id) {\n				$user_ref = safe_field(\'name\',\'txp_users\',\"user_id = \'$user_id\'\");\n			} else {\n				$user_ref = $name;\n			}\n\n			extract(gpsa($targetvars));\n			$bcols = getThings(\'describe `\'.PFX.SMD_BIO.\'`\');\n			$sqlSet = array();\n			foreach ($targetvars as $var) {\n				$colname = str_replace(\'smd_bio_\', \'\', $var);\n				if (in_array($colname, $bcols)) {\n					$sqlSet[] = \"`$colname` = \'\".doSlash($$var).\"\'\";\n				}\n			}\n			if ($sqlSet) {\n				$rs = safe_upsert(SMD_BIO, join(\',\', $sqlSet), \"`user_ref` = \'\".doSlash($user_ref).\"\'\");\n			}\n		}\n	}\n}\n\n// ------------------------\nfunction smd_bio_delete($evt, $stp) {\n	global $txp_user;\n\n	if (smd_bio_table_exist()) {\n		// Since we are executing \'pre\' delete we need to unfortunately duplicate some of the checks\n		// from txp_admin.php so we minimise the opportunity to delete someone by mistake\n		$selected = ps(\'selected\');\n		$method = ps(\'edit_method\');\n		if (!$selected or !is_array($selected)) {\n			return;\n		}\n		if ($method != \'delete\') {\n			return;\n		}\n\n		$names = safe_column(\'name\', \'txp_users\', \"name IN (\'\".join(\"\',\'\", doSlash($selected)).\"\') AND name != \'\".doSlash($txp_user).\"\'\");\n		if (!$names) return;\n\n		$assign_assets = ps(\'assign_assets\');\n		if ($assign_assets === \'\') {\n			return;\n		} elseif (in_array($assign_assets, $names)) {\n			return;\n		} else {\n			// All the checks passed -- do it\n			safe_delete(SMD_BIO, \"user_ref IN (\'\".join(\"\',\'\", doSlash($names)).\"\')\");\n		}\n	}\n}\n\n// -------------------------------------------------------------\nfunction smd_bio_save_pane_state() {\n	global $event;\n	$panes = array(\'coltype\');\n	$pane = gps(\'pane\');\n	if (in_array($pane, $panes)) {\n		set_pref(\"pane_smd_bio_{$pane}_visible\", (gps(\'visible\') == \'true\' ? \'1\' : \'0\'), $event, PREF_HIDDEN, \'yesnoradio\', 0, PREF_PRIVATE);\n		send_xml_response();\n	} else {\n		send_xml_response(array(\'http-status\' => \'400 Bad Request\'));\n	}\n}\n\n// -------------------------------------------------------------\nfunction smd_bio_form_submit() {\n	global $mem_form_type;\n\n	if (!in_array($mem_form_type, array(\'smd_bio\', \'mem_self_register\', \'mem_self_user_edit\'))) return;\n\n	$author = smd_bio_find_author();\n\n	if ($author) {\n		$core_cols = smd_bio_core_cols();\n		$meta_cols = safe_column(\'name\', SMD_BIO_META, \'1=1\');\n		$query_params = array(\n			\'core\' => array(\n				\'tbl\' => \'txp_users\',\n				\'ref\' => \'name\',\n			),\n			\'bio\' => array(\n				\'tbl\' => SMD_BIO,\n				\'ref\' => \'user_ref\',\n			)\n		);\n\n		foreach (stripPost() as $key => $val) {\n			// Only care about smd_bio_ prefixed entries in $_POST\n			if (strpos($key, \'smd_bio_\') !== false) {\n				// Strip off the known prefix\n				$raw_key = str_replace(\'smd_bio_\', \'\', $key);\n				if (in_array($raw_key, $core_cols)) {\n					$query_params[\'core\'][\'cols\'][] = doSlash($raw_key) . \'=\'. doQuote(doSlash($val));\n				} else if (in_array($raw_key, $meta_cols)) {\n					$query_params[\'bio\'][\'cols\'][] = doSlash($raw_key) . \'=\'. doQuote(doSlash($val));\n				}\n			}\n		}\n\n		// If there are some cols set we\'re good to update/insert depending if $author exists or not\n		foreach ($query_params as $type => $data) {\n			if (isset($data[\'cols\'])) {\n				$params = join(\', \', $data[\'cols\']);\n				safe_upsert($data[\'tbl\'], $params, $data[\'ref\'] .\'=\'. doQuote(doSlash($author)));\n			}\n		}\n	}\n}\n\n// Try some of the usual suspects for locating authorship\nfunction smd_bio_find_author($author_in=\'\', $places=array(\'biotag\', \'txpuser\', \'ili\', \'profile\', \'selfreg\', \'list\', \'article\', \'image\', \'file\', \'link\') ) {\n	global $smd_bio_author, $txp_user, $mem_form_type, $mem_profile, $pretext, $thisarticle, $thisimage, $thisfile, $thislink;\n	static $smd_bio_ili = 0;\n\n	$places = is_array($places) ? $places : do_list($places);\n\n	// Check for any passed-in author first\n	$author = $author_in;\n\n	foreach ($places as $place) {\n		if ($author != \'\') break;\n		switch ($place) {\n			case \'biotag\':\n				// From smd_bio_author tag\n				$author = ($smd_bio_author != \'\') ? $smd_bio_author : $author;\n			break;\n			case \'txpuser\':\n				// From global user variable\n				$author = ($txp_user != \'\') ? $txp_user : $author;\n			break;\n			case \'ili\':\n				// From currently logged-in user\n				$smd_bio_ili = ($smd_bio_ili === 0) ? is_logged_in() : $smd_bio_ili;\n				if ($smd_bio_ili) {\n					$author = $smd_bio_ili[\'name\'];\n				}\n			break;\n			case \'profile\':\n				// From current self-edit user profile\n				$author = (isset($mem_profile[\'name\'])) ? $mem_profile[\'name\'] : $author;\n			break;\n			case \'selfreg\':\n				// New author from mem_self_reg?\n				$aname = ps(\'name\');\n				if ($aname == \'\') {\n					// New author from custom mem_form?\n					$aname = ps(\'smd_bio_name\');\n				}\n				if ( ($mem_form_type == \'mem_self_register\' || $mem_form_type == \'smd_bio\') && ($aname != \'\') ) {\n					// As long as $aname doesn\'t exist, let this new author in\n					//TODO: Cache this?\n					$exists = safe_row(\'*\', \'txp_user\', \"name=\'\".doSlash($aname).\"\'\");\n					if (!$exists) {\n						$author = $aname;\n					}\n				}\n			break;\n			case \'list\':\n				$author = (isset($pretext[\'author\'])) ? $pretext[\'author\'] : $author;\n			break;\n			case \'article\':\n				$author = (isset($thisarticle[\'authorid\'])) ? $thisarticle[\'authorid\'] : $author;\n			break;\n			case \'image\':\n				$author = (isset($thisimage[\'author\'])) ? $thisimage[\'author\'] : $author;\n			break;\n			case \'file\':\n				$author = (isset($thisfile[\'author\'])) ? $thisfile[\'author\'] : $author;\n			break;\n			case \'link\':\n				$author = (isset($thislink[\'author\'])) ? $thislink[\'author\'] : $author;\n			break;\n		}\n	}\n\n	return $author;\n}\n\n// -------------------------------------------------------------\n// Return a list of core columns in the txp_users table.\n// This could be done programmatically but isn\'t: save a\n// query, save the world\nfunction smd_bio_core_cols() {\n	// The indices are the gTxt() names for the associated field\n	return array(\n		\'id\'         => \'user_id\',\n		\'name\'       => \'name\',\n		\'real_name\'  => \'RealName\',\n		\'email\'      => \'email\',\n		\'privileges\' => \'privs\',\n		\'date\'       => \'last_access\'\n	);\n}\n\n// -------------------------------------------------------------\nfunction smd_bio_get_types() {\n	$smd_bio_types = array(\n		\'text\' => array(\n				\'name\'    => \'Text box\',\n				\'coltype\' => \'varchar\',\n				\'colsize\' => \'255\',\n				\'fixed\'   => false,\n				),\n		\'number\' => array(\n				\'name\'    => \'Number\',\n				\'coltype\' => \'int\',\n				\'colsize\' => \'8\',\n				\'fixed\'   => false,\n				),\n		\'range\' => array(\n				\'name\'    => \'Range\',\n				\'coltype\' => \'int\',\n				\'colsize\' => \'8\',\n				\'fixed\'   => false,\n				),\n		\'list\' => array(\n				\'name\'    => \'Select list\',\n				\'coltype\' => \'mediumtext\',\n				\'colsize\' => \'\',\n				\'fixed\'   => true,\n				),\n		\'multilist\' => array(\n				\'name\'    => \'Multi select list\',\n				\'coltype\' => \'mediumtext\',\n				\'colsize\' => \'\',\n				\'fixed\'   => true,\n				),\n		\'radio\' => array(\n				\'name\'    => \'Radio set\',\n				\'coltype\' => \'text\',\n				\'colsize\' => \'\',\n				\'fixed\'   => true,\n				),\n		\'yesnoradio\' => array(\n				\'name\'    => \'Yes/no radio\',\n				\'coltype\' => \'text\',\n				\'colsize\' => \'\',\n				\'fixed\'   => true,\n				),\n		\'checkbox\' => array(\n				\'name\'    => \'Checkbox(es)\',\n				\'coltype\' => \'text\',\n				\'colsize\' => \'\',\n				\'fixed\'   => true,\n				),\n		\'textarea\' => array(\n				\'name\'    => \'Text area\',\n				\'coltype\' => \'mediumtext\',\n				\'colsize\' => \'4096\',\n				\'fixed\'   => false,\n				),\n		\'image\' => array(\n				\'name\'    => \'Image\',\n				\'coltype\' => \'int\',\n				\'colsize\' => \'\',\n				\'fixed\'   => true,\n				),\n		\'email\' => array(\n				\'name\'    => \'E-mail\',\n				\'coltype\' => \'varchar\',\n				\'colsize\' => \'254\',\n				\'fixed\'   => false,\n				),\n		\'url\' => array(\n				\'name\'    => \'URL\',\n				\'coltype\' => \'text\',\n				\'colsize\' => \'255\',\n				\'fixed\'   => false,\n				),\n		\'date\' => array(\n				\'name\'    => \'Date\',\n				\'coltype\' => \'date\',\n				\'colsize\' => \'\',\n				\'fixed\'   => false,\n				),\n		\'month\' => array(\n				\'name\'    => \'Month\',\n				\'coltype\' => \'varchar\',\n				\'colsize\' => \'255\',\n				\'fixed\'   => false,\n				),\n		\'week\' => array(\n				\'name\'    => \'Week\',\n				\'coltype\' => \'varchar\',\n				\'colsize\' => \'255\',\n				\'fixed\'   => false,\n				),\n		\'time\' => array(\n				\'name\'    => \'Time\',\n				\'coltype\' => \'time\',\n				\'colsize\' => \'\',\n				\'fixed\'   => false,\n				),\n		\'datetime\' => array(\n				\'name\'    => \'Date/Time\',\n				\'coltype\' => \'datetime\',\n				\'colsize\' => \'\',\n				\'fixed\'   => false,\n				),\n	);\n	return $smd_bio_types;\n}\n\n// -------------------------------------------------------------\nfunction smd_bio_get_coltypes() {\n	$smd_bio_coltypes = array(\n		\'varchar\'    => array(\'title\' => \'Varchar [up to 255 chars]\', \'size_req\' => \'255\'),\n		\'varbinary\'  => array(\'title\' => \'Binary varchar [up to 255 chars]\', \'size_req\' => \'255\'),\n		\'tinytext\'   => array(\'title\' => \'Tiny text [up to 255 chars]\', \'size_req\' => false),\n		\'text\'       => array(\'title\' => \'Text [up to 64KB chars]\', \'size_req\' => false),\n		\'mediumtext\' => array(\'title\' => \'Medium text [up to 16MB]\', \'size_req\' => false),\n		\'longtext\'   => array(\'title\' => \'Long text [up to 4GB]\', \'size_req\' => false),\n		\'date\'       => array(\'title\' => \'Date [YYYY-MM-DD]\', \'size_req\' => false),\n		\'time\'       => array(\'title\' => \'Time [HH:MN:SS]\', \'size_req\' => false),\n		\'datetime\'   => array(\'title\' => \'Date + time [YYYY-MM-DD HH:MN:SS]\', \'size_req\' => false),\n		\'timestamp\'  => array(\'title\' => \'Timestamp [seconds since UNIX epoch]\', \'size_req\' => false),\n		\'int\'        => array(\'title\' => \'Integer [up to 4294967295]\', \'size_req\' => \'11\'),\n		\'tinyint\'    => array(\'title\' => \'Tiny integer [up to 255]\', \'size_req\' => \'3\'),\n		\'smallint\'   => array(\'title\' => \'Small integer [up to 65535]\', \'size_req\' => \'4\'),\n		\'mediumint\'  => array(\'title\' => \'Medium integer [up to 16777215]\', \'size_req\' => \'8\'),\n		\'float\'      => array(\'title\' => \'Floating point number\', \'size_req\' => false),\n		\'double\'     => array(\'title\' => \'Double precision float\', \'size_req\' => false),\n	);\n\n	return $smd_bio_coltypes;\n}\n\n// -------------------------------------------------------------\nfunction smd_bio_get_unused() {\n	$smd_bio_unused = array(\n		\'size\' => array(\'list\', \'multilist\', \'radio\', \'yesnoradio\', \'checkbox\'),\n	);\n\n	return $smd_bio_unused;\n}\n\n// ************************\n// TABLE MANAGEMENT\n// ------------------------\nfunction smd_bio_table_exist() {\n	if (gps(\'debug\')) {\n		echo \"++ TABLE \".SMD_BIO_META.\" HAS \".count(@safe_show(\'columns\', SMD_BIO_META)).\" COLUMNS;\";\n	}\n	return(@safe_show(\'columns\', SMD_BIO_META));\n}\n\n// ------------------------\nfunction smd_bio_table_install($showpane=1) {\n	global $DB;\n\n	$smd_bio_types = smd_bio_get_types();\n	$smd_bio_coltypes = smd_bio_get_coltypes();\n\n	$version = mysql_get_server_info();\n	$GLOBALS[\'txp_err_count\'] = 0;\n	$msg = \'\';\n	$debug = gps(\'debug\');\n\n	$ret = \'\';\n	$sql = array();\n	if (!smd_bio_table_exist()) {\n		$sql[] = \"CREATE TABLE IF NOT EXISTS `\".PFX.SMD_BIO.\"` (\n			`user_ref` varchar(64) NOT NULL default \'\',\n			UNIQUE KEY `user_ref` (`user_ref`)\n		) ENGINE=MyISAM, CHARACTER SET=utf8, PACK_KEYS=1 \";\n\n		$sql[] = \"CREATE TABLE IF NOT EXISTS `\".PFX.SMD_BIO_META.\"` (\n			`id` int(4) NOT NULL auto_increment,\n			`title` varchar(64) NULL default \'\' COLLATE utf8_general_ci,\n			`name` varchar(64) NOT NULL default \'\' COLLATE utf8_general_ci,\n			`type` set(\".doQuote(join(\"\',\'\", array_keys($smd_bio_types))).\") NOT NULL default \'text\',\n			`size` varchar(10) NULL default 0,\n			`coltype` set(\".doQuote(join(\"\',\'\", array_keys($smd_bio_coltypes))).\") NOT NULL default \'varchar\',\n			`colsize` smallint(4) NULL default 0,\n			`val` text NULL COLLATE utf8_general_ci,\n			`position` varchar(16) NULL default \'\',\n			PRIMARY KEY (`id`),\n			UNIQUE KEY (`name`)\n		) ENGINE=MyISAM, CHARACTER SET=utf8, AUTO_INCREMENT=1\";\n	}\n\n	if ($debug) {\n		dmp($sql);\n	}\n	foreach ($sql as $qry) {\n		$ret = safe_query($qry);\n		if ($ret===false) {\n			$GLOBALS[\'txp_err_count\']++;\n			echo \"<b>\".$GLOBALS[\'txp_err_count\'].\".</b> \".mysql_error().\"<br />\\n\";\n			echo \"<!--\\n $qry \\n-->\\n\";\n		}\n	}\n\n	// Handle upgrades from v0.3x to v0.40.\n	// Upgrade table collation if necessary\n	$ret = getRows(\"SHOW TABLE STATUS WHERE name IN (\'\".PFX.SMD_BIO.\"\', \'\".PFX.SMD_BIO_META.\"\')\");\n	if ($ret[0][\'Collation\'] != \'utf8_general_ci\') {\n		$ret = safe_alter(SMD_BIO_META, \'CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci\');\n	}\n	if ($ret[1][\'Collation\'] != \'utf8_general_ci\') {\n		$ret = safe_alter(SMD_BIO, \'CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci\');\n	}\n\n	// Alter the position field from int to varchar so positioning can be non-numeric\n	$ret = @safe_field(\"DATA_TYPE\", \"INFORMATION_SCHEMA.COLUMNS\", \"table_name = \'\".PFX.SMD_BIO_META.\"\' AND table_schema = \'\" . $DB->db . \"\' AND column_name = \'position\'\");\n	if ($ret != \'varchar\') {\n		safe_alter(SMD_BIO_META, \"CHANGE `position` `position` VARCHAR( 16 ) NULL DEFAULT \'\'\", $debug);\n	}\n	// Add the coltype and colsize columns\n	$flds = getThings(\'SHOW COLUMNS FROM `\'.PFX.SMD_BIO_META.\'`\');\n	if (!in_array(\'coltype\',$flds)) {\n		safe_alter(SMD_BIO_META, \"ADD `coltype` SET(\".doQuote(join(\"\',\'\", array_keys($smd_bio_coltypes))).\") NOT NULL default \'\' after `size`\", $debug);\n		safe_alter(SMD_BIO_META, \"ADD `colsize` SMALLINT(4) NULL default 0 after `coltype`\", $debug);\n	}\n	// Add multiple select list & date flavour support to the \'type\' set, and rename \'text_input\' to just \'text\'\n	$toChange = safe_column(\'id\', SMD_BIO_META, \'type=\"text_input\"\');\n	$fld = getRows(\"SHOW FULL COLUMNS FROM `\".PFX.SMD_BIO_META.\"` LIKE \'type\'\");\n	$ft = $fld[0][\'Type\'];\n	if ( (strpos($ft, \'multilist\') === false) || (strpos($ft, \'text_input\') !== false) || (strpos($ft, \'month\') === false) ) {\n		safe_alter(SMD_BIO_META, \"CHANGE `type` `type` SET(\".doQuote(join(\"\',\'\", array_keys($smd_bio_types))).\")\", $debug);\n	}\n	if ($toChange) {\n		safe_update(SMD_BIO_META, \'type=\"text\"\', \"id in (\'\". join(\"\',\'\", $toChange) .\"\')\", $debug);\n	}\n\n	if ($GLOBALS[\'txp_err_count\'] == 0) {\n		$msg = smd_bio_gTxt(\'smd_bio_tbl_installed\');\n	} else {\n		$msg = smd_bio_gTxt(\'smd_bio_tbl_not_installed\');\n	}\n\n	if ($showpane) {\n		smd_bio_config($msg);\n	}\n}\n\n// ------------------------\n// Drop table if in database\nfunction smd_bio_table_remove($showpane=1) {\n	$ret = $msg = \'\';\n	$sql = array();\n	$GLOBALS[\'txp_err_count\'] = 0;\n	if (smd_bio_table_exist()) {\n		$sql[] = \"DROP TABLE IF EXISTS \" .PFX.SMD_BIO. \"; \";\n		$sql[] = \"DROP TABLE IF EXISTS \" .PFX.SMD_BIO_META. \"; \";\n		if(gps(\'debug\')) {\n			dmp($sql);\n		}\n		foreach ($sql as $qry) {\n			$ret = safe_query($qry);\n			if ($ret===false) {\n				$GLOBALS[\'txp_err_count\']++;\n				echo \"<b>\".$GLOBALS[\'txp_err_count\'].\".</b> \".mysql_error().\"<br />\\n\";\n				echo \"<!--\\n $qry \\n-->\\n\";\n			}\n		}\n	}\n	if ($GLOBALS[\'txp_err_count\'] == 0) {\n		$msg = smd_bio_gTxt(\'smd_bio_tbl_removed\');\n	} else {\n		$msg = smd_bio_gTxt(\'smd_bio_tbl_not_removed\');\n	}\n\n	if ($showpane) {\n		smd_bio_config($msg);\n	}\n}\n\n// ************************\n// PUBLIC-SIDE TAGS\n// ------------------------\n// Wrapper to permit bio info to be displayed for multiple authors\nfunction smd_bio_author($atts, $thing=NULL) {\n	global $smd_bio_author;\n\n	extract(lAtts(array(\n		\'author\'      => \'\',\n		\'form\'        => \'\',\n		\'sort\'        => \'RealName asc\',\n		\'wraptag\'     => \'\',\n		\'break\'       => \'\',\n		\'breakclass\'  => \'\',\n		\'class\'       => \'\',\n		\'label\'       => \'\',\n		\'labeltag\'    => \'\',\n		\'auto_detect\' => \'profile, list, article, image, file, link\',\n	), $atts));\n\n	$author = smd_bio_find_author($author, $auto_detect);\n	$author = do_list($author);\n	$authors = array();\n	$thing = (empty($form)) ? $thing : fetch_form($form);\n\n	// Set up any sorting clause\n	if ($sort != \'\') {\n		$sort = do_list($sort);\n		$sortout = array();\n		foreach ($sort as $sitems) {\n			$sortbits = do_list($sitems, \' \');\n			$sort_col = $sortbits[0];\n			$sort_ord = (isset($sortbits[1]) && in_array($sortbits[1], array(\'asc\', \'desc\'))) ? $sortbits[1] : \'asc\';\n			if ($sort_col) {\n				$sortout[] = \'`\' . $sort_col . \'` \' . $sort_ord;\n			}\n		}\n		if ($sortout) {\n			$sort = \' ORDER BY \'.join(\',\', $sortout);\n		}\n	}\n\n	// Expand any priv levels\n	foreach ($author as $user) {\n		if (strpos(strtolower($user), \"smd_privs\") === 0) {\n			$aprivs = explode(\':\', $user);\n			array_shift($aprivs); // Remove smd_privs token from the array\n			$rows = safe_query(\'SELECT txpu.name FROM \' . PFX . \'txp_users AS txpu LEFT JOIN \' . PFX.SMD_BIO . \' AS smdb ON txpu.name = smdb.user_ref WHERE privs in (\' . doQuote(join(\"\',\'\", $aprivs)) . \')\'.$sort);\n			if ($rows) {\n				while ($a = nextRow($rows)) {\n					$authors[] = $a[\'name\'];\n				}\n			}\n		} else if (strpos(strtolower($user), \"smd_all\") === 0) {\n			$rows = safe_query(\'SELECT txpu.name FROM \' . PFX . \'txp_users AS txpu LEFT JOIN \' . PFX.SMD_BIO . \' AS smdb ON txpu.name = smdb.user_ref WHERE 1=1\'.$sort);\n			if ($rows) {\n				while ($a = nextRow($rows)) {\n					$authors[] = $a[\'name\'];\n				}\n			}\n		} else {\n			$authors[] = $user;\n		}\n	}\n\n	// Parse content for each author: inject current author into global\n	$out = array();\n	foreach ($authors as $smd_bio_author) {\n		$toParse = (empty($thing)) ? $smd_bio_author : $thing;\n		$out[] = parse($toParse);\n	}\n\n	return doLabel($label, $labeltag).doWrap($out, $wraptag, $break, $class, $breakclass);\n}\n\n// Display biographical field data from a given user\'s profile\n// TDOO: permit defaults to be displayed\nfunction smd_bio_info($atts, $thing=NULL) {\n	global $smd_bio_data, $smd_bio_item_data;\n\n	// Data cache\n	static $bio_info = array();\n	static $meta = array();\n	static $cmeta = array();\n	static $metacols = array();\n\n	extract(lAtts(array(\n		\'author\'      => \'\', // Deprecated: use smd_bio_author tag as a wrapper instead\n		\'fields\'      => \'SMD_ALL\',\n		\'items\'       => \'SMD_ALL\', // Deprecated: use fields instead\n		\'exclude\'     => \'\',\n		\'form\'        => \'\',\n		\'wraptag\'     => \'\',\n		\'break\'       => \'\',\n		\'class\'       => \'\',\n		\'label\'       => \'1\',\n		\'labeltag\'    => \'\',\n		\'labelclass\'  => \'SMD_DFLT\', // Deprecated\n		\'itemwraptag\' => \'\', // Deprecated: use break\n		\'itemclass\'   => \'SMD_DFLT\', // Deprecated: use breakclass\n		\'breakclass\'  => \'SMD_DFLT\',\n		\'show_empty\'  => 0,\n		\'var_prefix\'  => \'smd_bio_\',\n		\'auto_detect\' => \'biotag, list, article, image, file, link\',\n		\'debug\'       => 0,\n	), $atts));\n\n	if (isset($atts[\'author\'])) {\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'author\')) . \'. Use the smd_bio_author tag as a wrapper instead.\', E_USER_NOTICE);\n		unset($author);\n	}\n	if (isset($atts[\'items\'])) {\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'items\')) . \'. Use fields instead.\', E_USER_NOTICE);\n		$fields = $items;\n		unset($items);\n	}\n	if (isset($atts[\'itemwraptag\'])) {\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'itemwraptag\')) . \'. Use break instead.\', E_USER_NOTICE);\n		$break = $itemwraptag;\n		unset($itemwraptag);\n	}\n	if (isset($atts[\'itemclass\'])) {\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'itemclass\')) . \'. Use breakclass instead.\', E_USER_NOTICE);\n		$breakclass = $itemclass;\n		unset($itemclass);\n	}\n	if (isset($atts[\'labelclass\'])) {\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'labelclass\')), E_USER_NOTICE);\n		unset($labelclass);\n	}\n\n	$author = smd_bio_find_author(\'\', $auto_detect);\n\n	$thing = (empty($form)) ? $thing : fetch_form($form);\n	$smd_bio_data = $smd_bio_item_data = array();\n	$bio_types = array_keys(smd_bio_get_types());\n\n	$fields = do_list($fields);\n	$exclude = do_list($exclude);\n	$final = \'\';\n\n	$coreCols = smd_bio_core_cols();\n	$list_types = array(\'checkbox\', \'radio\', \'yesnoradio\', \'list\', \'multilist\');\n	$mm_types = array(\'number\', \'range\');\n\n	if ($author) {\n		$meta = (empty($meta)) ? safe_rows(\'*\', SMD_BIO_META, \'1=1\') : $meta;\n		$cmeta = (empty($cmeta)) ? safe_show(\'columns\', \'txp_users\') : $cmeta;\n		$metacols = (empty($metacols)) ? safe_column(\'name\', SMD_BIO_META, \'1=1\') : $metacols;\n		$num = count($meta);\n\n		foreach($cmeta as $info) {\n			if (!in_array($info[\'Field\'], $coreCols)) continue;\n			$meta[$num][\'name\'] = $info[\'Field\'];\n			$tField = join(\'\', array_keys($coreCols, $info[\'Field\']));\n			$meta[$num][\'title\'] = ((gTxt($tField) == $tField) ? smd_bio_gTxt(\'smd_bio_\'.$tField) : gTxt($tField));\n			$length = (($off = strpos($info[\'Type\'], \'(\')) !== false) ? $off : strlen($info[\'Type\']); // Find the first open bracket or end of string\n			$cmtype = substr($info[\'Type\'], 0, $length);\n			$cmtype = in_array($cmtype, $bio_types)? $cmtype : \'text\';\n			$meta[$num][\'type\'] = $cmtype;\n			$num++;\n		}\n		if ($debug > 1) {\n			echo \'++ META DATA ++\';\n			dmp($meta);\n		}\n\n		// Exclusions override given fields\n		if ($exclude[0] != \'\' || in_array(\'SMD_ALL\', $fields)) {\n			$fields = $metacols;\n			$fields = array_merge($fields, $coreCols);\n		}\n\n		if (isset($bio_info[$author])) {\n			$cbio = $bio_info[$author][\'cbio\'];\n			$ebio = $bio_info[$author][\'ebio\'];\n		} else {\n			$cbio = $bio_info[$author][\'cbio\'] = safe_row(\'*\', \'txp_users\', \"name=\'\".doSlash($author).\"\'\");\n			$ebio = $bio_info[$author][\'ebio\'] = safe_row(\'*\', SMD_BIO, \"user_ref=\'\".doSlash($author).\"\'\");\n		}\n\n		$replacements = $out = $toParse = array();\n		$isSingle = (empty($thing)) ? true : false;\n		$numFields = count($fields);\n\n		foreach ($fields as $iref => $whatnot) {\n			$idx = -1;\n			if (in_array($whatnot, $exclude)) continue;\n\n			// Find the meta row\n			foreach ($meta as $num => $data) {\n				if ($data[\'name\'] == $whatnot) {\n					$idx = $num;\n					break;\n				}\n			}\n\n			if ($idx > -1) {\n				if (in_array($whatnot, $coreCols)) {\n					$field = isset($cbio[$whatnot]) ? $cbio[$whatnot] : \'\';\n				} else {\n					$field = isset($ebio[$whatnot]) ? $ebio[$whatnot] : \'\';\n				}\n\n				$theName = $meta[$idx][\'name\'];\n				$theTitle = $meta[$idx][\'title\'];\n				$prefixedName = $var_prefix.$theName;\n				$fixedName = \'smd_bio_\'.$theName; // Used for widget names so we know the indices in the $_POST array\n				$theClass = ($breakclass==\'SMD_DFLT\') ? $prefixedName : (($breakclass) ? $breakclass : \'\');\n				$replacements[\'{\'.$prefixedName.\'_name}\'] = $theName;\n				$replacements[\'{\'.$prefixedName.\'_title}\'] = $theTitle;\n				$replacements[\'{\'.$prefixedName.\'_class}\'] = $theClass;\n				$smd_bio_data[$theName][\'name\'] = $theName;\n				$smd_bio_data[$theName][\'title\'] = $theTitle;\n				$smd_bio_data[$theName][\'class\'] = $theClass;\n				$widget = \'\';\n\n				if ($field || $show_empty) {\n					if (in_array($meta[$idx][\'type\'], $list_types)) {\n						$field = do_list($field);\n						$field = join(\', \',$field);\n					}\n\n					$fieldContent = ($meta[$idx][\'type\'] == \'textarea\') ? nl2br($field) : $field;\n					$replacements[\'{\'.$prefixedName.\'}\'] = $fieldContent;\n					$smd_bio_data[$theName][\'value\'] = $fieldContent;\n\n					// For backwards compatibility(ish) with v0.3x\n					if ($numFields == 1) {\n						$replacements[\'{\'.$var_prefix.\'info_item}\'] = $fieldContent; // Deprecated, use info_value instead\n						$replacements[\'{\'.$var_prefix.\'info_value}\'] = $fieldContent;\n						$replacements[\'{\'.$var_prefix.\'info_name}\'] = $theName;\n						$replacements[\'{\'.$var_prefix.\'info_title}\'] = $theTitle;\n						$replacements[\'{\'.$var_prefix.\'info_itemclass}\'] = $theClass; // Deprecated: use info_class instead\n						$replacements[\'{\'.$var_prefix.\'info_class}\'] = $theClass;\n					}\n\n					if (in_array($meta[$idx][\'type\'], $list_types)) {\n						$chosens = do_list($field);\n						$nv = smd_bio_splitval($meta[$idx][\'val\']);\n						list($nv, $dflt) = smd_bio_get_default($nv, $field);\n						$dflts = do_list($dflt);\n						$listctr=1;\n						$chosenctr=0;\n						foreach($nv as $listitem => $listlabel) {\n							$replacements[\'{\'.$prefixedName.\'_item_\'.$listctr.\'}\'] = $listitem;\n							$replacements[\'{\'.$prefixedName.\'_title_\'.$listctr.\'}\'] = $listlabel;\n							$smd_bio_data[$theName][\'item_\'.$listctr] = $listitem;\n							$smd_bio_data[$theName][\'title_\'.$listctr] = $listlabel;\n							if (in_array($listitem, $chosens)) {\n								$chosenctr++;\n								$replacements[\'{\'.$prefixedName.\'_chosen_item_\'.$chosenctr.\'}\'] = $listitem;\n								$replacements[\'{\'.$prefixedName.\'_chosen_title_\'.$chosenctr.\'}\'] = $listlabel;\n								$smd_bio_data[$theName][\'chosen_item_\'.$chosenctr] = $listitem;\n								$smd_bio_data[$theName][\'chosen_title_\'.$chosenctr] = $listlabel;\n							}\n							$listctr++;\n						}\n						$dfltctr = 1;\n						foreach($dflts as $dfltitem) {\n							$replacements[\'{\'.$prefixedName.\'_default_\'.$dfltctr.\'}\'] = $dfltitem;\n							$smd_bio_data[$theName][\'default_\'.$dfltctr] = $dfltitem;\n							$dfltctr++;\n						}\n\n						// TODO: maybe hand-code all input types so they can have classes added\n						switch ($meta[$idx][\'type\']) {\n							case \'checkbox\':\n								$widget = checkbox($fixedName, $field, $dflt, \'\', $prefixedName);\n							break;\n							case \'yesnoradio\':\n								$widget = yesnoRadio($fixedName, $dflt);\n							break;\n							case \'radio\':\n								$widget = radioSet($nv, $fixedName, $dflt);\n							break;\n							case \'list\':\n								$widget = selectInput($fixedName, $nv, $dflt, false, \'\', $prefixedName);\n							break;\n							case \'multilist\':\n								$mitems = array();\n								$mitems[] = \'<select name=\"\'.$fixedName.\'\" class=\"list multiple \'.$theClass.\'\" multiple=\"multiple\">\';\n								foreach ($nv as $idx => $lbl) {\n									// Not using selectInput() because it doesn\'t support multiples\n									$mitems[] = \'<option value=\"ms_\'.$idx.\'\" \'.((in_array($idx, $dflts)) ? \' selected=\"selected\"\' : \'\') . \'>\' . $lbl . \'</option>\';\n								}\n								$mitems[] = \'</select>\';\n								$widget = join(n, $mitems);\n							break;\n						}\n\n						$replacements[\'{\'.$prefixedName.\'_item_count}\'] = $listctr-1;\n						$replacements[\'{\'.$prefixedName.\'_chosen_count}\'] = $chosenctr;\n						$replacements[\'{\'.$prefixedName.\'_default_count}\'] = $dfltctr-1;\n						$smd_bio_data[$theName][\'item_count\'] = $listctr-1;\n						$smd_bio_data[$theName][\'chosen_count\'] = $chosenctr;\n						$smd_bio_data[$theName][\'default_count\'] = $dfltctr-1;\n					} else if (in_array($meta[$idx][\'type\'], $mm_types)) {\n						$sizes = do_list($meta[$idx][\'size\']);\n						$min = ($sizes[0] == \'\') ? \'\' : \' min=\"\' . $sizes[0] . \'\"\';\n						$max = ($sizes[1] == \'\') ? \'\' : \' max=\"\' . $sizes[1] . \'\"\';\n						$jmp = ($sizes[2] == \'\') ? \'\' : \' step=\"\' . $sizes[2] . \'\"\';\n						$cls = ($theClass) ? \' class=\"\'.$theClass.\'\"\' : \'\';\n						$widget = \'<input type=\"\'.$meta[$idx][\'type\'].\'\" value=\"\'.$field.\'\" name=\"\'.$fixedName.\'\"\'.$cls.$min.$max.$jmp.\' />\';\n					} else if ($meta[$idx][\'type\'] == \'textarea\') {\n						$sizes = do_list($meta[$idx][\'size\']);\n						$w = ($sizes[0] == \'\') ? \'\' : \' cols=\"\' . $sizes[0] . \'\"\';\n						$h = ($sizes[1] == \'\') ? \'\' : \' rows=\"\' . $sizes[1] . \'\"\';\n						$cls = ($theClass) ? \' class=\"\'.$theClass.\'\"\' : \'\';\n						// TODO: use text_area() when 4.5.0 released\n						$widget = \'<textarea name=\"\' . $fixedName . \'\" id=\"\' . $prefixedName . \'\"\'. $cls.$w.$h.\'>\'.$field.\'</textarea>\';\n					} else {\n						$widget = fInput($meta[$idx][\'type\'], $fixedName, $field, $theClass, \'\', \'\', \'\', \'\', $prefixedName);\n					}\n\n					$smd_bio_data[$theName][\'widget\'] = $widget;\n					$replacements[\'{\'.$prefixedName.\'_widget}\'] = $widget;\n\n					// Without container/form, build up generic output\n					if ($isSingle) {\n						$taglab = (($label==1) ? $theTitle : (($label==\'\') ? \'\' : (($label) ? $label : $theName)));\n						$toParse[] = doLabel($taglab, $labeltag) . (($break) ? doTag($field, $break, $theClass) : $field);\n					}\n				}\n			}\n		}\n\n		if ($debug) {\n			echo \'++ REPLACEMENTS ++\';\n			dmp($replacements);\n		}\n\n		if (!$isSingle) {\n			$toParse[] = doTag($thing, $wraptag, $class);\n		}\n\n		$out[] = parse(strtr(join(n, $toParse), $replacements));\n		$final = doWrap($out, $wraptag, \'\', $class);\n	}\n	return $final;\n}\n\n// Convenience tag for those that prefer the security of a tag over {replacements}\nfunction smd_bio_data($atts, $thing=NULL) {\n	global $smd_bio_data, $smd_bio_item_data;\n\n	extract(lAtts(array(\n		\'field\'   => \'\',\n		\'item\'    => \'value\',\n		\'wraptag\' => \'\',\n		\'break\'   => \'\',\n		\'class\'   => \'\',\n		\'debug\'   => 0,\n	), $atts));\n\n	$bdata = is_array($smd_bio_data) ? $smd_bio_data : array();\n	$idata = is_array($smd_bio_item_data) ? $smd_bio_item_data : array();\n	$datapool = array_merge($bdata, $idata);\n\n	if ($debug) {\n		echo \'++ AVAILABLE INFO ++\';\n		dmp($datapool);\n	}\n\n	$items = do_list($item);\n	$out = array();\n	foreach ($items as $it) {\n		if (isset($datapool[$field][$it])) {\n			$out[] = $datapool[$field][$it];\n		}\n	}\n\n	return doWrap($out, $wraptag, $break, $class);\n}\n\n// Iterate over N multi-items\n// TDOO: permit defaults to be displayed\nfunction smd_bio_iterate($atts, $thing=NULL) {\n	global $smd_bio_data, $smd_bio_item_data;\n\n	extract(lAtts(array(\n		\'field\'      => \'\',\n		\'using\'      => \'chosen\', // chosen, all\n		\'display\'    => \'title\', // item, title\n		\'var_prefix\' => \'smd_bio_\',\n		\'wraptag\'    => \'\',\n		\'class\'      => \'\',\n		\'break\'      => \'\',\n		\'form\'       => \'\',\n		\'limit\'      => 0,\n		\'offset\'     => 0,\n		\'debug\'      => 0,\n	), $atts));\n\n	if ($debug > 1) {\n		echo \'++ AVAILABLE INFO ++\';\n		dmp($smd_bio_data);\n	}\n\n	// Validation 1\n	$usingMap = array(\'all\' => \'\', \'chosen\' => \'chosen\');\n	$using = isset($usingMap[$using]) ? $using : \'chosen\';\n\n	// Validation 2\n	$displayMap = array(\'item\' => \'item\', \'title\' => \'title\');\n	$display = isset($displayMap[$display]) ? $display : \'title\';\n\n	$flavour = ($using == \'chosen\') ? 1 : 0;\n	$countType = $flavour ? \'chosen_count\' : \'item_count\';\n\n	$out = $reps = array();\n\n	// Can only iterate over items that have a count\n	if (isset($smd_bio_data[$field][$countType])) {\n		for ($idx = 1; $idx <= $smd_bio_data[$field][$countType]; $idx++) {\n			if (( ($idx-1) >= $offset ) && ( $limit == 0 || (($idx-1) < $limit+$offset) )) {\n				$key = (($usingMap[$using]) ? $usingMap[$using]. \'_\' : \'\') . $displayMap[$display] . \'_\' . $idx;\n				$uval = $usingMap[$using] ? $usingMap[$using].\'_\' : \'\';\n				$itm = $smd_bio_data[$field][$uval . \'item_\'.$idx];\n				$ttl = $smd_bio_data[$field][$uval . \'title_\'.$idx];\n				$reps = array(\n					\'{\'.$var_prefix.\'this_item}\' => $itm,\n					\'{\'.$var_prefix.\'this_title}\' => $ttl,\n					\'{\'.$var_prefix.\'this_index}\' => $idx,\n				);\n				$smd_bio_item_data[$field][\'this_item\'] = $itm;\n				$smd_bio_item_data[$field][\'this_title\'] = $ttl;\n				$smd_bio_item_data[$field][\'this_index\'] = $idx;\n				if ($debug) {\n					echo \'++ ITERATOR REPLACEMENTS ++\';\n					dmp($reps);\n				}\n				$out[] = ($thing) ? parse(strtr($thing, $reps)) : ( ($form) ? parse_form(strtr($form, $reps)) : $smd_bio_data[$field][$key] );\n			}\n		}\n	}\n\n	return doWrap($out, $wraptag, $break, $class);\n}\n\n// Convenience conditional to test a field/item. Use smd_if for more advanced conditional logic\nfunction smd_if_bio($atts, $thing=NULL) {\n	global $smd_bio_data, $smd_bio_item_data;\n\n	extract(lAtts(array(\n		\'field\'          => \'\',\n		\'item\'           => \'value\',\n		\'value\'          => \'\',\n		\'case_sensitive\' => 1,\n		\'debug\'          => 0,\n	), $atts));\n\n	$bdata = is_array($smd_bio_data) ? $smd_bio_data : array();\n	$idata = is_array($smd_bio_item_data) ? $smd_bio_item_data : array();\n	$datapool = array_merge($bdata, $idata);\n	if ($debug) {\n		echo \'++ AVAILABLE INFO ++\';\n		dmp($datapool);\n	}\n\n	$result = false;\n\n	if (isset($datapool[$field][$item])) {\n		if ($value) {\n			$cval = ($case_sensitive) ? $value : strtolower($value);\n			$citm = ($case_sensitive) ? $datapool[$field][$item] : strtolower($datapool[$field][$item]);\n			$result = ($citm == $cval);\n		} else {\n			$result = ($datapool[$field][$item] != \'\');\n		}\n	}\n\n	return parse(EvalElse($thing, $result));\n}\n\n// ------------------------\n// A wrapper to article_custom that auto sets the user to the one specified\n// or the current article\'s author.\n// NOTE: lAtts() is NOT used because that limits the plugin attributes.\nfunction smd_bio_articles($atts, $thing=NULL) {\n	global $thisarticle;\n\n	$author = (isset($atts[\'author\'])) ? $atts[\'author\'] : (isset($thisarticle[\'authorid\']) ? $thisarticle[\'authorid\'] : \'\');\n	$atts[\'author\'] = $author;\n	return parseArticles($atts, \'1\', $thing);\n}\n\n// ------------------------\n// Plugin-specific replacement strings - localise as required\nfunction smd_bio_gTxt($what, $atts = array()) {\n	$lang = array(\n		\'en-gb\' => array(\n			\'smd_bio_admin_tab\' => \'Bio config\',\n			\'smd_bio_colsize\' => \'Column size\',\n			\'smd_bio_coltype\' => \'Column type\',\n			\'smd_bio_help\' => \'?\',\n			\'smd_bio_help_unused\' => \'Unused for this Type\',\n			\'smd_bio_id\' => \'ID\',\n			\'smd_bio_more\' => \'More\',\n			\'smd_bio_meta_add\' => \'Add bio field\',\n			\'smd_bio_meta_added\' => \'Bio field added\',\n			\'smd_bio_meta_not_added\' => \'Problem adding bio field: check name is not already used\',\n			\'smd_bio_meta_deleted\' => \'Bio field and all its data deleted\',\n			\'smd_bio_meta_not_deleted\' => \'Problem deleting bio field: it may still exist\',\n			\'smd_bio_meta_edit\' => \'Edit bio field\',\n			\'smd_bio_meta_update_failed\' => \'Failed to save bio field \"{name}\"\',\n			\'smd_bio_meta_update_partial\' => \'Partially saved bio field \"{name}\"\',\n			\'smd_bio_meta_updated\' => \'Bio field \"{name}\" updated\',\n			\'smd_bio_position\' => \'Position\',\n			\'smd_bio_privileges\' => \'Privileges\',\n			\'smd_bio_real_name\' => \'Full name\',\n			\'smd_bio_size\' => \'Size\',\n			\'smd_bio_sizehelp_text\' => \'Up to two comma-separated values specifying the number of characters: 1) of the input box on the Admin->Users tab, 2) the user is allowed to enter\',\n			\'smd_bio_sizehelp_numrange\' => \'Up to three comma-separated values specifying the: 1) minimum, 2) maximum, 3) permitted step of the input\',\n			\'smd_bio_sizehelp_textarea\' => \'Up to two comma-separated values specifying the dimensions of the textarea in characters: 1) Width, 2) Height\',\n			\'smd_bio_sizehelp_image\' => \'The x,y dimensions of the image/thumbnail on the Admin->Users tab. If only one value is given, the image will be square. If either value is omitted, the dimensions stored in the database will be used\',\n			\'smd_bio_valhelp_text\' => \'The default value that will appear in the text box\',\n			\'smd_bio_valhelp_lrc\' => \'Comma- or newline-separated list of available options in the set. If you list only item labels, the names will be automatically generated (lower case, no spaces). You may specify your own names using: name1 => Label 1, name2 -> Label 2, ...\',\n			\'smd_bio_valhelp_ynr\' => \'Default value of the Yes/No checkbox. 0 (or omitted) = No; 1 = Yes\',\n			\'smd_bio_valhelp_image\' => \'Limit the images in the dropdown to the ones in this given parent image category. If omitted, all images are available\',\n			\'smd_bio_tbl_installed\' => \'Tables installed.\',\n			\'smd_bio_tbl_not_installed\' => \'Tables NOT installed.\',\n			\'smd_bio_tbl_removed\' => \'Tables removed.\',\n			\'smd_bio_tbl_not_removed\' => \'Tables NOT removed.\',\n			\'smd_bio_title\' => \'Title\',\n			\'smd_bio_type\' => \'Type\',\n			\'smd_bio_value\' => \'Value\',\n		),\n	);\n\n	$thislang = get_pref(\'language\', \'en-gb\');\n	$thislang = (isset($lang[$thislang][$what])) ? $thislang : \'en-gb\';\n	return strtr($lang[$thislang][$what], $atts);\n}','7aca5aff340ff9a4e9ab71075810bf5d',1,5,2);

INSERT INTO `txp_plugin` (`name`, `status`, `author`, `author_uri`, `version`, `description`, `help`, `code`, `code_restore`, `code_md5`, `type`, `load_order`, `flags`)
VALUES
	('rah_repeat',1,'Jukka Svahn','http://rahforum.biz','1.0.1','Iterations made easy','	<h1>rah_repeat</h1>\n\n	<p><a href=\"http://rahforum.biz/plugins/rah_repeat\" rel=\"nofollow\">Project page</a> | <a href=\"https://packagist.org/packages/rah/rah_repeat\" rel=\"nofollow\">Packagist</a> | <a href=\"http://twitter.com/gocom\" rel=\"nofollow\">Twitter</a> | <a href=\"https://github.com/gocom/rah_repeat\" rel=\"nofollow\">GitHub</a> | <a href=\"http://forum.textpattern.com/viewtopic.php?id=32384\" rel=\"nofollow\">Support forum</a> | <a href=\"http://rahforum.biz/donate/rah_repeat\" rel=\"nofollow\">Donate</a></p>\n\n	<p>Rah_repeat is a <a href=\"http://www.textpattern.com\" rel=\"nofollow\">Textpattern <span class=\"caps\">CMS</span></a> plugin used for iterations. The plugin splits a provided value to smaller chunks and iterates overs, just like you would expect from a for each loop in any programming language. With the plugin you can turn a simple comma-separated list of values into advanced <span class=\"caps\">HTML</span> output, or extract parts of a value as <a href=\"http://textpattern.net/wiki/index.php?title=variable\" rel=\"nofollow\">variables</a>.</p>\n\n	<h2>Requirements</h2>\n\n	<p>Rah_repeat&#8217;s minimum requirements:</p>\n\n	<ul>\n		<li>Textpattern 4.5.0 or newer.</li>\n	</ul>\n\n	<h2>Installing</h2>\n\n	<p>Rah_repeat&#8217;s installation follows the standard plugin installation steps.</p>\n\n	<ol>\n		<li>Download the plugin installation code.</li>\n		<li>Copy and paste the installation code into the <em>Install plugin</em> box of your Textpattern Plugin pane.</li>\n		<li>Run the automated setup.</li>\n		<li>After the setup is done, activate the plugin. Done.</li>\n	</ol>\n\n	<h2>Basics</h2>\n\n<pre><code>&lt;txp:rah_repeat range=&quot;min, max, step&quot; value=&quot;value1, value2, ...&quot; assign=&quot;variable1, variable2, ...&quot;&gt;\n	...contained statement...\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>Rah_repeat&#8217;s main job is primely iterating over values. Its iteration power can used to create lists or extract subsets of data. The plugin can come very handy when you have a <a href=\"http://textpattern.net/wiki/index.php?title=custom_field\" rel=\"nofollow\">custom field</a> that contains comma-separated list of values which you want to present as a <span class=\"caps\">HTML</span> list or extract as individual separate values.</p>\n\n	<p>The values you want to iterate over are provided to the tag with the <code>value</code> attribute, each individual subset value separated from each other with the <code>delimiter</code>, defaulting to a comma. The current value that is being iterated over can be returned using the <code>rah_repeat_value</code> tag, wrapped in <code>rah_repeat</code> block. The following would generate a <span class=\"caps\">HTML</span> list from comma-separated list of <code>red, blue, green</code>.</p>\n\n<pre><code>&lt;txp:rah_repeat value=&quot;red, blue, green&quot; wraptag=&quot;ul&quot; break=&quot;li&quot;&gt;\n	&lt;txp:rah_repeat_value /&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>In addition to iterating over values and creating lists, the tag can also be used to extract values and assign each one to a <a href=\"http://textpattern.net/wiki/index.php?title=variable\" rel=\"nofollow\">variable</a> tag. This can be done using the <code>rah_repeat</code> tag&#8217;s <code>assign</code> attribute. The attribute takes a comma-separated list of variable names that will be created, each containing one of the values.</p>\n\n<pre><code>&lt;txp:rah_repeat value=&quot;red, blue, green&quot; assign=&quot;color1, color2, color3&quot; /&gt;\n</code></pre>\n\n	<p>The above would extra each of the colors as a variable. These variables would be named as <code>color1</code>, <code>color2</code> and <code>color3</code>. Using <code>&lt;txp:variable name=&quot;color1&quot; /&gt;</code> would return <code>red</code>.</p>\n\n	<h2>Tags and attributes</h2>\n\n	<p>The plugin comes with a total of four tags. The main tag <code>rah_repeat</code>, a single tag <code>rah_repeat_value</code>, and two conditionals <code>rah_repeat_if_first</code> and <code>rah_repeat_if_last</code>.</p>\n\n	<h3>rah_repeat</h3>\n\n<pre><code>&lt;txp:rah_repeat value=&quot;value1, value2, ...&quot;&gt;\n	...contained statement...\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>The <code>&lt;txp:rah_repeat&gt;</code> tag is the plugin&#8217;s main tag. It&#8217;s a container tag used for iterations. Attributes for it are as follows.</p>\n\n	<p><strong>value</strong><br />\nSets the values that are passed to the tag. Multiple values are separated with the <code>delimiter</code> which by default is a comma (<code>,</code>). This attribute or either <code>range</code> is required.<br />\nExample: <code>value=&quot;dog,cat,human&quot;</code> Default: <code>&quot;&quot;</code></p>\n\n	<p><strong>range</strong><br />\nCreates a list of values containing a range of elements. Using <code>range</code> overrides <code>value</code> attribute. It works identically to <span class=\"caps\">PHP</span>&#8217;s <a href=\"http://php.net/manual/en/function.range.php\" rel=\"nofollow\">range</a> function and uses same sequence syntax as it. The attribute&#8217;s value consists of three parts: <code>minimum</code>, <code>maximum</code> and <code>step</code>, which are separated by a comma. All but <code>step</code> are required.<br />\nExample: <code>range=&quot;1, 10&quot;</code> Default: undefined</p>\n\n	<p><strong>delimiter</strong><br />\nSets the delimiter that is used to split the provided <code>value</code> into a list. Default delimiter is comma (<code>,</code>).<br />\nExample: <code>delimiter=&quot;|&quot;</code> Default: <code>&quot;,&quot;</code></p>\n\n	<p><strong>assign</strong><br />\nAssigns values as Textpattern&#8217;s <a href=\"http://textpattern.net/wiki/index.php?title=variable\" rel=\"nofollow\">variables</a>. Takes a comma-separated list of variable names: <code>variable1, variable2, variable3, ...</code>.<br />\nExample: <code>assign=&quot;label, value&quot;</code> Default: <code>unset</code></p>\n\n	<p><strong>duplicates</strong><br />\nRemoves duplicate values from the list. If the attribute is set to <code>1</code>, only first occurrence of the value is used and duplicates are stripped off.<br />\nExample: <code>duplicates=&quot;1&quot;</code> Default: <code>&quot;0&quot;</code></p>\n\n	<p><strong>exclude</strong><br />\nExclude certain values from the list. The attribute takes a comma (or <code>delimiter</code>, if <code>delimiter</code> is changed) separated list of values.<br />\nExample: <code>exclude=&quot;foo,bar&quot;</code> Default: undefined</p>\n\n	<p><strong>trim</strong><br />\nTrims values from extra whitespace. This can be particularly helpful if the provided values are from user-input (e.g. from an article field), or the values just have extra whitespace, and the resulting output has to be clean (i.e. used in <span class=\"caps\">XML</span>, JavaScript or to a <a href=\"http://textpattern.net/wiki/index.php?title=variable\" rel=\"nofollow\">variable</a> comparison). If you want to keep whitespace intact, you can use this attribute. By default the option is on, and values are trimmed.<br />\nExample: <code>trim=&quot;0&quot;</code> Default: <code>&quot;1&quot;</code></p>\n\n	<p><strong>sort</strong><br />\nSorts the values. If the attribute is used, all values are rearranged to the specified order. Available options are <code>regular</code> (sorts without checking the type), <code>numeric</code> (sorts in a numeric order), <code>string</code> (sorts as strings) and <code>locale_string</code> (sorts according server&#8217;s locale settings). All the values can be  followed by the sorting direction, either <code>desc</code> and <code>asc</code>. By default the option isn&#8217;t used (unset), and the values are returned in the order they were supplied.<br />\nExample: <code>sort=&quot;regular asc&quot;</code> Default: <code>&quot;&quot;</code></p>\n\n	<p><strong>offset</strong><br />\nThe number of items to skip. Default is <code>0</code> (none).<br />\nExample: <code>offset=&quot;5&quot;</code> Default: <code>&quot;0&quot;</code></p>\n\n	<p><strong>limit</strong><br />\nThe number of items are displayed. By default there is no limit, and all items are returned.<br />\nExample: <code>limit=&quot;10&quot;</code> Default: undefined</p>\n\n	<p><strong>form</strong><br />\nUse specified form partial. By default contained statement is used instead of a form.<br />\nExample: <code>form=&quot;price_column&quot;</code> Default: <code>&quot;&quot;</code></p>\n\n	<p><strong>wraptag</strong><br />\nThe (X)HTML tag (without brackets) used to wrap the output.<br />\nExample: <code>wraptag=&quot;div&quot;</code> Default: <code>&quot;&quot;</code></p>\n\n	<p><strong>break</strong><br />\nThe (X)HTML tag (without brackets) or a string used to separate list items.<br />\nExample: <code>&quot;break=&quot;br&quot;</code> Default: <code>&quot;&quot;</code></p>\n\n	<p><strong>class</strong><br />\nThe (X)HTML class applied to the <code>wraptag</code>. Default is unset.<br />\nExample: <code>class=&quot;plugin&quot;</code> Default: <code>&quot;&quot;</code></p>\n\n	<h3>rah_repeat_value</h3>\n\n<pre><code>&lt;txp:rah_repeat value=&quot;value1, value2, ...&quot;&gt;\n	&lt;txp:rah_repeat_value /&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>Rah_repeat_value a single tag, used to display a iterated value. The tag should be used inside a <code>&lt;txp:rah_repeat&gt;&lt;/txp:rah_repeat&gt;</code> block.</p>\n\n	<p><strong>escape</strong><br />\nIf set to <code>1</code>, <span class=\"caps\">HTML</span> and Textpattern markup are escaped, and special characters are converted to <span class=\"caps\">HTML</span> entities. By default this option is off.<br />\nExample: <code>escape=&quot;1&quot;</code> Default: <code>&quot;0&quot;</code></p>\n\n	<p><strong>index</strong><br />\nIf set to <code>1</code>, the tag returns the iterated value&#8217;s index number. The index starts from 0.<br />\nExample: <code>index=&quot;1&quot;</code> Default: <code>&quot;0&quot;</code></p>\n\n	<h3>rah_repeat_if_first</h3>\n\n<pre><code>&lt;txp:rah_repeat value=&quot;value1, value2, ...&quot;&gt;\n	&lt;txp:rah_repeat_if_first&gt;\n		Fist item.\n	&lt;/txp:rah_repeat_if_first&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>The <code>&lt;txp:rah_repeat_if_first&gt;</code> tag is a container, and has no attributes. It&#8217;s a conditional tag that checks if the current item is the first one.</p>\n\n	<h3>rah_repeat_if_last</h3>\n\n<pre><code>&lt;txp:rah_repeat value=&quot;value1, value2, ...&quot;&gt;\n	&lt;txp:rah_repeat_if_last&gt;\n		Last item.\n	&lt;/txp:rah_repeat_if_last&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>The <code>&lt;txp:rah_repeat_if_last&gt;</code> tag is a container, and has no attributes. It&#8217;s a conditional tag that checks if the current item is the last one.</p>\n\n	<h2>Examples</h2>\n\n	<h3>Simple usage example</h3>\n\n	<p>This example turns simple comma separated list of <code>dog, cat, butterfly</code> into a <span class=\"caps\">HTML</span> list.</p>\n\n<pre><code>&lt;txp:rah_repeat value=&quot;dog, cat, butterfly&quot; wraptag=&quot;ul&quot; break=&quot;li&quot;&gt;\n	A &lt;txp:rah_repeat_value /&gt;.\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>The above returns:</p>\n\n<pre><code>&lt;ul&gt;\n	&lt;li&gt;A dog.&lt;/li&gt;\n	&lt;li&gt;A cat.&lt;/li&gt;\n	&lt;li&gt;A butterfly.&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n	<h3>Using tags as values</h3>\n\n	<p>As of Textpattern version 4.0.7, you can use tags inside tags.</p>\n\n	<p>Let&#8217;s say that you have comma separated list of items stored inside article&#8217;s <a href=\"http://textpattern.net/wiki/index.php?title=custom_field\" rel=\"nofollow\">custom field</a>. For example, list of &#8220;Nameless&#8221; video service&#8217;s video IDs (<code>ID1, ID2, ID3, ID4</code>), and you want to embed each of those as a playable video.</p>\n\n	<p>We pass the custom field hosting the video IDs to rah_repeat tag (with the <code>value</code> attribute), and place the video player code inside the container:</p>\n\n<pre><code>&lt;txp:rah_repeat value=\'&lt;txp:custom_field name=&quot;MyCustomFieldName&quot; /&gt;\'&gt;\n	&lt;object width=&quot;600&quot; height=&quot;380&quot;&gt;\n		&lt;param name=&quot;movie&quot; value=&quot;http://example.com/v/&lt;txp:rah_repeat_value /&gt;&quot;&gt;&lt;/param&gt;\n		&lt;embed src=&quot;http://example.com/v/&lt;txp:rah_repeat_value /&gt;&quot; width=&quot;600&quot; height=&quot;380&quot;&gt;&lt;/embed&gt;\n	&lt;/object&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>The above code would output 4 embedded players (one for each clip), displaying the videos specified with the custom field.</p>\n\n	<h3>Taking advantage of offset and limit attributes</h3>\n\n	<p>First display two items, then some text between, two more items, some more text and then the rest of the items.</p>\n\n<pre><code>&lt;txp:rah_repeat value=\'&lt;txp:custom_field name=&quot;MyCustomFieldName&quot; /&gt;\' limit=&quot;2&quot;&gt;\n	&lt;txp:rah_repeat_value /&gt;\n&lt;/txp:rah_repeat&gt;\n&lt;p&gt;Some text here.&lt;/p&gt;\n&lt;txp:rah_repeat value=\'&lt;txp:custom_field name=&quot;MyCustomFieldName&quot; /&gt;\' offset=&quot;2&quot; limit=&quot;4&quot;&gt;\n	&lt;txp:rah_repeat_value /&gt;\n&lt;/txp:rah_repeat&gt;\n&lt;p&gt;Some another cool phrase here.&lt;/p&gt;\n&lt;txp:rah_repeat value=\'&lt;txp:custom_field name=&quot;MyCustomFieldName&quot; /&gt;\' offset=&quot;4&quot;&gt;\n	&lt;txp:rah_repeat_value /&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<h3>Repeat inside repeat</h3>\n\n<pre><code>&lt;txp:rah_repeat value=&quot;group1|item1|item2, group2|item1|item2&quot;&gt;\n	&lt;ul&gt;\n		&lt;txp:rah_repeat value=\'&lt;txp:rah_repeat_value /&gt;\' delimiter=&quot;|&quot;&gt;\n			&lt;li&gt;&lt;txp:rah_repeat_value /&gt;&lt;/li&gt;\n		&lt;/txp:rah_repeat&gt;\n	&lt;/ul&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>Returns two <span class=\"caps\">HTML</span> lists:</p>\n\n<pre><code>&lt;ul&gt;\n	&lt;li&gt;group1&lt;/li&gt;\n	&lt;li&gt;item1&lt;/li&gt;\n	&lt;li&gt;item2&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul&gt;\n	&lt;li&gt;group2&lt;/li&gt;\n	&lt;li&gt;item1&lt;/li&gt;\n	&lt;li&gt;item2&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n	<h3>Basic usage of the if_first and the if_last tags</h3>\n\n	<p>With the conditional tags <code>&lt;txp:rah_repeat_if_first /&gt;</code> and <code>&lt;txp:rah_repeat_if_last&gt;</code> we can test which value is the first and which is the last.</p>\n\n<pre><code>&lt;txp:rah_repeat value=&quot;item1, item2, item3, item4, item5&quot; wraptag=&quot;ul&quot; break=&quot;li&quot;&gt;\n	&lt;txp:rah_repeat_if_first&gt;First: &lt;/txp:rah_repeat_if_first&gt;\n	&lt;txp:rah_repeat_if_last&gt;Last: &lt;/txp:rah_repeat_if_last&gt;\n	&lt;txp:rah_repeat_value /&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>Returns:</p>\n\n<pre><code>&lt;ul&gt;\n	&lt;li&gt;First: item1&lt;/li&gt;\n	&lt;li&gt;item2&lt;/li&gt;\n	&lt;li&gt;item3&lt;/li&gt;\n	&lt;li&gt;item4&lt;/li&gt;\n	&lt;li&gt;Last: item5&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n	<h3>Remove duplicate values</h3>\n\n<pre><code>&lt;txp:rah_repeat duplicates=&quot;1&quot; value=&quot;foo, bar, bar, foo, bar, bar, foo, foobar&quot;&gt;\n	&lt;txp:rah_repeat_value /&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>Returns: <code>foo, bar, foobar</code></p>\n\n	<h3>Arrange the values from lowest to highest</h3>\n\n<pre><code>&lt;txp:rah_repeat value=&quot;b, a, c&quot; sort=&quot;regular asc&quot;&gt;\n	&lt;txp:rah_repeat_value /&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>Returns: <code>a, b, c</code></p>\n\n	<h3>Excluding values</h3>\n\n<pre><code>&lt;txp:rah_repeat value=&quot;foo, bar, foobar&quot; exclude=&quot;foo, bar&quot;&gt;\n	&lt;txp:rah_repeat_value /&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>Returns: <code>foobar</code></p>\n\n	<h3>Using range attribute</h3>\n\n	<p>With the <code>range</code> it&#8217;s possible to create a range of elements with out specifying each. For example generating list of alphabet (A-z) can be done with range.</p>\n\n<pre><code>&lt;txp:rah_repeat range=&quot;a, z, 1&quot;&gt;\n	&lt;txp:rah_repeat_value /&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>Or listing number from 0 to 10.</p>\n\n<pre><code>&lt;txp:rah_repeat range=&quot;0, 10, 1&quot;&gt;\n	&lt;txp:rah_repeat_value /&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<p>Or values <code>0</code>, <code>2</code>, <code>4</code>, and <code>6</code>.</p>\n\n<pre><code>&lt;txp:rah_repeat range=&quot;0, 6, 2&quot;&gt;\n	&lt;txp:rah_repeat_value /&gt;\n&lt;/txp:rah_repeat&gt;\n</code></pre>\n\n	<h3>Assign variables with assign attribute</h3>\n\n	<p>The <code>assign</code> attribute allows exporting split values as <a href=\"http://textpattern.net/wiki/index.php?title=variable\" rel=\"nofollow\">variables</a>.</p>\n\n<pre><code>&lt;txp:rah_repeat value=&quot;JavaScript, jQuery, 1.8.0&quot; assign=&quot;language, framework, version&quot; /&gt;\n</code>\n<code>&lt;txp:variable name=&quot;language&quot; /&gt;\n&lt;txp:variable name=&quot;framework&quot; /&gt;\n</code>\n<code>&lt;txp:if_variable name=&quot;version&quot; value=&quot;1.8.0&quot;&gt;\n	Version is 1.8.0.\n&lt;/txp:if_variable&gt;\n</code></pre>\n\n	<h2>Changelog</h2>\n\n	<h3>Version 1.0.1 &#8211; 2013/05/07</h3>\n\n	<ul>\n		<li>Composer package now uses <a href=\"https://packagist.org/packages/textpattern/lock\" rel=\"nofollow\">textpattern/lock</a> and <a href=\"https://packagist.org/packages/textpattern/installer\" rel=\"nofollow\">textpattern/installer</a>. The package installs to Textpattern without any extra configuration.</li>\n	</ul>\n\n	<h3>Version 1.0.0 &#8211; 2013/04/23</h3>\n\n	<ul>\n		<li>Fixed: Return a empty string instead of <span class=\"caps\">NULL</span> byte on halt.</li>\n		<li>Added: <code>form</code> attribute.</li>\n		<li>Added: <code>index</code> attribute to the <code>rah_repeat_value</code> tag.</li>\n		<li>Now requires Textpattern 4.5.0 or newer.</li>\n	</ul>\n\n	<h3>Version 0.8.1 &#8211; 2012/08/25</h3>\n\n	<ul>\n		<li>Fixed: <code>range</code> attribute. It ignored any options and always created an list of 1-10.</li>\n	</ul>\n\n	<h3>Version 0.8 &#8211; 2012/08/24</h3>\n\n	<ul>\n		<li>Fixed: made the <code>sort</code> attribute&#8217;s direction optional.</li>\n		<li>Added: <code>exclude</code> can now take and exclude empty strings (<code>&quot;&quot;</code>) and zeros (<code>0</code>).</li>\n		<li>Added: <code>range</code> attribute. Allows generating automated lists (<code>range=&quot;min, max, step&quot;</code>).</li>\n		<li>Added: <code>assign</code> attribute. Allows extracting values as variables.</li>\n		<li>Added: <code>escape</code> attribute to <code>&lt;txp:rah_repeat_value /&gt;</code>.</li>\n		<li>Added: Support for natural ordering (<code>sort=&quot;natural&quot;</code>).</li>\n		<li>Changed: Now <code>trim</code> is enabled by default. Previously values weren&#8217;t trimmed from white-space by default.</li>\n		<li>Changed: Renamed <code>locale</code> sorting option to <code>LOCALE_STRING</code>.</li>\n		<li>Changed: Order can be reversed with out re-sorting by using <code>sort=&quot;desc&quot;</code>.</li>\n		<li>Now requires <span class=\"caps\">PHP</span> 5.2 (or newer).</li>\n	</ul>\n\n	<h3>Version 0.7 &#8211; 2011/12/02</h3>\n\n	<ul>\n		<li>Added: <code>trim</code> attribute. When set to <code>1</code>, provided values are trimmed from surrounding whitespace.</li>\n		<li>Fixed: &#8220;locale&#8221; sorting option. Previously it sorted values as a string, not by locale options.</li>\n		<li>Changed: limit&#8217;s default to <span class=\"caps\">NULL</span>. Leave limit unset if you only want offset without limit, or use a high value.</li>\n		<li>Improved: Better offset and limit functionality. Now slices the list of values before staring to build the markup.</li>\n	</ul>\n\n	<h3>Version 0.6 &#8211; 2010/05/09</h3>\n\n	<ul>\n		<li>Added: <code>exclude</code> attribute.</li>\n		<li>Fixed: <code>&lt;txp:rah_repeat_if_last&gt;</code> tag. Issue was caused by v0.5 update.</li>\n	</ul>\n\n	<h3>Version 0.5 &#8211; 2010/05/08</h3>\n\n	<ul>\n		<li>Changed offset&#8217;s default value from <code>unset</code> to <code>0</code>.</li>\n		<li>Added: <code>sort</code> attribute.</li>\n		<li>Added: <code>duplicates</code> attribute.</li>\n	</ul>\n\n	<h3>Version 0.4 &#8211; 2009/11/30</h3>\n\n	<ul>\n		<li>Fixed: now returns old parent global, if two tags are used inside each other, instead of defining it empty.</li>\n		<li>Added: <code>&lt;txp:rah_repeat_if_first&gt;</code>.</li>\n		<li>Added: <code>&lt;txp:rah_repeat_if_last&gt;</code>.</li>\n	</ul>\n\n	<h3>Version 0.3 &#8211; 2009/11/28</h3>\n\n	<ul>\n		<li>Added: <code>wraptag</code> attribute.</li>\n		<li>Added: <code>break</code> attribute.</li>\n		<li>Added: <code>class</code> attribute.</li>\n	</ul>\n\n	<h3>Version 0.2 &#8211; 2009/11/23</h3>\n\n	<ul>\n		<li>Added: <code>limit</code> attribute.</li>\n		<li>Added: <code>offset</code> attribute.</li>\n	</ul>\n\n	<h3>Version 0.1 &#8211; 2009/11/20</h3>\n\n	<ul>\n		<li>Initial release.</li>\n	</ul>','\n\n/**\n * Rah_repeat plugin for Textpattern CMS.\n *\n * @author  Jukka Svahn\n * @license GNU GPLv2\n * @link    http://rahforum.biz/plugins/rah_repeat\n *\n * Copyright (C) 2013 Jukka Svahn http://rahforum.biz\n * Licensed under GNU Genral Public License version 2\n * http://www.gnu.org/licenses/gpl-2.0.html\n */\n\n/**\n * Creates a list from the given values.\n *\n * @param  array  $atts\n * @param  string $thing\n * @return string\n */\n\n	function rah_repeat($atts, $thing = null)\n	{\n		global $rah_repeat, $variable;\n\n		extract(lAtts(array(\n			\'form\'       => \'\',\n			\'delimiter\'  => \',\',\n			\'value\'      => \'\',\n			\'limit\'      => null,\n			\'offset\'     => 0,\n			\'wraptag\'    => \'\',\n			\'break\'      => \'\',\n			\'class\'      => \'\',\n			\'duplicates\' => 0,\n			\'sort\'       => \'\',\n			\'exclude\'    => null,\n			\'trim\'       => 1,\n			\'range\'      => \'\',\n			\'assign\'     => null,\n		), $atts));\n\n		if ($range && strpos($range, \',\'))\n		{\n			$values = call_user_func_array(\'range\', do_list($range));\n		}\n		else\n		{\n			$values = explode($delimiter, $value);\n		}\n\n		if ($trim)\n		{\n			$values = doArray($values, \'trim\');\n		}\n\n		if ($duplicates)\n		{\n			$values = array_unique($values);\n		}\n\n		if ($exclude !== null)\n		{\n			$exclude = explode($delimiter, $exclude);\n\n			if ($trim)\n			{\n				$exclude = doArray($exclude, \'trim\');\n			}\n\n			$values = array_diff($values, $exclude);\n		}\n\n		if ($sort && $sort = doArray(doArray(explode(\' \', trim($sort), 2), \'trim\'), \'strtoupper\'))\n		{\n			if (count($sort) == 2 && defined(\'SORT_\'.$sort[0]))\n			{\n				sort($values, constant(\'SORT_\'.$sort[0]));\n			}\n\n			if (end($sort) == \'DESC\')\n			{\n				$values = array_reverse($values);\n			}\n		}\n\n		$values = array_slice($values, $offset, $limit);\n\n		if ($assign !== null)\n		{\n			foreach (do_list($assign) as $key => $var)\n			{\n				$value = isset($values[$key]) ? $values[$key] : \'\';\n				$variable[$var] = $value;\n			}\n		}\n\n		if (!$values || ($thing === null && $form === \'\'))\n		{\n			return \'\';\n		}\n\n		$count = count($values);\n\n		$i = 0;\n		$out = array();\n\n		foreach ($values as $string)\n		{\n			$i++;\n			$parent = $rah_repeat;\n\n			$rah_repeat = array(\n				\'string\' => $string,\n				\'first\'  => ($i == 1),\n				\'last\'   => ($count == $i),\n				\'index\'  => $i - 1,\n			);\n\n			if ($thing === null && $form !== \'\')\n			{\n				$out[] = parse_form($form);\n			}\n			else\n			{\n				$out[] = parse($thing);\n			}\n\n			$rah_repeat = $parent;\n		}\n\n		unset($rah_repeat);\n		return doWrap($out, $wraptag, $break, $class);\n	}\n\n/**\n * Returns the current value.\n *\n * @param  array  $atts\n * @return string\n */\n\n	function rah_repeat_value($atts)\n	{\n		global $rah_repeat;\n\n		extract(lAtts(array(\n			\'escape\' => 0,\n			\'index\'  => 0,\n		), $atts));\n\n		if (!isset($rah_repeat[\'string\']))\n		{\n			return \'\';\n		}\n\n		if ($index)\n		{\n			return $rah_repeat[\'index\'];\n		}\n\n		if ($escape)\n		{\n			return txpspecialchars($rah_repeat[\'string\']);\n		}\n\n		return $rah_repeat[\'string\'];\n	}\n\n/**\n * Checks if the item is the first.\n *\n * @param  array  $atts\n * @param  string $thing\n * @return string\n */\n\n	function rah_repeat_if_first($atts, $thing = \'\')\n	{\n		global $rah_repeat;\n		return parse(EvalElse($thing, $rah_repeat[\'first\'] == true));\n	}\n\n/**\n * Checks if the item is the last.\n *\n * @param  array  $atts\n * @param  string $thing\n * @return string\n */\n\n	function rah_repeat_if_last($atts, $thing = \'\')\n	{\n		global $rah_repeat;\n		return parse(EvalElse($thing, $rah_repeat[\'last\'] == true));\n	}','\n\n/**\n * Rah_repeat plugin for Textpattern CMS.\n *\n * @author  Jukka Svahn\n * @license GNU GPLv2\n * @link    http://rahforum.biz/plugins/rah_repeat\n *\n * Copyright (C) 2013 Jukka Svahn http://rahforum.biz\n * Licensed under GNU Genral Public License version 2\n * http://www.gnu.org/licenses/gpl-2.0.html\n */\n\n/**\n * Creates a list from the given values.\n *\n * @param  array  $atts\n * @param  string $thing\n * @return string\n */\n\n	function rah_repeat($atts, $thing = null)\n	{\n		global $rah_repeat, $variable;\n\n		extract(lAtts(array(\n			\'form\'       => \'\',\n			\'delimiter\'  => \',\',\n			\'value\'      => \'\',\n			\'limit\'      => null,\n			\'offset\'     => 0,\n			\'wraptag\'    => \'\',\n			\'break\'      => \'\',\n			\'class\'      => \'\',\n			\'duplicates\' => 0,\n			\'sort\'       => \'\',\n			\'exclude\'    => null,\n			\'trim\'       => 1,\n			\'range\'      => \'\',\n			\'assign\'     => null,\n		), $atts));\n\n		if ($range && strpos($range, \',\'))\n		{\n			$values = call_user_func_array(\'range\', do_list($range));\n		}\n		else\n		{\n			$values = explode($delimiter, $value);\n		}\n\n		if ($trim)\n		{\n			$values = doArray($values, \'trim\');\n		}\n\n		if ($duplicates)\n		{\n			$values = array_unique($values);\n		}\n\n		if ($exclude !== null)\n		{\n			$exclude = explode($delimiter, $exclude);\n\n			if ($trim)\n			{\n				$exclude = doArray($exclude, \'trim\');\n			}\n\n			$values = array_diff($values, $exclude);\n		}\n\n		if ($sort && $sort = doArray(doArray(explode(\' \', trim($sort), 2), \'trim\'), \'strtoupper\'))\n		{\n			if (count($sort) == 2 && defined(\'SORT_\'.$sort[0]))\n			{\n				sort($values, constant(\'SORT_\'.$sort[0]));\n			}\n\n			if (end($sort) == \'DESC\')\n			{\n				$values = array_reverse($values);\n			}\n		}\n\n		$values = array_slice($values, $offset, $limit);\n\n		if ($assign !== null)\n		{\n			foreach (do_list($assign) as $key => $var)\n			{\n				$value = isset($values[$key]) ? $values[$key] : \'\';\n				$variable[$var] = $value;\n			}\n		}\n\n		if (!$values || ($thing === null && $form === \'\'))\n		{\n			return \'\';\n		}\n\n		$count = count($values);\n\n		$i = 0;\n		$out = array();\n\n		foreach ($values as $string)\n		{\n			$i++;\n			$parent = $rah_repeat;\n\n			$rah_repeat = array(\n				\'string\' => $string,\n				\'first\'  => ($i == 1),\n				\'last\'   => ($count == $i),\n				\'index\'  => $i - 1,\n			);\n\n			if ($thing === null && $form !== \'\')\n			{\n				$out[] = parse_form($form);\n			}\n			else\n			{\n				$out[] = parse($thing);\n			}\n\n			$rah_repeat = $parent;\n		}\n\n		unset($rah_repeat);\n		return doWrap($out, $wraptag, $break, $class);\n	}\n\n/**\n * Returns the current value.\n *\n * @param  array  $atts\n * @return string\n */\n\n	function rah_repeat_value($atts)\n	{\n		global $rah_repeat;\n\n		extract(lAtts(array(\n			\'escape\' => 0,\n			\'index\'  => 0,\n		), $atts));\n\n		if (!isset($rah_repeat[\'string\']))\n		{\n			return \'\';\n		}\n\n		if ($index)\n		{\n			return $rah_repeat[\'index\'];\n		}\n\n		if ($escape)\n		{\n			return txpspecialchars($rah_repeat[\'string\']);\n		}\n\n		return $rah_repeat[\'string\'];\n	}\n\n/**\n * Checks if the item is the first.\n *\n * @param  array  $atts\n * @param  string $thing\n * @return string\n */\n\n	function rah_repeat_if_first($atts, $thing = \'\')\n	{\n		global $rah_repeat;\n		return parse(EvalElse($thing, $rah_repeat[\'first\'] == true));\n	}\n\n/**\n * Checks if the item is the last.\n *\n * @param  array  $atts\n * @param  string $thing\n * @return string\n */\n\n	function rah_repeat_if_last($atts, $thing = \'\')\n	{\n		global $rah_repeat;\n		return parse(EvalElse($thing, $rah_repeat[\'last\'] == true));\n	}','29f4f9bcab9009f28f731a6527065872',0,5,0),
	('mck_snippet',1,'Casalegno Marco','http://www.kreatore.it','1.6','Easy snippets text for public pages','	<h1>Mck_snippets</h1>\n\n	<p>This plugin allow user insert into in a page some snippets text.</p>\n\n	<h2>Features</h2>\n\n	<p>If you need static text, you can use article. But if you wont that article was separated from static text, you can use snippets text.<br />\nA simple tag, <code>&lt;txp:mck_snippet /&gt;</code> allow you to show a static text wherever you wont. There is no differet between pages or forms. There are no categories, no tags, no associated images. Only text.</p>\n\n	<p>The principal function is <code>mck_snippet</code> that call the $Snippet global array with all record take from the db.<br />\nInto a <em><span class=\"caps\">CONTENT</span></em> tab there is a one for manage all Snippets. For each Snippets you can chose to parse with Textile or Use only Brake at Newline ot unthouch the text.</p>\n\n	<h2>Usage</h2>\n\n	<p>After installing &amp; activating the plugin, you can now use &lt;txp:mck_snippet /&gt; to call all defined snippets text created into a <em>Snippet</em> page under <em>Content</em> tab.<br />\np. In <em>Snippet</em> page you can create new snippet, edit or delete one that already exist.</p>\n\n	<h2>List of Tags and attributes</h2>\n\n	<h3><code>&lt;txp:mck_snippet /&gt;</code></h3>\n\n	<p>Print the <em>Body</em> value of Snippet</p>\n\n	<h4>Attributes</h4>\n\n	<ul>\n		<li><strong>id:</strong> unique ID of snippet</li>\n		<li>title:* unique <span class=\"caps\">TITLE</span> of snippet</li>\n		<li><strong>wraptag:</strong> <span class=\"caps\">HTML</span> wraptag</li>\n		<li><strong>wrap_id:</strong> wraptag&#8217;s <span class=\"caps\">HTML</span> id</li>\n		<li><strong>class:</strong> wraptag&#8217;s <span class=\"caps\">HTML</span> class</li>\n	</ul>\n\n	<h2>Textpack</h2>\n\n	<p>I have pre-installed english and Italian textpack.<br />\nIf you want send me your textpack, email me at <a href=\"mailto:info@kreatore.it\" rel=\"nofollow\">info@kreatore.it</a></p>\n\n<pre><code>#@public\n#@language en-gb\nmck_snippet_tab =&gt; Snippets\nmck_snippet_markup =&gt; Snippet Markup\nmck_snippet_add =&gt; Add new Snippet\nmck_snippet_code =&gt; Snippet Code\nmck_snippet_no =&gt; No registred snippets\n</code></pre>\n\n	<h2>Example</h2>\n\n<pre><code>&lt;txp:mck_snippet title=\'test\'/&gt;\n</code></pre>\n\n	<h3>Changelog</h3>\n\n	<ul>\n		<li>1.6 Redesign <span class=\"caps\">HTML</span> for <span class=\"caps\">TXP</span> 4.5, add user privs</li>\n		<li>1.5 Fix snippet murkup selected option and add textpack value in help. Help in english and italiano.</li>\n		<li>1.4 Add Status change property and add <em>doTag()</em> function on return data</li>\n		<li>1.3 Solved some issuse on mysql query</li>\n		<li>1.2 Add Create New in Edito Method</li>\n		<li>1.1 First Release</li>\n	</ul>','// ----------------------------------------------------\n// Admin side plugin\n// ----------------------------------------------------\nif (txpinterface == \'admin\'){\nadd_privs(\'mck_snippet\', \'1,2,3,4,5\');\nadd_privs(\'mck_snippet.edit\',\'1,2,3\');\nadd_privs(\'mck_snippet.edit.own\',\'1,2,3,4\');\nregister_tab(\'content\', \'mck_snippet\', \"Snippets\");\nregister_callback(\'mck_snippets_page\', \'mck_snippet\');\n// Richiamo la funzione di inserimento delle tabelle di chat\nregister_callback(\"mck_snippets_install\", \"plugin_lifecycle.mck_snippet\");\n}\n// Install table and privs\n//------------------------------------------------------\nfunction mck_snippets_install($ev,$st){\nglobal $plugins,$plugins_ver;\n  if($st==\"installed\"){\n  	//create table\n  	//from 1.6 ver table change his columns names.\n  	//so, before it create old table, than it alter old names\n		safe_query(\"CREATE TABLE IF NOT EXISTS \".PFX.\"mck_snippet (\n		ID int(11) unsigned NOT NULL AUTO_INCREMENT,\n	 	Title varchar(255) CHARACTER SET utf8 NOT NULL,\n	 	Body mediumtext CHARACTER SET utf8 NOT NULL,\n	 	Body_html mediumtext CHARACTER SET utf8 NOT NULL,\n	 	Textile int(2) NOT NULL DEFAULT \'1\',\n	 	LastMod datetime NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n	 	Status int(2) NOT NULL DEFAULT \'1\',\n	 	AuthorID varchar(64) CHARACTER SET utf8 NOT NULL,\n	 	Lang varchar(16) CHARACTER SET utf8 NOT NULL,\n	 	PRIMARY KEY (ID),\n	 	FULLTEXT KEY searching (Body)\n		) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE utf8_general_ci\");\n\n		safe_alter(\"mck_snippet\",\"\n		CHANGE ID snipID INT( 11 ) UNSIGNED NOT NULL AUTO_INCREMENT,\n		CHANGE Title snipTitle varchar(255) CHARACTER SET utf8 NOT NULL,\n		CHANGE Body snipBody MEDIUMTEXT CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n		CHANGE Body_html snipBody_html mediumtext CHARACTER SET utf8 NOT NULL,\n	  CHANGE Textile snipTextile int(2) NOT NULL DEFAULT \'1\',\n	  CHANGE LastMod snipLastMod datetime NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n	  CHANGE Status snipStatus int(2) NOT NULL DEFAULT \'1\',\n	  CHANGE AuthorID snipAuthorID varchar(64) CHARACTER SET utf8 NOT NULL,\n	  CHANGE Lang snipLang varchar(16) CHARACTER SET utf8 NOT NULL,\n	  DROP PRIMARY KEY , ADD PRIMARY KEY ( snipID ),\n	  DROP INDEX searching , ADD FULLTEXT `searching` (`snipBody`)\n		\");\n\n	}\n\n  if($st==\"deleted\")\n   safe_query(\'DROP TABLE `\'.PFX.\'mck_snippet`\');\n}\n// Evalute steps and call function\n//------------------------------------------------------\nfunction mck_snippets_page() {\n	global $step,$mck_snippet_vars;\n\n	//define mck_snippets_vars\n	$GLOBALS[\'mck_snippet_vars\']= array(\'snipID\', \'snipTitle\', \'snipBody\',\'snipBody_html\',\'snipTextile\',\'snipLastMod\',\'snipStatus\',\'snipAuthorID\',\'snipLang\',\'edit_method\',\'selected\',\'hidden\');\n\n  //set available steps list\n	$available_steps = array(\n			\'mck_snippets_list\'          => false,\n			\'mck_snippets_edit\'          => false,\n			\'mck_snippets_save\'          => true,\n			\'mck_snippets_delete\'        => true,\n			\'link_change_pageby\' => true,\n			\'mck_snippets_multi_edit\'    => true\n		);\n\n  // check if step is in avaible_list else show list\n	if ($step && bouncer($step, $available_steps)) {\n			$step();\n		} else {\n			mck_snippets_list();\n		}\n}\n// get all layout from txp 4.5 $/textpattern/lib/txp_link.php\n//------------------------------------------------------\nfunction mck_snippets_list($message=\'\',$edit_id=\'\'){\n  global $prefs,$event,$step;\n\n	pagetop(gTxt(\'mck_snippet_tab\'), $message);\n  //create header and button to add snippet\n  echo \'<h1 class=\"txp-heading\">\'.gTxt(\'mck_snippet_tab\').\'</h1>\';\n	echo \'<div id=\"\'.$event.\'_control\" class=\"txp-control-panel\">\';\n	if (has_privs(\'mck_snippet.edit\')){\n		echo graf(\n			sLink(\'mck_snippet\', \'mck_snippets_edit\', gTxt(\'mck_snippet_add\'))\n		, \' class=\"txp-buttons\"\');\n	}\n	echo \'</div>\';\n	$total = getCount(\'mck_snippet\',\'1\');\n	//if there is no results\n	if ($total < 1){\n		echo n.graf(gTxt(\'mck_snippet_no\'), \' class=\"indicator\"\').\'</div>\';\n		return;\n	}\n  //set status\n  $statuses = array(1 => gTxt(\'draft\'),2 => gTxt(\'hidden\'),3 => gTxt(\'pending\'),4 => gTxt(\'live\'),5 => gTxt(\'sticky\'),);\n  // search snippets\n  $rs=safe_rows_start(\'*\',\'mck_snippet\',\"1=1\");\n  if($rs){\n  	//initialize div and table\n  	echo n.\'<div id=\"\'.$event.\'_container\" class=\"txp-container\">\';\n		echo n.n.\'<form action=\"index.php\" id=\"mck_snippets_form\" class=\"multi_edit_form\" method=\"post\" name=\"longform\">\',\n		n.\'<div class=\"txp-listtables\">\'.\n		n.startTable(\'\', \'\', \'txp-list\').\n		n.\'<thead>\'.// insert table headers\n		assHead(fInput(\'checkbox\', \'select_all\', 0, \'\', \'\', \'\', \'\', \'\', \'select_all\'),\'id\',gtxt(\'article_modified\'),gtxt(\'title\'),gtxt(\'body\'),gTxt(\'language\'),gTxt(\'author\'),gTxt(\'status\'),gTxt(\'mck_snippet_code\')).\n		n.\'</thead>\';\n		echo \'<tbody>\';\n		while ($s = nextRow($rs)){\n		 	echo tr(\n		 		n.td(fInput(\'checkbox\', \'selected[]\', $s[\'snipID\']), \'\', \'multi-edit\').\n				n.td($s[\'snipID\']).\n    		n.td($s[\'snipLastMod\']).\n    		n.td(\'<a href=\"?event=mck_snippet&amp;step=mck_snippets_edit&amp;snipID=\'.$s[\'snipID\'].\'\">\'.$s[\'snipTitle\'].\'</a>\').\n    		n.td(substr($s[\'snipBody\'],0, 40)).\n    		n.td($s[\'snipLang\']).\n    		n.td($s[\'snipAuthorID\']).\n    		n.td(\'<a href=\"?event=mck_snippet&amp;step=mck_snippets_multi_edit&amp;edit_method=status&amp;Status=\'.$s[\'snipStatus\'].\'&amp;ID=\'.$s[\'snipID\'].\'\">\'.$statuses[$s[\'snipStatus\']].\'</a>\').\n    		n.td(\'<input readonly=\"readonly\" class=\"edit\" value=\"&lt;txp:mck_snippet title=\\\'\'.$s[\'snipTitle\'].\'\\\'/&gt;\" style=\"width:95%;\"/>\')\n    	).n;\n		}\n		//set methods for multiedit form\n		//fInput($type,$name,$value,$class=\'\',$title=\'\',$onClick=\'\',$size=\'\',$tab=\'\',$id=\'\',$disabled = false,$required = false)\n		$methods= array(\'deleted\' => gTxt(\'delete\'),	//\'edit\' => gTxt(\'edit\'),\n		);\n		echo \'</tbody>\'.\n			n. endTable().\n			n. \'</div>\'.\n 	    n.multi_edit($methods, \'mck_snippet\',\'mck_snippets_multi_edit\').\n			n. tInput().\n			n. \'</form>\'.\n			n. \'</div>\';\n  }\n}\n// create new or edit existing snippets\n//------------------------------------------------------\nfunction mck_snippets_edit($ID=\'\',$message=\'\'){\n  global $mck_snippet_vars, $event, $step, $txp_user,$prefs;\n\n	pagetop(gTxt(\'mck_snippet_tab\'), $message);\n	echo \'<div id=\"\'.$event.\'_container\" class=\"txp-container\">\';\n  extract(array_map(\'assert_string\', gpsa($mck_snippet_vars)));\n 	$snipID=(!empty($ID))?$ID:$snipID;\n	//check if is new or edit\n	$is_edit = ($snipID && $step == \'mck_snippets_edit\');\n	$rs = array();\n	if ($is_edit){\n		$id = assert_int($snipID);\n		$rs=safe_row(\'*\',\'mck_snippet\',\'snipID=\'.$id);\n		if ($rs){\n			extract($rs);\n			if (!has_privs(\'mck_snippet.edit\') && !($snipAuthorID == $txp_user && has_privs(\'mck_snippet.edit.own\'))){\n				mck_snippets_list(gTxt(\'restricted_area\'));\n				return;\n			}\n		}\n	}\n	if (has_privs(\'mck_snippet.edit\') || has_privs(\'mck_snippet.edit.own\')){\n		$caption = gTxt(($is_edit) ? \'edit\' : \'create_new\');\n		echo form(\n			\'<div class=\"txp-edit\">\'.n.\n			hed($caption, 2).n.\n			inputLabel(\'snipTitle\',fInput(\'text\', \'snipTitle\', $snipTitle, \'\', \'\', \'\', INPUT_REGULAR, \'\', \'snipTitle\'),\'title\',\'<small>(no-space-allowed)</small>\').n.\n			inputLabel(\'snipBody\', \'<textarea id=\"snipBody\" name=\"snipBody\" cols=\"\'.INPUT_REGULAR.\'\" rows=\"\'.INPUT_SMALL.\'\">\'.txpspecialchars($snipBody).\'</textarea>\', \'body\', \'body\', \'\', \'\').n.\n			inputLabel(\'snipTextile\',pref_text(\'snipTextile\',(($is_edit)?$snipTextile:$prefs[\'use_textile\']), \'textile\'), \'mck_snippet_markup\').n.\n			graf(fInput(\'submit\', \'\', gTxt(\'save\'), \'publish\')).\n			pluggable_ui(\'mck_snippets_ui\', \'extend_snippets_form\', \'\', $rs).n.\n			sInput(\'mck_snippets_multi_edit\').\n			eInput(\'mck_snippet\').\n			(($is_edit)?hInput(\'snipID\',$id).hInput(\'edit_method\',\'updated\'):hInput(\'edit_method\',\'saved\')).\n			\'</div>\'\n		, \'\', \'\', \'post\', \'edit-form\', \'\', \'link_details\');\n	}\n	echo \'</div>\';\n}\n\n/*old------------------------\n\n			  .n.graf(gTxt(\'author\').\': \'.@$snippet[\'AuthorID\'])\n			  .graf(gtxt(\'article_modified\').\': \'.@$snippet[\'LastMod\'])\n			  .graf(gtxt(\'language\').\': \'.@$snippet[\'Lang\'])\n\n}*/\n//------------------------------------------------------\nfunction mck_snippets_multi_edit(){\n  global $prefs,$txp_user,$mck_snippet_vars;\n\n  $snip = textile_easy(gpsa($mck_snippet_vars),$prefs[\'use_textile\']);\n  //print_r($snip);\n    switch($snip[\'edit_method\']){\n    case \'edit\':\n      return mck_snippets_edit($snip[\'selected\'][0]);\n      break;\n    case \'deleted\':\n      foreach ($snip[\'selected\'] as $id){\n				$id = assert_int($id);\n				if(!safe_delete(\'mck_snippet\', \"snipID = $id\"))\n					return gTxt(\'error\');\n      }\n      break;\n    case \'updated\':\n      safe_update(\'mck_snippet\',\"snipTitle=\'$snip[snipTitle]\',snipBody=\'$snip[snipBody]\',snipBody_html=\'$snip[snipBody_html]\',snipTextile=$snip[snipTextile],snipLastMod=now()\", \"snipID=$snip[snipID]\");\n      break;\n    case \'saved\':\n      safe_insert(\'mck_snippet\',\"snipLang=\'$prefs[language]\',snipTitle=\'$snip[snipTitle]\',snipLastMod=now(),snipStatus=4,snipBody=\'$snip[snipBody]\',snipBody_html=\'$snip[snipBody_html]\',snipTextile=$snip[snipTextile],snipAuthorID=\'$txp_user\'\");\n      break;\n    case \'status\':\n      $newstatus=($snip[\'snipStatus\']==4)?2:4;\n      safe_update(\'mck_snippet\',\"snipStatus=$newstatus\", \"snipID=$snip[snipID]\") ;\n      break;\n  }\nmck_snippets_list(\'Snippets \'.gtxt($snip[\'edit_method\']));\n}\n//------------------------------------------------------\nfunction textile_easy($incoming, $use_textile){\nglobal $txpcfg;\n$incoming[\'snipTitle\'] = strtolower(sanitizeForUrl($incoming[\'snipTitle\']));\ninclude_once txpath.\'/lib/classTextile.php\';\n$textile = new Textile();\nswitch ($incoming[\'snipTextile\']){\n    case 0:\n      $incoming[\'snipBody_html\'] = doSlash(trim($incoming[\'snipBody\']));\n      break;\n    case 1:\n      $incoming[\'snipBody_html\'] = doSlash($textile->TextileThis($incoming[\'snipBody\']));\n      break;\n    case 2:\n      $incoming[\'snipBody_html\'] = doSlash(nl2br(trim($incoming[\'snipBody\'])));\n      break;\n}\n$incoming[\'snipBody\']=doSlash($incoming[\'snipBody\']);\nreturn $incoming;\n}\n\n// ----------------------------------------------------\n// Public side plugin\n// ----------------------------------------------------\nif (txpinterface == \'public\'){\n  global $Snippets;\n  $snipp=safe_rows(\'snipID,snipTitle,snipBody_html\',\'mck_snippet\',\'snipStatus=4\');\n  foreach($snipp as $snip){\n    $Snippets[$snip[\'snipID\']]=$snip[\'snipBody_html\'];\n    $Snippets[$snip[\'snipTitle\']]=$snip[\'snipBody_html\'];\n  }\n}\n\n\n/**\n * Displays snippet text\n * @param array $atts\n * @param string $atts[id] Snippet id.\n * @param string $atts[title] Snippet univoqe title.\n * @param string $atts[wraptag] HTML Wraptag.\n * @param string $atts[wrap_id] Wraptag\' HTML id.\n * @param string $atts[class] Wraptag\'s HTML class.\n * @return string TEXTILE markup\n * <code>\n *		<txp:mck_snippet id=\"id\" title=\"snippet_title\" wraptag=\"htmlwrap\" class=\"wraptag_class\" wrap_id=\"wraptag_id\">\n * </code>\n */\nfunction mck_snippet($atts){\n  global $Snippets;\n  extract(lAtts(array(\n		\'id\'		=> \'\',\n		\'title\'		=> \'\',\n		\'wraptag\'		=> \'\',\n		\'class\'		=> \'\',\n		\'wrap_id\'		=> \'\',\n	), $atts));\n	if(!empty($id) && isset($Snippets[$id]))\n	return doTag($Snippets[$id], $wraptag, $class,\'\', $wrap_id);\n\n	if(!empty($title) && $Snippets[$title])\n        return doTag($Snippets[$title], $wraptag, $class,\'\', $wrap_id);\n}','// ----------------------------------------------------\n// Admin side plugin\n// ----------------------------------------------------\nif (txpinterface == \'admin\'){\nadd_privs(\'mck_snippet\', \'1,2,3,4,5\');\nadd_privs(\'mck_snippet.edit\',\'1,2,3\');\nadd_privs(\'mck_snippet.edit.own\',\'1,2,3,4\');\nregister_tab(\'content\', \'mck_snippet\', \"Snippets\");\nregister_callback(\'mck_snippets_page\', \'mck_snippet\');\n// Richiamo la funzione di inserimento delle tabelle di chat\nregister_callback(\"mck_snippets_install\", \"plugin_lifecycle.mck_snippet\");\n}\n// Install table and privs\n//------------------------------------------------------\nfunction mck_snippets_install($ev,$st){\nglobal $plugins,$plugins_ver;\n  if($st==\"installed\"){\n  	//create table\n  	//from 1.6 ver table change his columns names.\n  	//so, before it create old table, than it alter old names\n		safe_query(\"CREATE TABLE IF NOT EXISTS \".PFX.\"mck_snippet (\n		ID int(11) unsigned NOT NULL AUTO_INCREMENT,\n	 	Title varchar(255) CHARACTER SET utf8 NOT NULL,\n	 	Body mediumtext CHARACTER SET utf8 NOT NULL,\n	 	Body_html mediumtext CHARACTER SET utf8 NOT NULL,\n	 	Textile int(2) NOT NULL DEFAULT \'1\',\n	 	LastMod datetime NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n	 	Status int(2) NOT NULL DEFAULT \'1\',\n	 	AuthorID varchar(64) CHARACTER SET utf8 NOT NULL,\n	 	Lang varchar(16) CHARACTER SET utf8 NOT NULL,\n	 	PRIMARY KEY (ID),\n	 	FULLTEXT KEY searching (Body)\n		) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE utf8_general_ci\");\n\n		safe_alter(\"mck_snippet\",\"\n		CHANGE ID snipID INT( 11 ) UNSIGNED NOT NULL AUTO_INCREMENT,\n		CHANGE Title snipTitle varchar(255) CHARACTER SET utf8 NOT NULL,\n		CHANGE Body snipBody MEDIUMTEXT CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n		CHANGE Body_html snipBody_html mediumtext CHARACTER SET utf8 NOT NULL,\n	  CHANGE Textile snipTextile int(2) NOT NULL DEFAULT \'1\',\n	  CHANGE LastMod snipLastMod datetime NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n	  CHANGE Status snipStatus int(2) NOT NULL DEFAULT \'1\',\n	  CHANGE AuthorID snipAuthorID varchar(64) CHARACTER SET utf8 NOT NULL,\n	  CHANGE Lang snipLang varchar(16) CHARACTER SET utf8 NOT NULL,\n	  DROP PRIMARY KEY , ADD PRIMARY KEY ( snipID ),\n	  DROP INDEX searching , ADD FULLTEXT `searching` (`snipBody`)\n		\");\n\n	}\n\n  if($st==\"deleted\")\n   safe_query(\'DROP TABLE `\'.PFX.\'mck_snippet`\');\n}\n// Evalute steps and call function\n//------------------------------------------------------\nfunction mck_snippets_page() {\n	global $step,$mck_snippet_vars;\n\n	//define mck_snippets_vars\n	$GLOBALS[\'mck_snippet_vars\']= array(\'snipID\', \'snipTitle\', \'snipBody\',\'snipBody_html\',\'snipTextile\',\'snipLastMod\',\'snipStatus\',\'snipAuthorID\',\'snipLang\',\'edit_method\',\'selected\',\'hidden\');\n\n  //set available steps list\n	$available_steps = array(\n			\'mck_snippets_list\'          => false,\n			\'mck_snippets_edit\'          => false,\n			\'mck_snippets_save\'          => true,\n			\'mck_snippets_delete\'        => true,\n			\'link_change_pageby\' => true,\n			\'mck_snippets_multi_edit\'    => true\n		);\n\n  // check if step is in avaible_list else show list\n	if ($step && bouncer($step, $available_steps)) {\n			$step();\n		} else {\n			mck_snippets_list();\n		}\n}\n// get all layout from txp 4.5 $/textpattern/lib/txp_link.php\n//------------------------------------------------------\nfunction mck_snippets_list($message=\'\',$edit_id=\'\'){\n  global $prefs,$event,$step;\n\n	pagetop(gTxt(\'mck_snippet_tab\'), $message);\n  //create header and button to add snippet\n  echo \'<h1 class=\"txp-heading\">\'.gTxt(\'mck_snippet_tab\').\'</h1>\';\n	echo \'<div id=\"\'.$event.\'_control\" class=\"txp-control-panel\">\';\n	if (has_privs(\'mck_snippet.edit\')){\n		echo graf(\n			sLink(\'mck_snippet\', \'mck_snippets_edit\', gTxt(\'mck_snippet_add\'))\n		, \' class=\"txp-buttons\"\');\n	}\n	echo \'</div>\';\n	$total = getCount(\'mck_snippet\',\'1\');\n	//if there is no results\n	if ($total < 1){\n		echo n.graf(gTxt(\'mck_snippet_no\'), \' class=\"indicator\"\').\'</div>\';\n		return;\n	}\n  //set status\n  $statuses = array(1 => gTxt(\'draft\'),2 => gTxt(\'hidden\'),3 => gTxt(\'pending\'),4 => gTxt(\'live\'),5 => gTxt(\'sticky\'),);\n  // search snippets\n  $rs=safe_rows_start(\'*\',\'mck_snippet\',\"1=1\");\n  if($rs){\n  	//initialize div and table\n  	echo n.\'<div id=\"\'.$event.\'_container\" class=\"txp-container\">\';\n		echo n.n.\'<form action=\"index.php\" id=\"mck_snippets_form\" class=\"multi_edit_form\" method=\"post\" name=\"longform\">\',\n		n.\'<div class=\"txp-listtables\">\'.\n		n.startTable(\'\', \'\', \'txp-list\').\n		n.\'<thead>\'.// insert table headers\n		assHead(fInput(\'checkbox\', \'select_all\', 0, \'\', \'\', \'\', \'\', \'\', \'select_all\'),\'id\',gtxt(\'article_modified\'),gtxt(\'title\'),gtxt(\'body\'),gTxt(\'language\'),gTxt(\'author\'),gTxt(\'status\'),gTxt(\'mck_snippet_code\')).\n		n.\'</thead>\';\n		echo \'<tbody>\';\n		while ($s = nextRow($rs)){\n		 	echo tr(\n		 		n.td(fInput(\'checkbox\', \'selected[]\', $s[\'snipID\']), \'\', \'multi-edit\').\n				n.td($s[\'snipID\']).\n    		n.td($s[\'snipLastMod\']).\n    		n.td(\'<a href=\"?event=mck_snippet&amp;step=mck_snippets_edit&amp;snipID=\'.$s[\'snipID\'].\'\">\'.$s[\'snipTitle\'].\'</a>\').\n    		n.td(substr($s[\'snipBody\'],0, 40)).\n    		n.td($s[\'snipLang\']).\n    		n.td($s[\'snipAuthorID\']).\n    		n.td(\'<a href=\"?event=mck_snippet&amp;step=mck_snippets_multi_edit&amp;edit_method=status&amp;Status=\'.$s[\'snipStatus\'].\'&amp;ID=\'.$s[\'snipID\'].\'\">\'.$statuses[$s[\'snipStatus\']].\'</a>\').\n    		n.td(\'<input readonly=\"readonly\" class=\"edit\" value=\"&lt;txp:mck_snippet title=\\\'\'.$s[\'snipTitle\'].\'\\\'/&gt;\" style=\"width:95%;\"/>\')\n    	).n;\n		}\n		//set methods for multiedit form\n		//fInput($type,$name,$value,$class=\'\',$title=\'\',$onClick=\'\',$size=\'\',$tab=\'\',$id=\'\',$disabled = false,$required = false)\n		$methods= array(\'deleted\' => gTxt(\'delete\'),	//\'edit\' => gTxt(\'edit\'),\n		);\n		echo \'</tbody>\'.\n			n. endTable().\n			n. \'</div>\'.\n 	    n.multi_edit($methods, \'mck_snippet\',\'mck_snippets_multi_edit\').\n			n. tInput().\n			n. \'</form>\'.\n			n. \'</div>\';\n  }\n}\n// create new or edit existing snippets\n//------------------------------------------------------\nfunction mck_snippets_edit($ID=\'\',$message=\'\'){\n  global $mck_snippet_vars, $event, $step, $txp_user,$prefs;\n\n	pagetop(gTxt(\'mck_snippet_tab\'), $message);\n	echo \'<div id=\"\'.$event.\'_container\" class=\"txp-container\">\';\n  extract(array_map(\'assert_string\', gpsa($mck_snippet_vars)));\n 	$snipID=(!empty($ID))?$ID:$snipID;\n	//check if is new or edit\n	$is_edit = ($snipID && $step == \'mck_snippets_edit\');\n	$rs = array();\n	if ($is_edit){\n		$id = assert_int($snipID);\n		$rs=safe_row(\'*\',\'mck_snippet\',\'snipID=\'.$id);\n		if ($rs){\n			extract($rs);\n			if (!has_privs(\'mck_snippet.edit\') && !($snipAuthorID == $txp_user && has_privs(\'mck_snippet.edit.own\'))){\n				mck_snippets_list(gTxt(\'restricted_area\'));\n				return;\n			}\n		}\n	}\n	if (has_privs(\'mck_snippet.edit\') || has_privs(\'mck_snippet.edit.own\')){\n		$caption = gTxt(($is_edit) ? \'edit\' : \'create_new\');\n		echo form(\n			\'<div class=\"txp-edit\">\'.n.\n			hed($caption, 2).n.\n			inputLabel(\'snipTitle\',fInput(\'text\', \'snipTitle\', $snipTitle, \'\', \'\', \'\', INPUT_REGULAR, \'\', \'snipTitle\'),\'title\',\'<small>(no-space-allowed)</small>\').n.\n			inputLabel(\'snipBody\', \'<textarea id=\"snipBody\" name=\"snipBody\" cols=\"\'.INPUT_REGULAR.\'\" rows=\"\'.INPUT_SMALL.\'\">\'.txpspecialchars($snipBody).\'</textarea>\', \'body\', \'body\', \'\', \'\').n.\n			inputLabel(\'snipTextile\',pref_text(\'snipTextile\',(($is_edit)?$snipTextile:$prefs[\'use_textile\']), \'textile\'), \'mck_snippet_markup\').n.\n			graf(fInput(\'submit\', \'\', gTxt(\'save\'), \'publish\')).\n			pluggable_ui(\'mck_snippets_ui\', \'extend_snippets_form\', \'\', $rs).n.\n			sInput(\'mck_snippets_multi_edit\').\n			eInput(\'mck_snippet\').\n			(($is_edit)?hInput(\'snipID\',$id).hInput(\'edit_method\',\'updated\'):hInput(\'edit_method\',\'saved\')).\n			\'</div>\'\n		, \'\', \'\', \'post\', \'edit-form\', \'\', \'link_details\');\n	}\n	echo \'</div>\';\n}\n\n/*old------------------------\n\n			  .n.graf(gTxt(\'author\').\': \'.@$snippet[\'AuthorID\'])\n			  .graf(gtxt(\'article_modified\').\': \'.@$snippet[\'LastMod\'])\n			  .graf(gtxt(\'language\').\': \'.@$snippet[\'Lang\'])\n\n}*/\n//------------------------------------------------------\nfunction mck_snippets_multi_edit(){\n  global $prefs,$txp_user,$mck_snippet_vars;\n\n  $snip = textile_easy(gpsa($mck_snippet_vars),$prefs[\'use_textile\']);\n  //print_r($snip);\n    switch($snip[\'edit_method\']){\n    case \'edit\':\n      return mck_snippets_edit($snip[\'selected\'][0]);\n      break;\n    case \'deleted\':\n      foreach ($snip[\'selected\'] as $id){\n				$id = assert_int($id);\n				if(!safe_delete(\'mck_snippet\', \"snipID = $id\"))\n					return gTxt(\'error\');\n      }\n      break;\n    case \'updated\':\n      safe_update(\'mck_snippet\',\"snipTitle=\'$snip[snipTitle]\',snipBody=\'$snip[snipBody]\',snipBody_html=\'$snip[snipBody_html]\',snipTextile=$snip[snipTextile],snipLastMod=now()\", \"snipID=$snip[snipID]\");\n      break;\n    case \'saved\':\n      safe_insert(\'mck_snippet\',\"snipLang=\'$prefs[language]\',snipTitle=\'$snip[snipTitle]\',snipLastMod=now(),snipStatus=4,snipBody=\'$snip[snipBody]\',snipBody_html=\'$snip[snipBody_html]\',snipTextile=$snip[snipTextile],snipAuthorID=\'$txp_user\'\");\n      break;\n    case \'status\':\n      $newstatus=($snip[\'snipStatus\']==4)?2:4;\n      safe_update(\'mck_snippet\',\"snipStatus=$newstatus\", \"snipID=$snip[snipID]\") ;\n      break;\n  }\nmck_snippets_list(\'Snippets \'.gtxt($snip[\'edit_method\']));\n}\n//------------------------------------------------------\nfunction textile_easy($incoming, $use_textile){\nglobal $txpcfg;\n$incoming[\'snipTitle\'] = strtolower(sanitizeForUrl($incoming[\'snipTitle\']));\ninclude_once txpath.\'/lib/classTextile.php\';\n$textile = new Textile();\nswitch ($incoming[\'snipTextile\']){\n    case 0:\n      $incoming[\'snipBody_html\'] = doSlash(trim($incoming[\'snipBody\']));\n      break;\n    case 1:\n      $incoming[\'snipBody_html\'] = doSlash($textile->TextileThis($incoming[\'snipBody\']));\n      break;\n    case 2:\n      $incoming[\'snipBody_html\'] = doSlash(nl2br(trim($incoming[\'snipBody\'])));\n      break;\n}\n$incoming[\'snipBody\']=doSlash($incoming[\'snipBody\']);\nreturn $incoming;\n}\n\n// ----------------------------------------------------\n// Public side plugin\n// ----------------------------------------------------\nif (txpinterface == \'public\'){\n  global $Snippets;\n  $snipp=safe_rows(\'snipID,snipTitle,snipBody_html\',\'mck_snippet\',\'snipStatus=4\');\n  foreach($snipp as $snip){\n    $Snippets[$snip[\'snipID\']]=$snip[\'snipBody_html\'];\n    $Snippets[$snip[\'snipTitle\']]=$snip[\'snipBody_html\'];\n  }\n}\n\n\n/**\n * Displays snippet text\n * @param array $atts\n * @param string $atts[id] Snippet id.\n * @param string $atts[title] Snippet univoqe title.\n * @param string $atts[wraptag] HTML Wraptag.\n * @param string $atts[wrap_id] Wraptag\' HTML id.\n * @param string $atts[class] Wraptag\'s HTML class.\n * @return string TEXTILE markup\n * <code>\n *		<txp:mck_snippet id=\"id\" title=\"snippet_title\" wraptag=\"htmlwrap\" class=\"wraptag_class\" wrap_id=\"wraptag_id\">\n * </code>\n */\nfunction mck_snippet($atts){\n  global $Snippets;\n  extract(lAtts(array(\n		\'id\'		=> \'\',\n		\'title\'		=> \'\',\n		\'wraptag\'		=> \'\',\n		\'class\'		=> \'\',\n		\'wrap_id\'		=> \'\',\n	), $atts));\n	if(!empty($id) && isset($Snippets[$id]))\n	return doTag($Snippets[$id], $wraptag, $class,\'\', $wrap_id);\n\n	if(!empty($title) && $Snippets[$title])\n        return doTag($Snippets[$title], $wraptag, $class,\'\', $wrap_id);\n}','18464050bc89f7ba49e2f7d5e8c3ce7b',1,9,2),
	('cbe_if_variable',1,'Claire Brione','http://www.clairebrione.com/','0.2','if_variable for a list of values','<div id=\"cbe-plugin-help\">\n<h1>cbe_if_variable</h1>\n<p>Evaluate your variables in a if_custom_fields manner.</p>\n<p>Provide two additionnal tags: <code>cbe_if_variable_exists</code> and <code>cbe_if_variable_empty</code></p>\n\n<h2>Table of contents</h2>\n<ul>\n  <li><a href=\"#dl-install-supp\">Download, installation, support</a></li>\n  <li><a href=\"#features\">Features</a></li>\n  <li><a href=\"#tags-and-attributes\">Tags and attributes</a></li>\n  <li><a href=\"#examples\">Examples</a></li>\n  <li><a href=\"#summary\">Summary</a></li>\n  <li><a href=\"#changelog\">Changelog</a></li>\n</ul>\n\n<h2 id=\"dl-install-supp\">Download, installation, support</h2>\n\n<p>Download from the <a href=\"http://www.clairebrione.com/cbe_if_variable\">plugin page</a>.</p>\n<p>Copy/paste in the Admin > Plugins tab to install or uninstall, activate or desactivate.</p>\n<p>Visit the <a href=\"http://forum.textpattern.com/viewtopic.php?id=36368\">forum thread</a> for support.</p>\n\n<h2 id=\"features\">Features</h2>\n\n<ul>\n  <li>verify the variable among a separated list of values (<a href=\"#ex-basic\">example</a>) ...</li>\n  <li>... or a single value like <code>&lt;txp:if_variable /&gt;</code></li>\n  <li>the delimiter can be changed (<a href=\"#ex-delim\">example</a>)</li>\n  <li>the variable can also hold a separated list, thus operates like <code>&lt;txp:if_custom_field /&gt;</code></li>\n  <li>supports <code>&lt;txp:else /&gt;</code></li>\n</ul>\n\n<h2 id=\"tags-and-attributes\">Tags and attributes</h2>\n\n<h3>&lt;txp:cbe_if_variable_exists&gt; ... &lt;/txp:cbe_if_variable_exists&gt;</h3>\n<p>Used as a container. Checks for existence only.</p>\n\n<table class=\"list\">\n  <tr>\n    <th>Attribute (<b>required</b>)</th> <th>Description and values</th> <th>Example</th>\n  </tr>\n  <tr>\n    <td><code><b>name</b></code></td>\n    <td>variable name</td>\n    <td><code>name=\"myvar\"</code></td>\n  </tr>\n</table>\n\n<h3>&lt;txp:cbe_if_variable_empty&gt; ... &lt;/txp:cbe_if_variable_empty&gt;</h3>\n<p>Used as a container. Checks for emptiness. For a relevant result the variable must exist though the plugin won\'t warn if not: it will just return <code>false</code>.</p>\n\n<table class=\"list\">\n  <tr>\n    <th>Attribute (<b>required</b>)</th> <th>Description and values</th> <th>Example</th>\n  </tr>\n  <tr>\n    <td><code><b>name</b></code></td>\n    <td>variable name</td>\n    <td><code>name=\"myvar\"</code></td>\n  </tr>\n</table>\n\n<h3>&lt;txp:cbe_if_variable&gt; ... &lt;/txp:cbe_if_variable&gt;</h3>\n<p>Used as a container. Checks existence, non emptiness, and values.</p>\n\n<table class=\"list\">\n  <tr>\n    <th>Attribute (bold if <b>required</b>)</th> <th>Description and values</th> <th>Example</th>\n  </tr>\n  <tr>\n    <td><code><b>name</b></code></td>\n    <td>variable name</td>\n    <td><code>name=\"myvar\"</code></td>\n  </tr>\n  <tr>\n    <td><code>separator</code></td>\n    <td>separator used in the variable if you want to consider it as a list of values. Defaults to <code>delim</code>.</td>\n    <td><code>separator=\"/\"</code></td>\n  </tr>\n  <tr>\n    <td><code>value</code></td>\n    <td>list of values to look into.<br />If ommitted, ignores all other parameters and returns true if the variable is defined and has a value (i.e. returns false if not defined or is empty).</td>\n    <td><code>value=\"val1,val2,val3\"</code></td>\n  </tr>\n  <tr>\n    <td><code>delim</code></td>\n    <td>delimiter for the list of values, defaults to comma (<code>,</code>)</td>\n    <td><code>delim=\"|\"</code></td>\n  </tr>\n  <tr>\n    <td><code>match</code></td>\n    <td>how to compare, defaults to <code>any</code>\n        <br /><b>any</b>: checks that at least one of the variable\'s term is present at any place in <code>value</code>\n        <br /><b>all</b>: checks that each variable\'s term appears at any place in <code>value</code> (this is nonreciprocical)\n        <br /><b>pattern</b>: try to match the variable\'s value with the regular expression given in <code>value</code>. <code>delim</code> and <code>separator</code> are ignored.\n        </td>\n    <td><code>match=\"all\"</code></td>\n  </tr>\n</table>\n\n<h2 id=\"examples\">Examples</h2>\n\n<ul>\n  <li><a href=\"#ex-basic\">Basic usage</a></li>\n  <li><a href=\"#ex-delim\">Change the delimiter</a></li>\n  <li><a href=\"#ex-practical\">Practical application</a></li>\n</ul>\n\n<h3 id=\"ex-basic\">Basic usage</h3>\n<pre><code>&lt;txp:cbe_if_variable name=\"myvar\" value=\"one,two,three\"&gt;\n  &lt;p&gt;Variable contains one, or two, or three&lt;/p&gt;\n&lt;txp:else /&gt;\n  &lt;p>Variable contains another value&lt;/p&gt;\n&lt;/txp:cbe_if_variable&gt;</code></pre>\n\n<p>... should be self explanatory.</p>\n\n<h3 id=\"ex-delim\">Change the delimiter</h3>\n<pre><code>&lt;txp:cbe_if_variable name=\"myvar\" value=\"four|five|six\" delim=\"|\"&gt;\n  &lt;p&gt;Variable contains four, or five, or six&lt;/p&gt;\n&lt;txp:else /&gt;\n  &lt;p>Variable contains another value&lt;/p&gt;\n&lt;/txp:cbe_if_variable&gt;</code></pre>\n\n<p>... should be obvious too.</p>\n\n<h3 id=\"ex-practical\">Practical application</h3>\n<pre><code>&lt;txp:variable name=\"public-sections\" value=\",about,contact\" /&gt;\n&lt;txp:article&gt;\n  &lt;txp:variable name=\"article-section\" value=\'&lt;txp:section /&gt;\' /&gt;\n  &lt;txp:cbe_if_variable name=\"article-section\" value=\'&lt;txp:variable name=\"public-sections\" /&gt;\'&gt;\n    ... display the article ...\n  &lt;txp:else /&gt;\n    ... display something else, or do nothing ...\n  &lt;/txp:cbe_if_variable&gt;\n&lt;/txp:article&gt;</code></pre>\n\n<p>Display an article if it belongs to an authorized section.</p>\n\n<h2 id=\"summary\">Summary</h2>\n<p>Here is what the three tags return in various situations (simplified syntax) :</p>\n\n<pre><code><b>(nothing)</b>\ncbe_if_variable_exists name=\"myvar\" .. FALSE\ncbe_if_variable_empty name=\"myvar\" ... FALSE\ncbe_if_variable name=\"myvar\" ......... FALSE\n\n===================\n\n<b>&lt;txp:variable name=\"myvar\"&gt;&lt;/txp:variable&gt; or &lt;txp:variable name=\"myvar\" value=\"\" /&gt;</b>\ncbe_if_variable_exists name=\"myvar\" ............. TRUE\ncbe_if_variable_empty name=\"myvar\" .............. TRUE\ncbe_if_variable name=\"myvar\" .................... FALSE\ncbe_if_variable name=\"myvar\" value=\"\" ........... TRUE\ncbe_if_variable name=\"myvar\" value=\"whatever\" ... FALSE\ncbe_if_variable name=\"myvar\" value=\",whatever\" .. TRUE\n\n===================\n\n<b>&lt;txp:variable name=\"myvar\" value=\"something\" /&gt;</b>\ncbe_if_variable_exists name=\"myvar\" .. TRUE\ncbe_if_variable_empty name=\"myvar\" ... FALSE\ncbe_if_variable name=\"myvar\" ......... TRUE\n                                                match = \"any\"     \"all\"\ncbe_if_variable name=\"myvar\" value=\"\" ................. FALSE ... FALSE\ncbe_if_variable name=\"myvar\" value=\"something\" ........ TRUE .... TRUE\ncbe_if_variable name=\"myvar\" value=\"something,other\" .. TRUE .... TRUE\ncbe_if_variable name=\"myvar\" value=\"anything,other\" ... FALSE ... FALSE\n\n===================\n\n<b>&lt;txp:variable name=\"myvar\" value=\"other, something\" /&gt;</b>\n                                                match = \"any\"     \"all\"\ncbe_if_variable name=\"myvar\" value=\"\" ................. FALSE ... FALSE\ncbe_if_variable name=\"myvar\" value=\"something\" ........ TRUE .... FALSE\nbut : cbe_if_variable name=\"myvar\" value=\"something\" separator=\"|\" is FALSE\ncbe_if_variable name=\"myvar\" value=\"something,other\" .. TRUE .... TRUE\ncbe_if_variable name=\"myvar\" value=\"other\" ............ TRUE .... FALSE\ncbe_if_variable name=\"myvar\" value=\"anything,other\" ... TRUE .... FALSE\n\n===================\n\n<b>&lt;txp:variable name=\"phrase\" value=\"here, there and everywhere\" /&gt;</b>\ncbe_if_variable name=\"phrase\" value=\"here, there and everywhere\" ........... TRUE\ncbe_if_variable name=\"phrase\" value=\"here, there and everywhere\" delim=\"\" .. TRUE\ncbe_if_variable name=\"phrase\" value=\"here there and everywhere\" ............ FALSE\ncbe_if_variable name=\"phrase\" value=\"here there and everywhere\" delim=\"\" ... FALSE\ncbe_if_variable name=\"phrase\" value=\"here there and everywhere\" delim=\"/\" .. FALSE\ncbe_if_variable name=\"phrase\" value=\"there\" match=\"pattern\" ................ TRUE\ncbe_if_variable name=\"phrase\" value=\"^there\" match=\"pattern\" ............... FALSE\n</code></pre>\n\n<h2 id=\"changelog\">Changelog</h2>\n\n<ul>\n  <li>01 Jul 11 - v0.2 -\n<br />\"match\" attribute added, thanks <a href=\"http://forum.textpattern.com/profile.php?id=15147\">sacripant</a> !\n<br />don\'t reinvent the wheel and use existing code\n<br />added examples\n</li>\n  <li>30 Jun 11 - v0.1.1 - Example fix</li>\n  <li>29 Jun 11 - v0.1 - Initial release</li>\n</ul>\n\n</div>\n<!-- *** BEGIN PLUGIN CSS *** -->\n<style type=\"text/css\">\n.list th{\n	text-align:left;\n	color:#fff;\n	background:#555;\n	padding:6px 16px 6px 4px;\n	border-right:1px solid #999;\n	font-weight:normal;\n}\n.list th a{\n	color:#fff;\n	display:block;\n}\n.list th h2{\n	margin:0;\n	font-size:11px;\n}\n.list td{\n	padding:6px 4px;\n}\n</style>\n<!-- *** END PLUGIN CSS *** -->\n','/*\r\n** cbe_if_variable v0.2\r\n** Claire Brione - http://www.clairebrione.com/\r\n**\r\n** 0.1 - 29 Jun 2011 - Initial release\r\n** 0.1.1 30 Jun 2011 - Example fix\r\n** 0.2 - 01 Jul 2011 - \"match\" attribute added, thanks sacripant !\r\n**                     don\'t reinvent the wheel and use existing code\r\n**                     added examples\r\n**\r\n ************************************************************************/\r\n\r\n/*\r\n** tool functions\r\n*/\r\nfunction _cbe_assert_variable( $name )\r\n{\r\n    if( empty( $name ) )\r\n    {\r\n        trigger_error(gTxt(\'variable_name_empty\'));\r\n        return( false ) ;\r\n    }\r\n\r\n    return( true ) ;\r\n}\r\n\r\nfunction _cbe_do_array( $val, $sep )\r\n{\r\n    return( $sep !==\'\' ? do_list( $val, $sep ) : array( trim( $val ) ) ) ;\r\n}\r\n\r\nfunction _cbe_ifvar_match_any( $params )\r\n{   /* ANY : search at least one \"needle\" term in \"value\" at any place */\r\n    extract( $params ) ;\r\n    return( count( array_intersect( _cbe_do_array( $needle, $separator )\r\n                                  , _cbe_do_array( $value , $delim )\r\n                                  ) ) > 0 ) ;\r\n}\r\n\r\nfunction _cbe_ifvar_match_all( $params )\r\n{   /* ALL : search all \"needle\" terms in \"value\" at any place, nonreciprocical */\r\n    extract( $params ) ;\r\n    $aNeedles = _cbe_do_array( $needle, $separator ) ;\r\n    return( count( array_intersect( $aNeedles, _cbe_do_array( $value, $delim ) ) ) == count( $aNeedles ) ) ;\r\n}\r\n\r\nfunction _cbe_ifvar_match_pattern( $params )\r\n{   /* PATTERN (regexp) : try to match \"needle\" term with \"value\" regexp */\r\n    /* from publish/taghandlers.php if_custom_field() */\r\n    extract( $params ) ;\r\n    $dlmPool = array(\'/\', \'@\', \'#\', \'~\', \'`\', \'|\', \'!\', \'%\');\r\n    $dlm = array_merge(array_diff($dlmPool, preg_split(\'//\', $value, -1)));\r\n    $dlm = (count($dlm) > 0) ? $dlm[0].$value.$dlm[0] : $value;\r\n    return( preg_match($dlm, $needle) ) ;\r\n}\r\n\r\n/*\r\n** cbe_if_variable\r\n** false if the variable doesn\'t exist (unset) or has no value (empty) or is none of the values provided\r\n** true in other cases,\r\n**             acts like if_variable or if_custom_field depending on matching type and comparated values\r\n*/\r\nfunction cbe_if_variable($atts, $thing = NULL)\r\n{\r\n    global $variable;\r\n    $options = \'all, any, pattern\' ;\r\n\r\n    extract(lAtts(array(\r\n        \'name\'      => \'\',\r\n        \'value\'     => \'\',\r\n        \'delim\'     => \',\',\r\n        \'match\'     => \'any\',\r\n        \'separator\' => \'delim\'\r\n    ), $atts));\r\n\r\n    if( ! _cbe_assert_variable( $name ) )\r\n        return ;\r\n\r\n    $separator = ($separator == \'delim\' ) ? $delim : $separator ;\r\n\r\n    if( isset( $variable[$name] ) )\r\n    {\r\n        if( ! isset( $atts[\'value\'] ) )\r\n            $x = ! empty( $variable[$name] ) ;\r\n        else\r\n        {\r\n            if( ! _cbe_ifvar_match_any( array( \'needle\' => $match, \'value\' => $options, \'delim\' => \',\', \'separator\' => \'\' ) ) )\r\n            {\r\n                trigger_error(gTxt(\'invalid_attribute_value\', array(\'{match}\' => $match)));\r\n                return( false ) ;\r\n            }\r\n\r\n            $needle = $variable[$name] ;\r\n            $x = call_user_func( \'_cbe_ifvar_match_\'.$match\r\n                                     , $match == \'pattern\'\r\n                                     ? compact( \"needle\", \"value\" )\r\n                                     : compact( \"needle\", \"value\", \"separator\", \"delim\" )\r\n                                     ) ;\r\n        }\r\n    }\r\n    else\r\n        $x = false ;\r\n\r\n    return parse( EvalElse( $thing, $x ) ) ;\r\n}\r\n\r\n/*\r\n** cbe_if_variable_empty\r\n** true if a variable is defined AND has a no value\r\n*/\r\nfunction cbe_if_variable_empty($atts, $thing = NULL)\r\n{\r\n    global $variable;\r\n    extract(lAtts(array(\r\n        \'name\'    => \'\'\r\n    ), $atts));\r\n\r\n    if( ! _cbe_assert_variable( $name ) )\r\n        return ;\r\n\r\n    return parse( EvalElse( $thing, isset( $variable[$name] ) && empty( $variable[$name] ) ) ) ;\r\n}\r\n\r\n/*\r\n** cbe_if_variable_exists\r\n** true if a variable isn\'t defined\r\n*/\r\nfunction cbe_if_variable_exists($atts, $thing = NULL)\r\n{\r\n    global $variable;\r\n    extract(lAtts(array(\r\n        \'name\'    => \'\'\r\n    ), $atts));\r\n\r\n    if( ! _cbe_assert_variable( $name ) )\r\n        return ;\r\n\r\n    return parse( EvalElse( $thing, isset( $variable[$name] ) ) ) ;\r\n}\r\n','/*\r\n** cbe_if_variable v0.2\r\n** Claire Brione - http://www.clairebrione.com/\r\n**\r\n** 0.1 - 29 Jun 2011 - Initial release\r\n** 0.1.1 30 Jun 2011 - Example fix\r\n** 0.2 - 01 Jul 2011 - \"match\" attribute added, thanks sacripant !\r\n**                     don\'t reinvent the wheel and use existing code\r\n**                     added examples\r\n**\r\n ************************************************************************/\r\n\r\n/*\r\n** tool functions\r\n*/\r\nfunction _cbe_assert_variable( $name )\r\n{\r\n    if( empty( $name ) )\r\n    {\r\n        trigger_error(gTxt(\'variable_name_empty\'));\r\n        return( false ) ;\r\n    }\r\n\r\n    return( true ) ;\r\n}\r\n\r\nfunction _cbe_do_array( $val, $sep )\r\n{\r\n    return( $sep !==\'\' ? do_list( $val, $sep ) : array( trim( $val ) ) ) ;\r\n}\r\n\r\nfunction _cbe_ifvar_match_any( $params )\r\n{   /* ANY : search at least one \"needle\" term in \"value\" at any place */\r\n    extract( $params ) ;\r\n    return( count( array_intersect( _cbe_do_array( $needle, $separator )\r\n                                  , _cbe_do_array( $value , $delim )\r\n                                  ) ) > 0 ) ;\r\n}\r\n\r\nfunction _cbe_ifvar_match_all( $params )\r\n{   /* ALL : search all \"needle\" terms in \"value\" at any place, nonreciprocical */\r\n    extract( $params ) ;\r\n    $aNeedles = _cbe_do_array( $needle, $separator ) ;\r\n    return( count( array_intersect( $aNeedles, _cbe_do_array( $value, $delim ) ) ) == count( $aNeedles ) ) ;\r\n}\r\n\r\nfunction _cbe_ifvar_match_pattern( $params )\r\n{   /* PATTERN (regexp) : try to match \"needle\" term with \"value\" regexp */\r\n    /* from publish/taghandlers.php if_custom_field() */\r\n    extract( $params ) ;\r\n    $dlmPool = array(\'/\', \'@\', \'#\', \'~\', \'`\', \'|\', \'!\', \'%\');\r\n    $dlm = array_merge(array_diff($dlmPool, preg_split(\'//\', $value, -1)));\r\n    $dlm = (count($dlm) > 0) ? $dlm[0].$value.$dlm[0] : $value;\r\n    return( preg_match($dlm, $needle) ) ;\r\n}\r\n\r\n/*\r\n** cbe_if_variable\r\n** false if the variable doesn\'t exist (unset) or has no value (empty) or is none of the values provided\r\n** true in other cases,\r\n**             acts like if_variable or if_custom_field depending on matching type and comparated values\r\n*/\r\nfunction cbe_if_variable($atts, $thing = NULL)\r\n{\r\n    global $variable;\r\n    $options = \'all, any, pattern\' ;\r\n\r\n    extract(lAtts(array(\r\n        \'name\'      => \'\',\r\n        \'value\'     => \'\',\r\n        \'delim\'     => \',\',\r\n        \'match\'     => \'any\',\r\n        \'separator\' => \'delim\'\r\n    ), $atts));\r\n\r\n    if( ! _cbe_assert_variable( $name ) )\r\n        return ;\r\n\r\n    $separator = ($separator == \'delim\' ) ? $delim : $separator ;\r\n\r\n    if( isset( $variable[$name] ) )\r\n    {\r\n        if( ! isset( $atts[\'value\'] ) )\r\n            $x = ! empty( $variable[$name] ) ;\r\n        else\r\n        {\r\n            if( ! _cbe_ifvar_match_any( array( \'needle\' => $match, \'value\' => $options, \'delim\' => \',\', \'separator\' => \'\' ) ) )\r\n            {\r\n                trigger_error(gTxt(\'invalid_attribute_value\', array(\'{match}\' => $match)));\r\n                return( false ) ;\r\n            }\r\n\r\n            $needle = $variable[$name] ;\r\n            $x = call_user_func( \'_cbe_ifvar_match_\'.$match\r\n                                     , $match == \'pattern\'\r\n                                     ? compact( \"needle\", \"value\" )\r\n                                     : compact( \"needle\", \"value\", \"separator\", \"delim\" )\r\n                                     ) ;\r\n        }\r\n    }\r\n    else\r\n        $x = false ;\r\n\r\n    return parse( EvalElse( $thing, $x ) ) ;\r\n}\r\n\r\n/*\r\n** cbe_if_variable_empty\r\n** true if a variable is defined AND has a no value\r\n*/\r\nfunction cbe_if_variable_empty($atts, $thing = NULL)\r\n{\r\n    global $variable;\r\n    extract(lAtts(array(\r\n        \'name\'    => \'\'\r\n    ), $atts));\r\n\r\n    if( ! _cbe_assert_variable( $name ) )\r\n        return ;\r\n\r\n    return parse( EvalElse( $thing, isset( $variable[$name] ) && empty( $variable[$name] ) ) ) ;\r\n}\r\n\r\n/*\r\n** cbe_if_variable_exists\r\n** true if a variable isn\'t defined\r\n*/\r\nfunction cbe_if_variable_exists($atts, $thing = NULL)\r\n{\r\n    global $variable;\r\n    extract(lAtts(array(\r\n        \'name\'    => \'\'\r\n    ), $atts));\r\n\r\n    if( ! _cbe_assert_variable( $name ) )\r\n        return ;\r\n\r\n    return parse( EvalElse( $thing, isset( $variable[$name] ) ) ) ;\r\n}\r\n','becdd73c0fd14d4cd8c4886c3dd83c1e',0,5,0),
	('smd_remote_file',1,'Stef Dawson','http://stefdawson.com/','0.50','Integrate remote URL and non web-accessible files with the Files panel','	<h1>smd_remote_file</h1>\n\n	<p>Offers remote and secure file management through Textpattern&#8217;s standard Files interface. This is very handy in two main situations:</p>\n\n	<ol>\n		<li>If you don&#8217;t have the bandwidth available to host media content. Third party sites such as fileden.com offer the ability to upload fairly sizeable files and then freely hotlink to them (within quite generous bandwidth limits) so they can be shared and thus used within your Txp site</li>\n		<li>If you want to lock down some files so they are not freely downloadable. While .htaccess can clamp down an entire directory or requires special rules for locking certain files, this plugin offers a more natural way to manage them by permitting access to only those people who have the authority to do so</li>\n	</ol>\n\n	<h2 id=\"features\">Features</h2>\n\n	<ul>\n		<li>Manage links to cloud-based files directly from the Txp Files tab, as if they were native</li>\n		<li>Multiple sources for the same remote file are supported, for load balancing / bandwidth saving</li>\n		<li>Manage files in non-web-accessible (i.e. secure) locations on your host server as if they were native files</li>\n		<li>Files can optionally be served to logged-in users using Hidden / Pending status</li>\n		<li>Integrates with smd_user_manager&#8217;s privs system</li>\n		<li>No modifications to Txp core / database required</li>\n	</ul>\n\n	<h2>Installation / uninstallation</h2>\n\n	<p class=\"information\">Requires Textpattern 4.5.2+</p>\n\n	<p>Download the plugin from either <a href=\"http://textpattern.org/plugins/901/smd_remote_file\">textpattern.org</a>, or the <a href=\"http://stefdawson.com/sw\">software page</a>, paste the code into the Txp <em>Admin-&gt;Plugins</em> panel, install and enable the plugin. Visit the <a href=\"http://forum.textpattern.com/viewtopic.php?id=24673\">forum thread</a> for more info or to report on the success or otherwise of the plugin.</p>\n\n	<p>To remove the plugin, simply delete it from the <em>Admin-&gt;Plugins</em> panel.</p>\n\n	<h2>Pre-requisites</h2>\n\n	<p>For the remote file capability, choose any third party file hoster that offers free downloads of your stuff. Create an account, upload files to it, and make sure you know how to get Direct Link <span class=\"caps\">URL</span>s from their interface (it&#8217;s usually fairly obvious). You&#8217;ll need these to paste into Textpattern.</p>\n\n	<p>For secure files you need to nominate a directory either a) outside of your web host&#8217;s document root, or b) in a directory with an .htaccess file that forbids web access to any file. Configure the path to this location from the plugin preferences and then hop over to the <em>Files</em> panel to upload your files.</p>\n\n	<h2>Plugin preferences</h2>\n\n	<p>On the <em>Extensions-&gt;Remote file</em> panel are the following options to govern how the plugin behaves:</p>\n\n	<dl>\n		<dt><span class=\"atnm\">Allow downloads from</span></dt>\n		<dd>Determines which interface elements you see. Choose from:\n	<dl>\n		<dd><strong>The Internet</strong> to allow remote <span class=\"caps\">URL</span>s</dd>\n		<dd><strong>Secure location</strong> to allow files to be stored in your nominated non-web-acessible folder</dd>\n	</dl></dd>\n		<dt><span class=\"atnm\">Secure file path</span></dt>\n		<dd>Absolute file path to the place you want to store secure files. Ignore this option if you have elected not to use secure files.</dd>\n		<dt><span class=\"atnm\">Permitted download statuses</span></dt>\n		<dd>List of status numbers (not names) for which you are going to permit downloads. Choose from:\n	<dl>\n		<dd>2 for Hidden files</dd>\n		<dd>3 for Pending files</dd>\n	</dl></dd>\n		<dt><span class=\"atnm\">Limit downloads to this priv level</span></dt>\n		<dd>The privilege level of users who can download hidden/pending files (providing you have enbled this feature using the <em>Permitted download statuses</em> pref). If you are using smd_user_manager this setting is ignored.</dd>\n	</dl>\n\n	<h2>The <em>Files</em> tab: remote files</h2>\n\n	<p>The plugin adds one input form field to the Files tab labelled <em><span class=\"caps\">URL</span></em>. From your third party site(s) of choice, simply copy a web-friendly (i.e. url-encoded) hotlink and paste it into the <span class=\"caps\">URL</span> box. You can usually tell if the link is url-encoded because it&#8217;ll probably have <code>%20</code> in place of any spaces in the filename. The directory part is, however, <em>not</em> usually encoded: characters such as forward slashes and colons remain.</p>\n\n	<p>A typical file might look like this:</p>\n\n<pre class=\"block\"><code>http://www.fileden.com/files/2007/11/1/\n     1234567/Here%20is%20some%20music.mp3\n</code></pre>\n\n	<p>The link must be an absolute <span class=\"caps\">URL</span>, beginning <code>http://</code>. Once you have pasted it in, hit Upload next to the box and a new special <code>.link</code> file will be created in Txp. It takes on the filename exactly as it appears in your <span class=\"caps\">URL</span> (with <code>.link</code> added). So in the example above, a new file called <code>Here is some music.mp3.link</code> will be made in your standard Textpattern files directory.</p>\n\n	<p>The new &#8220;file&#8221; will appear in the list just like any real file in Txp. You can edit it to add a title, description, category, set its status: everything you can do with a conventional file. Just don&#8217;t rename it!</p>\n\n	<h3>Multiple personalities</h3>\n\n	<p>Third party sites don&#8217;t give you something for nothing; they normally have a bandwidth cap, just like your web hoster might enforce. If you want to distribute your music or latest video, a few thousand hits per month will eat all your available bandwidth.</p>\n\n	<p>So spread the load around the Internet. Get accounts at various third party sites and upload exactly the same file (make sure the filenames are identical &#8212; including caSe SensITivItY). Then just paste the <span class=\"caps\">URL</span>s into the upload box: smd_remote_file will only maintain one physical file within Txp but will hold details of your other copies for you. Alternatively, click to edit the <code>.link</code> file from the <em>Files</em> panel and paste the other <span class=\"caps\">URL</span>s inside the Remote <span class=\"caps\">URL</span>s text area; one <span class=\"caps\">URL</span> per line. Using either the standard <a href=\"http://textpattern.net/wiki/index.php?title=file_download_link\">file_download_link tag</a> or the new <a href=\"#smd_rem_fdl\">smd_file_download_link tag</a> will randomly pick one of your download locations associated with each file every time the page loads, spreading your bandwidth usage.</p>\n\n	<h2>The <em>Files</em> tab: secure files</h2>\n\n	<p>The plugin adds two checkboxes alongside the create / upload boxes, both labelled <code>Secure</code>. When you create a Txp file from an already uploaded physical file, or upload a new file, just check the checkbox to store the file in your nominated secure location. A corresponding <code>.safe</code> file will be created in the regular <code>files</code> directory containing meta data about the file. At the moment this meta data just houses some placeholder text and if you click a .safe file to edit it you will see a box labelled <em>Secure options</em> into which you can write whatever you like. Just be aware that this area is reserved for future use.</p>\n\n	<p>When editing either a <code>.safe</code> or regular file you may replace it with another using the upload box at the bottom of the <em>File edit</em> panel. It is automatically ticked if the file you are editing is secure, but you may uncheck it to convert the new uploaded file to a regular file, and vice versa. Note that even if the uploaded file has a different filename to the one already uploaded, Txp will maintain the original filename just as it does for regular files.</p>\n\n	<h2>The <em>Files</em> tab: hidden/pending files</h2>\n\n	<p>The plugin allows a third method of delivering files utilising the status bits. By default, Txp forbids downloads of any files that are not Live (status=4). But if you nominate a status of 2 (Hidden) or 3 (Pending) in the plugin preference <em>Permitted download statuses</em> you can then upload regular files to Txp&#8217;s interface and set their status to one of the other options.</p>\n\n	<p>A regular <code>&lt;txp:file_download_link&gt;</code> tag will skip non-live files, but you can add the <code>status</code> attribute to display the hidden content. Clicking on such a link will still, however fail to download the file unless <strong>you are logged in</strong> and one of the following conditions is met:</p>\n\n	<ul>\n		<li>You are the author (uploader) of the file</li>\n		<li>Your privilege level matches that given by the <em>Limit downloads to this priv level</em> preference</li>\n		<li>smd_user_manager is installed and the <code>file.download</code> priv area includes the privilege level of your account</li>\n		<li>smd_user_manager is installed and the <code>file.download.status_number</code> priv area includes the privilege level of your account</li>\n	</ul>\n\n	<p>This is an ideal scenario where wrapping the <code>&lt;txp:file_download_link&gt;</code> with some credentials checking plugin/tag (e.g. rvm_privileged, smd_um_has_privs, cbe_frontauth_protect, etc) can help to deliver content only to special members.</p>\n\n	<h2 class=\"tag\" id=\"smd_rem_fdl\">Tag: <code>&lt;txp:smd_file_download_link&gt;</code></h2>\n\n	<p>An exact drop-in replacement for the standard <a href=\"http://textpattern.net/wiki/index.php?title=file_download_link\">file_download_link tag</a> tag, with a few extra attributes:</p>\n\n	<dl>\n		<dt><span class=\"atnm\">id</span></dt>\n		<dd>The ID of the file you want to link to. If left blank, it can be supplied from whatever is between the opening and closing tag</dd>\n		<dt><span class=\"atnm\">filename</span></dt>\n		<dd>The filename of the file you want to link to. If left blank, it can be supplied from whatever is between the opening and closing tag. If both filename and ID are specified, ID takes precedence</dd>\n		<dt><span class=\"atnm\">choose</span></dt>\n		<dd><span class=\"important\">(for remote <span class=\"caps\">URL</span>s only)</span> governs how to choose which remote <span class=\"caps\">URL</span> to serve. Set it to 0 to randomly pick a <span class=\"caps\">URL</span> from those uploaded for this file (the standard file_download_link tag will also do this). You can also specify a higher number to pick the <span class=\"caps\">URL</span> from that particular slot. So <code>choose=&quot;1&quot;</code> will always select the 1st file you uploaded and deliver that; <code>choose=&quot;2&quot;</code> the second; and so on. If you specify a number bigger than the number of <span class=\"caps\">URL</span>s stored against a file, it picks the first one you uploaded.</dd>\n		<dt><span class=\"atnm\">show_suffix</span></dt>\n		<dd>Whether to display the <code>.link</code> or <code>.safe</code> suffix in the link. Choose from:\n	<dl>\n		<dd>0 to hide the suffix</dd>\n		<dd>1 to show the suffix (in other words, make the tag behave like the built-in <code>file_download_link</code>)</dd>\n	</dl></dd>\n		<dd>Default: 0</dd>\n		<dt><span class=\"atnm\">obfuscate</span></dt>\n		<dd><span class=\"important\">(for remote <span class=\"caps\">URL</span>s only)</span> hide the filename portion of the linkand replace it with a random string of characters. Specify the length of the string, e.g. <code>obfusctae=&quot;8&quot;</code> would render a link that resembles <code>http://site.com/file_download/42/3e9845ac</code>. This is handy to keep the filename partly secret, but it&#8217;s not foolproof. As soon as someone starts downloading the file the full remote <span class=\"caps\">URL</span> is known.</dd>\n	</dl>\n\n	<h2 class=\"tag\" id=\"smd_rem_fdn\">Tag: <code>&lt;txp:smd_file_download_name&gt;</code></h2>\n\n	<p>An exact drop-in replacement for the standard <a href=\"http://textpattern.net/wiki/index.php?title=file_download_name\">file_download_name</a> tag, but with one attribute:</p>\n\n	<dl>\n		<dt><span class=\"atnm\">show_suffix</span></dt>\n		<dd>Whether to display the <code>.link</code> or <code>.safe</code> on the end of file name. Choose from:\n	<dl>\n		<dd>0 to hide the suffix</dd>\n		<dd>1 to display it (thus behaving like the built-in <code>file_download_name</code>)</dd>\n	</dl></dd>\n	</dl>\n\n	<h2 class=\"tag\" id=\"smd_rem_fdi\">Tag: <code>&lt;txp:smd_file_download_image&gt;</code></h2>\n\n	<p>When linking to external content (especially media files) it is often useful to make a mini image to go with it, such as a still from a movie or some artwork for an mp3 track. You can of course embed a <code>&lt;txp:image&gt;</code> tag in your download form, but that will give a static image for each file. This tag can be used to display images that vary with the filename of the remote, secure or regular file.</p>\n\n	<p>To use it, just upload an image (by default a jpg) via Txp&#8217;s <em>Images</em> panel and give it the exact same filename as the remote file it represents, plus its normal image file extension. i.e. if your remote file was <code>Man and boy.mpg</code> you would upload an image and name it <code>Man and boy.mpg.jpg</code>. Do this for each file and then use this tag to display them.</p>\n\n	<p>By default, if any image doesn&#8217;t exist, the tag outputs the image filename instead (if using the <code>filename</code>) or the id (if using the <code>id</code>). This behaviour can be overridden with the <code>ifmissing</code> option.</p>\n\n	<dl>\n		<dt><span class=\"atnm\">id</span></dt>\n		<dd>The ID of an image to display</dd>\n		<dt><span class=\"atnm\">filename</span></dt>\n		<dd>The filename of an image to display. If both filename and ID are specified, ID takes precedence. Note that in this and <code>id</code> modes, the tag is essentially the same as <code>&lt;txp:image&gt;</code>. The exception is that you do not have to specify the image file <code>extension</code>, as it does that for you by default if you use <span class=\"caps\">JPG</span>s and you can specify thumbnails instead using the <code>thumbnail</code> attribute</dd>\n		<dt><span class=\"atnm\">extension</span></dt>\n		<dd>Saves you having to specify the file extension in the <code>filename</code> parameter. Enter it here <em>without</em> the dot.</dd>\n		<dd>Default: <code>jpg</code></dd>\n		<dt><span class=\"atnm\">thumbnail</span></dt>\n		<dd>Display full size image or thumbnail. Choose from:\n	<dl>\n		<dd>0 for the full size image</dd>\n		<dd>1 if you have created thumbnails and wish to use them</dd>\n	</dl></dd>\n		<dd>Default: 0</dd>\n		<dt><span class=\"atnm\">ifmissing</span></dt>\n		<dd>Governs what to do in the event an image is missing. Use <code>ifmissing=&quot;&quot;</code> to output nothing in the event of a missing image. Other alternatives:\n	<dl>\n		<dd><code>?ref</code> to display either the image filename or its ID if it was used as an attribute.</dd>\n		<dd><code>?image:ID_or_name&quot;</code> to display the given Txp image (e.g. <code>ifmissing=&quot;?image:32&quot;</code> or <code>ifmissing=&quot;?image:NoPic.jpg&quot;</code>)</dd>\n		<dd><code>some_text</code> to display the given text, e.g. <code>ifmissing=&quot;No image yet&quot;</code></dd>\n	</dl></dd>\n		<dt><span class=\"atnm\">wraptag</span></dt>\n		<dd>The <span class=\"caps\">HTML</span> tag to wrap around the outside of the image. Specify it with no angle brackets, e.g. <code>wraptag=&quot;p&quot;</code>.</dd>\n		<dt><span class=\"atnm\">class</span></dt>\n		<dd>The <span class=\"caps\">CSS</span> class name to apply to the image. If using <code>wraptag</code> the class is applied to the surrounding tag. If it is omitted the class is applied directly to the image.</dd>\n	</dl>\n\n	<h2>How it works</h2>\n\n	<p>For the curious, the plugin just creates a placeholder text file with the name of your file plus the special suffix <code>.link</code> or <code>.safe</code> to distinguish it from a standard file. The contents of the file determine which <span class=\"caps\">URL</span>s to consider when downloading, or the special options that apply to this secure file (to be decided in a future version).</p>\n\n	<p>For remote files, shuffling the order of <span class=\"caps\">URL</span>s alters the effect of the <code>choose</code> attribute. Just make sure you have one <span class=\"caps\">URL</span> per line that <strong>must</strong> begin with <code>http</code> and <strong>must</strong> have the same base filename as the corresponding <code>.link</code> file.</p>\n\n	<p>Incidentally, the real file size is fetched every time the local file is edited because otherwise Txp overwrites it with the size of the placeholder text file. In the case of remote files, it reads the file size of the first <span class=\"caps\">URL</span>. This has potential ramifications when downloading because <em>the plugin checks that the remote file size matches the one in the Txp interface before serving the file</em>. If one of your uploaded files is a different size it will refuse to download.</p>\n\n	<p>The reason for this is to try to maintain download count integrity. Instead of dishing out a standard 404 message, some servers will redirect to an image or <span class=\"caps\">HTML</span> file to tell you that a file is missing. This returns a status code of &#8217;200 OK&#8217; to indicate that the download of the replacement content went ok, but in this case we do <em>not</em> want to increment the counter; the file&#8217;s still missing after all! Under rare circumstances you might find that the provider returns content exactly the same length as the file itself and the count would then be wrongly incremented. Practically, your file is going to be larger than their replacement so it won&#8217;t matter, but if it causes problems, shuffle the order of the <span class=\"caps\">URL</span>s so a provider you trust not to use such tactics is first in the list.</p>\n\n	<p>Note that the &#8216;download&#8217; link next to each file on the Files tab of the admin interface always chooses a random file from those uploaded with that name.</p>\n\n	<h2>Examples</h2>\n\n	<h3 id=\"smd_rem_eg1\">Example 1: standard download</h3>\n\n	<p>In your <code>files</code> form:</p>\n\n<pre class=\"block\"><code>&lt;txp:file_download_link&gt;\n &lt;txp:smd_file_download_name /&gt; [&lt;txp:file_download_size\n     format=&quot;auto&quot; decimals=&quot;2&quot; /&gt;]\n&lt;/txp:file_download_link&gt;\n</code></pre>\n\n	<h3 id=\"smd_rem_eg2\">Example 2: specific download</h3>\n\n<pre class=\"block\"><code>&lt;txp:smd_file_download_link choose=&quot;2&quot;\n     show_suffix=&quot;1&quot; /&gt;\n</code></pre>\n\n	<p>Will always select the 2nd <span class=\"caps\">URL</span> from those uploaded for each file. Shows the <code>.link</code> on the end of each remote file.</p>\n\n	<h3 id=\"smd_rem_eg3\">Example 3: using an image to download file</h3>\n\n<pre class=\"block\"><code>&lt;txp:smd_file_download_link&gt;\n &lt;txp:smd_file_download_image ifmissing=&quot;Sorry, no image found&quot;\n     wraptag=&quot;span&quot; class=&quot;dload&quot; /&gt;\n&lt;/txp:smd_file_download_link&gt;\n</code></pre>\n\n	<p>Displays an image with the same name (plus .jpg) as the remote file. The image is clickable to allow the file to be downloaded but if the image is not found, the text &#8220;Sorry, no image found&#8221; will be displayed instead (the text is also clickable). Wraps the img or text in <code>&lt;span&gt;</code> tags with a class of <code>dload</code>.</p>\n\n	<h3 id=\"smd_rem_eg4\">Example 4: hidden downloads</h3>\n\n	<p><span class=\"caps\">TODO</span></p>\n\n	<h2>Author and credits</h2>\n\n	<p>Written by <a href=\"http://stefdawson.com/contact\">Stef Dawson</a>. For other software by me, or to make a donation, see the <a href=\"http://stefdawson.com/sw\">software page</a>.</p>\n\n	<p>I cannot possibly claim all the credit for this hunk of code. The plugin would not have existed if it weren&#8217;t for the amazing mind of Ruud van Melick. He suggested a very clever solution to my remote file predicament. I built on that, extended it, refined it, pluginised it and gave it to you. Many thanks to Ruud for the awesome support he offers the community, and also to Wet for his assistance with helping me understand the core.</p>\n\n	<h2 id=\"changelog\">Changelog</h2>\n\n	<ul>\n		<li>12 Nov 2007 | 0.10 | Initial release</li>\n		<li>04 Dec 2007 | 0.20 | Added download counter and some better status messages</li>\n		<li>04 Dec 2007 | 0.30 | Removed .link when using <code>smd_file_download_link</code> ; added <code>show_link</code> attribute ; improved error handling code ; download count only increases if file sizes match</li>\n		<li>05 Dec 2007 | 0.31 | File is checked for error condition prior to download in line with core changeset r2720 (thanks Mary) &#8211; can be removed when 4.0.6 is released</li>\n		<li>12 Dec 2007 | 0.32 | Enhanced ifmissing to include image support; changed the ?file attribute to ?ref (it&#8217;s a better name)</li>\n		<li>03 Feb 2008 | 0.40 | Requires <span class=\"caps\">TXP</span> 4.0.6 ; removed error check from v0.31 ; added/improved replace remote file ; reduced timeout for accessing remote <span class=\"caps\">URL</span> to try and prevent ugly warnings</li>\n		<li>02 Apr 2008 | 0.41 | Added smd_file_download_name (thanks aswihart)</li>\n		<li>09 Apr 2008 | 0.42 | Fixed minor edge case bug in smd_file_download_link</li>\n		<li>10 Jun 2008 | 0.43 | Fixed spurious characters in the single tag version of smd_file_download_link (thanks iblastoff)</li>\n		<li>11 Oct 2012 | 0.50 | Major rewrite ; added secure file support ; added hidden/pending file downloads (thanks Shaun) ; fixed token javascript error ; added <code>obfuscate</code> attribute ; renamed <code>show_link</code> as <code>show_suffix</code> ; renamed <code>thumb</code> as <code>thumbnail</code></li>\n	</ul>','/**\r\n * smd_remote_file\r\n *\r\n * A Textpattern CMS plugin for storing and serving files from off-site and secure (non-docroot) locations\r\n *  -> Manage links to cloud-based files directly from the Txp Files panel, as if they were native\r\n *  -> Multiple sources for the same remote file supported, for load balancing / bandwidth saving\r\n *  -> Manage files in non-web-accessible (i.e. secure) locations on your host server\r\n *  -> Secure files can optionally be served to logged-in users using Hidden / Pending status\r\n *  -> No modifications to Txp required\r\n\r\n * @author Stef Dawson\r\n * @link   http://stefdawson.com/\r\n */\r\n\r\n// TODO:\r\n//  * Set URL / secure for missing files (remote_update / file_save step needs to move file if file names different and update DB)\r\n//  * Safe parameters inside the .safe file to govern access restriction, expiry, download count, etc\r\n//  * is_writable() folder checks, and other error traps\r\nglobal $smd_remote_prefs;\r\nsmd_remote_get_prefs();\r\n\r\nif (@txpinterface === \'admin\') {\r\n	global $event;\r\n\r\n	add_privs(\'smd_remote_prefs\', \'1\');\r\n	add_privs(\'plugin_prefs.smd_remote_file\', \'1\');\r\n	register_tab(\'extensions\', \'smd_remote_prefs\', gTxt(\'smd_remote_tab_name\'));\r\n	register_callback(\'smd_remote_dispatcher\', \'smd_remote_prefs\');\r\n	register_callback(\'smd_remote_dispatcher\', \'plugin_prefs.smd_remote_file\');\r\n	register_callback(\'smd_remote_welcome\', \'plugin_lifecycle.smd_remote_file\');\r\n\r\n	if($event === \'file\') {\r\n		register_callback(\'smd_remote_file\', \'file\', \'file_replace\', 1);\r\n		register_callback(\'smd_remote_file\', \'file\', \'file_create\', 1);\r\n		register_callback(\'smd_remote_file\', \'file\', \'file_insert\', 1);\r\n		register_callback(\'smd_remote_file_update\', \'file\', \'file_save\');\r\n		register_callback(\'smd_remote_pre_multi_edit\', \'file\', \'file_multi_edit\', 1);\r\n		register_callback(\'smd_remote_multi_edit\', \'file\', \'file_multi_edit\');\r\n		register_callback(\'smd_remote_file_upload\', \'file_ui\', \'upload_form\');\r\n		register_callback(\'smd_remote_file_edit\', \'file\');\r\n	}\r\n}\r\n\r\nif (txpinterface === \'public\') {\r\n	register_callback(\'smd_remote_download\', \'file_download\');\r\n}\r\n\r\n// This privilege can be overridden with smd_user_manager\r\n// Caveat: Privs panel list needs to be saved from smd_um first\r\nadd_privs(\'file.download\', get_pref(\'smd_remote_limit_privs\', $smd_remote_prefs[\'smd_remote_limit_privs\'][\'default\']));\r\n\r\n// *********************************\r\n// ******** ADMIN INTERFACE ********\r\n// *********************************\r\n// Plugin jump off point\r\nfunction smd_remote_dispatcher($evt, $stp) {\r\n	global $event;\r\n\r\n	$available_steps = array(\r\n		\'smd_secure_uploaded\' => false,\r\n		\'smd_remote_prefs\'    => false,\r\n	);\r\n\r\n	if (!$stp or !bouncer($stp, $available_steps)) {\r\n		$stp = \'smd_remote_prefs\';\r\n	}\r\n	$stp();\r\n}\r\n\r\n// ------------------------\r\n// Initialization\r\nfunction smd_remote_welcome($evt, $stp) {\r\n	$msg = \'\';\r\n	switch ($stp) {\r\n		case \'installed\':\r\n			$msg = \'Externalise your files.\';\r\n			break;\r\n		case \'deleted\':\r\n			smd_remote_prefs_remove(0);\r\n			break;\r\n	}\r\n	return $msg;\r\n}\r\n\r\n// ------------------------\r\n// Delete plugin prefs\r\nfunction smd_remote_prefs_remove($showpane=1) {\r\n	$message = \'\';\r\n\r\n	safe_delete(\'txp_prefs\', \"name=\'smd_remote_%\'\");\r\n\r\n	if ($showpane) {\r\n		$message = gTxt(\'smd_remote_prefs_deleted\');\r\n		smd_remote_prefs($message);\r\n	}\r\n}\r\n\r\n// ------------------------\r\n// Handle the prefs panel\r\nfunction smd_remote_prefs($msg=\'\') {\r\n	global $smd_remote_prefs;\r\n\r\n	// Re-fetch the group list in case smd_um has modified it since plugin load time\r\n	$all = get_groups();\r\n	$all_bar_none = array_keys($all);\r\n	array_shift($all_bar_none);\r\n	$smd_remote_prefs[\'smd_remote_limit_privs\'][\'content\'] = array($all + array(join(\',\', $all_bar_none) => gTxt(\'smd_remote_all\')), false);\r\n\r\n	if (ps(\'smd_remote_pref_save\')) {\r\n		foreach ($smd_remote_prefs as $idx => $prefobj) {\r\n			$val = ps($idx);\r\n			$val = (is_array($val)) ? join(\', \', $val) : $val;\r\n			set_pref($idx, $val, \'smd_remote\', $prefobj[\'type\'], $prefobj[\'html\'], $prefobj[\'position\']);\r\n		}\r\n\r\n		$msg = gTxt(\'preferences_saved\');\r\n	}\r\n\r\n	pagetop(gTxt(\'smd_remote_tab_name\'), $msg);\r\n\r\n	$out = array();\r\n	$out[] = \'<div class=\"plugin-column\">\';\r\n	$out[] = \'<form name=\"smd_remote_prefs\" id=\"smd_remote_prefs\" action=\"index.php\" method=\"post\">\';\r\n	$out[] = eInput(\'smd_remote_prefs\').sInput(\'smd_remote_pref_save\');\r\n	$out[] = startTable();\r\n	$out[] = tr(tdcs(strong(gTxt(\'smd_remote_pref_legend\')), 2));\r\n	foreach ($smd_remote_prefs as $idx => $prefobj) {\r\n		$subout = array();\r\n		$subout[] = tda(\'<label for=\"\'.$idx.\'\">\'.gTxt($idx).\'</label>\');\r\n		$val = get_pref($idx, $prefobj[\'default\'], 1);\r\n		switch ($prefobj[\'html\']) {\r\n			case \'text_input\':\r\n				$subout[] = fInputCell($idx, $val, \'\', \'\', \'\', $idx);\r\n			break;\r\n			case \'yesnoradio\':\r\n				$subout[] = tda(yesnoRadio($idx, $val));\r\n			break;\r\n			case \'checkboxset\':\r\n				$vals = do_list($val);\r\n				$lclout = array();\r\n				foreach ($prefobj[\'content\'] as $cb => $val) {\r\n					$checked = in_array($cb, $vals);\r\n					$lclout[] = checkbox($idx.\'[]\', $cb, $checked). gTxt($val);\r\n				}\r\n				$subout[] = tda(join(n, $lclout));\r\n			break;\r\n			case \'selectlist\':\r\n				$subout[] = tda(selectInput($idx, $prefobj[\'content\'][0], $val, $prefobj[\'content\'][1]));\r\n			break;\r\n		}\r\n		$out[] = tr(join(n ,$subout));\r\n	}\r\n\r\n	$out[] = tr(tda(\'&nbsp;\') . tda(fInput(\'submit\', \'smd_remote_pref_save\', gTxt(\'save\'), \'publish\')));\r\n	$out[] = endTable().tInput();\r\n	$out[] = \'</form></div>\';\r\n\r\n	echo join(n, $out);\r\n}\r\n\r\n// ------------------------\r\n// Add markup around the upload forms\r\nfunction smd_remote_file_upload($evt, $stp, $def) {\r\n	global $smd_remote_prefs, $step;\r\n\r\n	$fid = gps(\'id\');\r\n\r\n	$rfhelpLink = \'<a target=\"_blank\"\'.\r\n			\' href=\"http://stefdawson.com/support/smd_remote_file_url_popup.html\"\'.\r\n			\' onclick=\"popWin(this.href); return false;\" class=\"pophelp\">?</a>\';\r\n/*	$sfhelpLink = \'<a target=\"_blank\"\'.\r\n			\' href=\"http://stefdawson.com/support/smd_remote_file_secure_popup.html\"\'.\r\n			\' onclick=\"popWin(this.href); return false;\" class=\"pophelp\">?</a>\';\r\n*/\r\n	$mech = get_pref(\'smd_remote_mechanism\', $smd_remote_prefs[\'smd_remote_mechanism\'][\'default\']);\r\n	$dosec = in_list(\'secure\', $mech);\r\n	$dorem = in_list(\'remote\', $mech);\r\n	$rs = array(\'filename\' => \'\');\r\n	if ($fid) {\r\n		$rs = safe_row(\'*\', \'txp_file\', \"id=\'\".doSlash($fid).\"\'\");\r\n	}\r\n\r\n	$show_rem = ((strpos($rs[\'filename\'], \'.link\') === false) && $step == \'file_edit\');\r\n	$is_safe = ((strpos($rs[\'filename\'], \'.safe\') !== false) && (($step == \'file_edit\') || ($step == \'file_replace\')));\r\n\r\n	$def = str_replace(\'</p>\',\r\n			(($dosec)\r\n				? sp.checkbox(\'smd_secure\',1,($is_safe ? 1 : 0))\r\n					. \' <label for=\"smd_secure\">\'.gTxt(\'smd_remote_secure\').\'</label>\'\r\n				: \'\'\r\n			)\r\n			. \'</p>\' .\r\n			(($dorem && !$show_rem && (!$is_safe))\r\n				? trim(form(graf(gTxt(\'smd_remote_url\').sp.$rfhelpLink.sp.fInput(\'text\', \'smd_remote_url\', \'\', \'edit\', gTxt(\'smd_remote_url_tooltip\'), \'\', \'32\').sp.\r\n						fInput(\'submit\', \'\', gTxt(\'smd_remote_upload\')))\r\n				))\r\n				: \'\'\r\n			),\r\n			$def);\r\n\r\n	return $def;\r\n}\r\n\r\n// ------------------------\r\n// Generic callback which is fired _before_ the Files page has loaded.\r\n// Intercepts any events/steps that deal with secure/remote files.\r\nfunction smd_remote_file($evt, $stp) {\r\n	global $file_base_path, $txp_user, $step, $theme;\r\n\r\n	extract(doSlash(gpsa(array(\'smd_remote_url\', \'smd_secure\', \'category\', \'permissions\', \'description\', \'title\'))));\r\n\r\n	$finfo = array(\r\n		\'title\'       => $title,\r\n		\'category\'    => $category,\r\n		\'permissions\' => $permissions,\r\n		\'description\' => $description,\r\n		\'status\'      => \'4\',\r\n		\'created\'     => \'now()\',\r\n		\'modified\'    => \'now()\',\r\n		\'author\'      => doSlash($txp_user),\r\n	);\r\n\r\n	if ($smd_remote_url) {\r\n		$url = trim($smd_remote_url);\r\n\r\n		// Only intercept remote files; leave everything else for Txp to manage\r\n		if (strpos($url, \'http\') === 0) {\r\n			$hdrs = smd_get_headers($url, 1);\r\n			$finfo[\'size\'] = ($hdrs === false || !isset($hdrs[\'content-length\'])) ? 1 : $hdrs[\'content-length\'];\r\n\r\n			// Make a filename and full path: unencoded\r\n			$dest_filename = basename(urldecode($url)).\'.link\';\r\n			$dest_filepath = build_file_path($file_base_path, $dest_filename);\r\n			$finfo[\'filename\'] = doSlash($dest_filename);\r\n\r\n			if (file_exists($dest_filepath)) {\r\n				smd_remote_file_write($dest_filepath, $dest_filename, $url);\r\n			} else {\r\n				// File doesn\'t exist so create it and put the URL inside\r\n				$tmp = tempnam(get_pref(\'tempdir\'), \'smd_\');\r\n				$handle = fopen($tmp, \'w\');\r\n				fwrite($handle, $url.n);\r\n				fclose($handle);\r\n				rename($tmp, $dest_filepath);\r\n\r\n				// Add the file to Txp\r\n				// Can\'t use file_db_add() because this step is pre txp_file.php being loaded :-(\r\n//				$ret = file_db_add(doSlash($dest_filename), $category, $permissions, $description, $size, $title);\r\n				$ret = smd_remote_file_insert($finfo);\r\n\r\n				// Fake the step so Txp\'s internal file upload step is not called\r\n				// TODO: success message\r\n				$step = \'smd_secure_uploaded\';\r\n			}\r\n		} else {\r\n			// TODO: Upload failed message\r\n			// gTxt(\'file_upload_failed\') . ((empty($smd_remote_url)) ? \' - \'.gTxt(\'upload_err_no_file\') : \'\');\r\n		}\r\n\r\n	} else if ($smd_secure) {\r\n		if ($stp == \'file_create\') {\r\n			$orig_filename = ps(\'filename\');\r\n			$dest_filename = sanitizeForFile($orig_filename);\r\n			$orig_filepath = build_file_path($file_base_path, $orig_filename);\r\n			$sz = filesize($orig_filepath);\r\n		} else {\r\n			// Get filenames and create full paths: unencoded\r\n			$fn = $_FILES[\'thefile\'][\'name\'];\r\n			$tn = $_FILES[\'thefile\'][\'tmp_name\'];\r\n			$sz = $_FILES[\'thefile\'][\'size\'];\r\n			if ($stp == \'file_replace\') {\r\n				// Replaced files keep the same file name as before (shrug, Txp)\r\n				$id = ps(\'id\');\r\n				$dest_filename = basename(safe_field(\'filename\', \'txp_file\', \'id=\'.doSlash($id)), \'.safe\');\r\n			} else {\r\n				$dest_filename = sanitizeForFile($fn);\r\n			}\r\n		}\r\n		$dest_safename = $dest_filename.\'.safe\';\r\n		$dest_realpath = build_file_path(get_pref(\'smd_remote_secure_path\'), $dest_filename);\r\n		$dest_origpath = build_file_path($file_base_path, $dest_filename);\r\n		$dest_filepath = build_file_path($file_base_path, $dest_safename);\r\n		$finfo[\'filename\'] = doSlash($dest_safename);\r\n		$finfo[\'size\'] = $sz;\r\n\r\n		if (file_exists($dest_filepath)) {\r\n			// Update secure info for existing placeholder\r\n			smd_secure_file_write($dest_filepath, $dest_filename);\r\n		} else if ($stp == \'file_replace\') {\r\n			// File was insecure, now secure\r\n			safe_update(\'txp_file\', \"filename=\'\" . doSlash($dest_safename) . \"\'\", \"id=\'\" . doSlash($id) . \"\'\");\r\n			smd_secure_file_create($dest_filepath, $dest_filename);\r\n\r\n			if (file_exists($dest_origpath)) {\r\n				unlink($dest_origpath);\r\n			}\r\n		} else {\r\n			// File doesn\'t exist so create it\r\n			// Reserve file contents (3rd param) for future meta info use (e.g. start/expiry date, max download count, etc)\r\n			smd_secure_file_create($dest_filepath, $dest_filename);\r\n			$id = smd_remote_file_insert($finfo);\r\n		}\r\n\r\n		// Move the uploaded file to the secure location\r\n		if (isset($tn)) {\r\n			move_uploaded_file($tn, $dest_realpath);\r\n		} else {\r\n			rename($orig_filepath, $dest_realpath);\r\n		}\r\n		if (isset($id)) {\r\n			smd_remote_set_size($id);\r\n		}\r\n\r\n		// Fake the step so Txp\'s internal file upload step is not called\r\n		// TODO: success message\r\n		$step = \'smd_secure_uploaded\';\r\n\r\n	} else if ( ($stp == \'file_replace\') && !$smd_secure) {\r\n		$id = ps(\'id\');\r\n		$filename = safe_field(\'filename\', \'txp_file\', \'id=\'.doSlash($id));\r\n\r\n		if (strpos($filename, \'.safe\') !== false) {\r\n			// File used to be secure, now isn\'t so:\r\n			//  a) delete secure file\r\n			//  b) delete .safe file\r\n			//  c) rename DB entry to remove .safe\r\n			//  d) leave Txp to save the file as normal\r\n			$real_filename = basename($filename, \'.safe\');\r\n			$dest_file = build_file_path($file_base_path, $filename);\r\n			$safe_file = build_file_path(get_pref(\'smd_remote_secure_path\'), $real_filename);\r\n			safe_update(\'txp_file\', \"filename=\'\" . doSlash($real_filename) . \"\'\", \"filename=\'\" . doSlash($filename) . \"\'\");\r\n			unlink($dest_file);\r\n			unlink($safe_file);\r\n		}\r\n	}\r\n}\r\n\r\n// ------------------------\r\nfunction smd_remote_file_insert($finfo) {\r\n\r\n	$ret = safe_insert(\'txp_file\',\r\n		\"filename    = \'{$finfo[\'filename\']}\',\r\n		 title       = \'{$finfo[\'title\']}\',\r\n		 category    = \'{$finfo[\'category\']}\',\r\n		 permissions = \'{$finfo[\'permissions\']}\',\r\n		 description = \'{$finfo[\'description\']}\',\r\n		 status      = \'{$finfo[\'status\']}\',\r\n		 size        = \'{$finfo[\'size\']}\',\r\n		 created     = \'{$finfo[\'created\']}\',\r\n		 modified    = \'{$finfo[\'modified\']}\',\r\n		 author      = \'{$finfo[\'author\']}\'\r\n	\");\r\n\r\n	return $ret;\r\n}\r\n\r\n// ------------------------\r\n// Fired _after_ the Files page has loaded to handle insertion of\r\n// extra fields into the UI\r\nfunction smd_remote_file_edit($evt, $stp) {\r\n	global $file_base_path, $smd_remote_prefs;\r\n\r\n	$jsadd = array();\r\n\r\n	if ($stp == \'file_edit\' || $stp == \'file_replace\') {\r\n		$id = assert_int(gps(\'id\'));\r\n		// TODO: is there a global page var containing filename instead of re-requesting it from DB?\r\n		$rs = safe_row(\'filename\', \'txp_file\', \'id = \'. $id);\r\n\r\n		if (strpos($rs[\'filename\'], \'.link\') !== false) {\r\n			$filepath = build_file_path($file_base_path, $rs[\'filename\']);\r\n			$contents = smd_remote_file_list($filepath, 0, 1);\r\n\r\n			$ul_form = graf(gTxt(\'smd_remote_urls\').br.text_area(\'smd_remote_url\', \'100\', \'400\', implode(\"\\u000D\", $contents)));\r\n			$jsadd[] = \'jQuery(\".replace-file\").remove();\';\r\n			$jsadd[] = \'jQuery(\".edit-file-status\").before(\\\'\'.$ul_form.\'\\\');\';\r\n		} else if (strpos($rs[\'filename\'], \'.safe\') !== false) {\r\n			$filepath = build_file_path($file_base_path, $rs[\'filename\']);\r\n			$contents = smd_remote_file_list($filepath, 0, 1);\r\n\r\n			$ul_form = graf(gTxt(\'smd_remote_secure_opts\').br.text_area(\'smd_secure_opts\', \'100\', \'400\', implode(\"\\u000D\", $contents)));\r\n			$jsadd[] = \'jQuery(\".edit-file-status\").before(\\\'\'.$ul_form.\'\\\');\';\r\n		}\r\n	} else {\r\n		// Files panel main list page\r\n		$mech = get_pref(\'smd_remote_mechanism\', $smd_remote_prefs[\'smd_remote_mechanism\'][\'default\']);\r\n		$dosec = in_list(\'secure\', $mech);\r\n		if ($dosec) {\r\n			$markup = sp.checkbox(\'smd_secure\',1,0)\r\n					. \' <label for=\"smd_secure\">\'.gTxt(\'smd_remote_secure\').\'</label>\';\r\n			$jsadd[] = \'jQuery(\"#assign_file p\").append(\\\'\'.$markup.\'\\\');\';\r\n		}\r\n	}\r\n\r\n	// Inject any javascript onto the page\r\n	if ($jsadd) {\r\n		echo smd_remote_js(join(n, $jsadd));\r\n	}\r\n}\r\n\r\n// ------------------------\r\nfunction smd_remote_file_resync() {\r\n	global $file_base_path;\r\n\r\n	extract(gpsa(array(\'smd_remote_url\', \'smd_secure_opts\', \'id\')));\r\n	$id = assert_int($id);\r\n	$rs = safe_row(\'filename\',\'txp_file\',\'id = \'.$id);\r\n	$dest_filepath = build_file_path($file_base_path, $rs[\'filename\']);\r\n\r\n	if (strpos($rs[\'filename\'], \'.link\') !== false) {\r\n		// When a .link file is updated with a new set of URLs, the existing file name\r\n		// must remain unchanged.\r\n		$urls = explode(n, trim($smd_remote_url));\r\n		$real_filename = basename($rs[\'filename\'], \'.link\');\r\n\r\n		$valid_urls = array();\r\n		foreach ($urls as $url) {\r\n			$url = trim($url);\r\n			// Does the file start with http and end with the filename?\r\n			if ((strpos($url, \'http\') === 0) && (preg_match(\"/\".$real_filename.\"$/\", $url) === 1)) {\r\n				$valid_urls[] = $url;\r\n	      }\r\n		}\r\n		$valid_urls = array_unique($valid_urls);\r\n\r\n		smd_remote_file_write($dest_filepath, $rs[\'filename\'], join(n,$valid_urls), \'w\');\r\n	} else if (strpos($rs[\'filename\'], \'.safe\') !== false) {\r\n		$content = explode(n, trim($smd_secure_opts));\r\n		smd_secure_file_write($dest_filepath, $rs[\'filename\'], join(n,$content), \'w\');\r\n	}\r\n}\r\n\r\n// ------------------------\r\n// Every time a file is saved/edited, Txp recalculates its size from the file in the /files dir (grrr).\r\n// This is undesirable so it is replaced with the size of the remote/secure file instead.\r\nfunction smd_remote_file_update() {\r\n	extract(gpsa(array(\'id\')));\r\n	smd_remote_file_resync();\r\n	smd_remote_set_size($id);\r\n}\r\n\r\n// ------------------------\r\n// Sets the size of the given Txp database file to that of its corresponding \"real\" remote/secure file size\r\nfunction smd_remote_set_size($id_or_file) {\r\n	global $file_base_path;\r\n\r\n	if (is_numeric($id_or_file)) {\r\n		$filename = trim(safe_field(\'filename\', \'txp_file\', \'id=\'.intval($id_or_file)));\r\n	} else {\r\n		$filename = trim($id_or_file);\r\n	}\r\n\r\n	if (strpos($filename, \'.link\') !== false) {\r\n		$filepath = build_file_path($file_base_path, $filename);\r\n		$url = smd_remote_file_list($filepath, 1, 1);\r\n\r\n		if (count($url) > 0) {\r\n			$hdrs = smd_get_headers($url[0], 1);\r\n			$size = ($hdrs === false || !isset($hdrs[\'content-length\'])) ? 1 : $hdrs[\'content-length\'];\r\n			safe_update(\'txp_file\', \'size=\'.$size, \"filename=\'\".$filename.\"\'\");\r\n		}\r\n	} else if (strpos($filename, \'.safe\') !== false) {\r\n		$filepath = build_file_path(get_pref(\'smd_remote_secure_path\'), basename($filename, \'.safe\'));\r\n		$size = filesize($filepath);\r\n		safe_update(\'txp_file\', \'size=\'.$size, \"filename=\'\".$filename.\"\'\");\r\n	}\r\n}\r\n\r\n// ------------------------\r\n// Multi-delete is done in two passes.\r\n// Step 1) Grab a list of IDs that are about to be removed...\r\nfunction smd_remote_pre_multi_edit($evt, $stp) {\r\n	global $smd_remote_selected;\r\n\r\n	$selected = ps(\'selected\');\r\n	if ($selected && is_array($selected)) {\r\n		$selected = array_map(\'assert_int\', $selected);\r\n		$smd_remote_selected = safe_column(\'filename\', \'txp_file\', \'id in (\' . join(\',\', $selected) . \')\');\r\n	}\r\n}\r\n\r\n// ------------------------\r\n// Step 2) Effect changes to safe files if their counterpart .safe index file no longer exists\r\nfunction smd_remote_multi_edit($evt, $stp) {\r\n	global $smd_remote_selected, $file_base_path;\r\n\r\n	$method   = ps(\'edit_method\');\r\n\r\n	switch ($method) {\r\n		case \'delete\':\r\n			$safe_path = get_pref(\'smd_remote_secure_path\');\r\n			foreach ($smd_remote_selected as $file) {\r\n				$dest_filepath = build_file_path($file_base_path, $file);\r\n				if (!file_exists($dest_filepath)) {\r\n					$safe_file = build_file_path($safe_path, basename($file, \'.safe\'));\r\n					if (file_exists($safe_file)) {\r\n						unlink($safe_file);\r\n					}\r\n				}\r\n			}\r\n		break;\r\n	}\r\n}\r\n\r\n// ------------------------\r\n// Callback for uploading a URL from the Files tab\r\nfunction smd_remote_file_create() {\r\n	global $file_base_path;\r\n}\r\n\r\n// ------------------------\r\n// Cheap redirect step to prevent Txp\'s internal file processing from trying to\r\n// move files that have already been relocated\r\nfunction smd_secure_uploaded() {\r\n}\r\n\r\n// ------------------------\r\nfunction smd_secure_file_write($filepath, $filename, $content=\'\', $writeMode=\'a\') {\r\n	// No need to actually write anything to the file right now\r\n	// TODO: use the file contents as a way to store meta info like max d/l count, start/expiry dates, etc\r\n\r\n	// Set the size just in case\r\n	smd_remote_set_size($filename);\r\n}\r\n\r\n// ------------------------\r\nfunction smd_secure_file_create($filepath, $filename, $content=\'\') {\r\n	$content = ($content) ? $content : \'smd_remote_file placeholder\'.n;\r\n	$tmp = tempnam(get_pref(\'tempdir\'), \'smd_\');\r\n	$handle = fopen($tmp, \'w\');\r\n	fwrite($handle, $content);\r\n	fclose($handle);\r\n	rename($tmp, $filepath);\r\n\r\n	// Set the size just in case\r\n	smd_remote_set_size($filename);\r\n}\r\n\r\n// ------------------------\r\n// Append a URL to the given file. If writeMode=\"w\" the whole file is replaced\r\nfunction smd_remote_file_write($filepath, $filename, $url, $writeMode=\'a\') {\r\n	// Read the whole file because we only want to add the URL if it\'s not there already\r\n	$lines = smd_remote_file_list($filepath, 0, 1);\r\n	if (!in_array($url, $lines) || $writeMode == \'w\') {\r\n		$handle = fopen($filepath, $writeMode);\r\n		fwrite($handle, $url.n);\r\n		fclose($handle);\r\n	}\r\n	// Set the size just in case\r\n	smd_remote_set_size($filename);\r\n}\r\n\r\n// ------------------------\r\n// Read the contents of the chosen file (full path required) and get lines from within, adding them to an array.\r\n//  $offset is where to start from. Normally 1 = 1st row, 2 = 2nd row and so on. 0 = a random row.\r\n//  $qty specifies how many rows to pull. 0 = unlimited.\r\nfunction smd_remote_file_list($fname, $qty=1, $offset=0) {\r\n	$out = array();\r\n	if (file_exists($fname)) {\r\n		$fd = fopen($fname, \'r\');\r\n		// Read the whole file in (yes there\'s the file() call, but fgets() is supposedly quicker on txt files)\r\n		$lines = array();\r\n		while (!feof($fd)) {\r\n			$line = rtrim(fgets($fd));\r\n			if ($line != \'\') {\r\n			   $lines[] = $line;\r\n			}\r\n		}\r\n		fclose ($fd);\r\n		if ($offset == 0) {\r\n			shuffle($lines);\r\n			$offset = 1;\r\n		}\r\n		$offset = ($offset > count($lines)) ? 1 : $offset;\r\n		$out = ($qty == 0) ? $lines : array_slice($lines, $offset-1, $qty);\r\n	}\r\n	return $out;\r\n}\r\n\r\n// ------------------------\r\nfunction smd_serve_secure_file($finfo, $id) {\r\n	global $pretext, $file_base_path;\r\n\r\n	$finfo[\'path\'] = (isset($finfo[\'path\'])) ? $finfo[\'path\'] : $file_base_path;\r\n	$fullpath = build_file_path($finfo[\'path\'], $finfo[\'filename\']);\r\n\r\n	if (is_file($fullpath)) {\r\n		$sent = 0;\r\n		header(\'Content-Description: File Download\');\r\n		header(\'Content-Type: application/octet-stream\');\r\n		header(\'Content-Disposition: attachment; filename=\"\' . basename($finfo[\'filename\']) . \'\"; size = \"\'.$finfo[\'size\'].\'\"\');\r\n		@ini_set(\'zlib.output_compression\', \'Off\');\r\n		@set_time_limit(0);\r\n		@ignore_user_abort(true);\r\n\r\n		if ($file = fopen($fullpath, \'rb\')) {\r\n			while(!feof($file) && (connection_status()==0)) {\r\n				echo fread($file, 1024*64);\r\n				$sent += (1024*64);\r\n				ob_flush();\r\n				flush();\r\n			}\r\n			fclose($file);\r\n\r\n			// Record download\r\n			if ((connection_status()==0) and !connection_aborted() ) {\r\n				safe_update(\'txp_file\', \'downloads=downloads+1\', \'id=\'.intval($id));\r\n				log_hit(\'200\');\r\n			} else {\r\n				$pretext[\'request_uri\'] .= ($sent >= $finfo[\'size\'])\r\n					? \'#aborted\'\r\n					: \'#aborted-at-\'.floor($sent*100 / $finfo[\'size\']).\'%\';\r\n				log_hit(\'200\');\r\n			}\r\n\r\n			// Secure download down: Game Over\r\n			exit(0);\r\n		}\r\n	}\r\n\r\n	return 404;\r\n}\r\n\r\n// ------------------------\r\n// Called just before a download is initiated\r\nfunction smd_remote_download($evt, $stp) {\r\n	global $pretext, $id, $file_base_path, $file_error;\r\n	if ($evt == \'file_download\') {\r\n		if (isset($file_error)) {\r\n			// Kludge. Since Txp forbids any downloads of non-live statuses by effectively removing any trace\r\n			// of the reference to the file from $pretext, we need to re-discover the file\'s ID from the URL.\r\n			// Most of this is taken from the beginning of pretext() in publish.php. By the time pretext ends\r\n			// the data has been scrubbed so a callback on pretext_end is too late\r\n			$request_uri = preg_replace(\"|^https?://[^/]+|i\",\"\",serverSet(\'REQUEST_URI\'));\r\n			// IIS fix\r\n			if (!$request_uri and serverSet(\'SCRIPT_NAME\'))\r\n				$request_uri = serverSet(\'SCRIPT_NAME\').( (serverSet(\'QUERY_STRING\')) ? \'?\'.serverSet(\'QUERY_STRING\') : \'\');\r\n				// another IIS fix\r\n			if (!$request_uri and serverSet(\'argv\')) {\r\n				$argv = serverSet(\'argv\');\r\n				$request_uri = @substr($argv[0], strpos($argv[0], \';\') + 1);\r\n			}\r\n\r\n			$subpath = preg_quote(preg_replace(\"/https?:\\/\\/.*(\\/.*)/Ui\",\"$1\",hu),\"/\");\r\n			$req = preg_replace(\"/^$subpath/i\",\"/\",$request_uri);\r\n\r\n			extract(chopUrl($req));\r\n			switch ($u1) {\r\n				case urldecode(strtolower(urlencode(gTxt(\'file_download\')))):\r\n				$id = (!empty($u2)) ? $u2 : \'\';\r\n			}\r\n		}\r\n\r\n		// Get the \"true\" filename info and its status\r\n		$real_file = safe_row(\'filename, size, status, author\', \'txp_file\', \'id=\'.intval($id));\r\n		$statuses = do_list(get_pref(\'smd_remote_download_status\'));\r\n\r\n		// Handle secure downloads via non-docroot location or hidden/pending status\r\n		if ( (in_array($real_file[\'status\'], $statuses)) || (strpos($real_file[\'filename\'], \'.safe\') > 0) ) {\r\n			if (strpos($real_file[\'filename\'], \'.safe\') > 0) {\r\n				$real_file[\'path\'] = get_pref(\'smd_remote_secure_path\');\r\n				$real_file[\'filename\'] = basename($real_file[\'filename\'], \'.safe\');\r\n			}\r\n\r\n			if (function_exists(\'smd_um_has_privs\')) {\r\n				// Serve the file if the current logged in user is a member of the file.download or file.download.status_num areas\r\n				if (smd_um_has_privs(array(\'area\' => \'file.download, file.download.\'.$real_file[\'status\']), \'OK\')) {\r\n					$file_error = smd_serve_secure_file($real_file, $id);\r\n				}\r\n			}\r\n\r\n			// Serve the file if:\r\n			// a) the current logged in user is the one who uploaded the file, or\r\n			// b) the privs of the logged in user match the one(s) in the pref\r\n			$smd_rem_ili = is_logged_in();\r\n			if ( ($real_file[\'author\'] == $smd_rem_ili[\'name\']) || (in_list($smd_rem_ili[\'privs\'], get_pref(\'smd_remote_limit_privs\'))) ) {\r\n				$file_error = smd_serve_secure_file($real_file, $id);\r\n			}\r\n		}\r\n\r\n		// Serve the file if it\'s a remote download\r\n		if ( (!isset($file_error)) && (strpos($real_file[\'filename\'], \'.link\') > 0) ) {\r\n			$choose = 0;\r\n			// Get any overriding value of smd_choose from the query string\r\n			if ($pretext[\'qs\']) {\r\n				list($qkey, $qval) = explode(\'=\', $pretext[\'qs\']);\r\n				if ($qkey == \'smd_choose\') {\r\n					if ($qval > 0) {\r\n						$choose = intval($qval);\r\n					}\r\n				}\r\n			}\r\n\r\n			// The file size, however, is that of the remote file\r\n			$remoteURL = smd_remote_file_list(build_file_path($file_base_path, $real_file[\'filename\']), 1, $choose);\r\n			if (count($remoteURL) > 0) {\r\n				$url = $remoteURL[0];\r\n				// Test the file exists: slow, but reduces false download count increments\r\n				$hdrs = smd_get_headers($url, 1);\r\n				$allkey = strtolower(implode(\' \', array_keys($hdrs)));\r\n				if (strpos($allkey, \'200\') > 0 && strpos($allkey, \'ok\') > 0) {\r\n					header(\'Content-Description: File Download\');\r\n					header(\'Content-Type: application/octet-stream\');\r\n					header(\'Content-Disposition: attachment; filename=\"\' . basename($real_file[\'filename\']) . \'\"; size = \"\'.$real_file[\'size\'].\'\"\');\r\n					// Fix for lame IE 6 pdf bug on servers configured to send cache headers\r\n					header(\'Cache-Control: private\');\r\n					@ini_set(\'zlib.output_compression\', \'Off\');\r\n					@set_time_limit(0);\r\n					@ignore_user_abort(true);\r\n\r\n					// Hand-off to the remote file\r\n					header(\'Location: \' . $url);\r\n\r\n					// record download if the file sizes match\r\n					if (intval($hdrs[\'content-length\']) == intval($real_file[\'size\'])) {\r\n						safe_update(\'txp_file\', \'downloads=downloads+1\', \'id=\'.intval($id));\r\n						log_hit(\'200\');\r\n					}\r\n					// remote download done: game over\r\n					exit(0);\r\n\r\n				} else {\r\n					$file_error = 404;\r\n				}\r\n			} else {\r\n				$file_error = 404;\r\n			}\r\n		}\r\n	}\r\n\r\n	// remote/secure download not done - leave to Txp to handle error or \"local\" file download\r\n	return;\r\n}\r\n\r\n// ------------------------\r\n// Inject javascript onto the admin-side pages\r\nfunction smd_remote_js($content) {\r\n	$out = \'<script type=\"text/javascript\">\'.n;\r\n	$out .= \'jQuery(function() {\' .n. $content .n. \'});\';\r\n	$out .= \'</script>\'.n;\r\n	return $out;\r\n}\r\n\r\n// ------------------------\r\n// A bit like PHP 5\'s get_headers() but using curl to bypass servers disabling allow_url_fopen\r\nfunction smd_get_headers($url, $format=0) {\r\n	if (!$url) {\r\n		return false;\r\n	}\r\n\r\n	$uinfo=parse_url($url);\r\n	if (is_callable(\'checkdnsrr\') && !checkdnsrr($uinfo[\'host\'].\'.\',\'MX\') && !checkdnsrr($uinfo[\'host\'].\'.\',\'A\')) {\r\n		return false;\r\n	}\r\n\r\n	$headers = array();\r\n	$url = str_replace(\' \', \'%20\', trim($url));\r\n\r\n	$ch = curl_init($url);\r\n	curl_setopt($ch, CURLOPT_NOBODY, true);\r\n	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\r\n	curl_setopt($ch, CURLOPT_HEADER, true);\r\n	curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);\r\n	$data = curl_exec($ch);\r\n	curl_close($ch);\r\n\r\n	if ($data) {\r\n		if($format == 1) {\r\n			foreach(preg_split(\"/((\\r?\\n)|(\\n?\\r))/\", $data) as $line) {\r\n				$line = trim($line);\r\n				if ($line == \'\') continue;\r\n\r\n				$exploded = explode(\': \', $line);\r\n				$key = strtolower(array_shift($exploded));\r\n				if($key == $line) {\r\n					// No delimiter: take the whole line\r\n					$headers[] = $line;\r\n				} else {\r\n					$headers[$key] = substr($line, strlen($key)+2);\r\n				}\r\n				unset($key);\r\n			}\r\n		} else {\r\n			$headers[] = $data;\r\n		}\r\n\r\n		return $headers;\r\n	} else {\r\n		return false;\r\n	}\r\n}\r\n\r\n// *****************************\r\n// ******** PUBLIC TAGS ********\r\n// *****************************\r\n// Blow-by-blow equivalent of file_download_link, just a remote/secure aware version.\r\n// Adds the choose attribute. Defaults to 0 ( = random, for load balancing). Specify\r\n// any higher integer to grab that particular entry from the file (if it exists, else use 1st)\r\nfunction smd_file_download_link($atts, $thing = NULL) {\r\n	global $thisfile;\r\n	extract(lAtts(array(\r\n		\'filename\'    => \'\',\r\n		\'id\'          => \'\',\r\n		\'choose\'      => \'0\',\r\n		\'show_link\'   => \'0\', // Deprecated\r\n		\'show_suffix\' => \'0\',\r\n		\'obfuscate\'   => \'0\',\r\n	), $atts));\r\n\r\n	if (isset($atts[\'show_link\'])) {\r\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'show_suffix\')), E_USER_NOTICE);\r\n		$show_suffix = $show_link;\r\n		unset($show_link);\r\n	}\r\n\r\n	// Remove the extra attributes not in the original tag\r\n	unset($atts[\'choose\']);\r\n	unset($atts[\'show_suffix\']);\r\n	unset($atts[\'obfuscate\']);\r\n\r\n	$keys = array(\'smd_choose\' => $choose);\r\n	$out = file_download_link($atts, $thing);\r\n\r\n	if (strpos($out, \'.link\') !== false) {\r\n		$origLink = explode(\'\"\', $out);\r\n		$idx = (count($origLink) == 1) ? 0 : 1;\r\n		$origLink[$idx] = (($show_suffix) ? $origLink[$idx] : str_replace(\'.link\', \'\', $origLink[$idx])) . join_qs($keys); // Will ignore join_qs if choose is 0\r\n		$origLink[$idx] = ($obfuscate) ? dirname($origLink[$idx]) . \'/\' . substr(md5(basename($origLink[$idx])), 0, $obfuscate) : $origLink[$idx];\r\n		$out = implode(\'\"\', $origLink);\r\n	} else if (strpos($out, \'.safe\') !== false) {\r\n		$out = ($show_suffix) ? $out : str_replace(\'.safe\', \'\', $out);\r\n	}\r\n\r\n	return $out;\r\n}\r\n\r\n// ------------------------\r\n// Equivalent to file_download_name but optionally removes the .link / .safe\r\nfunction smd_file_download_name($atts) {\r\n	global $thisfile;\r\n	extract(lAtts(array(\r\n		\'show_link\'   => \'0\',\r\n		\'show_suffix\' => \'0\',\r\n	), $atts));\r\n	assert_file();\r\n\r\n	if (isset($atts[\'show_link\'])) {\r\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'show_suffix\')), E_USER_NOTICE);\r\n		$show_suffix = $show_link;\r\n		unset($show_link);\r\n	}\r\n\r\n	$out = $thisfile[\'filename\'];\r\n	if (!$show_suffix) {\r\n		if (strpos($out, \'.link\') !== false) {\r\n			$out = str_replace(\'.link\', \'\', $out);\r\n		} else if (strpos($out, \'.safe\') !== false) {\r\n			$out = str_replace(\'.safe\', \'\', $out);\r\n		}\r\n	}\r\n\r\n	return $out;\r\n}\r\n\r\n// ------------------------\r\n// Add an image to the download form which, by default, is based on the filename of the download itself\r\nfunction smd_file_download_image($atts) {\r\n	global $thisfile;\r\n\r\n	extract(lAtts(array(\r\n		\'filename\'  => \'\',\r\n		\'id\'        => \'\',\r\n		\'extension\' => \'jpg\',\r\n		\'ifmissing\' => \'?ref\',\r\n		\'thumb\'     => \'0\', // Deprecated\r\n		\'thumbnail\' => \'0\',\r\n		\'class\'     => \'\',\r\n		\'wraptag\'   => \'\',\r\n	), $atts));\r\n\r\n	if (isset($atts[\'thumb\'])) {\r\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'thumbnail\')), E_USER_NOTICE);\r\n		$thumbnail = $thumb;\r\n		unset($thumb);\r\n	}\r\n\r\n	if ($filename == \'\' && $id == \'\') {\r\n		assert_file();\r\n		$filename = $thisfile[\'filename\'];\r\n	}\r\n\r\n	$filename = str_replace(\'.link\', \'\', $filename) . (($extension==\'\') ? \'\' : \'.\'.$extension);\r\n\r\n	$img = \'\';\r\n	if ($id) {\r\n		$img = ($thumbnail==0) ? @image(array(\'id\' => $id, \'class\' => $class, \'wraptag\' => $wraptag)) : @thumbnail(array(\'id\' => $id, \'class\' => $class, \'wraptag\' => $wraptag));\r\n	} else if ((strpos($filename, \'http://\') === 0) || (strpos($filename, \'/\') === 0)) {\r\n		$img = (($wraptag==\'\') ? \'\' : \'<\'.$wraptag. (($class==\'\') ? \'\' : \' class=\"\'.$class.\'\"\') .\'>\') . \'<img src=\"\'.$filename.\'\"\'. (($wraptag==\'\' && $class) ? \' class=\"\'.$class.\'\"\' : \'\') . \'/>\'. (($wraptag==\'\') ? \'\' : \'</\'.$wraptag.\'>\');\r\n	} else {\r\n		$img = ($thumbnail==0) ? @image(array(\'name\' => $filename, \'class\' => $class, \'wraptag\' => $wraptag)) : @thumbnail(array(\'name\' => $filename, \'class\' => $class, \'wraptag\' => $wraptag));\r\n	}\r\n	$wrapper = (($wraptag==\'\') ? \'@@REPL\' : \'<\'.$wraptag. (($class==\'\') ? \'\' : \' class=\"\'.$class.\'\"\') .\'>@@REPL</\'.$wraptag.\'>\');\r\n	if (strpos($ifmissing, \'?ref\') === 0) {\r\n		$display = ($id) ? $id : $filename;\r\n		$missing = str_replace(\'@@REPL\', $display, $wrapper);\r\n	} else if (strpos($ifmissing, \'?image\') === 0) {\r\n		$imgParts = explode(\':\', $ifmissing);\r\n		if (count($imgParts) == 2) {\r\n			$imgOpts = array();\r\n			if(is_numeric($imgParts[1])) {\r\n				$imgOpts[\'id\'] = $imgParts[1];\r\n			} else {\r\n				$imgOpts[\'name\'] = $imgParts[1];\r\n			}\r\n			$missing = str_replace(\'@@REPL\', (($thumbnail==0) ? @image($imgOpts) : @thumbnail($imgOpts)), $wrapper);\r\n		} else {\r\n			$missing = \'\';\r\n		}\r\n	} else if ($ifmissing == \'\') {\r\n		$missing = \'\';\r\n	} else {\r\n		$missing = str_replace(\'@@REPL\', $ifmissing, $wrapper);\r\n	}\r\n	return ($img) ? $img : $missing;\r\n}\r\n\r\n// ------------------------\r\n// Check if the given file exists in the filesystem\r\nfunction smd_if_file_exists($atts, $thing) {\r\n	global $file_base_path;\r\n\r\n	extract(lAtts(array(\r\n		\'filename\' => \'\',\r\n		\'id\' => \'\',\r\n		\'path\' => \'\',\r\n	), $atts));\r\n\r\n	if ($id) {\r\n		$disfile = fileDownloadFetchInfo(\'id = \'.intval($id));\r\n		$filename = $disfile[\'filename\'];\r\n	}\r\n\r\n	$path = ($path) ? $path : $file_base_path;\r\n	$file_exists = file_exists(build_file_path($path, $filename));\r\n	return parse(EvalElse($thing, $file_exists));\r\n}\r\n\r\n// ------------------------\r\n// Set up the global prefs for the plugin\r\nfunction smd_remote_get_prefs() {\r\n	global $smd_remote_prefs;\r\n\r\n	$smd_remote_prefs = array(\r\n		\'smd_remote_mechanism\' => array(\r\n			\'html\'     => \'checkboxset\',\r\n			\'type\'     => PREF_HIDDEN,\r\n			\'position\' => 10,\r\n			\'content\'  => array(\'remote\' => \'smd_remote_internet\', \'secure\' => \'smd_remote_secure_loc\'),\r\n			\'default\'  => \'remote,secure\',\r\n		),\r\n		\'smd_remote_secure_path\' => array(\r\n			\'html\'     => \'text_input\',\r\n			\'type\'     => PREF_HIDDEN,\r\n			\'position\' => 20,\r\n			\'default\'  => get_pref(\'path_to_site\'),\r\n		),\r\n		\'smd_remote_download_status\' => array(\r\n			\'html\'     => \'text_input\',\r\n			\'type\'     => PREF_HIDDEN,\r\n			\'position\' => 30,\r\n			\'default\'  => \'2\',\r\n		),\r\n		\'smd_remote_limit_privs\' => array(\r\n			\'html\'     => \'selectlist\',\r\n			\'type\'     => PREF_HIDDEN,\r\n			\'position\' => 40,\r\n			\'content\'  => array(get_groups(), false),\r\n			\'default\'  => \'0\',\r\n		),\r\n	);\r\n}','/**\r\n * smd_remote_file\r\n *\r\n * A Textpattern CMS plugin for storing and serving files from off-site and secure (non-docroot) locations\r\n *  -> Manage links to cloud-based files directly from the Txp Files panel, as if they were native\r\n *  -> Multiple sources for the same remote file supported, for load balancing / bandwidth saving\r\n *  -> Manage files in non-web-accessible (i.e. secure) locations on your host server\r\n *  -> Secure files can optionally be served to logged-in users using Hidden / Pending status\r\n *  -> No modifications to Txp required\r\n\r\n * @author Stef Dawson\r\n * @link   http://stefdawson.com/\r\n */\r\n\r\n// TODO:\r\n//  * Set URL / secure for missing files (remote_update / file_save step needs to move file if file names different and update DB)\r\n//  * Safe parameters inside the .safe file to govern access restriction, expiry, download count, etc\r\n//  * is_writable() folder checks, and other error traps\r\nglobal $smd_remote_prefs;\r\nsmd_remote_get_prefs();\r\n\r\nif (@txpinterface === \'admin\') {\r\n	global $event;\r\n\r\n	add_privs(\'smd_remote_prefs\', \'1\');\r\n	add_privs(\'plugin_prefs.smd_remote_file\', \'1\');\r\n	register_tab(\'extensions\', \'smd_remote_prefs\', gTxt(\'smd_remote_tab_name\'));\r\n	register_callback(\'smd_remote_dispatcher\', \'smd_remote_prefs\');\r\n	register_callback(\'smd_remote_dispatcher\', \'plugin_prefs.smd_remote_file\');\r\n	register_callback(\'smd_remote_welcome\', \'plugin_lifecycle.smd_remote_file\');\r\n\r\n	if($event === \'file\') {\r\n		register_callback(\'smd_remote_file\', \'file\', \'file_replace\', 1);\r\n		register_callback(\'smd_remote_file\', \'file\', \'file_create\', 1);\r\n		register_callback(\'smd_remote_file\', \'file\', \'file_insert\', 1);\r\n		register_callback(\'smd_remote_file_update\', \'file\', \'file_save\');\r\n		register_callback(\'smd_remote_pre_multi_edit\', \'file\', \'file_multi_edit\', 1);\r\n		register_callback(\'smd_remote_multi_edit\', \'file\', \'file_multi_edit\');\r\n		register_callback(\'smd_remote_file_upload\', \'file_ui\', \'upload_form\');\r\n		register_callback(\'smd_remote_file_edit\', \'file\');\r\n	}\r\n}\r\n\r\nif (txpinterface === \'public\') {\r\n	register_callback(\'smd_remote_download\', \'file_download\');\r\n}\r\n\r\n// This privilege can be overridden with smd_user_manager\r\n// Caveat: Privs panel list needs to be saved from smd_um first\r\nadd_privs(\'file.download\', get_pref(\'smd_remote_limit_privs\', $smd_remote_prefs[\'smd_remote_limit_privs\'][\'default\']));\r\n\r\n// *********************************\r\n// ******** ADMIN INTERFACE ********\r\n// *********************************\r\n// Plugin jump off point\r\nfunction smd_remote_dispatcher($evt, $stp) {\r\n	global $event;\r\n\r\n	$available_steps = array(\r\n		\'smd_secure_uploaded\' => false,\r\n		\'smd_remote_prefs\'    => false,\r\n	);\r\n\r\n	if (!$stp or !bouncer($stp, $available_steps)) {\r\n		$stp = \'smd_remote_prefs\';\r\n	}\r\n	$stp();\r\n}\r\n\r\n// ------------------------\r\n// Initialization\r\nfunction smd_remote_welcome($evt, $stp) {\r\n	$msg = \'\';\r\n	switch ($stp) {\r\n		case \'installed\':\r\n			$msg = \'Externalise your files.\';\r\n			break;\r\n		case \'deleted\':\r\n			smd_remote_prefs_remove(0);\r\n			break;\r\n	}\r\n	return $msg;\r\n}\r\n\r\n// ------------------------\r\n// Delete plugin prefs\r\nfunction smd_remote_prefs_remove($showpane=1) {\r\n	$message = \'\';\r\n\r\n	safe_delete(\'txp_prefs\', \"name=\'smd_remote_%\'\");\r\n\r\n	if ($showpane) {\r\n		$message = gTxt(\'smd_remote_prefs_deleted\');\r\n		smd_remote_prefs($message);\r\n	}\r\n}\r\n\r\n// ------------------------\r\n// Handle the prefs panel\r\nfunction smd_remote_prefs($msg=\'\') {\r\n	global $smd_remote_prefs;\r\n\r\n	// Re-fetch the group list in case smd_um has modified it since plugin load time\r\n	$all = get_groups();\r\n	$all_bar_none = array_keys($all);\r\n	array_shift($all_bar_none);\r\n	$smd_remote_prefs[\'smd_remote_limit_privs\'][\'content\'] = array($all + array(join(\',\', $all_bar_none) => gTxt(\'smd_remote_all\')), false);\r\n\r\n	if (ps(\'smd_remote_pref_save\')) {\r\n		foreach ($smd_remote_prefs as $idx => $prefobj) {\r\n			$val = ps($idx);\r\n			$val = (is_array($val)) ? join(\', \', $val) : $val;\r\n			set_pref($idx, $val, \'smd_remote\', $prefobj[\'type\'], $prefobj[\'html\'], $prefobj[\'position\']);\r\n		}\r\n\r\n		$msg = gTxt(\'preferences_saved\');\r\n	}\r\n\r\n	pagetop(gTxt(\'smd_remote_tab_name\'), $msg);\r\n\r\n	$out = array();\r\n	$out[] = \'<div class=\"plugin-column\">\';\r\n	$out[] = \'<form name=\"smd_remote_prefs\" id=\"smd_remote_prefs\" action=\"index.php\" method=\"post\">\';\r\n	$out[] = eInput(\'smd_remote_prefs\').sInput(\'smd_remote_pref_save\');\r\n	$out[] = startTable();\r\n	$out[] = tr(tdcs(strong(gTxt(\'smd_remote_pref_legend\')), 2));\r\n	foreach ($smd_remote_prefs as $idx => $prefobj) {\r\n		$subout = array();\r\n		$subout[] = tda(\'<label for=\"\'.$idx.\'\">\'.gTxt($idx).\'</label>\');\r\n		$val = get_pref($idx, $prefobj[\'default\'], 1);\r\n		switch ($prefobj[\'html\']) {\r\n			case \'text_input\':\r\n				$subout[] = fInputCell($idx, $val, \'\', \'\', \'\', $idx);\r\n			break;\r\n			case \'yesnoradio\':\r\n				$subout[] = tda(yesnoRadio($idx, $val));\r\n			break;\r\n			case \'checkboxset\':\r\n				$vals = do_list($val);\r\n				$lclout = array();\r\n				foreach ($prefobj[\'content\'] as $cb => $val) {\r\n					$checked = in_array($cb, $vals);\r\n					$lclout[] = checkbox($idx.\'[]\', $cb, $checked). gTxt($val);\r\n				}\r\n				$subout[] = tda(join(n, $lclout));\r\n			break;\r\n			case \'selectlist\':\r\n				$subout[] = tda(selectInput($idx, $prefobj[\'content\'][0], $val, $prefobj[\'content\'][1]));\r\n			break;\r\n		}\r\n		$out[] = tr(join(n ,$subout));\r\n	}\r\n\r\n	$out[] = tr(tda(\'&nbsp;\') . tda(fInput(\'submit\', \'smd_remote_pref_save\', gTxt(\'save\'), \'publish\')));\r\n	$out[] = endTable().tInput();\r\n	$out[] = \'</form></div>\';\r\n\r\n	echo join(n, $out);\r\n}\r\n\r\n// ------------------------\r\n// Add markup around the upload forms\r\nfunction smd_remote_file_upload($evt, $stp, $def) {\r\n	global $smd_remote_prefs, $step;\r\n\r\n	$fid = gps(\'id\');\r\n\r\n	$rfhelpLink = \'<a target=\"_blank\"\'.\r\n			\' href=\"http://stefdawson.com/support/smd_remote_file_url_popup.html\"\'.\r\n			\' onclick=\"popWin(this.href); return false;\" class=\"pophelp\">?</a>\';\r\n/*	$sfhelpLink = \'<a target=\"_blank\"\'.\r\n			\' href=\"http://stefdawson.com/support/smd_remote_file_secure_popup.html\"\'.\r\n			\' onclick=\"popWin(this.href); return false;\" class=\"pophelp\">?</a>\';\r\n*/\r\n	$mech = get_pref(\'smd_remote_mechanism\', $smd_remote_prefs[\'smd_remote_mechanism\'][\'default\']);\r\n	$dosec = in_list(\'secure\', $mech);\r\n	$dorem = in_list(\'remote\', $mech);\r\n	$rs = array(\'filename\' => \'\');\r\n	if ($fid) {\r\n		$rs = safe_row(\'*\', \'txp_file\', \"id=\'\".doSlash($fid).\"\'\");\r\n	}\r\n\r\n	$show_rem = ((strpos($rs[\'filename\'], \'.link\') === false) && $step == \'file_edit\');\r\n	$is_safe = ((strpos($rs[\'filename\'], \'.safe\') !== false) && (($step == \'file_edit\') || ($step == \'file_replace\')));\r\n\r\n	$def = str_replace(\'</p>\',\r\n			(($dosec)\r\n				? sp.checkbox(\'smd_secure\',1,($is_safe ? 1 : 0))\r\n					. \' <label for=\"smd_secure\">\'.gTxt(\'smd_remote_secure\').\'</label>\'\r\n				: \'\'\r\n			)\r\n			. \'</p>\' .\r\n			(($dorem && !$show_rem && (!$is_safe))\r\n				? trim(form(graf(gTxt(\'smd_remote_url\').sp.$rfhelpLink.sp.fInput(\'text\', \'smd_remote_url\', \'\', \'edit\', gTxt(\'smd_remote_url_tooltip\'), \'\', \'32\').sp.\r\n						fInput(\'submit\', \'\', gTxt(\'smd_remote_upload\')))\r\n				))\r\n				: \'\'\r\n			),\r\n			$def);\r\n\r\n	return $def;\r\n}\r\n\r\n// ------------------------\r\n// Generic callback which is fired _before_ the Files page has loaded.\r\n// Intercepts any events/steps that deal with secure/remote files.\r\nfunction smd_remote_file($evt, $stp) {\r\n	global $file_base_path, $txp_user, $step, $theme;\r\n\r\n	extract(doSlash(gpsa(array(\'smd_remote_url\', \'smd_secure\', \'category\', \'permissions\', \'description\', \'title\'))));\r\n\r\n	$finfo = array(\r\n		\'title\'       => $title,\r\n		\'category\'    => $category,\r\n		\'permissions\' => $permissions,\r\n		\'description\' => $description,\r\n		\'status\'      => \'4\',\r\n		\'created\'     => \'now()\',\r\n		\'modified\'    => \'now()\',\r\n		\'author\'      => doSlash($txp_user),\r\n	);\r\n\r\n	if ($smd_remote_url) {\r\n		$url = trim($smd_remote_url);\r\n\r\n		// Only intercept remote files; leave everything else for Txp to manage\r\n		if (strpos($url, \'http\') === 0) {\r\n			$hdrs = smd_get_headers($url, 1);\r\n			$finfo[\'size\'] = ($hdrs === false || !isset($hdrs[\'content-length\'])) ? 1 : $hdrs[\'content-length\'];\r\n\r\n			// Make a filename and full path: unencoded\r\n			$dest_filename = basename(urldecode($url)).\'.link\';\r\n			$dest_filepath = build_file_path($file_base_path, $dest_filename);\r\n			$finfo[\'filename\'] = doSlash($dest_filename);\r\n\r\n			if (file_exists($dest_filepath)) {\r\n				smd_remote_file_write($dest_filepath, $dest_filename, $url);\r\n			} else {\r\n				// File doesn\'t exist so create it and put the URL inside\r\n				$tmp = tempnam(get_pref(\'tempdir\'), \'smd_\');\r\n				$handle = fopen($tmp, \'w\');\r\n				fwrite($handle, $url.n);\r\n				fclose($handle);\r\n				rename($tmp, $dest_filepath);\r\n\r\n				// Add the file to Txp\r\n				// Can\'t use file_db_add() because this step is pre txp_file.php being loaded :-(\r\n//				$ret = file_db_add(doSlash($dest_filename), $category, $permissions, $description, $size, $title);\r\n				$ret = smd_remote_file_insert($finfo);\r\n\r\n				// Fake the step so Txp\'s internal file upload step is not called\r\n				// TODO: success message\r\n				$step = \'smd_secure_uploaded\';\r\n			}\r\n		} else {\r\n			// TODO: Upload failed message\r\n			// gTxt(\'file_upload_failed\') . ((empty($smd_remote_url)) ? \' - \'.gTxt(\'upload_err_no_file\') : \'\');\r\n		}\r\n\r\n	} else if ($smd_secure) {\r\n		if ($stp == \'file_create\') {\r\n			$orig_filename = ps(\'filename\');\r\n			$dest_filename = sanitizeForFile($orig_filename);\r\n			$orig_filepath = build_file_path($file_base_path, $orig_filename);\r\n			$sz = filesize($orig_filepath);\r\n		} else {\r\n			// Get filenames and create full paths: unencoded\r\n			$fn = $_FILES[\'thefile\'][\'name\'];\r\n			$tn = $_FILES[\'thefile\'][\'tmp_name\'];\r\n			$sz = $_FILES[\'thefile\'][\'size\'];\r\n			if ($stp == \'file_replace\') {\r\n				// Replaced files keep the same file name as before (shrug, Txp)\r\n				$id = ps(\'id\');\r\n				$dest_filename = basename(safe_field(\'filename\', \'txp_file\', \'id=\'.doSlash($id)), \'.safe\');\r\n			} else {\r\n				$dest_filename = sanitizeForFile($fn);\r\n			}\r\n		}\r\n		$dest_safename = $dest_filename.\'.safe\';\r\n		$dest_realpath = build_file_path(get_pref(\'smd_remote_secure_path\'), $dest_filename);\r\n		$dest_origpath = build_file_path($file_base_path, $dest_filename);\r\n		$dest_filepath = build_file_path($file_base_path, $dest_safename);\r\n		$finfo[\'filename\'] = doSlash($dest_safename);\r\n		$finfo[\'size\'] = $sz;\r\n\r\n		if (file_exists($dest_filepath)) {\r\n			// Update secure info for existing placeholder\r\n			smd_secure_file_write($dest_filepath, $dest_filename);\r\n		} else if ($stp == \'file_replace\') {\r\n			// File was insecure, now secure\r\n			safe_update(\'txp_file\', \"filename=\'\" . doSlash($dest_safename) . \"\'\", \"id=\'\" . doSlash($id) . \"\'\");\r\n			smd_secure_file_create($dest_filepath, $dest_filename);\r\n\r\n			if (file_exists($dest_origpath)) {\r\n				unlink($dest_origpath);\r\n			}\r\n		} else {\r\n			// File doesn\'t exist so create it\r\n			// Reserve file contents (3rd param) for future meta info use (e.g. start/expiry date, max download count, etc)\r\n			smd_secure_file_create($dest_filepath, $dest_filename);\r\n			$id = smd_remote_file_insert($finfo);\r\n		}\r\n\r\n		// Move the uploaded file to the secure location\r\n		if (isset($tn)) {\r\n			move_uploaded_file($tn, $dest_realpath);\r\n		} else {\r\n			rename($orig_filepath, $dest_realpath);\r\n		}\r\n		if (isset($id)) {\r\n			smd_remote_set_size($id);\r\n		}\r\n\r\n		// Fake the step so Txp\'s internal file upload step is not called\r\n		// TODO: success message\r\n		$step = \'smd_secure_uploaded\';\r\n\r\n	} else if ( ($stp == \'file_replace\') && !$smd_secure) {\r\n		$id = ps(\'id\');\r\n		$filename = safe_field(\'filename\', \'txp_file\', \'id=\'.doSlash($id));\r\n\r\n		if (strpos($filename, \'.safe\') !== false) {\r\n			// File used to be secure, now isn\'t so:\r\n			//  a) delete secure file\r\n			//  b) delete .safe file\r\n			//  c) rename DB entry to remove .safe\r\n			//  d) leave Txp to save the file as normal\r\n			$real_filename = basename($filename, \'.safe\');\r\n			$dest_file = build_file_path($file_base_path, $filename);\r\n			$safe_file = build_file_path(get_pref(\'smd_remote_secure_path\'), $real_filename);\r\n			safe_update(\'txp_file\', \"filename=\'\" . doSlash($real_filename) . \"\'\", \"filename=\'\" . doSlash($filename) . \"\'\");\r\n			unlink($dest_file);\r\n			unlink($safe_file);\r\n		}\r\n	}\r\n}\r\n\r\n// ------------------------\r\nfunction smd_remote_file_insert($finfo) {\r\n\r\n	$ret = safe_insert(\'txp_file\',\r\n		\"filename    = \'{$finfo[\'filename\']}\',\r\n		 title       = \'{$finfo[\'title\']}\',\r\n		 category    = \'{$finfo[\'category\']}\',\r\n		 permissions = \'{$finfo[\'permissions\']}\',\r\n		 description = \'{$finfo[\'description\']}\',\r\n		 status      = \'{$finfo[\'status\']}\',\r\n		 size        = \'{$finfo[\'size\']}\',\r\n		 created     = \'{$finfo[\'created\']}\',\r\n		 modified    = \'{$finfo[\'modified\']}\',\r\n		 author      = \'{$finfo[\'author\']}\'\r\n	\");\r\n\r\n	return $ret;\r\n}\r\n\r\n// ------------------------\r\n// Fired _after_ the Files page has loaded to handle insertion of\r\n// extra fields into the UI\r\nfunction smd_remote_file_edit($evt, $stp) {\r\n	global $file_base_path, $smd_remote_prefs;\r\n\r\n	$jsadd = array();\r\n\r\n	if ($stp == \'file_edit\' || $stp == \'file_replace\') {\r\n		$id = assert_int(gps(\'id\'));\r\n		// TODO: is there a global page var containing filename instead of re-requesting it from DB?\r\n		$rs = safe_row(\'filename\', \'txp_file\', \'id = \'. $id);\r\n\r\n		if (strpos($rs[\'filename\'], \'.link\') !== false) {\r\n			$filepath = build_file_path($file_base_path, $rs[\'filename\']);\r\n			$contents = smd_remote_file_list($filepath, 0, 1);\r\n\r\n			$ul_form = graf(gTxt(\'smd_remote_urls\').br.text_area(\'smd_remote_url\', \'100\', \'400\', implode(\"\\u000D\", $contents)));\r\n			$jsadd[] = \'jQuery(\".replace-file\").remove();\';\r\n			$jsadd[] = \'jQuery(\".edit-file-status\").before(\\\'\'.$ul_form.\'\\\');\';\r\n		} else if (strpos($rs[\'filename\'], \'.safe\') !== false) {\r\n			$filepath = build_file_path($file_base_path, $rs[\'filename\']);\r\n			$contents = smd_remote_file_list($filepath, 0, 1);\r\n\r\n			$ul_form = graf(gTxt(\'smd_remote_secure_opts\').br.text_area(\'smd_secure_opts\', \'100\', \'400\', implode(\"\\u000D\", $contents)));\r\n			$jsadd[] = \'jQuery(\".edit-file-status\").before(\\\'\'.$ul_form.\'\\\');\';\r\n		}\r\n	} else {\r\n		// Files panel main list page\r\n		$mech = get_pref(\'smd_remote_mechanism\', $smd_remote_prefs[\'smd_remote_mechanism\'][\'default\']);\r\n		$dosec = in_list(\'secure\', $mech);\r\n		if ($dosec) {\r\n			$markup = sp.checkbox(\'smd_secure\',1,0)\r\n					. \' <label for=\"smd_secure\">\'.gTxt(\'smd_remote_secure\').\'</label>\';\r\n			$jsadd[] = \'jQuery(\"#assign_file p\").append(\\\'\'.$markup.\'\\\');\';\r\n		}\r\n	}\r\n\r\n	// Inject any javascript onto the page\r\n	if ($jsadd) {\r\n		echo smd_remote_js(join(n, $jsadd));\r\n	}\r\n}\r\n\r\n// ------------------------\r\nfunction smd_remote_file_resync() {\r\n	global $file_base_path;\r\n\r\n	extract(gpsa(array(\'smd_remote_url\', \'smd_secure_opts\', \'id\')));\r\n	$id = assert_int($id);\r\n	$rs = safe_row(\'filename\',\'txp_file\',\'id = \'.$id);\r\n	$dest_filepath = build_file_path($file_base_path, $rs[\'filename\']);\r\n\r\n	if (strpos($rs[\'filename\'], \'.link\') !== false) {\r\n		// When a .link file is updated with a new set of URLs, the existing file name\r\n		// must remain unchanged.\r\n		$urls = explode(n, trim($smd_remote_url));\r\n		$real_filename = basename($rs[\'filename\'], \'.link\');\r\n\r\n		$valid_urls = array();\r\n		foreach ($urls as $url) {\r\n			$url = trim($url);\r\n			// Does the file start with http and end with the filename?\r\n			if ((strpos($url, \'http\') === 0) && (preg_match(\"/\".$real_filename.\"$/\", $url) === 1)) {\r\n				$valid_urls[] = $url;\r\n	      }\r\n		}\r\n		$valid_urls = array_unique($valid_urls);\r\n\r\n		smd_remote_file_write($dest_filepath, $rs[\'filename\'], join(n,$valid_urls), \'w\');\r\n	} else if (strpos($rs[\'filename\'], \'.safe\') !== false) {\r\n		$content = explode(n, trim($smd_secure_opts));\r\n		smd_secure_file_write($dest_filepath, $rs[\'filename\'], join(n,$content), \'w\');\r\n	}\r\n}\r\n\r\n// ------------------------\r\n// Every time a file is saved/edited, Txp recalculates its size from the file in the /files dir (grrr).\r\n// This is undesirable so it is replaced with the size of the remote/secure file instead.\r\nfunction smd_remote_file_update() {\r\n	extract(gpsa(array(\'id\')));\r\n	smd_remote_file_resync();\r\n	smd_remote_set_size($id);\r\n}\r\n\r\n// ------------------------\r\n// Sets the size of the given Txp database file to that of its corresponding \"real\" remote/secure file size\r\nfunction smd_remote_set_size($id_or_file) {\r\n	global $file_base_path;\r\n\r\n	if (is_numeric($id_or_file)) {\r\n		$filename = trim(safe_field(\'filename\', \'txp_file\', \'id=\'.intval($id_or_file)));\r\n	} else {\r\n		$filename = trim($id_or_file);\r\n	}\r\n\r\n	if (strpos($filename, \'.link\') !== false) {\r\n		$filepath = build_file_path($file_base_path, $filename);\r\n		$url = smd_remote_file_list($filepath, 1, 1);\r\n\r\n		if (count($url) > 0) {\r\n			$hdrs = smd_get_headers($url[0], 1);\r\n			$size = ($hdrs === false || !isset($hdrs[\'content-length\'])) ? 1 : $hdrs[\'content-length\'];\r\n			safe_update(\'txp_file\', \'size=\'.$size, \"filename=\'\".$filename.\"\'\");\r\n		}\r\n	} else if (strpos($filename, \'.safe\') !== false) {\r\n		$filepath = build_file_path(get_pref(\'smd_remote_secure_path\'), basename($filename, \'.safe\'));\r\n		$size = filesize($filepath);\r\n		safe_update(\'txp_file\', \'size=\'.$size, \"filename=\'\".$filename.\"\'\");\r\n	}\r\n}\r\n\r\n// ------------------------\r\n// Multi-delete is done in two passes.\r\n// Step 1) Grab a list of IDs that are about to be removed...\r\nfunction smd_remote_pre_multi_edit($evt, $stp) {\r\n	global $smd_remote_selected;\r\n\r\n	$selected = ps(\'selected\');\r\n	if ($selected && is_array($selected)) {\r\n		$selected = array_map(\'assert_int\', $selected);\r\n		$smd_remote_selected = safe_column(\'filename\', \'txp_file\', \'id in (\' . join(\',\', $selected) . \')\');\r\n	}\r\n}\r\n\r\n// ------------------------\r\n// Step 2) Effect changes to safe files if their counterpart .safe index file no longer exists\r\nfunction smd_remote_multi_edit($evt, $stp) {\r\n	global $smd_remote_selected, $file_base_path;\r\n\r\n	$method   = ps(\'edit_method\');\r\n\r\n	switch ($method) {\r\n		case \'delete\':\r\n			$safe_path = get_pref(\'smd_remote_secure_path\');\r\n			foreach ($smd_remote_selected as $file) {\r\n				$dest_filepath = build_file_path($file_base_path, $file);\r\n				if (!file_exists($dest_filepath)) {\r\n					$safe_file = build_file_path($safe_path, basename($file, \'.safe\'));\r\n					if (file_exists($safe_file)) {\r\n						unlink($safe_file);\r\n					}\r\n				}\r\n			}\r\n		break;\r\n	}\r\n}\r\n\r\n// ------------------------\r\n// Callback for uploading a URL from the Files tab\r\nfunction smd_remote_file_create() {\r\n	global $file_base_path;\r\n}\r\n\r\n// ------------------------\r\n// Cheap redirect step to prevent Txp\'s internal file processing from trying to\r\n// move files that have already been relocated\r\nfunction smd_secure_uploaded() {\r\n}\r\n\r\n// ------------------------\r\nfunction smd_secure_file_write($filepath, $filename, $content=\'\', $writeMode=\'a\') {\r\n	// No need to actually write anything to the file right now\r\n	// TODO: use the file contents as a way to store meta info like max d/l count, start/expiry dates, etc\r\n\r\n	// Set the size just in case\r\n	smd_remote_set_size($filename);\r\n}\r\n\r\n// ------------------------\r\nfunction smd_secure_file_create($filepath, $filename, $content=\'\') {\r\n	$content = ($content) ? $content : \'smd_remote_file placeholder\'.n;\r\n	$tmp = tempnam(get_pref(\'tempdir\'), \'smd_\');\r\n	$handle = fopen($tmp, \'w\');\r\n	fwrite($handle, $content);\r\n	fclose($handle);\r\n	rename($tmp, $filepath);\r\n\r\n	// Set the size just in case\r\n	smd_remote_set_size($filename);\r\n}\r\n\r\n// ------------------------\r\n// Append a URL to the given file. If writeMode=\"w\" the whole file is replaced\r\nfunction smd_remote_file_write($filepath, $filename, $url, $writeMode=\'a\') {\r\n	// Read the whole file because we only want to add the URL if it\'s not there already\r\n	$lines = smd_remote_file_list($filepath, 0, 1);\r\n	if (!in_array($url, $lines) || $writeMode == \'w\') {\r\n		$handle = fopen($filepath, $writeMode);\r\n		fwrite($handle, $url.n);\r\n		fclose($handle);\r\n	}\r\n	// Set the size just in case\r\n	smd_remote_set_size($filename);\r\n}\r\n\r\n// ------------------------\r\n// Read the contents of the chosen file (full path required) and get lines from within, adding them to an array.\r\n//  $offset is where to start from. Normally 1 = 1st row, 2 = 2nd row and so on. 0 = a random row.\r\n//  $qty specifies how many rows to pull. 0 = unlimited.\r\nfunction smd_remote_file_list($fname, $qty=1, $offset=0) {\r\n	$out = array();\r\n	if (file_exists($fname)) {\r\n		$fd = fopen($fname, \'r\');\r\n		// Read the whole file in (yes there\'s the file() call, but fgets() is supposedly quicker on txt files)\r\n		$lines = array();\r\n		while (!feof($fd)) {\r\n			$line = rtrim(fgets($fd));\r\n			if ($line != \'\') {\r\n			   $lines[] = $line;\r\n			}\r\n		}\r\n		fclose ($fd);\r\n		if ($offset == 0) {\r\n			shuffle($lines);\r\n			$offset = 1;\r\n		}\r\n		$offset = ($offset > count($lines)) ? 1 : $offset;\r\n		$out = ($qty == 0) ? $lines : array_slice($lines, $offset-1, $qty);\r\n	}\r\n	return $out;\r\n}\r\n\r\n// ------------------------\r\nfunction smd_serve_secure_file($finfo, $id) {\r\n	global $pretext, $file_base_path;\r\n\r\n	$finfo[\'path\'] = (isset($finfo[\'path\'])) ? $finfo[\'path\'] : $file_base_path;\r\n	$fullpath = build_file_path($finfo[\'path\'], $finfo[\'filename\']);\r\n\r\n	if (is_file($fullpath)) {\r\n		$sent = 0;\r\n		header(\'Content-Description: File Download\');\r\n		header(\'Content-Type: application/octet-stream\');\r\n		header(\'Content-Disposition: attachment; filename=\"\' . basename($finfo[\'filename\']) . \'\"; size = \"\'.$finfo[\'size\'].\'\"\');\r\n		@ini_set(\'zlib.output_compression\', \'Off\');\r\n		@set_time_limit(0);\r\n		@ignore_user_abort(true);\r\n\r\n		if ($file = fopen($fullpath, \'rb\')) {\r\n			while(!feof($file) && (connection_status()==0)) {\r\n				echo fread($file, 1024*64);\r\n				$sent += (1024*64);\r\n				ob_flush();\r\n				flush();\r\n			}\r\n			fclose($file);\r\n\r\n			// Record download\r\n			if ((connection_status()==0) and !connection_aborted() ) {\r\n				safe_update(\'txp_file\', \'downloads=downloads+1\', \'id=\'.intval($id));\r\n				log_hit(\'200\');\r\n			} else {\r\n				$pretext[\'request_uri\'] .= ($sent >= $finfo[\'size\'])\r\n					? \'#aborted\'\r\n					: \'#aborted-at-\'.floor($sent*100 / $finfo[\'size\']).\'%\';\r\n				log_hit(\'200\');\r\n			}\r\n\r\n			// Secure download down: Game Over\r\n			exit(0);\r\n		}\r\n	}\r\n\r\n	return 404;\r\n}\r\n\r\n// ------------------------\r\n// Called just before a download is initiated\r\nfunction smd_remote_download($evt, $stp) {\r\n	global $pretext, $id, $file_base_path, $file_error;\r\n	if ($evt == \'file_download\') {\r\n		if (isset($file_error)) {\r\n			// Kludge. Since Txp forbids any downloads of non-live statuses by effectively removing any trace\r\n			// of the reference to the file from $pretext, we need to re-discover the file\'s ID from the URL.\r\n			// Most of this is taken from the beginning of pretext() in publish.php. By the time pretext ends\r\n			// the data has been scrubbed so a callback on pretext_end is too late\r\n			$request_uri = preg_replace(\"|^https?://[^/]+|i\",\"\",serverSet(\'REQUEST_URI\'));\r\n			// IIS fix\r\n			if (!$request_uri and serverSet(\'SCRIPT_NAME\'))\r\n				$request_uri = serverSet(\'SCRIPT_NAME\').( (serverSet(\'QUERY_STRING\')) ? \'?\'.serverSet(\'QUERY_STRING\') : \'\');\r\n				// another IIS fix\r\n			if (!$request_uri and serverSet(\'argv\')) {\r\n				$argv = serverSet(\'argv\');\r\n				$request_uri = @substr($argv[0], strpos($argv[0], \';\') + 1);\r\n			}\r\n\r\n			$subpath = preg_quote(preg_replace(\"/https?:\\/\\/.*(\\/.*)/Ui\",\"$1\",hu),\"/\");\r\n			$req = preg_replace(\"/^$subpath/i\",\"/\",$request_uri);\r\n\r\n			extract(chopUrl($req));\r\n			switch ($u1) {\r\n				case urldecode(strtolower(urlencode(gTxt(\'file_download\')))):\r\n				$id = (!empty($u2)) ? $u2 : \'\';\r\n			}\r\n		}\r\n\r\n		// Get the \"true\" filename info and its status\r\n		$real_file = safe_row(\'filename, size, status, author\', \'txp_file\', \'id=\'.intval($id));\r\n		$statuses = do_list(get_pref(\'smd_remote_download_status\'));\r\n\r\n		// Handle secure downloads via non-docroot location or hidden/pending status\r\n		if ( (in_array($real_file[\'status\'], $statuses)) || (strpos($real_file[\'filename\'], \'.safe\') > 0) ) {\r\n			if (strpos($real_file[\'filename\'], \'.safe\') > 0) {\r\n				$real_file[\'path\'] = get_pref(\'smd_remote_secure_path\');\r\n				$real_file[\'filename\'] = basename($real_file[\'filename\'], \'.safe\');\r\n			}\r\n\r\n			if (function_exists(\'smd_um_has_privs\')) {\r\n				// Serve the file if the current logged in user is a member of the file.download or file.download.status_num areas\r\n				if (smd_um_has_privs(array(\'area\' => \'file.download, file.download.\'.$real_file[\'status\']), \'OK\')) {\r\n					$file_error = smd_serve_secure_file($real_file, $id);\r\n				}\r\n			}\r\n\r\n			// Serve the file if:\r\n			// a) the current logged in user is the one who uploaded the file, or\r\n			// b) the privs of the logged in user match the one(s) in the pref\r\n			$smd_rem_ili = is_logged_in();\r\n			if ( ($real_file[\'author\'] == $smd_rem_ili[\'name\']) || (in_list($smd_rem_ili[\'privs\'], get_pref(\'smd_remote_limit_privs\'))) ) {\r\n				$file_error = smd_serve_secure_file($real_file, $id);\r\n			}\r\n		}\r\n\r\n		// Serve the file if it\'s a remote download\r\n		if ( (!isset($file_error)) && (strpos($real_file[\'filename\'], \'.link\') > 0) ) {\r\n			$choose = 0;\r\n			// Get any overriding value of smd_choose from the query string\r\n			if ($pretext[\'qs\']) {\r\n				list($qkey, $qval) = explode(\'=\', $pretext[\'qs\']);\r\n				if ($qkey == \'smd_choose\') {\r\n					if ($qval > 0) {\r\n						$choose = intval($qval);\r\n					}\r\n				}\r\n			}\r\n\r\n			// The file size, however, is that of the remote file\r\n			$remoteURL = smd_remote_file_list(build_file_path($file_base_path, $real_file[\'filename\']), 1, $choose);\r\n			if (count($remoteURL) > 0) {\r\n				$url = $remoteURL[0];\r\n				// Test the file exists: slow, but reduces false download count increments\r\n				$hdrs = smd_get_headers($url, 1);\r\n				$allkey = strtolower(implode(\' \', array_keys($hdrs)));\r\n				if (strpos($allkey, \'200\') > 0 && strpos($allkey, \'ok\') > 0) {\r\n					header(\'Content-Description: File Download\');\r\n					header(\'Content-Type: application/octet-stream\');\r\n					header(\'Content-Disposition: attachment; filename=\"\' . basename($real_file[\'filename\']) . \'\"; size = \"\'.$real_file[\'size\'].\'\"\');\r\n					// Fix for lame IE 6 pdf bug on servers configured to send cache headers\r\n					header(\'Cache-Control: private\');\r\n					@ini_set(\'zlib.output_compression\', \'Off\');\r\n					@set_time_limit(0);\r\n					@ignore_user_abort(true);\r\n\r\n					// Hand-off to the remote file\r\n					header(\'Location: \' . $url);\r\n\r\n					// record download if the file sizes match\r\n					if (intval($hdrs[\'content-length\']) == intval($real_file[\'size\'])) {\r\n						safe_update(\'txp_file\', \'downloads=downloads+1\', \'id=\'.intval($id));\r\n						log_hit(\'200\');\r\n					}\r\n					// remote download done: game over\r\n					exit(0);\r\n\r\n				} else {\r\n					$file_error = 404;\r\n				}\r\n			} else {\r\n				$file_error = 404;\r\n			}\r\n		}\r\n	}\r\n\r\n	// remote/secure download not done - leave to Txp to handle error or \"local\" file download\r\n	return;\r\n}\r\n\r\n// ------------------------\r\n// Inject javascript onto the admin-side pages\r\nfunction smd_remote_js($content) {\r\n	$out = \'<script type=\"text/javascript\">\'.n;\r\n	$out .= \'jQuery(function() {\' .n. $content .n. \'});\';\r\n	$out .= \'</script>\'.n;\r\n	return $out;\r\n}\r\n\r\n// ------------------------\r\n// A bit like PHP 5\'s get_headers() but using curl to bypass servers disabling allow_url_fopen\r\nfunction smd_get_headers($url, $format=0) {\r\n	if (!$url) {\r\n		return false;\r\n	}\r\n\r\n	$uinfo=parse_url($url);\r\n	if (is_callable(\'checkdnsrr\') && !checkdnsrr($uinfo[\'host\'].\'.\',\'MX\') && !checkdnsrr($uinfo[\'host\'].\'.\',\'A\')) {\r\n		return false;\r\n	}\r\n\r\n	$headers = array();\r\n	$url = str_replace(\' \', \'%20\', trim($url));\r\n\r\n	$ch = curl_init($url);\r\n	curl_setopt($ch, CURLOPT_NOBODY, true);\r\n	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\r\n	curl_setopt($ch, CURLOPT_HEADER, true);\r\n	curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);\r\n	$data = curl_exec($ch);\r\n	curl_close($ch);\r\n\r\n	if ($data) {\r\n		if($format == 1) {\r\n			foreach(preg_split(\"/((\\r?\\n)|(\\n?\\r))/\", $data) as $line) {\r\n				$line = trim($line);\r\n				if ($line == \'\') continue;\r\n\r\n				$exploded = explode(\': \', $line);\r\n				$key = strtolower(array_shift($exploded));\r\n				if($key == $line) {\r\n					// No delimiter: take the whole line\r\n					$headers[] = $line;\r\n				} else {\r\n					$headers[$key] = substr($line, strlen($key)+2);\r\n				}\r\n				unset($key);\r\n			}\r\n		} else {\r\n			$headers[] = $data;\r\n		}\r\n\r\n		return $headers;\r\n	} else {\r\n		return false;\r\n	}\r\n}\r\n\r\n// *****************************\r\n// ******** PUBLIC TAGS ********\r\n// *****************************\r\n// Blow-by-blow equivalent of file_download_link, just a remote/secure aware version.\r\n// Adds the choose attribute. Defaults to 0 ( = random, for load balancing). Specify\r\n// any higher integer to grab that particular entry from the file (if it exists, else use 1st)\r\nfunction smd_file_download_link($atts, $thing = NULL) {\r\n	global $thisfile;\r\n	extract(lAtts(array(\r\n		\'filename\'    => \'\',\r\n		\'id\'          => \'\',\r\n		\'choose\'      => \'0\',\r\n		\'show_link\'   => \'0\', // Deprecated\r\n		\'show_suffix\' => \'0\',\r\n		\'obfuscate\'   => \'0\',\r\n	), $atts));\r\n\r\n	if (isset($atts[\'show_link\'])) {\r\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'show_suffix\')), E_USER_NOTICE);\r\n		$show_suffix = $show_link;\r\n		unset($show_link);\r\n	}\r\n\r\n	// Remove the extra attributes not in the original tag\r\n	unset($atts[\'choose\']);\r\n	unset($atts[\'show_suffix\']);\r\n	unset($atts[\'obfuscate\']);\r\n\r\n	$keys = array(\'smd_choose\' => $choose);\r\n	$out = file_download_link($atts, $thing);\r\n\r\n	if (strpos($out, \'.link\') !== false) {\r\n		$origLink = explode(\'\"\', $out);\r\n		$idx = (count($origLink) == 1) ? 0 : 1;\r\n		$origLink[$idx] = (($show_suffix) ? $origLink[$idx] : str_replace(\'.link\', \'\', $origLink[$idx])) . join_qs($keys); // Will ignore join_qs if choose is 0\r\n		$origLink[$idx] = ($obfuscate) ? dirname($origLink[$idx]) . \'/\' . substr(md5(basename($origLink[$idx])), 0, $obfuscate) : $origLink[$idx];\r\n		$out = implode(\'\"\', $origLink);\r\n	} else if (strpos($out, \'.safe\') !== false) {\r\n		$out = ($show_suffix) ? $out : str_replace(\'.safe\', \'\', $out);\r\n	}\r\n\r\n	return $out;\r\n}\r\n\r\n// ------------------------\r\n// Equivalent to file_download_name but optionally removes the .link / .safe\r\nfunction smd_file_download_name($atts) {\r\n	global $thisfile;\r\n	extract(lAtts(array(\r\n		\'show_link\'   => \'0\',\r\n		\'show_suffix\' => \'0\',\r\n	), $atts));\r\n	assert_file();\r\n\r\n	if (isset($atts[\'show_link\'])) {\r\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'show_suffix\')), E_USER_NOTICE);\r\n		$show_suffix = $show_link;\r\n		unset($show_link);\r\n	}\r\n\r\n	$out = $thisfile[\'filename\'];\r\n	if (!$show_suffix) {\r\n		if (strpos($out, \'.link\') !== false) {\r\n			$out = str_replace(\'.link\', \'\', $out);\r\n		} else if (strpos($out, \'.safe\') !== false) {\r\n			$out = str_replace(\'.safe\', \'\', $out);\r\n		}\r\n	}\r\n\r\n	return $out;\r\n}\r\n\r\n// ------------------------\r\n// Add an image to the download form which, by default, is based on the filename of the download itself\r\nfunction smd_file_download_image($atts) {\r\n	global $thisfile;\r\n\r\n	extract(lAtts(array(\r\n		\'filename\'  => \'\',\r\n		\'id\'        => \'\',\r\n		\'extension\' => \'jpg\',\r\n		\'ifmissing\' => \'?ref\',\r\n		\'thumb\'     => \'0\', // Deprecated\r\n		\'thumbnail\' => \'0\',\r\n		\'class\'     => \'\',\r\n		\'wraptag\'   => \'\',\r\n	), $atts));\r\n\r\n	if (isset($atts[\'thumb\'])) {\r\n		trigger_error(gTxt(\'deprecated_attribute\', array(\'{name}\' => \'thumbnail\')), E_USER_NOTICE);\r\n		$thumbnail = $thumb;\r\n		unset($thumb);\r\n	}\r\n\r\n	if ($filename == \'\' && $id == \'\') {\r\n		assert_file();\r\n		$filename = $thisfile[\'filename\'];\r\n	}\r\n\r\n	$filename = str_replace(\'.link\', \'\', $filename) . (($extension==\'\') ? \'\' : \'.\'.$extension);\r\n\r\n	$img = \'\';\r\n	if ($id) {\r\n		$img = ($thumbnail==0) ? @image(array(\'id\' => $id, \'class\' => $class, \'wraptag\' => $wraptag)) : @thumbnail(array(\'id\' => $id, \'class\' => $class, \'wraptag\' => $wraptag));\r\n	} else if ((strpos($filename, \'http://\') === 0) || (strpos($filename, \'/\') === 0)) {\r\n		$img = (($wraptag==\'\') ? \'\' : \'<\'.$wraptag. (($class==\'\') ? \'\' : \' class=\"\'.$class.\'\"\') .\'>\') . \'<img src=\"\'.$filename.\'\"\'. (($wraptag==\'\' && $class) ? \' class=\"\'.$class.\'\"\' : \'\') . \'/>\'. (($wraptag==\'\') ? \'\' : \'</\'.$wraptag.\'>\');\r\n	} else {\r\n		$img = ($thumbnail==0) ? @image(array(\'name\' => $filename, \'class\' => $class, \'wraptag\' => $wraptag)) : @thumbnail(array(\'name\' => $filename, \'class\' => $class, \'wraptag\' => $wraptag));\r\n	}\r\n	$wrapper = (($wraptag==\'\') ? \'@@REPL\' : \'<\'.$wraptag. (($class==\'\') ? \'\' : \' class=\"\'.$class.\'\"\') .\'>@@REPL</\'.$wraptag.\'>\');\r\n	if (strpos($ifmissing, \'?ref\') === 0) {\r\n		$display = ($id) ? $id : $filename;\r\n		$missing = str_replace(\'@@REPL\', $display, $wrapper);\r\n	} else if (strpos($ifmissing, \'?image\') === 0) {\r\n		$imgParts = explode(\':\', $ifmissing);\r\n		if (count($imgParts) == 2) {\r\n			$imgOpts = array();\r\n			if(is_numeric($imgParts[1])) {\r\n				$imgOpts[\'id\'] = $imgParts[1];\r\n			} else {\r\n				$imgOpts[\'name\'] = $imgParts[1];\r\n			}\r\n			$missing = str_replace(\'@@REPL\', (($thumbnail==0) ? @image($imgOpts) : @thumbnail($imgOpts)), $wrapper);\r\n		} else {\r\n			$missing = \'\';\r\n		}\r\n	} else if ($ifmissing == \'\') {\r\n		$missing = \'\';\r\n	} else {\r\n		$missing = str_replace(\'@@REPL\', $ifmissing, $wrapper);\r\n	}\r\n	return ($img) ? $img : $missing;\r\n}\r\n\r\n// ------------------------\r\n// Check if the given file exists in the filesystem\r\nfunction smd_if_file_exists($atts, $thing) {\r\n	global $file_base_path;\r\n\r\n	extract(lAtts(array(\r\n		\'filename\' => \'\',\r\n		\'id\' => \'\',\r\n		\'path\' => \'\',\r\n	), $atts));\r\n\r\n	if ($id) {\r\n		$disfile = fileDownloadFetchInfo(\'id = \'.intval($id));\r\n		$filename = $disfile[\'filename\'];\r\n	}\r\n\r\n	$path = ($path) ? $path : $file_base_path;\r\n	$file_exists = file_exists(build_file_path($path, $filename));\r\n	return parse(EvalElse($thing, $file_exists));\r\n}\r\n\r\n// ------------------------\r\n// Set up the global prefs for the plugin\r\nfunction smd_remote_get_prefs() {\r\n	global $smd_remote_prefs;\r\n\r\n	$smd_remote_prefs = array(\r\n		\'smd_remote_mechanism\' => array(\r\n			\'html\'     => \'checkboxset\',\r\n			\'type\'     => PREF_HIDDEN,\r\n			\'position\' => 10,\r\n			\'content\'  => array(\'remote\' => \'smd_remote_internet\', \'secure\' => \'smd_remote_secure_loc\'),\r\n			\'default\'  => \'remote,secure\',\r\n		),\r\n		\'smd_remote_secure_path\' => array(\r\n			\'html\'     => \'text_input\',\r\n			\'type\'     => PREF_HIDDEN,\r\n			\'position\' => 20,\r\n			\'default\'  => get_pref(\'path_to_site\'),\r\n		),\r\n		\'smd_remote_download_status\' => array(\r\n			\'html\'     => \'text_input\',\r\n			\'type\'     => PREF_HIDDEN,\r\n			\'position\' => 30,\r\n			\'default\'  => \'2\',\r\n		),\r\n		\'smd_remote_limit_privs\' => array(\r\n			\'html\'     => \'selectlist\',\r\n			\'type\'     => PREF_HIDDEN,\r\n			\'position\' => 40,\r\n			\'content\'  => array(get_groups(), false),\r\n			\'default\'  => \'0\',\r\n		),\r\n	);\r\n}','970a79c2d51fde9cb6e0f78f5826316e',1,5,3),
	('rah_change_passwords',1,'Jukka Svahn','http://rahforum.biz','1.0.1','Maintain and change user passwords','	<h1>rah_change_passwords</h1>\n\n	<p><a href=\"http://rahforum.biz/plugins/rah_change_passwords\" rel=\"nofollow\">Project page</a> | <a href=\"http://twitter.com/gocom\" rel=\"nofollow\">Twitter</a> | <a href=\"https://github.com/gocom/rah_change_passwords\" rel=\"nofollow\">GitHub</a> | <a href=\"http://forum.textpattern.com/viewtopic.php?id=28696\" rel=\"nofollow\">Support forum</a> | <a href=\"http://rahforum.biz/donate/rah_change_passwords\" rel=\"nofollow\">Donate</a></p>\n\n	<p>Rah_change_passwords is a <a href=\"http://textpattern.com\" rel=\"nofollow\">Textpattern</a> plugin that allows <a href=\"http://textpattern.net/wiki/index.php?title=User_Roles_and_Permissions\" rel=\"nofollow\">Publishers</a> to freely change any user&#8217;s password and resetting login sessions directly from the <a href=\"http://textpattern.net/wiki/index.php?title=Users\" rel=\"nofollow\">Users</a> panel.</p>\n\n	<p>The main difference to Textpattern <span class=\"caps\">CMS</span>&#8217; built in password resetting feature is that you as a Publisher, and the site&#8217;s main administrator, can change any user&#8217;s passwords to anything you want. As such, users do not need to receive emails containing automatically generated passwords or do password restoring themselves.</p>\n\n	<h2>Requirements</h2>\n\n	<p>Minimum requirements:</p>\n\n	<ul>\n		<li>Textpattern 4.5.0 or newer.</li>\n	</ul>\n\n	<h2>Installing</h2>\n\n	<p>Rah_change_passwords&#8217; installation follows the standard plugin installation steps.</p>\n\n	<ol>\n		<li>Download the plugin installation code.</li>\n		<li>Copy and paste the installation code into the <em>Install plugin</em> box of your Textpattern Plugin pane.</li>\n		<li>Run the automated setup.</li>\n		<li>After the setup is done, activate the plugin. Done.</li>\n	</ol>\n\n	<h2>Usage</h2>\n\n	<p>Rah_change_password will add extra options to the <a href=\"http://textpattern.net/wiki/index.php?title=Users\" rel=\"nofollow\">Users</a> panel&#8217;s editor. When logged in with a <a href=\"http://textpattern.net/wiki/index.php?title=User_Roles_and_Permissions\" rel=\"nofollow\">Publisher</a> account, you will see options to change the password when editing any user account. These added extra options include a way to reset login sessions, to change and optionally email passwords.</p>\n\n	<h2>Changelog</h2>\n\n	<h3>Version 1.0.1 &#8211; 2012/09/19</h3>\n\n	<ul>\n		<li>Added: Support links to the help file.</li>\n	</ul>\n\n	<h3>Version 1.0 &#8211; 2012/09/19</h3>\n\n	<ul>\n		<li>Added: Finnish translation.</li>\n		<li>Changed: Integrates with the native user editor located at the Users panel.</li>\n		<li>Changed: Removed embedded language strings and moved them to textpacks.</li>\n		<li>Changed: Now uses class methods, and requires <span class=\"caps\">PHP</span> 5.</li>\n		<li>Improved: Textpattern 4.5.0 compatibility, look and feel.</li>\n		<li>Now requires Textpattern 4.5.0 or newer.</li>\n	</ul>\n\n	<h3>Version 0.8 &#8211; 2011/11/22</h3>\n\n	<ul>\n		<li>Fixed: Missing language string.</li>\n		<li>Changed: Menu label to title case.</li>\n	</ul>\n\n	<h3>Version 0.7 &#8211; 2011/11/19</h3>\n\n	<ul>\n		<li>Added: <code>autocomplete=&quot;off&quot;</code> to the inputs too.</li>\n		<li>Changed: Shortened admin-side step names to simple <code>edit</code> and <code>save</code>.</li>\n		<li>Removed: That header and documentation link in effort to make the pane look more native.</li>\n	</ul>\n\n	<h3>Version 0.6 &#8211; 2011/06/18</h3>\n\n	<ul>\n		<li>Fixed: Changed &#8220;Yes&#8221; and &#8220;No&#8221; to language strings.</li>\n		<li>Added: Now takes advantage of <span class=\"caps\">CSRF</span> protection introduced in Textpattern v4.4.1.</li>\n		<li>Dropped backwards compatibility layer used from v0.4 to 0.5. Users using older Textpattern version can still keep using <a href=\"http://rahforum.biz/plugins/rah_change_passwords/versions\" rel=\"nofollow\">older versions of rah_change_passwords</a>.</li>\n		<li>Now requires Textpattern version 4.4.1 or newer.</li>\n	</ul>\n\n	<h3>Version 0.5 &#8211; 2011/06/01</h3>\n\n	<ul>\n		<li>Added: Disabled password autocompletion by adding <code>autocomplete=&quot;off&quot;</code> to the form.</li>\n		<li>Added: The interface now has language string support.</li>\n		<li>Changed: Now only accepts requests sent as <span class=\"caps\">POST</span>. <span class=\"caps\">GET</span>s are ignored by the password changer.</li>\n	</ul>\n\n	<h3>Version 0.4 &#8211; 2011/03/23</h3>\n\n	<ul>\n		<li>Added <a href=\"http://code.google.com/p/textpattern/source/detail?r=3488\" rel=\"nofollow\"><span class=\"caps\">PHP</span>ass</a> support while keeping compatibility with older <span class=\"caps\">TXP</span> versions (v4.3.0 and older).</li>\n		<li>Added option to reset user&#8217;s current session.</li>\n		<li>Remembers the field values if returned to the form because of an error.</li>\n		<li>Small wording and styling changes.</li>\n	</ul>\n\n	<h3>Version 0.3 &#8211; 2010/10/25</h3>\n\n	<ul>\n		<li>Changed the <em>Email the password to the user?</em> dropdown (select field) to radio buttons.</li>\n		<li>Changed the plugin type to the newer <em>Admin only</em>.</li>\n		<li>Removed inline <span class=\"caps\">CSS</span>.</li>\n		<li>Removed unused <span class=\"caps\">HTML</span> IDs.</li>\n		<li>Now requires Textpattern version 4.0.7 or newer.</li>\n	</ul>\n\n	<h3>Version 0.2 &#8211; 2010/06/01</h3>\n\n	<ul>\n		<li>Added check against if password, user or confirmation password is empty.</li>\n		<li>Added option to not email the password.</li>\n		<li>Now checks that the database update was successful before sending email.</li>\n		<li>Now by default the user dropdown has no user selected. Reduces the change of accidentally resetting Joe instead of John.</li>\n		<li>Updated the styling.</li>\n	</ul>\n\n	<h3>Version 0.1 &#8211; 2008/10/24</h3>\n\n	<ul>\n		<li>Initial release.</li>\n	</ul>','\n\n/**\n * Rah_change_passwords plugin for Textpattern CMS.\n *\n * @author Jukka Svahn\n * @date 2008-\n * @license GNU GPLv2\n * @link http://rahforum.biz/plugins/rah_change_passwords\n *\n * Copyright (C) 2012 Jukka Svahn <http://rahforum.biz>\n * Licensed under GNU Genral Public License version 2\n * http://www.gnu.org/licenses/gpl-2.0.html\n */\n\n	new rah_change_passwords();\n\nclass rah_change_passwords {\n	\n	/**\n	 * Constructor\n	 */\n	\n	public function __construct() {\n		add_privs(\'rah_change_passwords\', \'1\');\n		register_callback(array($this, \'pane\'), \'author_ui\', \'extend_detail_form\');\n		register_callback(array($this, \'save\'), \'admin\', \'author_save\');\n		register_callback(array($this, \'remove_newpass\'), \'admin_side\', \'head_end\');\n	}\n	\n	/**\n	 * Removes the \"Change your password\" button\n	 */\n	\n	public function remove_newpass() {\n		\n		global $event;\n		\n		if($event != \'admin\' || !has_privs(\'admin.edit\')) {\n			return;\n		}\n		\n		$js = <<<EOF\n			$(document).ready(function() {\n				$(\'#users_control a\').filter(function() {\n					return $(this).attr(\'href\') === \'?event=admin&step=new_pass_form\';\n				}).remove();\n			});\nEOF;\n\n		echo script_js($js);\n	}\n\n	/**\n	 * Adds options to the Users panel\n	 */\n	\n	public function pane($event, $step, $void, $r) {\n		\n		global $theme, $txp_user;\n		\n		if(!$r || !isset($r[\'user_id\'])) {\n			return;\n		}\n		\n		if(!has_privs(\'rah_change_passwords\') && $txp_user !== $r[\'name\']) {\n			return;\n		}\n		\n		$msg = escape_js($theme->announce_async(array(gTxt(\'rah_change_passwords_confirm_error\'), E_ERROR)));\n		\n		$js = <<<EOF\n			$(document).ready(function(){\n				$(\'#user_edit, #rah_change_passwords_confirm, #rah_change_passwords_confirm_pass\').attr(\'autocomplete\', \'off\');\n				\n				function validate_pass() {\n					var form = {\n						pass : $(\'#rah_change_passwords_pass\').val(),\n						conf : $(\'#rah_change_passwords_confirm\').val()\n					};\n					\n					if(form.pass === \'\' && form.conf === \'\') {\n						return true;\n					}\n					\n					return (form.pass === form.conf);\n				}\n\n				$(\'#user_edit\').submit(function(){\n					if(!validate_pass()) {\n						$.globalEval(\"{$msg}\");\n						return false;\n					}\n				});\n			});\nEOF;\n\n		return \n			tag(gTxt(\'rah_change_passwords\'), \'h3\').n.\n			\n			inputLabel(__CLASS__.\'_pass\', fInput(\'password\', __CLASS__.\'_pass\', \'\', \'\', \'\', \'\', INPUT_REGULAR, \'\', __CLASS__.\'_pass\'), __CLASS__.\'_pass\').n.\n				\n			inputLabel(__CLASS__.\'_confirm\', fInput(\'password\', __CLASS__.\'_confirm\', \'\', \'\', \'\', \'\', INPUT_REGULAR, \'\', __CLASS__.\'_confirm\'), __CLASS__.\'_confirm\').n.\n			\n			inputLabel(__CLASS__.\'_email_pass\', yesnoradio(__CLASS__.\'_email_pass\', 0, \'\', __CLASS__.\'_email_pass\'), \'\', __CLASS__.\'_email_pass\').n.\n			\n			($txp_user !== $r[\'name\'] ?\n				inputLabel(__CLASS__.\'_reset_session\', yesnoradio(__CLASS__.\'_reset_session\', 0, \'\', __CLASS__.\'_reset_session\'), \'\', __CLASS__.\'_reset_session\').n : \'\'\n			).\n			\n			script_js($js);\n	}\n\n	/**\n	 * Changes a password\n	 */\n\n	public function save() {\n		\n		extract(doSlash(psa(array(\n			\'user_id\',\n		))));\n		\n		global $sitename, $txp_user, $theme;\n		\n		foreach(array(\'pass\', \'confirm\', \'email_pass\', \'reset_session\') as $name) {\n			$$name = ps(__CLASS__.\'_\'.$name);\n		}\n		\n		if(!$user_id) {\n			return;\n		}\n		\n		$rs = \n			safe_row(\n				\'email, name\',\n				\'txp_users\',\n				\"user_id=\'\".doSlash($user_id).\"\' LIMIT 0, 1\"\n			);\n		\n		if(!$rs || (!has_privs(\'rah_change_passwords\') && $txp_user !== $rs[\'name\'])) {\n			return;\n		}\n		\n		$sql = array();\n		\n		if($reset_session && $txp_user !== $rs[\'name\']) {\n			$sql[] = \"nonce=\'\".doSlash(md5(uniqid(mt_rand(), TRUE))).\"\'\";\n		}\n		\n		if($pass) {\n		\n			if($pass !== $confirm) {\n				echo $theme->announce(array(gTxt(\'rah_change_passwords_confirm_error\'), E_ERROR));\n				return;\n			}\n			\n			include_once txpath.\'/include/txp_auth.php\';\n			$sql[] = \"pass=\'\".doSlash(txp_hash_password($pass)).\"\'\";\n		}\n		\n		if(!$sql) {\n			return;\n		}\n		\n		if(\n			safe_update(\n				\'txp_users\',\n				implode(\',\', $sql),\n				\"user_id=\'\".doSlash($user_id).\"\'\"\n			) === false\n		) {\n			echo $theme->announce(array(gTxt(\'rah_change_passwords_update_failed\'), E_ERROR));\n			return;\n		}\n		\n		if(!$pass) {\n			return;\n		}\n		\n		if(!$email_pass) {\n			echo $theme->announce(gTxt(\'rah_change_passwords_changed\'));\n			return;\n		}\n		\n		extract($rs);\n		\n		$message = \n			gTxt(\'greeting\').\' \'.$name.\',\'.n.n.\n			gTxt(\'your_password_is\').\': \'.$pass.n.n.\n			gTxt(\'log_in_at\').\': \'.hu.\'textpattern/index.php\'\n		;\n\n		if(txpMail($email, \"[$sitename] \".gTxt(\'your_new_password\'), $message) === false) {\n			echo $theme->announce(array(gTxt(\'rah_change_passwords_mailing_failed\', array(\'{email}\' => $email)), E_ERROR));\n			return;\n		}\n\n		echo $theme->announce(gTxt(\'rah_change_passwords_mailed\', array(\'{email}\' => $email)));\n	}\n}\n\n','\n\n/**\n * Rah_change_passwords plugin for Textpattern CMS.\n *\n * @author Jukka Svahn\n * @date 2008-\n * @license GNU GPLv2\n * @link http://rahforum.biz/plugins/rah_change_passwords\n *\n * Copyright (C) 2012 Jukka Svahn <http://rahforum.biz>\n * Licensed under GNU Genral Public License version 2\n * http://www.gnu.org/licenses/gpl-2.0.html\n */\n\n	new rah_change_passwords();\n\nclass rah_change_passwords {\n	\n	/**\n	 * Constructor\n	 */\n	\n	public function __construct() {\n		add_privs(\'rah_change_passwords\', \'1\');\n		register_callback(array($this, \'pane\'), \'author_ui\', \'extend_detail_form\');\n		register_callback(array($this, \'save\'), \'admin\', \'author_save\');\n		register_callback(array($this, \'remove_newpass\'), \'admin_side\', \'head_end\');\n	}\n	\n	/**\n	 * Removes the \"Change your password\" button\n	 */\n	\n	public function remove_newpass() {\n		\n		global $event;\n		\n		if($event != \'admin\' || !has_privs(\'admin.edit\')) {\n			return;\n		}\n		\n		$js = <<<EOF\n			$(document).ready(function() {\n				$(\'#users_control a\').filter(function() {\n					return $(this).attr(\'href\') === \'?event=admin&step=new_pass_form\';\n				}).remove();\n			});\nEOF;\n\n		echo script_js($js);\n	}\n\n	/**\n	 * Adds options to the Users panel\n	 */\n	\n	public function pane($event, $step, $void, $r) {\n		\n		global $theme, $txp_user;\n		\n		if(!$r || !isset($r[\'user_id\'])) {\n			return;\n		}\n		\n		if(!has_privs(\'rah_change_passwords\') && $txp_user !== $r[\'name\']) {\n			return;\n		}\n		\n		$msg = escape_js($theme->announce_async(array(gTxt(\'rah_change_passwords_confirm_error\'), E_ERROR)));\n		\n		$js = <<<EOF\n			$(document).ready(function(){\n				$(\'#user_edit, #rah_change_passwords_confirm, #rah_change_passwords_confirm_pass\').attr(\'autocomplete\', \'off\');\n				\n				function validate_pass() {\n					var form = {\n						pass : $(\'#rah_change_passwords_pass\').val(),\n						conf : $(\'#rah_change_passwords_confirm\').val()\n					};\n					\n					if(form.pass === \'\' && form.conf === \'\') {\n						return true;\n					}\n					\n					return (form.pass === form.conf);\n				}\n\n				$(\'#user_edit\').submit(function(){\n					if(!validate_pass()) {\n						$.globalEval(\"{$msg}\");\n						return false;\n					}\n				});\n			});\nEOF;\n\n		return \n			tag(gTxt(\'rah_change_passwords\'), \'h3\').n.\n			\n			inputLabel(__CLASS__.\'_pass\', fInput(\'password\', __CLASS__.\'_pass\', \'\', \'\', \'\', \'\', INPUT_REGULAR, \'\', __CLASS__.\'_pass\'), __CLASS__.\'_pass\').n.\n				\n			inputLabel(__CLASS__.\'_confirm\', fInput(\'password\', __CLASS__.\'_confirm\', \'\', \'\', \'\', \'\', INPUT_REGULAR, \'\', __CLASS__.\'_confirm\'), __CLASS__.\'_confirm\').n.\n			\n			inputLabel(__CLASS__.\'_email_pass\', yesnoradio(__CLASS__.\'_email_pass\', 0, \'\', __CLASS__.\'_email_pass\'), \'\', __CLASS__.\'_email_pass\').n.\n			\n			($txp_user !== $r[\'name\'] ?\n				inputLabel(__CLASS__.\'_reset_session\', yesnoradio(__CLASS__.\'_reset_session\', 0, \'\', __CLASS__.\'_reset_session\'), \'\', __CLASS__.\'_reset_session\').n : \'\'\n			).\n			\n			script_js($js);\n	}\n\n	/**\n	 * Changes a password\n	 */\n\n	public function save() {\n		\n		extract(doSlash(psa(array(\n			\'user_id\',\n		))));\n		\n		global $sitename, $txp_user, $theme;\n		\n		foreach(array(\'pass\', \'confirm\', \'email_pass\', \'reset_session\') as $name) {\n			$$name = ps(__CLASS__.\'_\'.$name);\n		}\n		\n		if(!$user_id) {\n			return;\n		}\n		\n		$rs = \n			safe_row(\n				\'email, name\',\n				\'txp_users\',\n				\"user_id=\'\".doSlash($user_id).\"\' LIMIT 0, 1\"\n			);\n		\n		if(!$rs || (!has_privs(\'rah_change_passwords\') && $txp_user !== $rs[\'name\'])) {\n			return;\n		}\n		\n		$sql = array();\n		\n		if($reset_session && $txp_user !== $rs[\'name\']) {\n			$sql[] = \"nonce=\'\".doSlash(md5(uniqid(mt_rand(), TRUE))).\"\'\";\n		}\n		\n		if($pass) {\n		\n			if($pass !== $confirm) {\n				echo $theme->announce(array(gTxt(\'rah_change_passwords_confirm_error\'), E_ERROR));\n				return;\n			}\n			\n			include_once txpath.\'/include/txp_auth.php\';\n			$sql[] = \"pass=\'\".doSlash(txp_hash_password($pass)).\"\'\";\n		}\n		\n		if(!$sql) {\n			return;\n		}\n		\n		if(\n			safe_update(\n				\'txp_users\',\n				implode(\',\', $sql),\n				\"user_id=\'\".doSlash($user_id).\"\'\"\n			) === false\n		) {\n			echo $theme->announce(array(gTxt(\'rah_change_passwords_update_failed\'), E_ERROR));\n			return;\n		}\n		\n		if(!$pass) {\n			return;\n		}\n		\n		if(!$email_pass) {\n			echo $theme->announce(gTxt(\'rah_change_passwords_changed\'));\n			return;\n		}\n		\n		extract($rs);\n		\n		$message = \n			gTxt(\'greeting\').\' \'.$name.\',\'.n.n.\n			gTxt(\'your_password_is\').\': \'.$pass.n.n.\n			gTxt(\'log_in_at\').\': \'.hu.\'textpattern/index.php\'\n		;\n\n		if(txpMail($email, \"[$sitename] \".gTxt(\'your_new_password\'), $message) === false) {\n			echo $theme->announce(array(gTxt(\'rah_change_passwords_mailing_failed\', array(\'{email}\' => $email)), E_ERROR));\n			return;\n		}\n\n		echo $theme->announce(gTxt(\'rah_change_passwords_mailed\', array(\'{email}\' => $email)));\n	}\n}\n\n','36973c5ef5360e023e880a5a5fc883b0',3,5,0),
	('adi_notes',1,'Adi Gilbert','http://www.greatoceanmedia.com.au/','1.2','Leave notes for Textpattern users','	<h1><strong>adi_notes</strong> &#8211; Leave notes for Textpattern users</h1>\n\n	<p>This plugin gives you:</p>\n\n	<ul>\n		<li>new tabs under Home, Content, Presentation and Admin to present your pearls of wisdom</li>\n		<li>public &amp; private notes embedded in all Textpattern admin pages</li>\n		<li>a tab under Extensions, to set up <strong>adi_notes</strong></li>\n	</ul>\n\n	<h2><strong>Installation</strong></h2>\n\n	<p><i>Installation of <strong>adi_notes</strong> adds a new table to your Textpattern database which should not interfere with anything else. That said, if you are of a cautious frame of mind then I can thoroughly recommend <a href=\"http://forum.textpattern.com/viewtopic.php?id=10395\" rel=\"nofollow\">rss_admin_db_manager</a> to do database backups before installation.</i></p>\n\n	<p>Once the plugin is installed and activated, go to its Options page and click &#8220;Install&#8221;.</p>\n\n	<h2><strong>Upgrading adi_notes</strong></h2>\n\n	<p>When you upgrade <strong>adi_notes</strong> you may be prompted to perform an upgrade.  To do this, simply visit the <strong>adi_notes</strong> plugin Options page &amp; the upgrade will be performed automatically.  Until this is done the note tabs &amp; embedded notes will be unavailable.</p>\n\n	<p>Although a backup of your notes will be made during the upgrade process it is recommended that you make an independent copy as well.</p>\n\n	<h2><strong>adi_notes admin tab</strong></h2>\n\n	<p>Users with sufficient privileges will see the <strong>adi_notes</strong> admin tab under Extensions.  This gives you functionality to:</p>\n\n	<ul>\n		<li>toggle note tab visibility on/off</li>\n		<li>set privilege levels of who can edit public notes</li>\n		<li>change position of embedded notes</li>\n		<li>change note styles</li>\n		<li>choose between Textile or TinyMCE</li>\n	</ul>\n\n	<h2><strong>Public &amp; Private</strong></h2>\n\n	<p><em>Public</em> notes are visible to all users but can only be added/edited by an Admin user (i.e. a user with sufficiently elevated privileges).  Public notes can either be note tabs or embedded notes.</p>\n\n	<p><em>Private</em> notes can be added by all users (including &#8220;Admin users&#8221;) but are only visible to the individual users. Private notes can only be embedded.</p>\n\n	<p>By default, &#8220;Admin users&#8221; are Publishers &amp; Managing Editors.  This may be changed in the adi_notes admin tab.</p>\n\n	<h2><strong>Note tabs</strong></h2>\n\n	<p>Note tabs will appear under Home, Content, Presentation or Admin depending on the visibility set in <strong>adi_notes</strong> admin.  After installation, the Content Notes tab is switched on by default.  If you make the Home note tab visible then the Home tab itself will automatically appear.</p>\n\n	<p>The Notes tabs are <em>public</em>, i.e. they will be visible to anyone who logs in to the Textpattern Admin interface.</p>\n\n	<p>Notes made in note tabs can only be edited by an &#8220;Admin user&#8221;.</p>\n\n	<h2><strong>Embedded notes</strong></h2>\n\n	<p>Embedded notes are available in all Textpattern admin pages. They appear either at the top or at bottom of the page.</p>\n\n	<p>All users see public notes. Private notes are only visible to individual users.</p>\n\n	<p>Only &#8220;Admin users&#8221; can add &amp; edit public notes. All users can add &amp; edit their own private notes.</p>\n\n	<h2><strong>TinyMCE</strong></h2>\n\n	<p>To use the TinyMCE <span class=\"caps\">WYSIWYG</span> editor, you must install it:</p>\n\n	<ul>\n		<li>as part of the <a href=\"http://forum.textpattern.com/viewtopic.php?id=13089\" rel=\"nofollow\">hak_tinymce</a> plugin</li>\n		<li>as a separate Javascript package</li>\n		<li>as a separate jQuery package</li>\n	</ul>\n\n	<p>If you choose to install it as a separate package then the path to the <code>tiny_mce</code> directory must be specified (as a path relative to the <i>textpattern</i> subdirectory) &#8211; the default is <i>../scripts/tiny_mce</i>, i.e. subdirectory <i>scripts</i> at the same level as <i>textpattern</i>.</p>\n\n	<p>Visit the <strong>adi_notes</strong> admin tab to see the various options.</p>\n\n	<h2><strong>Notes about adi_notes</strong></h2>\n\n	<ul>\n		<li>Uninstalling <strong>adi_notes</strong> from the plugin options page will delete all notes from the Textpattern database</li>\n		<li>Note tab visibility simply controls whether the tabs can be seen in the specified areas.  Notes that are not visible are not deleted, just hidden. Embedded notes are always visible, however they may be removed by deleting the note contents</li>\n		<li>Add/Edit links will only be seen by those sufficiently elevated in the privilege department</li>\n		<li>By default, notes are formatted using Textile (see above for TinyMCE support)</li>\n		<li>Options that are set blank in the <strong>adi_notes</strong> admin tab (or in the case of privileges, all switched off) will revert to defaults</li>\n	</ul>\n\n	<h2><strong>Textpack</strong></h2>\n\n	<p>To install the Textpack, go to the plugin&#8217;s Options tab and click on &#8220;Install textpack&#8221;.  This will copy &amp; install it from a remote server. The number of language strings installed for your language will be displayed.</p>\n\n	<p>If the Textpack installation fails (possibly due to an error accessing the remote site), the alternative is to click the <a href=\"http://www.greatoceanmedia.com.au/textpack\" rel=\"nofollow\">Textpack also available online</a> link.  This will take you to a website where the Textpack can be manually copied &amp; pasted into the <span class=\"caps\">TXP</span> Admin &#8211; Language tab.</p>\n\n	<p>Additions and corrections to the Textpack are welcome &#8211; please use the <a href=\"http://www.greatoceanmedia.com.au/textpack/?plugin=adi_notes\" rel=\"nofollow\">Textpack feedback</a> form.</p>\n\n	<h2><strong>Additional information</strong></h2>\n\n	<p>Support and further information can be obtained from the <a href=\"http://forum.textpattern.com/viewtopic.php?id=27957\" rel=\"nofollow\">Textpattern support forum</a>. A copy of this help is also available <a href=\"http://www.greatoceanmedia.com.au/txp/?plugin=adi_notes\" rel=\"nofollow\">online</a>.  More adi_plugins can be found <a href=\"http://www.greatoceanmedia.com.au/txp/\" rel=\"nofollow\">here</a>.</p>','/*\n	adi_notes - Leave notes for Textpattern users\n\n	Written by Adi Gilbert\n\n	Released under the GNU Lesser General Public License\n\n	Version history:\n		1.2		- TXP 4.5-ified\n				- code tidy up\n				- changed: admin tab name/title now \"Notes Admin\"\n				- now uses lifecycle events\n				- changed the default width (thanks RedFox)\n		1.1.2	- fix for multi-site installs (thanks AdamK)\n				- style tweak for Hive\n		1.1.1	- fixed: get_off_my_lawn error in new article tab in 4.4.1\n				- admin: style improvements for theme compatibility\n		1.1		- admin: moved install/uninstall etc to plugin options\n				- enhancement: embedded notes at top or bottom of page\n				- enhancement: embedded notes now available on all TXP admin pages\n				- enhancement: note tab for Home/Start tab\n				- enhancement: Textpack\n				- enhancement: TinyMCE support\n				- new options: custom note style, note width, note edit privs\n				- change: default note width now 900px (was 90%)\n		1.0.2	- enhancement: embedded notes for Variables tab (for maruchan) and also adi_menu, adi_prefs (for good measure)\n		1.0.1	- fix: uninitialised variable errors\n		1.0		- enhancement: footnotes\n				- enhancement: public/private notes\n				- enhancement: in situ editing\n		0.3		- added edit links & links from Admin tab to notes tabs\n		0.2		- fix: CREATE TABLE error (thanks gocom)\n		0.1		- initial release\n\n	Downgrade instructions:\n		1)	Go to Options page.\n		2)	Add \"&action=downgrade\" to end of URL & hit enter - should then see \"adi_notes: Downgraded\" message.\n		3)	Immediately go to Plugins tab to delete adi_notes.\n		4)	Install older adi_notes plugin version.\n		5)	Go to adi_notes admin tab & verify.\n\n*/\n\nif (@txpinterface == \'admin\') {\n	global $prefs,$adi_notes_debug;\n\n	$adi_notes_debug = 0;\n\n	// using plugin options/lifecycle (4.2.0), Textpack (4.3.0) & Home tab (4.3.0), so scarper if the need arises\n	if (!version_compare(txp_version,\'4.3.0\',\'>=\')) return;\n\n	adi_notes_init();\n}\n\nfunction adi_notes_init() {\n// initial set up\n	global $prefs,$adi_notes_tab_list,$adi_notes_gtxt,$adi_notes_prefs,$adi_notes_debug,$adi_notes_plugin_status,$adi_notes_url,$adi_notes_priv_levels,$adi_notes_txp450;\n\n	if (!class_exists(\'Textile\'))\n		include(txpath.\'/lib/classTextile.php\');\n\n	$adi_notes_txp450 = (version_compare(txp_version,\'4.4.1\',\'>\'));\n\n	// default preferences\n	$adi_notes_prefs = array(\n		\'style\' => \'sticky\', // or \'red\', \'minimal\', \'custom\'\n		\'position\' => \'footer\', // or \'header\'\n		\'width\' => \'width:600px; max-width:600px;\',\n		\'custom_style\' => \'margin:1em auto 0; padding:1em; border:1px solid; border-color:#e3d8c3 #c3b8a3 #c3b8a3 #e3d8c3; background-color:#ffffcc; color:#202020\',\n		\'note_tab_edit_privs\' => \'1,2\',\n		\'public_note_edit_privs\' => \'1,2\', // future requirement?\n		\'markup\' => \'textile\',	// or \'html\'\n		\'tiny_mce\' => \'none\',	// or \'hak\', \'jquery\', \'javascript\' - may be modified on install if hak_tiny_mce found\n		\'tiny_mce_dir_path\' => \'../scripts/tiny_mce\',\n		\'convert_link\' => \'0\'\n		);\n\n# --- BEGIN PLUGIN TEXTPACK ---\n	$adi_notes_gtxt = array(\n		\'adi_add_note\' => \'Add note\',\n		\'adi_add_private_note\' => \'Add private note\',\n		\'adi_add_public_note\' => \'Add public note\',\n		\'adi_convert_textile\' => \'Convert Textile\',\n		\'adi_custom\' => \'Custom\',\n		\'adi_display_convert_option\' => \'Show Textile convert option\',\n		\'adi_edit_private_note\' => \'Edit private note\',\n		\'adi_edit_public_note\' => \'Edit public note\',\n		\'adi_footer\' => \'Footer\',\n		\'adi_header\' => \'Header\',\n		\'adi_install_fail\' => \'Unable to install\',\n		\'adi_installed\' => \'Installed\',\n		\'adi_minimal\' => \'Minimal\',\n		\'adi_not_installed\' => \'Not installed\',\n		\'adi_note_delete_fail\' => \'Unable to delete note\',\n		\'adi_note_deleted\' => \'Note deleted\',\n		\'adi_note_editing_private\' => \'Editing private note\',\n		\'adi_note_editing_public\' => \'Editing public note\',\n		\'adi_note_markup\' => \'Markup\',\n		\'adi_note_public_edit_privs\' => \'Public note edit privileges\',\n		\'adi_note_save_fail\' => \'Unable to save note\',\n		\'adi_note_saved\' => \'Note saved\',\n		\'adi_note_tabs\' => \'Note tabs\',\n		\'adi_notes\' => \'Notes\',\n		\'adi_notes_admin\' => \'Notes Admin\',\n		\'adi_nothing_to_do\' => \'Nothing to do\',\n		\'adi_position\' => \'Position\',\n		\'adi_pref_update_fail\' => \'Preference update failed\',\n		\'adi_red\' => \'Red\',\n		\'adi_textpack_fail\' => \'Textpack installation failed\',\n		\'adi_textpack_feedback\' => \'Textpack feedback\',\n		\'adi_textpack_online\' => \'Textpack also available online\',\n		\'adi_tiny_mce_dir_path\' => \'TinyMCE directory path\',\n		\'adi_tiny_mce_hak\' => \'TinyMCE (hak_tinymce)\',\n		\'adi_tiny_mce_javascript\' =>\'TinyMCE (Javascript)\',\n		\'adi_tiny_mce_jquery\' => \'TinyMCE (jQuery)\',\n		\'adi_uninstall\' => \'Uninstall\',\n		\'adi_uninstall_fail\' => \'Unable to uninstall\',\n		\'adi_uninstalled\' => \'Uninstalled\',\n		\'adi_update_prefs\' => \'Update preferences\',\n		\'adi_upgrade_fail\' => \'Unable to upgrade\',\n		\'adi_upgrade_required\' => \'Upgrade required\',\n		\'adi_upgraded\' => \'Upgraded\',\n		\'adi_width\' => \'Width\',\n		\'adi_yellow\' => \'Yellow\',\n		);\n# --- END PLUGIN TEXTPACK ---\n\n	// Textpack\n	$adi_notes_url = array(\n		\'textpack\' => \'http://www.greatoceanmedia.com.au/files/adi_textpack.txt\',\n		\'textpack_download\' => \'http://www.greatoceanmedia.com.au/textpack/download\',\n		\'textpack_feedback\' => \'http://www.greatoceanmedia.com.au/textpack/?plugin=adi_notes\',\n	);\n	if (strpos($prefs[\'plugin_cache_dir\'],\'adi\') !== FALSE) // use Adi\'s local version\n		$adi_notes_url[\'textpack\'] = $prefs[\'plugin_cache_dir\'].\'/adi_textpack.txt\';\n\n	// plugin lifecycle\n	register_callback(\'adi_notes_lifecycle\',\'plugin_lifecycle.adi_notes\');\n\n	// privilege levels\n	$adi_notes_priv_levels = array(\n		1 => gTxt(\'publisher\'),\n		2 => gTxt(\'managing_editor\'),\n		3 => gTxt(\'copy_editor\'),\n		4 => gTxt(\'staff_writer\'),\n		5 => gTxt(\'freelancer\'),\n		6 => gTxt(\'designer\'),\n	);\n\n	// \'note tab name\' (used in the database) => (\'title\' => nice title, \'where\' => parent tab, \'visible\' => installed visibility)\n	// - could probably take this back to old format: array(\'start\'=> 0, \'content\' => 1 ...)\n	// - as of v1.1, only Content tab note added to database on install (adi_notes_update_visibility() adds other tabs as & when)\n	$adi_notes_tab_list = array(\n		\'start\' =>			array(\'title\' => gTxt(\'tab_start\'), \'where\' => \'start\', \'visible\' => \'0\'),\n		\'content\' =>		array(\'title\' => gTxt(\'tab_content\'), \'where\' => \'content\', \'visible\' => \'1\'),\n		\'presentation\' =>	array(\'title\' => gTxt(\'tab_presentation\'), \'where\' => \'presentation\', \'visible\' => \'0\'),\n		\'admin\' =>			array(\'title\' => gTxt(\'tab_admin\'), \'where\' => \'admin\', \'visible\' => \'0\'),\n		);\n\n	// adi_notes Admin tab\n	add_privs(\"adi_notes_admin\"); // defaults to priv \'1\' only\n	register_tab(\"extensions\",\"adi_notes_admin\",adi_notes_gtxt(\'adi_notes_admin\')); // add new tab under \'Extensions\'\n	register_callback(\"adi_notes_admin\",\"adi_notes_admin\");\n\n	// adi_notes tabs & embedded notes\n	$installed = adi_notes_installed();\n	if ($installed) {\n	 	// header notes on TXP4.5 Hive are in the hard basket, so footer enforced\n		if ($adi_notes_txp450 && ($prefs[\'theme_name\'] == \'hive\'))\n		adi_notes_prefs(\'position\',\'footer\');\n		if (!adi_notes_upgrade()) {\n			$visibility = adi_notes_tab_visibility();\n			foreach ($adi_notes_tab_list as $tab_name => $tab_info) {\n				// register note tab (if marked as visible)\n				if ($visibility[$tab_name]) {\n					add_privs(\"adi_notes_tab_\".$tab_name,\'1,2,3,4,5,6\'); // all privs\n					register_callback(\"adi_notes_tab\",\"adi_notes_tab_\".$tab_name);\n					register_tab($tab_info[\'where\'],\"adi_notes_tab_\".$tab_name,adi_notes_gtxt(\'adi_notes\'));\n				}\n			}\n			// add embedded notes to all tabs\n			register_callback(\'adi_notes_embed_note\',\'admin_side\',adi_notes_prefs(\'position\')); // note in header or footer\n			register_callback(\'adi_notes_embed_note_links\',\'admin_side\',\'footer\'); // add/edit links in footer\n			// switch on Home tab\n			if ($visibility[\'start\'])\n				add_privs(\'tab.start\',\'1,2,3,4,5,6\'); // all privs\n		}\n	}\n\n	// style\n	register_callback(\'adi_notes_style\',\'admin_side\',\'head_end\');\n\n	// admin page script\n	register_callback(\'adi_notes_script\',\'admin_side\',\'head_end\');\n\n	// TinyMCE\n	if (adi_notes_prefs(\'tiny_mce\') != \'none\')\n		register_callback(\'adi_notes_tiny_mce_\'.adi_notes_prefs(\'tiny_mce\'),\'admin_side\',\'footer\');\n\n	// plugin options\n	$adi_notes_plugin_status = fetch(\'status\',\'txp_plugin\',\'name\',\'adi_notes\',$adi_notes_debug);\n	if ($adi_notes_plugin_status) { // proper install - options under Plugins tab\n		add_privs(\'plugin_prefs.adi_notes\'); // defaults to priv \'1\' only\n		register_callback(\'adi_notes_options\',\'plugin_prefs.adi_notes\');\n	}\n	else { // txpdev - options under Extensions tab\n		add_privs(\'adi_notes_options\'); // defaults to priv \'1\' only\n		register_tab(\'extensions\',\'adi_notes_options\',\'adi_notes options\');\n		register_callback(\'adi_notes_options\',\'adi_notes_options\');\n	}\n\n	if ($adi_notes_debug) {\n		echo \'<b>$_POST:</b>\';\n		dmp($_POST);\n	}\n\n}\n\nfunction adi_notes_style() {\n// some style for the page\n	$adi_notes_step = gps(\'adi_notes_step\');\n	if (($adi_notes_step == \'edit\') || ($adi_notes_step == \'edit_user\'))\n		$nav_fix = \'#nav li ul { z-index:999 }\'; // so TXP remora dropdown overlays TinyMCE toolbar properly\n	else\n		$nav_fix = \'\';\n	echo\n		\'<style type=\"text/css\">\n			/* admin tab */\n			.adi_notes_form { width:60%; margin:0 auto 2em; padding:1em; text-align:center }\n			.adi_notes_form textarea { margin-top:0.5em }\n			.adi_notes_form .smallerbox { margin-top:3em }\n			.adi_notes_form .radio,\n			.adi_notes_form .checkbox { margin-left:0.5em; margin-right:1.5em }\n			.adi_notes_form .adi_notes_input_width { width:18em }\n			.adi_notes_form .adi_notes_input_privs { width:6em }\n			/* default note styles */\n			#adi_notes.adi_notes_sticky { width:90%; margin:1em auto; padding:1em; border:1px solid; border-color:#e3d8c3 #c3b8a3 #c3b8a3 #e3d8c3; background-color:#ffffcc; color:#202020 }\n			#adi_notes.adi_notes_red { width:90%; margin:1em auto 0; padding:1em; border:1px solid #b22222; background-color:#ffffff; color:#b22222 }\n			#adi_notes.adi_notes_minimal { width:90%; margin:1em auto 0 }\n			#adi_notes.adi_notes_label { margin-bottom:0.3em; font-weight:bold; }\n			/* note tabs & embedded notes */\n			#adi_notes { text-align:left }\n			#adi_notes p:first-child { margin-top:0 }\n			#adi_notes p:last-child { margin-bottom:0 }\n			#adi_notes .adi_notes_hr { width:100%; margin:1em auto; border:none; height:1px; color:#e0e0e0; background-color:#e0e0e0 }\n			#adi_notes .adi_notes_textarea { width:98%; height:25em; margin-top:0 }\n			#adi_notes .adi_notes_textarea_tab { height:50em }\n			#adi_notes .adi_notes_label { margin:0 0 0.5em 0 }\n			#adi_notes .adi_notes_save { margin:0.5em 0 0 0 }\n			#adi_notes .adi_notes_save input.publish { margin:0 1em 0 0 }\n			#adi_notes.adi_notes_embed_headnote { margin-top:0; margin-bottom:1.5em }\n			.adi_notes_embed_links { margin:3em 0 0 0; text-align:center }\n			/* note tabs */\n			.adi_notes_tab_link { margin:1em 0 0 0; text-align:center }\n			.adi_notes_tab_link { margin:0.5em auto 0; text-align:center }\n			/* pre-4.5 Hive */\n			#txp-content #adi_notes.adi_notes_embed_headnote { margin-bottom:2em }\n			/* 4.5 tweaks */\n			div.txp-header #adi_notes.adi_notes_embed_headnote { margin-top:1.5em }\n			div.txp-footer .adi_notes_embed_links { margin-top:2em; margin-bottom:2em }\n		\'.$nav_fix\n		.\'</style>\';\n}\n\nfunction adi_notes_script() {\n// jQuery magic for admin tab\n	global $event;\n\n	// just for the admin tab\n	if ($event != \'adi_notes_admin\') return;\n\n	$script = <<<END_SCRIPT\n<script type=\"text/javascript\">\n	$().ready(function() {\n		// auto hide/show TinyMCE dir path input field\n		$(\'#adi_notes_tiny_mce_none,#adi_notes_tiny_mce_hak\').click(\n			function(){\n				$(\'div.adi_notes_input_dir\').hide();\n			}\n		);\n		$(\'#adi_notes_tiny_mce_jquery,#adi_notes_tiny_mce_javascript\').click(\n			function(){\n				$(\'div.adi_notes_input_dir\').show();\n			}\n		);\n		// auto hide/show Textile convert option input field\n		$(\'#adi_notes_tiny_mce_none\').click(\n			function(){\n				$(\'div.adi_notes_input_convert\').hide();\n			}\n		);\n		$(\'#adi_notes_tiny_mce_jquery,#adi_notes_tiny_mce_javascript,#adi_notes_tiny_mce_hak\').click(\n			function(){\n				$(\'div.adi_notes_input_convert\').show();\n			}\n		);\n	});\n</script>\nEND_SCRIPT;\n	echo $script;\n\n}\n\nfunction adi_notes_tiny_mce_jquery() {\n// TinyMCE implementation, using jQuery - TinyMCE options copied from hak_tinymce\n	$adi_notes_step = gps(\'adi_notes_step\');\n	if (($adi_notes_step != \'edit\') && ($adi_notes_step != \'edit_user\')) return;\n\n	$script = <<<END_SCRIPT\n<script type=\"text/javascript\" src=\"adi_notes_tiny_mce_dir_path/jquery.tinymce.js\"></script>\n<script type=\"text/javascript\">\n	$().ready(function() {\n		$(\'#adi_notes textarea\').tinymce({\n			// Location of TinyMCE script\n			script_url : \'adi_notes_tiny_mce_dir_path/tiny_mce.js\',\n			// General options\n			theme : \"advanced\",\n			language : \"en\",\n			relative_urls : false,\n			remove_script_host : false,\n			plugins : \"searchreplace\",\n			entity_encoding : \"numeric\",\n			// Theme options\n			theme_advanced_buttons1 : \"bold,italic,underline,strikethrough,forecolor,backcolor,removeformat,numlist,bullist,outdent,indent,justifyleft,justifycenter,justifyright,justifyfull\",\n			theme_advanced_buttons2 : \"link,unlink,separator,image,separator,search,replace,separator,cut,copy,paste,separator,code,separator,formatselect\",\n			theme_advanced_buttons3 : \"\",\n			theme_advanced_toolbar_location : \"top\",\n			theme_advanced_toolbar_align : \"left\",\n		});\n\n	});\n</script>\nEND_SCRIPT;\n\n	$script = preg_replace(\'/adi_notes_tiny_mce_dir_path/\',adi_notes_prefs(\'tiny_mce_dir_path\'),$script);\n	echo $script;\n}\n\nfunction adi_notes_tiny_mce_hak() {\n// TinyMCE implementation, using hak_tinymce options & script installed in textpattern subdir\n	global $adi_notes_debug;\n\n	$adi_notes_step = gps(\'adi_notes_step\');\n	if (($adi_notes_step != \'edit\') && ($adi_notes_step != \'edit_user\')) return;\n\n	$script = \'<script language=\"javascript\" type=\"text/javascript\" src=\"tiny_mce/tiny_mce.js\"></script>\';\n	$script .= \'<script type=\"text/javascript\">\';\n	$script .= \'tinyMCE.init({\';\n	$script .= \'mode : \"textareas\",\';\n	$script .= fetch(\'pref_value\',\'txp_hak_tinymce\',\'pref_name\',\'body_init\',$adi_notes_debug);\n	$script .= \'editor_selector : \"adi_notes_mceEditor\",\';\n	$script .= \'});\';\n	$script .= \'</script>\';\n	echo $script;\n}\n\nfunction adi_notes_tiny_mce_javascript() {\n// TinyMCE implementation, using Javascript\n	$adi_notes_step = gps(\'adi_notes_step\');\n	if (($adi_notes_step != \'edit\') && ($adi_notes_step != \'edit_user\')) return;\n\n	$script = <<<END_SCRIPT\n<script type=\"text/javascript\" src=\"adi_notes_tiny_mce_dir_path/tiny_mce.js\"></script>\n<script type=\"text/javascript\">\n	tinyMCE.init({\n			// General options\n			mode : \"textareas\",\n			theme : \"advanced\",\n			language : \"en\",\n			relative_urls : false,\n			remove_script_host : false,\n			plugins : \"searchreplace\",\n			entity_encoding : \"numeric\",\n			editor_selector : \"adi_notes_mceEditor\",\n			// Theme options\n			theme_advanced_buttons1 : \"bold,italic,underline,strikethrough,forecolor,backcolor,removeformat,numlist,bullist,outdent,indent,justifyleft,justifycenter,justifyright,justifyfull\",\n			theme_advanced_buttons2 : \"link,unlink,separator,image,separator,search,replace,separator,cut,copy,paste,separator,code,separator,formatselect\",\n			theme_advanced_buttons3 : \"\",\n			theme_advanced_toolbar_location : \"top\",\n			theme_advanced_toolbar_align : \"left\",\n	});\n</script>\nEND_SCRIPT;\n\n	$script = preg_replace(\'/adi_notes_tiny_mce_dir_path/\',adi_notes_prefs(\'tiny_mce_dir_path\'),$script);\n	echo $script;\n}\n\nfunction adi_notes_has_privs($res, $user=\'\') {\n// like txplib_misc.php has_privs() but accepts a comma separated list of privs rather than a standard named combo\n	global $txp_user,$adi_notes_debug;\n\n	if ($res) {\n		if (empty($user)) // no user supplied, so use the current login name\n			$user = $txp_user;\n		$user_privs = safe_field(\"privs\", \"txp_users\", \"name=\'\".doSlash($user).\"\'\");\n		if ($adi_notes_debug)\n			echo \'PRIVS: required=\'.$res.\' actual=\'.$user_privs.\' (\'.$user.\')\';\n		return in_array($user_privs,explode(\',\',$res));\n	}\n	else\n		return false;\n}\n\nfunction adi_notes_admin($event, $step) {\n// the admin tab\n	global $prefs,$adi_notes_tab_list,$adi_notes_debug,$adi_notes_plugin_status,$adi_notes_priv_levels,$adi_notes_prefs,$adi_notes_txp450;\n\n	$message = \'\';\n	$installed = adi_notes_installed();\n	$submit = gps(\'adi_notes_admin_submit\'); // check that someone\'s hit the tit\n\n	// process the information\n	if ($installed) {\n		$upgrade_required = adi_notes_upgrade();\n		if ($upgrade_required)\n			$message = array(adi_notes_gtxt(\'adi_upgrade_required\'),E_WARNING);\n		else if ($submit) {\n			if ($step == \'update\') {\n				// massage submitted privs\n				$submitted_privs = ps(\"note_tab_edit_privs\");\n				if (empty($submitted_privs)) // revert to default privs\n					foreach (explode(\',\',$adi_notes_prefs[\'note_tab_edit_privs\']) as $priv)\n						$submitted_privs[$priv] = 1;\n				$submitted_privs[1] = TRUE; // make sure publisher priv switched on\n				$note_tab_edit_privs = implode(\',\',array_keys($submitted_privs));\n				// do update\n				$update_ok = adi_notes_update_visibility(ps(\"visibility\"))\n								&& adi_notes_prefs(\'note_tab_edit_privs\',$note_tab_edit_privs)\n								&& adi_notes_prefs(\'public_note_edit_privs\',$note_tab_edit_privs) // currently same as note tab edit privs\n								&& adi_notes_prefs(\'style\',strip_tags(ps(\"style\")))\n								&& adi_notes_prefs(\'custom_style\',strip_tags(ps(\"custom_style\")))\n								&& adi_notes_prefs(\'position\',strip_tags(ps(\"position\")))\n								&& adi_notes_prefs(\'width\',strip_tags(ps(\"width\")))\n								&& adi_notes_prefs(\'tiny_mce\',strip_tags(ps(\"tiny_mce\")))\n								&& adi_notes_prefs(\'tiny_mce_dir_path\',strip_tags(ps(\"tiny_mce_dir_path\")))\n								&& adi_notes_prefs(\'convert_link\',strip_tags(ps(\"convert_link\")));\n				if (adi_notes_prefs(\'tiny_mce\') == \'none\')\n					$update_ok &= adi_notes_prefs(\'markup\',\'textile\');\n				else\n					$update_ok &= adi_notes_prefs(\'markup\',\'html\');\n				if ($update_ok)\n					$message = adi_notes_gtxt(\'preferences_saved\');\n				else\n					$message = array(adi_notes_gtxt(\'adi_pref_update_fail\'),E_ERROR);\n			}\n		}\n	}\n	else\n		$message = array(adi_notes_gtxt(\'adi_not_installed\'),E_ERROR);\n\n	// generate page\n	pagetop(adi_notes_gtxt(\'adi_notes\').\' \'.gTxt(\'admin\'),$message);\n\n	if ($installed && !$upgrade_required) {\n		// visibility checkboxes\n		$visibility = adi_notes_tab_visibility();\n		$visibility_checkboxes = \'\';\n		foreach ($adi_notes_tab_list as $tab_name => $tab_info)\n			$visibility_checkboxes .= $tab_info[\'title\'].checkbox(\"visibility[\".$tab_name.\"]\", \"1\", $visibility[$tab_name]);\n		// priv checkboxes\n		$current_privs = explode(\',\',adi_notes_prefs(\'note_tab_edit_privs\'));\n		$priv_checkboxes = \'\';\n		foreach ($adi_notes_priv_levels as $priv => $priv_name)\n			$priv_checkboxes .= $priv_name.checkbox(\"note_tab_edit_privs[\".$priv.\"]\", \"1\", in_array($priv,$current_privs));\n\n		$hak_tinymce_installed = safe_row(\"version\",\"txp_plugin\",\"status = 1 AND name=\'hak_tinymce\'\",$adi_notes_debug);\n		if ((adi_notes_prefs(\'tiny_mce\') == \'none\') || (adi_notes_prefs(\'tiny_mce\') == \'hak\'))\n			$hide_dir = \' style=\"display:none\"\';\n		else\n			$hide_dir = \'\';\n		if (adi_notes_prefs(\'tiny_mce\') == \'none\')\n			$hide_convert = \' style=\"display:none\"\';\n		else\n			$hide_convert = \'\';\n\n		// position\n		if ($adi_notes_txp450 && ($prefs[\'theme_name\'] == \'hive\')) // header notes on TXP4.5 Hive are in the hard basket, footer enforced\n			$position = \'\';\n		else\n			$position =\n				tag(adi_notes_gtxt(\'adi_position\'),\"h2\")\n				.graf(\n					adi_notes_gtxt(\'adi_header\')\n					.radio(\'position\',\'header\',(adi_notes_prefs(\'position\') == \'header\'))\n					.adi_notes_gtxt(\'adi_footer\')\n					.radio(\'position\',\'footer\',(adi_notes_prefs(\'position\') == \'footer\'))\n				);\n\n	    echo form(\n			// visibility\n			tag(adi_notes_gtxt(\'adi_note_tabs\'),\'h2\')\n			.graf($visibility_checkboxes)\n			// note tab/public note edit privs\n			.tag(adi_notes_gtxt(\'adi_note_public_edit_privs\'),\"h2\")\n			.graf($priv_checkboxes)\n			// position\n			.$position\n			// style\n			.tag(gTxt(\'style\'),\"h2\")\n			.graf(\n				adi_notes_gtxt(\'adi_yellow\')\n				.radio(\'style\',\'sticky\',(adi_notes_prefs(\'style\') == \'sticky\'))\n				.adi_notes_gtxt(\'adi_red\')\n				.radio(\'style\',\'red\',(adi_notes_prefs(\'style\') == \'red\'))\n				.adi_notes_gtxt(\'adi_minimal\')\n				.radio(\'style\',\'minimal\',(adi_notes_prefs(\'style\') == \'minimal\'))\n				.adi_notes_gtxt(\'adi_custom\')\n				.radio(\'style\',\'custom\',(adi_notes_prefs(\'style\') == \'custom\'))\n				.\'<br/>\'\n				.text_area(\'custom_style\',\'\',\'\',adi_notes_prefs(\'custom_style\'))\n			)\n			// width\n			.tag(adi_notes_gtxt(\'adi_width\'),\"h2\")\n			.graf(\n				finput(\"text\",\'width\',adi_notes_prefs(\'width\'),\'adi_notes_input_width\')\n			)\n			// TinyMCE\n			.tag(adi_notes_gtxt(\'adi_note_markup\'),\"h2\")\n			.graf(\n				gTxt(\'txptextile\')\n				.radio(\'tiny_mce\',\'none\',(adi_notes_prefs(\'tiny_mce\') == \'none\'),\'adi_notes_tiny_mce_none\')\n				.($hak_tinymce_installed ?\n					adi_notes_gtxt(\'adi_tiny_mce_hak\')\n					.radio(\'tiny_mce\',\'hak\',(adi_notes_prefs(\'tiny_mce\') == \'hak\'),\'adi_notes_tiny_mce_hak\')\n				: \'\'\n				)\n				.adi_notes_gtxt(\'adi_tiny_mce_jquery\')\n				.radio(\'tiny_mce\',\'jquery\',(adi_notes_prefs(\'tiny_mce\') == \'jquery\'),\'adi_notes_tiny_mce_jquery\')\n				.adi_notes_gtxt(\'adi_tiny_mce_javascript\')\n				.radio(\'tiny_mce\',\'javascript\',(adi_notes_prefs(\'tiny_mce\') == \'javascript\'),\'adi_notes_tiny_mce_javascript\')\n			)\n			.tag(\n				graf(adi_notes_gtxt(\'adi_tiny_mce_dir_path\').\': \'.finput(\"text\",\'tiny_mce_dir_path\',adi_notes_prefs(\'tiny_mce_dir_path\')))\n				,\'div\',\' class=\"adi_notes_input_dir\"\'.$hide_dir\n			)\n			.tag(\n				graf(adi_notes_gtxt(\'adi_display_convert_option\').checkbox(\'convert_link\',\'1\',adi_notes_prefs(\'convert_link\')))\n				,\'div\',\' class=\"adi_notes_input_convert\"\'.$hide_convert\n			)\n	        .fInput(\'submit\',\'adi_notes_admin_submit\',adi_notes_gtxt(\'adi_update_prefs\'),\"smallerbox\",\"\",\'\').\n	        eInput(\"adi_notes_admin\").sInput(\"update\")\n			,\'\',\'\',\'post\',\'adi_notes_form\'\n		);\n	}\n}\n\nfunction adi_notes_options($event,$step) {\n// display adi_notes options: install/uninstall/upgrade\n	global $adi_notes_debug,$adi_notes_url,$adi_notes_plugin_status;\n\n	$message = \'\';\n	$installed = adi_notes_installed();\n\n	$action = gps(\'action\'); // \"under the counter\" action\n\n	if ($installed) {\n		$upgrade_required = adi_notes_upgrade();\n		if ($upgrade_required) { // upgrade\n			$res = adi_notes_upgrade(TRUE);				// copy notes old -> new\n			if ($res)\n				$message = adi_notes_gtxt(\'adi_upgraded\');\n			else\n				$message = array(adi_notes_gtxt(\'adi_upgrade_fail\'),E_ERROR);\n		}\n		// $stepping out\n		if ($step == \"uninstall\") { // uninstall adi_notes\n			$res = adi_notes_drop(\'adi_notes\');\n			$res = $res && adi_notes_delete_prefs();\n			if ($res)\n	    		$message = adi_notes_gtxt(\'adi_uninstalled\');\n			else\n	    		$message = array(adi_notes_gtxt(\'adi_uninstall_fail\'),E_ERROR);\n		}\n		else if ($step == \'textpack\') {\n			$adi_textpack = file_get_contents($adi_notes_url[\'textpack\']);\n			if ($adi_textpack) {\n				$result = install_textpack($adi_textpack);\n				$message = gTxt(\'textpack_strings_installed\', array(\'{count}\' => $result));\n				$textarray = load_lang(LANG); // load in new strings\n			}\n			else\n				$message = array(adi_notes_gtxt(\'adi_textpack_fail\'),E_ERROR);\n		}\n		// $action man\n		else if ($action == \"downgrade\") { // restore from \'adi_notes_old\'\n			if (adi_notes_installed(\'adi_notes_old\')) {\n				$res = adi_notes_drop(\'adi_notes\');\n				$res = $res && adi_notes_rename(\'adi_notes_old\',\'adi_notes\');\n				if ($res)\n					$message = \"downgraded\";\n				else\n					$message = array(\"downgrade failed\",E_ERROR);\n			}\n			else\n				$message = array(\"downgrade failed, no backup found\",E_ERROR);\n		}\n		else if ($action == \"backup\") { // restore from \'adi_notes_backup\'\n			$res = TRUE;\n			if (adi_notes_installed(\'adi_notes_backup\'))\n				$res = adi_notes_drop(\'adi_notes_backup\');\n			$res = $res && adi_notes_copy(\'adi_notes\',\'adi_notes_backup\');\n			if ($res)\n				$message = \"backed up\";\n			else\n				$message = array(\"backup failed\",E_ERROR);\n		}\n		else if ($action == \"restore\") { // restore from \'adi_notes_backup\'\n			if (adi_notes_installed(\'adi_notes_backup\')) {\n				$res = adi_notes_drop(\'adi_notes\');\n				$res = $res && adi_notes_copy(\'adi_notes_backup\',\'adi_notes\');\n				if ($res)\n					$message = \"restored\";\n				else\n					$message = array(\"restore failed\",E_ERROR);\n			}\n			else\n				$message = array(\"restore failed, no backup found\",E_ERROR);\n		}\n		else if ($action == \"cleanup\") { // delete upgrade backup\n			$res = TRUE;\n			if (adi_notes_installed(\'adi_notes_old\'))\n				$res = adi_notes_drop(\'adi_notes_old\');\n			if ($res) {\n				$message = \"upgrade backup deleted\";\n			}\n			else\n				$message = array(\"unable to delete upgrade backup\",E_ERROR);\n		}\n	}\n	else { // not installed\n		if ($step == \"install\") { // install adi_notes\n			$res = adi_notes_install();\n			if ($res)\n				$message = adi_notes_gtxt(\'adi_installed\');\n			else\n				$message = array(adi_notes_gtxt(\'adi_install_fail\'),E_ERROR);\n		}\n		else\n			$message = array(adi_notes_gtxt(\'adi_not_installed\'),E_ERROR);\n	}\n\n	// generate page\n	pagetop(\'adi_notes - \'.gTxt(\'plugin_prefs\'),$message);\n\n	$install_button =\n		form(\n			fInput(\"submit\", \"adi_notes_options_submit\", gTxt(\'install\'), \"publish\",\"\",\'return verify(\\\'\'.gTxt(\'are_you_sure\').\'\\\')\')\n			.eInput($event).sInput(\"install\")\n			,\'\',\'\',\'post\',\'adi_notes_nstall_button\'\n		);\n	$uninstall_button =\n		form(\n			fInput(\"submit\", \"do_something\", adi_notes_gtxt(\'adi_uninstall\'), \"publish\",\"\",\'return verify(\\\'\'.gTxt(\'are_you_sure\').\'\\\')\')\n			.eInput($event).sInput(\"uninstall\")\n			,\'\',\'\',\'post\',\'adi_notes_nstall_button adi_notes_uninstall_button\'\n		);\n\n	if ($adi_notes_plugin_status) // proper plugin install, so lifecycle takes care of install/uninstall\n		$install_button = $uninstall_button = \'\';\n\n	$installed = adi_notes_installed();\n\n	// options\n	echo tag(\n		tag(\'adi_notes \'.gTxt(\'plugin_prefs\'),\'h2\')\n		.( $installed ?\n			// textpack links\n			graf(href(gTxt(\'install_textpack\'),\'?event=\'.$event.\'&amp;step=textpack\'))\n			.graf(href(adi_notes_gtxt(\'adi_textpack_online\'),$adi_notes_url[\'textpack_download\']))\n			.graf(href(adi_notes_gtxt(\'adi_textpack_feedback\'),$adi_notes_url[\'textpack_feedback\']))\n	    	.$uninstall_button\n			: $install_button\n		)\n		,\'div\'\n		,\' style=\"text-align:center\"\'\n	);\n}\n\nfunction adi_notes_prefs($name,$new_value=\'!return_value_only!\') {\n// set/read preferences\n	global $prefs,$adi_notes_prefs;\n\n	if (empty($new_value)) // reset to default\n		$new_value = $adi_notes_prefs[$name];\n\n	// read current value (either from database or $adi_notes_prefs)\n	isset($prefs[\'adi_notes_\'.$name]) ? $value = $prefs[\'adi_notes_\'.$name] : $value = $adi_notes_prefs[$name];\n\n	if ($new_value == \'!toggle!\') { // toggle boolean\n		$value ? $value = 0 : $value = 1; // toggle debug mode\n		set_pref(\'adi_notes_\'.$name,$value,\'adi_notes_admin\',2);\n		$prefs = get_prefs(); // re-sample $prefs\n	}\n	else if ($new_value == \'!return_value_only!\') // just return value\n		return $value;\n	else { // update pref\n		$res = set_pref(\'adi_notes_\'.$name,doSlash($new_value),\'adi_notes_admin\',2);\n		$prefs = get_prefs(); // re-sample $prefs\n		return $res;\n	}\n}\n\nfunction adi_notes_installed($table=\'adi_notes\') {\n// test if supplied table is present\n	global $adi_notes_debug;\n\n	$found = FALSE;\n	$rs = safe_query(\"SHOW TABLES LIKE \'\".safe_pfx($table).\"\'\",$adi_notes_debug);\n	$a = nextRow($rs);\n	if ($a)\n		$found = TRUE;\n	/* OLD METHOD\n	$rs = safe_query(\"SHOW TABLES\",$adi_notes_debug);\n	while ($a = nextRow($rs)) {\n		extract($a);\n		$found = $found || (current($a) == safe_pfx(\'adi_notes\'));\n	}\n	*/\n	return $found;\n}\n\nfunction adi_notes_upgrade($do_upgrade=FALSE) {\n// check format of adi_notes table / copy from previous version backup table if required\n	global $adi_notes_debug;\n\n	if (adi_notes_installed()) { // find out what needs upgrading\n		// pre-v1.0 - check for presence of \'id\' column\n		$rs = safe_query(\"SHOW COLUMNS FROM \".safe_pfx(\'adi_notes\').\" LIKE \'id\'\",$adi_notes_debug); // \"SHOW COLUMNS WHERE\" no good for MySQL version 4.1\n		$a = nextRow($rs);\n		$pre_v1_0 = empty($a);\n		// v1.0 - look for non-event names - \'comment\',\'user\',\'variables\',\'adi_menu\',\'adi_prefs\' (should be \'discuss\',\'admin\',\'adi_variables_admin\',\'adi_menu_admin\',\'adi_prefs_admin\')\n		$oldies = \"\'comment\',\'user\',\'variables\',\'adi_menu\',\'adi_prefs\'\";\n		$newbies = \"\'discuss\',\'admin\',\'adi_variables_admin\',\'adi_menu_admin\',\'adi_prefs_admin\'\";\n		$v1_0 = safe_rows(\'*\',\'adi_notes\',\"name IN ($oldies)\",$adi_notes_debug); // read data from current table\n\n		$upgrade_required = $pre_v1_0 || $v1_0;\n\n		if ($do_upgrade) {\n			if ($upgrade_required) {\n				$backup_version = \'\';\n				if ($pre_v1_0) $backup_version = \'pre_v1_0\';\n				if ($v1_0) $backup_version = \'v1_0\';\n				if ($adi_notes_debug) echo \'Upgrading from \'.$backup_version;\n				$res = TRUE; // optimistic\n				$rs = safe_rows(\'*\',\'adi_notes\',\"1=1\",$adi_notes_debug); // read data from current table\n				// take backup\n				if (adi_notes_installed(\'adi_notes_old\')) // delete previous \"upgrade\" backup\n					$res = adi_notes_drop(\'adi_notes_old\');\n				$res = $res && adi_notes_copy(\'adi_notes\',\'adi_notes_old\',$backup_version);	// take an \"upgrade\" backup\n				// do upgrade stuff\n				if ($pre_v1_0) {\n					// change table structure\n					$res = $res && adi_notes_drop(\'adi_notes\'); // delete previous version table\n					$res = $res && adi_notes_install(FALSE); // create vanilla new format table\n					foreach ($rs as $name => $row) { // copy note data to new table\n						extract($row);\n						if ($adi_notes_debug) dmp($row);\n						$res = $res && safe_query(\n							\"INSERT INTO \".\n							safe_pfx(\'adi_notes\').\n							\" VALUES (DEFAULT,\'\".$name.\"\',\'tab\',DEFAULT,DEFAULT,\'\".$visible.\"\',\'\".$last_mod.\"\',\'\".$last_mod_ID.\"\',\'\".doSlash($note).\"\')\",$adi_notes_debug\n							);\n					}\n				}\n				if ($v1_0) {\n					// rename non-event names\n					$old_list = explode(\',\',$oldies);\n					$new_list = explode(\',\',$newbies);\n					foreach ($old_list as $index => $name) {\n						$rs = safe_row(\'*\',\'adi_notes\',\"name=$name\",$adi_notes_debug);\n						if ($rs)\n							$res = $res && safe_update(\'adi_notes\',\"name=$new_list[$index]\",\"name=$name\",$adi_notes_debug);\n					}\n					// switch embedded note visibility on (for consistency & possible future use)\n					$res = $res && safe_update(\'adi_notes\',\"visible=1\",\"type=\'embed\'\",$adi_notes_debug);\n				}\n				return $res;\n			}\n			else\n				return FALSE;\n		}\n		else\n			return $upgrade_required;\n	}\n	else\n		return FALSE;\n}\n\nfunction adi_notes_copy($source,$destination,$backup_version=\'\') {\n// copy table: source -> destination\n	global $adi_notes_debug;\n\n	$res = safe_query(\"CREATE TABLE \".safe_pfx($destination).\" LIKE \".safe_pfx($source).\";\",$adi_notes_debug);\n	// can\'t use following because single quotes etc. in $note need to be escaped\n	// $res = $res && safe_query(\"INSERT \".safe_pfx($destination).\" SELECT * FROM \".safe_pfx($source).\";\",$adi_notes_debug);\n	$rs = safe_rows(\'*\',$source,\"1=1\",$adi_notes_debug);\n	foreach ($rs as $index => $row) {\n		extract($row);\n		if ($backup_version == \'pre_v1_0\')\n			$res = $res && safe_query(\n						\"INSERT INTO \".\n						safe_pfx($destination).\n						\" VALUES (\'\".$name.\"\',\'\".$visible.\"\',\'\".$last_mod.\"\',\'\".$last_mod_ID.\"\',\'\".$restricted_privs.\"\',\'\".$restricted_ID.\"\',\'\".doSlash($note).\"\')\",$adi_notes_debug\n						);\n		else\n			$res = $res && safe_query(\n						\"INSERT INTO \".\n						safe_pfx($destination).\n						\" VALUES (DEFAULT,\'\".$name.\"\',\'\".$type.\"\',\'\".$user.\"\',\'\".$privs.\"\',\'\".$visible.\"\',\'\".$last_mod.\"\',\'\".$last_mod_user.\"\',\'\".doSlash($note).\"\')\",$adi_notes_debug\n						);\n	}\n	return $res;\n}\n\nfunction adi_notes_rename($source,$destination) {\n// rename table: source -> destination\n	global $adi_notes_debug;\n\n	return safe_query(\"RENAME TABLE \".safe_pfx($source).\" TO \".safe_pfx($destination),$adi_notes_debug);\n}\n\nfunction adi_notes_drop($db_table) {\n// delete a table\n	global $adi_notes_debug;\n\n	return safe_query(\"DROP TABLE \".safe_pfx($db_table).\";\",$adi_notes_debug);\n}\n\nfunction adi_notes_install($vanilla=TRUE) {\n// create adi_notes table & insert note tabs that are visible by default (i.e. content) - adi_notes_tab_visibility will insert the others\n	global $adi_notes_tab_list,$adi_notes_debug;\n\n	// database table\n	$res = safe_query( // maintain quirk in CREATE TABLE - type maybe should\'ve defaulted to \'tab\'\n		\"CREATE TABLE IF NOT EXISTS \".safe_pfx(\'adi_notes\').\" (\n		`id` INT(11) NOT NULL AUTO_INCREMENT,\n		`name` VARCHAR(64) NOT NULL DEFAULT \'\',\n		`type` VARCHAR(8) NOT NULL DEFAULT \'\',\n		`user` VARCHAR(64) NULL DEFAULT \'\',\n		`privs` VARCHAR(22) NOT NULL DEFAULT \'1,2,3,4,5,6\',\n		`visible` TINYINT(1) NOT NULL DEFAULT \'0\',\n		`last_mod` DATETIME NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n		`last_mod_user` VARCHAR(64) NOT NULL DEFAULT \'\',\n		`note` TEXT NOT NULL DEFAULT \'\',\n		PRIMARY KEY(id)\n		);\"\n		,$adi_notes_debug);\n\n	if ($vanilla) // populate table with empty note tab row(s)\n		foreach ($adi_notes_tab_list as $tab_name => $tab_info)\n			if ($tab_info[\'visible\'])\n				$res = $res &&\n					safe_query(\n						\"INSERT INTO \".\n						safe_pfx(\'adi_notes\').\n						\" VALUES (DEFAULT,\'\".$tab_name.\"\',\'tab\',DEFAULT,DEFAULT,1,DEFAULT,DEFAULT,DEFAULT)\"\n						,$adi_notes_debug);\n	return $res;\n}\n\nfunction adi_notes_delete_prefs() {\n// leave no trace\n	global $adi_notes_prefs,$adi_notes_debug;\n\n	$res = TRUE;\n	foreach ($adi_notes_prefs as $name => $value)\n		if (safe_row(\"*\",\'txp_prefs\',\"name = \'adi_notes_$name\'\",$adi_notes_debug))\n			$res = $res && safe_delete(\'txp_prefs\',\"name = \'adi_notes_$name\'\",$adi_notes_debug);\n	return $res;\n}\n\nfunction adi_notes_lifecycle($event,$step) {\n// a matter of life & death\n// $event:	\"plugin_lifecycle.adi_plugin\"\n// $step:	\"installed\", \"enabled\", disabled\", \"deleted\"\n// TXP 4.5: reinstall/upgrade only triggers \"installed\" event (now have to manually detect whether upgrade required)\n	global $adi_notes_debug,$adi_notes_txp450;\n\n	$result = \'?\';\n	// set upgrade flag if reinstalling in TXP 4.5+\n	$upgrade = (($step == \"installed\") && $adi_notes_txp450 && adi_notes_installed());\n	if ($step == \'enabled\')\n		$result = $upgrade = adi_notes_install();\n	else if ($step == \'deleted\') {\n		$result = adi_notes_drop(\'adi_notes\');\n		$result = $result && adi_notes_delete_prefs();\n	}\n	if ($upgrade)\n		$result = $result && adi_notes_upgrade(TRUE);\n	if ($adi_notes_debug)\n		echo \"Event=$event Step=$step Result=$result Upgrade=$upgrade\";\n}\n\nfunction adi_notes_tab_visibility() {\n// create visibility list array of note tabs from database\n	global $adi_notes_tab_list,$adi_notes_debug;\n\n	$visibility = array();\n	// get current note tab visibility from database (BEWARE user tab event = \"admin\")\n	$rs = safe_rows(\'*\',\'adi_notes\',\"type=\'tab\'\",$adi_notes_debug);\n	foreach ($rs as $index => $row) {\n		extract($row);\n		if (array_key_exists($name,$adi_notes_tab_list))\n			$visibility[$name] = $visible; // create array, indexed by name, of note tab visibility found in database\n	}\n	// compare $adi_notes_tab_list with $visibility & add any missing tabs to array\n	foreach ($adi_notes_tab_list as $tab_name => $tab_info)\n		if (!array_key_exists($tab_name,$visibility))\n			$visibility[$tab_name] = 0;\n	return $visibility;\n}\n\nfunction adi_notes_update_visibility($visibility) {\n// update database with new note tab visibility info (adding any newly visible note tabs to the mix at the same time)\n	global $adi_notes_debug;\n\n	$res = TRUE;\n	// switch all note tab visibility off (BEWARE user tab event = \"admin\")\n	$rs = safe_rows(\'*\',\'adi_notes\',\"type=\'tab\'\",$adi_notes_debug);\n	foreach ($rs as $index => $row) {\n		extract($row);\n		$res = $res && safe_update(\'adi_notes\',\"visible=0\",\"name=\'$name\' AND type = \'tab\'\",$adi_notes_debug);\n	}\n	if ($visibility) {\n		// selectively switch visibility back on (and insert row if missing)\n		foreach ($visibility as $tab_name => $visible) {\n			$found = safe_row(\'name\',\'adi_notes\',\"name=\'$tab_name\' AND type=\'tab\'\",$adi_notes_debug);\n			if ($found)\n				$res = $res && safe_update(\'adi_notes\',\"visible=$visible\",\"name=\'$tab_name\' AND type=\'tab\'\",$adi_notes_debug);\n			else\n				$res = $res && safe_insert(\'adi_notes\',\"name=\'$tab_name\', visible=$visible, type=\'tab\'\",$adi_notes_debug); // set type = \'tab\' coz it\'s not the default (historical quirk in CREATE TABLE)\n		}\n	}\n	return $res;\n}\n\nfunction adi_notes_read($note_name,$type,$note_id,$user) {\n// read specified note from database\n	global $adi_notes_debug;\n\n	$this_note = array();\n	if (empty($note_id)) { // selection of note based on context\n		$where = \"name=\'\".$note_name.\"\' AND type=\'\".$type.\"\'\";\n		$user ?\n			$where .= \" AND user=\'\".$user.\"\'\" :\n			$where .= \" AND user=\'\'\";\n		$this_note = safe_row(\"*\",\'adi_notes\',$where,$adi_notes_debug);\n	}\n	else // specific note id supplied\n		$this_note = safe_row(\"*\",\'adi_notes\',\"id=\'\".$note_id.\"\'\",$adi_notes_debug);\n	if ($this_note) {\n		if (adi_notes_prefs(\'markup\') == \'textile\') {\n			$textile = new Textile;\n			$this_note[\'formatted\'] = $textile->TextileThis($this_note[\'note\']);\n		}\n		else\n			$this_note[\'formatted\'] = $this_note[\'note\'];\n	}\n	return $this_note;\n}\n\nfunction adi_notes_tab($event,$step) {\n// display note tab\n	global $adi_notes_debug,$adi_notes_tab_list,$adi_notes_prefs;\n\n	$message = \'\';\n\n	// style\n	adi_notes_prefs(\'style\') ?\n		$class = \' class=\"adi_notes_\'.adi_notes_prefs(\'style\').\'\"\' :\n		$class = \'\';\n	adi_notes_prefs(\'width\') ?\n		$style = \'width:\'.adi_notes_prefs(\'width\').\';\' :\n		$style = \'\';\n	if (adi_notes_prefs(\'style\') == \'custom\')\n		$style .= adi_notes_prefs(\'custom_style\');\n	if ($style)\n		$style = \' style=\"\'.$style.\'\"\';\n\n	$note_name = substr($event,strlen(\"adi_notes_tab_\")); // strip \"adi_notes_tab_\" from event name\n	if (adi_notes_upgrade()) // upgrade required\n		pagetop($adi_notes_tab_list[$note_name][\'title\'].\' - \'.adi_notes_gtxt(\'adi_notes\'),\'adi_notes: <strong>\'.adi_notes_gtxt(\'adi_upgrade_required\').\'</strong>\');\n	else {\n		$adi_notes_step = gps(\'adi_notes_step\');\n		$adi_notes_id = gps(\'adi_notes_id\');\n		$adi_notes_user = gps(\'adi_notes_user\');\n		$adi_notes_note = gps(\'adi_notes_note\');\n		$adi_notes_convert = gps(\'adi_notes_convert\');\n\n		if ($adi_notes_debug)\n			print \'<p>\'.__FUNCTION__.\": event=$event, step=$step, adi_notes_step=$adi_notes_step, note_name=$note_name, adi_notes_id=$adi_notes_id, adi_notes_user=$adi_notes_user</p>\";\n\n		// one $step at a time\n		if ($adi_notes_step == \'save\') {\n			$res = adi_notes_save($note_name,\'tab\',$adi_notes_id,\'\',$adi_notes_note);\n			if ($adi_notes_note)\n				$res ? $message = adi_notes_gtxt(\'adi_note_saved\') : $message = adi_notes_gtxt(\'adi_note_save_fail\');\n			else\n				$res ? $message = adi_notes_gtxt(\'adi_note_deleted\') : $message = adi_notes_gtxt(\'adi_note_delete_fail\');\n		}\n\n		// decide what to display\n		if ($adi_notes_step == \'edit\')\n			$thing = adi_notes_edit_form($note_name,\'tab\',$adi_notes_id,\'\',$adi_notes_convert);\n		else {\n			$this_note = adi_notes_read($note_name,\'tab\',$adi_notes_id,\'\');\n			$thing = $this_note[\'formatted\'];\n			if ($this_note[\'note\'])\n				$linktext = gTxt(\'edit\');\n			else\n				$linktext = adi_notes_gtxt(\'adi_add_note\');\n		}\n\n		// output page\n		pagetop($adi_notes_tab_list[$note_name][\'title\'].\' - \'.adi_notes_gtxt(\'adi_notes\'),$message);\n		if ($thing)\n			echo tag($thing,\'div\',\' id=\"adi_notes\"\'.$class.$style);\n\n		// display add/edit link\n		if (adi_notes_has_privs(adi_notes_prefs(\'note_tab_edit_privs\')) && !($adi_notes_step == \'edit\'))\n			echo graf(\n				\'[\'.slink($event,\'&amp;adi_notes_step=edit\'.\'&amp;adi_notes_id=\'.$this_note[\'id\'].\'&amp;adi_notes_user=\',$linktext,\'small\').\']\'\n				,\' class=\"adi_notes_tab_link\"\'.$style\n			);\n	}\n}\n\nfunction adi_notes_edit_form($note_name,$type,$note_id,$note_user,$convert=\'\') {\n// display individual note edit form\n	global $event,$step,$txp_user,$timeoffset,$adi_notes_debug;\n\n	$preserve_urlvar = adi_notes_preserve_urlvar();\n	if ($note_id) { // read note from database\n		$this_note = safe_row(\"*\",\'adi_notes\',\"id=\'\".$note_id.\"\'\",$adi_notes_debug);\n		extract($this_note); // $name, $type, $user, $privs, $visible, $last_mod, $last_mod_user, $note\n		$realname = fetch(\'RealName\',\'txp_users\',\'name\',$last_mod_user);\n		$mod_msg = gTxt(\'modified_by\').\" $realname: \".date(\"H:i, d M Y\",strtotime($last_mod) + $timeoffset);\n		if ($convert == \'textile\') {\n			$textile = new Textile;\n			$note = $textile->TextileThis($note);\n		}\n	}\n	else // note doesn\'t exist yet\n		$note = \'\';\n\n	if (strpos($event,\'adi_notes_tab_\') === FALSE) { // don\'t want a footnote on a Notes tab\n		if ($note_user) {\n			$adi_notes_step = \'save_user\';\n			$title = adi_notes_gtxt(\'adi_note_editing_private\').\':\';\n		}\n		else {\n			$submit_button = gTxt(\'save\');\n			$adi_notes_step = \'save\';\n			$title = adi_notes_gtxt(\'adi_note_editing_public\').\':\';\n		}\n	}\n	else {\n		$adi_notes_step = \'save\';\n		$title = \'\';\n	}\n\n	if ($type == \'tab\')\n		$extra_class = \' adi_notes_textarea_tab\';\n	else\n		$extra_class = \'\';\n	if (adi_notes_prefs(\'tiny_mce\') != \'none\')\n		$extra_class .= \' adi_notes_mceEditor\';\n\n	if ($title)\n		$title = tag($title,\'p\',\' class=\"adi_notes_label\"\');\n	$out[] =\n		$title\n		.\'<textarea name=\"adi_notes_note\" class=\"adi_notes_textarea\'.$extra_class.\'\">\'.htmlspecialchars($note).\'</textarea>\'\n		.graf(\n			fInput(\'submit\',\'savenote\',gTxt(\'save\'),\'publish\')\n			.eInput($event)\n			.sInput($step)\n			.($preserve_urlvar ? hInput(adi_notes_preserve_urlvar(\'var\'),adi_notes_preserve_urlvar(\'value\')) : \'\') // pass on edit screen article/image ID/id\n			.hInput(\'adi_notes_step\',$adi_notes_step)\n			.($note_user ? hInput(\'adi_notes_user_note_id\',$note_id) : hInput(\'adi_notes_id\',$note_id))\n			.hInput(\'adi_notes_user\',$txp_user)\n			.(empty($note) ? \'\' : $mod_msg)\n			.(adi_notes_prefs(\'convert_link\') && !empty($note) ?\n				sp.sp.\'[\'.slink($event,\'&amp;adi_notes_step=edit\'.\'&amp;adi_notes_id=\'.$this_note[\'id\'].\'&amp;adi_notes_user=&amp;adi_notes_convert=textile\',adi_notes_gtxt(\'adi_convert_textile\'),\'small\').\']\'\n				: \'\')\n			,\' class=\"adi_notes_save\"\'\n		);\n\n	if ($adi_notes_debug)\n		$note_user ?\n		$out[] = \'<p>\'.__FUNCTION__.\": Event=$event,Step=$step,adi_notes_step=$adi_notes_step,note_name=$note_name,adi_notes_id=$note_id,note_user=$note_user,txp_user=$txp_user</p>\" :\n		$out[] = \'<p>\'.__FUNCTION__.\": Event=$event,Step=$step,adi_notes_step=$adi_notes_step,note_name=$note_name,adi_notes_user_note_id=$note_id,note_user=$note_user,txp_user=$txp_user</p>\";\n\n	if (adi_notes_prefs(\'position\') == \'header\')\n		$anchor = \'\'; // jump back to top of page after edit headnotes\n	else\n		$anchor = \'adi_notes\';\n\n	return form(implode(\'\',$out),\'\',\'\',\'post\',\'\',$anchor);\n}\n\nfunction adi_notes_save($note_name,$type,$note_id,$user,$note) {\n// save note to database\n	global $event,$txp_user,$adi_notes_debug;\n\n	$note_name = doSlash($note_name);\n	$type = doSlash($type);\n	$note_id = doSlash($note_id);\n	$user = doSlash($user);\n	$note = doSlash($note);\n	empty($note_id) ? // new note\n		$note_id = \"DEFAULT\" :\n		$note_id = \"\'\".$note_id.\"\'\";\n	empty($user) ? // blank user = public note\n		$user = \"DEFAULT\" :\n		$user = \"\'\".$user.\"\'\";\n\n	return safe_query(\n		\"REPLACE INTO \".\n		safe_pfx(\'adi_notes\').\n		\" VALUES ($note_id,\'$note_name\',\'$type\',$user,DEFAULT,\'1\',now(),\'$txp_user\',\'$note\')\",$adi_notes_debug\n		);\n}\n\nfunction adi_notes_preserve_urlvar($what=\'\') {\n// get an $event specific URL var & return various value permutations\n	global $event;\n\n	$this_var = array();\n	$var_name = \'\';\n	// define which one\n	if ($event == \'article\')\n		$var_name = \'ID\'; // upper case ID\n	if ($event == \'image\')\n		$var_name = \'id\'; // lower case id\n	if (($event == \'page\') || ($event == \'css\') || ($event == \'form\'))\n		$var_name = \'name\';\n	// get it\n	if ($var_name) {\n		$value = gps($var_name);\n		if ($value) {\n			$this_var[\'var\'] = $var_name;\n			$this_var[\'value\'] = $value;\n		}\n	}\n	// sort out what to return\n	if ($this_var) {\n		if ($what == \'var\')\n			return $this_var[\'var\'];\n		else if ($what == \'value\')\n			return $this_var[\'value\'];\n		else\n			return \'&amp;\'.$this_var[\'var\'].\'=\'.$this_var[\'value\'];\n	}\n	else\n		return \'\';\n}\n\nfunction adi_notes_embed_note($x,$position,$default) {\n// generate markup for embedded notes\n	global $event,$step,$txp_user,$adi_notes_debug,$adi_notes_prefs;\n\n	// bailout\n	if (adi_notes_upgrade()) // upgrade required\n		return \'\';\n	if (strpos($event,\'adi_notes_tab_\') !== FALSE) // don\'t want a embedded note on a Notes tab\n		return \'\';\n	if ($event == \'adi_notes_options\') // don\'t want embedded note on txpdev adi_notes options page\n		return \'\';\n\n	$adi_notes_step = gps(\'adi_notes_step\');\n	$note = gps(\'adi_notes_note\');\n	$note_id = gps(\'adi_notes_id\');\n	$note_name = $event;\n	$note_user = gps(\'adi_notes_user\');\n	$user_note_id = gps(\'adi_notes_user_note_id\');\n\n	// class\n	adi_notes_prefs(\'style\') ?\n		$class = \'adi_notes_\'.adi_notes_prefs(\'style\') :\n		$class = \'\';\n	if ($position == \'header\')\n		$class .= \' adi_notes_embed_headnote\';\n	if ($class)\n		$class = \' class=\"\'.$class.\'\"\';\n	// style\n	adi_notes_prefs(\'width\') ?\n		$style = \'width:\'.adi_notes_prefs(\'width\').\';\' :\n		$style = \'\';\n	if (adi_notes_prefs(\'style\') == \'custom\')\n		$style .= adi_notes_prefs(\'custom_style\');\n	if ($style)\n		$style = \' style=\"\'.$style.\'\"\';\n\n	$admin_note = $user_note = $edit_note = $edit_user_note = \'\';\n\n	$preamble = \'<div id=\"adi_notes\"\'.$class.$style.\'>\';\n	$postamble = \'</div>\';\n\n	if ($adi_notes_debug)\n		$debug = \'<p>\'.__FUNCTION__.\": event=$event, step=$step, adi_notes_step=$adi_notes_step, note_name=$note_name, adi_notes_id=$note_id, adi_notes_user_note_id=$user_note_id,adi_notes_user=$note_user</p>\";\n	else\n		$debug = \'\';\n\n	if ($adi_notes_step == \'edit\')\n		$edit_note = adi_notes_edit_form($note_name,\'embed\',$note_id,\'\');\n	else if ($adi_notes_step == \'save\')\n		adi_notes_save($note_name,\'embed\',$note_id,\'\',$note);\n	else if ($adi_notes_step == \'edit_user\')\n		$edit_user_note = adi_notes_edit_form($note_name,\'embed\',$user_note_id,$note_user);\n	else if ($adi_notes_step == \'save_user\')\n		adi_notes_save($note_name,\'embed\',$user_note_id,$note_user,$note);\n\n	if (!($adi_notes_step == \'edit\')) {\n		$this_note = adi_notes_read($note_name,\'embed\',\'\',\'\');\n		if (!empty($this_note)) {\n			$admin_note = $this_note[\'formatted\'];\n			$note_id = $this_note[\'id\'];\n		}\n	}\n\n	if (!($adi_notes_step == \'edit_user\')) {\n		$this_note = adi_notes_read($note_name,\'embed\',\'\',$txp_user);\n		if (!empty($this_note)) {\n			$user_note = $this_note[\'formatted\'];\n			$user_note_id = $this_note[\'id\'];\n		}\n	}\n\n	// set up what needs to be output\n	$out = $debug;\n	if (($admin_note || $edit_note) && ($user_note || $edit_user_note))\n		$hr = \'<hr class=\"adi_notes_hr\"/>\';\n	else\n		$hr =\'\';\n	if ($admin_note || $edit_note || $user_note || $edit_user_note)\n		$out .= $preamble.$admin_note.$edit_note.$hr.$user_note.$edit_user_note.$postamble;\n\n	if ($position == \'header\')\n		return $default.$out;\n	else\n		return $out; // adi_notes_embed_note_links() sorts out $default (div#end_page)\n}\n\nfunction adi_notes_embed_note_links($x, $y, $default) {\n// create edit/add links for embedded notes\n	global $event,$step,$txp_user,$adi_notes_debug;\n\n	// bailout\n	if (adi_notes_upgrade()) // upgrade required\n		return \'\';\n	if (strpos($event,\'adi_notes_tab_\') !== FALSE) // don\'t want a embedded note on a Notes tab\n		return \'\';\n	if ($event == \'adi_notes_options\') // don\'t want embedded note on txpdev adi_notes options page\n		return \'\';\n\n	// article edit & image edit screens get special treatment\n	$this_step = $step;\n	if (($event != \'article\') && ($event != \'image\'))\n		$this_step = \'\'; // too dangerous to preserve step (in edit/add links) if not article/image edit screen\n	$preserve_urlvar = adi_notes_preserve_urlvar(); // article/image edit tab id/ID\n\n	// token effort for TXP 4.4.1+\n	$txp_token = \'\';\n	if (version_compare(txp_version,\'4.4.1\',\'>=\'))\n		if (($event == \'article\') && ($step == \'create\')) // article create tab only\n			$txp_token = \'&amp;_txp_token=\'.form_token();\n\n	$adi_notes_step = gps(\'adi_notes_step\');\n	$note_name = $event;\n\n	if (adi_notes_prefs(\'position\') == \'header\')\n		$anchor = \'\'; // jump back to top of page after editing headnotes\n	else\n		$anchor = \'#adi_notes\';\n\n	$out = \'\';\n	$admin_link = $user_link = \'\';\n\n	// set up admin link\n	$admin_link = \'\';\n	if (!($adi_notes_step == \'edit\')) {\n		$this_note = adi_notes_read($note_name,\'embed\',\'\',\'\');\n		if (!empty($this_note)) {\n			$admin_note = $this_note[\'formatted\'];\n			$note_id = $this_note[\'id\'];\n		}\n		else {\n			$admin_note = \'\';\n			$note_id = \'\';\n		}\n		if ($admin_note)\n			$link_text = adi_notes_gtxt(\'adi_edit_public_note\');\n		else\n			$link_text = adi_notes_gtxt(\'adi_add_public_note\');\n		if (adi_notes_has_privs(adi_notes_prefs(\'public_note_edit_privs\')))\n			$admin_link = \'[\'.slink($event,$this_step.$preserve_urlvar.$txp_token.\'&amp;adi_notes_step=edit\'.\'&amp;adi_notes_id=\'.$note_id.$anchor,$link_text,\'small\').\']\';\n\n		if ($adi_notes_debug)\n			$out .= \'<p>\'.__FUNCTION__.\": event=$event, step=$step, this_step=$this_step, preserve_urlvar=$preserve_urlvar, txp_token=$txp_token, adi_notes_step=$adi_notes_step, note_name=$note_name, adi_notes_id=$note_id</p>\";\n	}\n\n	// set up user link\n	$user_link = \'\';\n	if (!($adi_notes_step == \'edit_user\')) {\n		$this_note = adi_notes_read($note_name,\'embed\',\'\',$txp_user);\n		if (!empty($this_note)) {\n			$user_note = $this_note[\'formatted\'];\n			$user_note_id = $this_note[\'id\'];\n		}\n		else {\n			$user_note = \'\';\n			$user_note_id = \'\';\n		}\n		if ($user_note) {\n			$link_text = adi_notes_gtxt(\'adi_edit_private_note\');\n			$note_user = $this_note[\'user\'];\n		}\n		else {\n			$link_text = adi_notes_gtxt(\'adi_add_private_note\');\n			$note_user = $txp_user;\n		}\n		$user_link = \' [\'.slink($event,$this_step.$preserve_urlvar.$txp_token.\'&amp;adi_notes_step=edit_user\'.\'&amp;adi_notes_user_note_id=\'.$user_note_id.\'&amp;adi_notes_user=\'.$note_user.$anchor,$link_text,\'small\').\']\';\n\n		if ($adi_notes_debug)\n			$out .= \'<p>\'.__FUNCTION__.\": event=$event, step=$step, this_step=$this_step, preserve_urlvar=$preserve_urlvar, txp_token=$txp_token, adi_notes_step=$adi_notes_step, note_name=$note_name, adi_notes_user_note_id=$user_note_id, adi_notes_user=$note_user</p>\";\n	}\n\n	$out .= graf($admin_link.$user_link,\' class=\"adi_notes_embed_links\"\');\n\n	return $out.$default;\n}\n\nfunction adi_notes_gtxt($phrase,$atts=array()) {\n// will check installed language strings before embedded English strings - to pick up Textpack\n// - for TXP standard strings gTxt() & adi_notes_gtxt() are functionally equivalent\n	global $adi_notes_gtxt;\n\n	if (gTxt($phrase, $atts) == $phrase) // no TXP translation found\n		if (array_key_exists($phrase,$adi_notes_gtxt)) // adi translation found\n			return $adi_notes_gtxt[$phrase];\n		else // last resort\n			return $phrase;\n	else // TXP translation\n		return gTxt($phrase,$atts);\n}\n','/*\n	adi_notes - Leave notes for Textpattern users\n\n	Written by Adi Gilbert\n\n	Released under the GNU Lesser General Public License\n\n	Version history:\n		1.2		- TXP 4.5-ified\n				- code tidy up\n				- changed: admin tab name/title now \"Notes Admin\"\n				- now uses lifecycle events\n				- changed the default width (thanks RedFox)\n		1.1.2	- fix for multi-site installs (thanks AdamK)\n				- style tweak for Hive\n		1.1.1	- fixed: get_off_my_lawn error in new article tab in 4.4.1\n				- admin: style improvements for theme compatibility\n		1.1		- admin: moved install/uninstall etc to plugin options\n				- enhancement: embedded notes at top or bottom of page\n				- enhancement: embedded notes now available on all TXP admin pages\n				- enhancement: note tab for Home/Start tab\n				- enhancement: Textpack\n				- enhancement: TinyMCE support\n				- new options: custom note style, note width, note edit privs\n				- change: default note width now 900px (was 90%)\n		1.0.2	- enhancement: embedded notes for Variables tab (for maruchan) and also adi_menu, adi_prefs (for good measure)\n		1.0.1	- fix: uninitialised variable errors\n		1.0		- enhancement: footnotes\n				- enhancement: public/private notes\n				- enhancement: in situ editing\n		0.3		- added edit links & links from Admin tab to notes tabs\n		0.2		- fix: CREATE TABLE error (thanks gocom)\n		0.1		- initial release\n\n	Downgrade instructions:\n		1)	Go to Options page.\n		2)	Add \"&action=downgrade\" to end of URL & hit enter - should then see \"adi_notes: Downgraded\" message.\n		3)	Immediately go to Plugins tab to delete adi_notes.\n		4)	Install older adi_notes plugin version.\n		5)	Go to adi_notes admin tab & verify.\n\n*/\n\nif (@txpinterface == \'admin\') {\n	global $prefs,$adi_notes_debug;\n\n	$adi_notes_debug = 0;\n\n	// using plugin options/lifecycle (4.2.0), Textpack (4.3.0) & Home tab (4.3.0), so scarper if the need arises\n	if (!version_compare(txp_version,\'4.3.0\',\'>=\')) return;\n\n	adi_notes_init();\n}\n\nfunction adi_notes_init() {\n// initial set up\n	global $prefs,$adi_notes_tab_list,$adi_notes_gtxt,$adi_notes_prefs,$adi_notes_debug,$adi_notes_plugin_status,$adi_notes_url,$adi_notes_priv_levels,$adi_notes_txp450;\n\n	if (!class_exists(\'Textile\'))\n		include(txpath.\'/lib/classTextile.php\');\n\n	$adi_notes_txp450 = (version_compare(txp_version,\'4.4.1\',\'>\'));\n\n	// default preferences\n	$adi_notes_prefs = array(\n		\'style\' => \'sticky\', // or \'red\', \'minimal\', \'custom\'\n		\'position\' => \'footer\', // or \'header\'\n		\'width\' => \'width:600px; max-width:600px;\',\n		\'custom_style\' => \'margin:1em auto 0; padding:1em; border:1px solid; border-color:#e3d8c3 #c3b8a3 #c3b8a3 #e3d8c3; background-color:#ffffcc; color:#202020\',\n		\'note_tab_edit_privs\' => \'1,2\',\n		\'public_note_edit_privs\' => \'1,2\', // future requirement?\n		\'markup\' => \'textile\',	// or \'html\'\n		\'tiny_mce\' => \'none\',	// or \'hak\', \'jquery\', \'javascript\' - may be modified on install if hak_tiny_mce found\n		\'tiny_mce_dir_path\' => \'../scripts/tiny_mce\',\n		\'convert_link\' => \'0\'\n		);\n\n# --- BEGIN PLUGIN TEXTPACK ---\n	$adi_notes_gtxt = array(\n		\'adi_add_note\' => \'Add note\',\n		\'adi_add_private_note\' => \'Add private note\',\n		\'adi_add_public_note\' => \'Add public note\',\n		\'adi_convert_textile\' => \'Convert Textile\',\n		\'adi_custom\' => \'Custom\',\n		\'adi_display_convert_option\' => \'Show Textile convert option\',\n		\'adi_edit_private_note\' => \'Edit private note\',\n		\'adi_edit_public_note\' => \'Edit public note\',\n		\'adi_footer\' => \'Footer\',\n		\'adi_header\' => \'Header\',\n		\'adi_install_fail\' => \'Unable to install\',\n		\'adi_installed\' => \'Installed\',\n		\'adi_minimal\' => \'Minimal\',\n		\'adi_not_installed\' => \'Not installed\',\n		\'adi_note_delete_fail\' => \'Unable to delete note\',\n		\'adi_note_deleted\' => \'Note deleted\',\n		\'adi_note_editing_private\' => \'Editing private note\',\n		\'adi_note_editing_public\' => \'Editing public note\',\n		\'adi_note_markup\' => \'Markup\',\n		\'adi_note_public_edit_privs\' => \'Public note edit privileges\',\n		\'adi_note_save_fail\' => \'Unable to save note\',\n		\'adi_note_saved\' => \'Note saved\',\n		\'adi_note_tabs\' => \'Note tabs\',\n		\'adi_notes\' => \'Notes\',\n		\'adi_notes_admin\' => \'Notes Admin\',\n		\'adi_nothing_to_do\' => \'Nothing to do\',\n		\'adi_position\' => \'Position\',\n		\'adi_pref_update_fail\' => \'Preference update failed\',\n		\'adi_red\' => \'Red\',\n		\'adi_textpack_fail\' => \'Textpack installation failed\',\n		\'adi_textpack_feedback\' => \'Textpack feedback\',\n		\'adi_textpack_online\' => \'Textpack also available online\',\n		\'adi_tiny_mce_dir_path\' => \'TinyMCE directory path\',\n		\'adi_tiny_mce_hak\' => \'TinyMCE (hak_tinymce)\',\n		\'adi_tiny_mce_javascript\' =>\'TinyMCE (Javascript)\',\n		\'adi_tiny_mce_jquery\' => \'TinyMCE (jQuery)\',\n		\'adi_uninstall\' => \'Uninstall\',\n		\'adi_uninstall_fail\' => \'Unable to uninstall\',\n		\'adi_uninstalled\' => \'Uninstalled\',\n		\'adi_update_prefs\' => \'Update preferences\',\n		\'adi_upgrade_fail\' => \'Unable to upgrade\',\n		\'adi_upgrade_required\' => \'Upgrade required\',\n		\'adi_upgraded\' => \'Upgraded\',\n		\'adi_width\' => \'Width\',\n		\'adi_yellow\' => \'Yellow\',\n		);\n# --- END PLUGIN TEXTPACK ---\n\n	// Textpack\n	$adi_notes_url = array(\n		\'textpack\' => \'http://www.greatoceanmedia.com.au/files/adi_textpack.txt\',\n		\'textpack_download\' => \'http://www.greatoceanmedia.com.au/textpack/download\',\n		\'textpack_feedback\' => \'http://www.greatoceanmedia.com.au/textpack/?plugin=adi_notes\',\n	);\n	if (strpos($prefs[\'plugin_cache_dir\'],\'adi\') !== FALSE) // use Adi\'s local version\n		$adi_notes_url[\'textpack\'] = $prefs[\'plugin_cache_dir\'].\'/adi_textpack.txt\';\n\n	// plugin lifecycle\n	register_callback(\'adi_notes_lifecycle\',\'plugin_lifecycle.adi_notes\');\n\n	// privilege levels\n	$adi_notes_priv_levels = array(\n		1 => gTxt(\'publisher\'),\n		2 => gTxt(\'managing_editor\'),\n		3 => gTxt(\'copy_editor\'),\n		4 => gTxt(\'staff_writer\'),\n		5 => gTxt(\'freelancer\'),\n		6 => gTxt(\'designer\'),\n	);\n\n	// \'note tab name\' (used in the database) => (\'title\' => nice title, \'where\' => parent tab, \'visible\' => installed visibility)\n	// - could probably take this back to old format: array(\'start\'=> 0, \'content\' => 1 ...)\n	// - as of v1.1, only Content tab note added to database on install (adi_notes_update_visibility() adds other tabs as & when)\n	$adi_notes_tab_list = array(\n		\'start\' =>			array(\'title\' => gTxt(\'tab_start\'), \'where\' => \'start\', \'visible\' => \'0\'),\n		\'content\' =>		array(\'title\' => gTxt(\'tab_content\'), \'where\' => \'content\', \'visible\' => \'1\'),\n		\'presentation\' =>	array(\'title\' => gTxt(\'tab_presentation\'), \'where\' => \'presentation\', \'visible\' => \'0\'),\n		\'admin\' =>			array(\'title\' => gTxt(\'tab_admin\'), \'where\' => \'admin\', \'visible\' => \'0\'),\n		);\n\n	// adi_notes Admin tab\n	add_privs(\"adi_notes_admin\"); // defaults to priv \'1\' only\n	register_tab(\"extensions\",\"adi_notes_admin\",adi_notes_gtxt(\'adi_notes_admin\')); // add new tab under \'Extensions\'\n	register_callback(\"adi_notes_admin\",\"adi_notes_admin\");\n\n	// adi_notes tabs & embedded notes\n	$installed = adi_notes_installed();\n	if ($installed) {\n	 	// header notes on TXP4.5 Hive are in the hard basket, so footer enforced\n		if ($adi_notes_txp450 && ($prefs[\'theme_name\'] == \'hive\'))\n		adi_notes_prefs(\'position\',\'footer\');\n		if (!adi_notes_upgrade()) {\n			$visibility = adi_notes_tab_visibility();\n			foreach ($adi_notes_tab_list as $tab_name => $tab_info) {\n				// register note tab (if marked as visible)\n				if ($visibility[$tab_name]) {\n					add_privs(\"adi_notes_tab_\".$tab_name,\'1,2,3,4,5,6\'); // all privs\n					register_callback(\"adi_notes_tab\",\"adi_notes_tab_\".$tab_name);\n					register_tab($tab_info[\'where\'],\"adi_notes_tab_\".$tab_name,adi_notes_gtxt(\'adi_notes\'));\n				}\n			}\n			// add embedded notes to all tabs\n			register_callback(\'adi_notes_embed_note\',\'admin_side\',adi_notes_prefs(\'position\')); // note in header or footer\n			register_callback(\'adi_notes_embed_note_links\',\'admin_side\',\'footer\'); // add/edit links in footer\n			// switch on Home tab\n			if ($visibility[\'start\'])\n				add_privs(\'tab.start\',\'1,2,3,4,5,6\'); // all privs\n		}\n	}\n\n	// style\n	register_callback(\'adi_notes_style\',\'admin_side\',\'head_end\');\n\n	// admin page script\n	register_callback(\'adi_notes_script\',\'admin_side\',\'head_end\');\n\n	// TinyMCE\n	if (adi_notes_prefs(\'tiny_mce\') != \'none\')\n		register_callback(\'adi_notes_tiny_mce_\'.adi_notes_prefs(\'tiny_mce\'),\'admin_side\',\'footer\');\n\n	// plugin options\n	$adi_notes_plugin_status = fetch(\'status\',\'txp_plugin\',\'name\',\'adi_notes\',$adi_notes_debug);\n	if ($adi_notes_plugin_status) { // proper install - options under Plugins tab\n		add_privs(\'plugin_prefs.adi_notes\'); // defaults to priv \'1\' only\n		register_callback(\'adi_notes_options\',\'plugin_prefs.adi_notes\');\n	}\n	else { // txpdev - options under Extensions tab\n		add_privs(\'adi_notes_options\'); // defaults to priv \'1\' only\n		register_tab(\'extensions\',\'adi_notes_options\',\'adi_notes options\');\n		register_callback(\'adi_notes_options\',\'adi_notes_options\');\n	}\n\n	if ($adi_notes_debug) {\n		echo \'<b>$_POST:</b>\';\n		dmp($_POST);\n	}\n\n}\n\nfunction adi_notes_style() {\n// some style for the page\n	$adi_notes_step = gps(\'adi_notes_step\');\n	if (($adi_notes_step == \'edit\') || ($adi_notes_step == \'edit_user\'))\n		$nav_fix = \'#nav li ul { z-index:999 }\'; // so TXP remora dropdown overlays TinyMCE toolbar properly\n	else\n		$nav_fix = \'\';\n	echo\n		\'<style type=\"text/css\">\n			/* admin tab */\n			.adi_notes_form { width:60%; margin:0 auto 2em; padding:1em; text-align:center }\n			.adi_notes_form textarea { margin-top:0.5em }\n			.adi_notes_form .smallerbox { margin-top:3em }\n			.adi_notes_form .radio,\n			.adi_notes_form .checkbox { margin-left:0.5em; margin-right:1.5em }\n			.adi_notes_form .adi_notes_input_width { width:18em }\n			.adi_notes_form .adi_notes_input_privs { width:6em }\n			/* default note styles */\n			#adi_notes.adi_notes_sticky { width:90%; margin:1em auto; padding:1em; border:1px solid; border-color:#e3d8c3 #c3b8a3 #c3b8a3 #e3d8c3; background-color:#ffffcc; color:#202020 }\n			#adi_notes.adi_notes_red { width:90%; margin:1em auto 0; padding:1em; border:1px solid #b22222; background-color:#ffffff; color:#b22222 }\n			#adi_notes.adi_notes_minimal { width:90%; margin:1em auto 0 }\n			#adi_notes.adi_notes_label { margin-bottom:0.3em; font-weight:bold; }\n			/* note tabs & embedded notes */\n			#adi_notes { text-align:left }\n			#adi_notes p:first-child { margin-top:0 }\n			#adi_notes p:last-child { margin-bottom:0 }\n			#adi_notes .adi_notes_hr { width:100%; margin:1em auto; border:none; height:1px; color:#e0e0e0; background-color:#e0e0e0 }\n			#adi_notes .adi_notes_textarea { width:98%; height:25em; margin-top:0 }\n			#adi_notes .adi_notes_textarea_tab { height:50em }\n			#adi_notes .adi_notes_label { margin:0 0 0.5em 0 }\n			#adi_notes .adi_notes_save { margin:0.5em 0 0 0 }\n			#adi_notes .adi_notes_save input.publish { margin:0 1em 0 0 }\n			#adi_notes.adi_notes_embed_headnote { margin-top:0; margin-bottom:1.5em }\n			.adi_notes_embed_links { margin:3em 0 0 0; text-align:center }\n			/* note tabs */\n			.adi_notes_tab_link { margin:1em 0 0 0; text-align:center }\n			.adi_notes_tab_link { margin:0.5em auto 0; text-align:center }\n			/* pre-4.5 Hive */\n			#txp-content #adi_notes.adi_notes_embed_headnote { margin-bottom:2em }\n			/* 4.5 tweaks */\n			div.txp-header #adi_notes.adi_notes_embed_headnote { margin-top:1.5em }\n			div.txp-footer .adi_notes_embed_links { margin-top:2em; margin-bottom:2em }\n		\'.$nav_fix\n		.\'</style>\';\n}\n\nfunction adi_notes_script() {\n// jQuery magic for admin tab\n	global $event;\n\n	// just for the admin tab\n	if ($event != \'adi_notes_admin\') return;\n\n	$script = <<<END_SCRIPT\n<script type=\"text/javascript\">\n	$().ready(function() {\n		// auto hide/show TinyMCE dir path input field\n		$(\'#adi_notes_tiny_mce_none,#adi_notes_tiny_mce_hak\').click(\n			function(){\n				$(\'div.adi_notes_input_dir\').hide();\n			}\n		);\n		$(\'#adi_notes_tiny_mce_jquery,#adi_notes_tiny_mce_javascript\').click(\n			function(){\n				$(\'div.adi_notes_input_dir\').show();\n			}\n		);\n		// auto hide/show Textile convert option input field\n		$(\'#adi_notes_tiny_mce_none\').click(\n			function(){\n				$(\'div.adi_notes_input_convert\').hide();\n			}\n		);\n		$(\'#adi_notes_tiny_mce_jquery,#adi_notes_tiny_mce_javascript,#adi_notes_tiny_mce_hak\').click(\n			function(){\n				$(\'div.adi_notes_input_convert\').show();\n			}\n		);\n	});\n</script>\nEND_SCRIPT;\n	echo $script;\n\n}\n\nfunction adi_notes_tiny_mce_jquery() {\n// TinyMCE implementation, using jQuery - TinyMCE options copied from hak_tinymce\n	$adi_notes_step = gps(\'adi_notes_step\');\n	if (($adi_notes_step != \'edit\') && ($adi_notes_step != \'edit_user\')) return;\n\n	$script = <<<END_SCRIPT\n<script type=\"text/javascript\" src=\"adi_notes_tiny_mce_dir_path/jquery.tinymce.js\"></script>\n<script type=\"text/javascript\">\n	$().ready(function() {\n		$(\'#adi_notes textarea\').tinymce({\n			// Location of TinyMCE script\n			script_url : \'adi_notes_tiny_mce_dir_path/tiny_mce.js\',\n			// General options\n			theme : \"advanced\",\n			language : \"en\",\n			relative_urls : false,\n			remove_script_host : false,\n			plugins : \"searchreplace\",\n			entity_encoding : \"numeric\",\n			// Theme options\n			theme_advanced_buttons1 : \"bold,italic,underline,strikethrough,forecolor,backcolor,removeformat,numlist,bullist,outdent,indent,justifyleft,justifycenter,justifyright,justifyfull\",\n			theme_advanced_buttons2 : \"link,unlink,separator,image,separator,search,replace,separator,cut,copy,paste,separator,code,separator,formatselect\",\n			theme_advanced_buttons3 : \"\",\n			theme_advanced_toolbar_location : \"top\",\n			theme_advanced_toolbar_align : \"left\",\n		});\n\n	});\n</script>\nEND_SCRIPT;\n\n	$script = preg_replace(\'/adi_notes_tiny_mce_dir_path/\',adi_notes_prefs(\'tiny_mce_dir_path\'),$script);\n	echo $script;\n}\n\nfunction adi_notes_tiny_mce_hak() {\n// TinyMCE implementation, using hak_tinymce options & script installed in textpattern subdir\n	global $adi_notes_debug;\n\n	$adi_notes_step = gps(\'adi_notes_step\');\n	if (($adi_notes_step != \'edit\') && ($adi_notes_step != \'edit_user\')) return;\n\n	$script = \'<script language=\"javascript\" type=\"text/javascript\" src=\"tiny_mce/tiny_mce.js\"></script>\';\n	$script .= \'<script type=\"text/javascript\">\';\n	$script .= \'tinyMCE.init({\';\n	$script .= \'mode : \"textareas\",\';\n	$script .= fetch(\'pref_value\',\'txp_hak_tinymce\',\'pref_name\',\'body_init\',$adi_notes_debug);\n	$script .= \'editor_selector : \"adi_notes_mceEditor\",\';\n	$script .= \'});\';\n	$script .= \'</script>\';\n	echo $script;\n}\n\nfunction adi_notes_tiny_mce_javascript() {\n// TinyMCE implementation, using Javascript\n	$adi_notes_step = gps(\'adi_notes_step\');\n	if (($adi_notes_step != \'edit\') && ($adi_notes_step != \'edit_user\')) return;\n\n	$script = <<<END_SCRIPT\n<script type=\"text/javascript\" src=\"adi_notes_tiny_mce_dir_path/tiny_mce.js\"></script>\n<script type=\"text/javascript\">\n	tinyMCE.init({\n			// General options\n			mode : \"textareas\",\n			theme : \"advanced\",\n			language : \"en\",\n			relative_urls : false,\n			remove_script_host : false,\n			plugins : \"searchreplace\",\n			entity_encoding : \"numeric\",\n			editor_selector : \"adi_notes_mceEditor\",\n			// Theme options\n			theme_advanced_buttons1 : \"bold,italic,underline,strikethrough,forecolor,backcolor,removeformat,numlist,bullist,outdent,indent,justifyleft,justifycenter,justifyright,justifyfull\",\n			theme_advanced_buttons2 : \"link,unlink,separator,image,separator,search,replace,separator,cut,copy,paste,separator,code,separator,formatselect\",\n			theme_advanced_buttons3 : \"\",\n			theme_advanced_toolbar_location : \"top\",\n			theme_advanced_toolbar_align : \"left\",\n	});\n</script>\nEND_SCRIPT;\n\n	$script = preg_replace(\'/adi_notes_tiny_mce_dir_path/\',adi_notes_prefs(\'tiny_mce_dir_path\'),$script);\n	echo $script;\n}\n\nfunction adi_notes_has_privs($res, $user=\'\') {\n// like txplib_misc.php has_privs() but accepts a comma separated list of privs rather than a standard named combo\n	global $txp_user,$adi_notes_debug;\n\n	if ($res) {\n		if (empty($user)) // no user supplied, so use the current login name\n			$user = $txp_user;\n		$user_privs = safe_field(\"privs\", \"txp_users\", \"name=\'\".doSlash($user).\"\'\");\n		if ($adi_notes_debug)\n			echo \'PRIVS: required=\'.$res.\' actual=\'.$user_privs.\' (\'.$user.\')\';\n		return in_array($user_privs,explode(\',\',$res));\n	}\n	else\n		return false;\n}\n\nfunction adi_notes_admin($event, $step) {\n// the admin tab\n	global $prefs,$adi_notes_tab_list,$adi_notes_debug,$adi_notes_plugin_status,$adi_notes_priv_levels,$adi_notes_prefs,$adi_notes_txp450;\n\n	$message = \'\';\n	$installed = adi_notes_installed();\n	$submit = gps(\'adi_notes_admin_submit\'); // check that someone\'s hit the tit\n\n	// process the information\n	if ($installed) {\n		$upgrade_required = adi_notes_upgrade();\n		if ($upgrade_required)\n			$message = array(adi_notes_gtxt(\'adi_upgrade_required\'),E_WARNING);\n		else if ($submit) {\n			if ($step == \'update\') {\n				// massage submitted privs\n				$submitted_privs = ps(\"note_tab_edit_privs\");\n				if (empty($submitted_privs)) // revert to default privs\n					foreach (explode(\',\',$adi_notes_prefs[\'note_tab_edit_privs\']) as $priv)\n						$submitted_privs[$priv] = 1;\n				$submitted_privs[1] = TRUE; // make sure publisher priv switched on\n				$note_tab_edit_privs = implode(\',\',array_keys($submitted_privs));\n				// do update\n				$update_ok = adi_notes_update_visibility(ps(\"visibility\"))\n								&& adi_notes_prefs(\'note_tab_edit_privs\',$note_tab_edit_privs)\n								&& adi_notes_prefs(\'public_note_edit_privs\',$note_tab_edit_privs) // currently same as note tab edit privs\n								&& adi_notes_prefs(\'style\',strip_tags(ps(\"style\")))\n								&& adi_notes_prefs(\'custom_style\',strip_tags(ps(\"custom_style\")))\n								&& adi_notes_prefs(\'position\',strip_tags(ps(\"position\")))\n								&& adi_notes_prefs(\'width\',strip_tags(ps(\"width\")))\n								&& adi_notes_prefs(\'tiny_mce\',strip_tags(ps(\"tiny_mce\")))\n								&& adi_notes_prefs(\'tiny_mce_dir_path\',strip_tags(ps(\"tiny_mce_dir_path\")))\n								&& adi_notes_prefs(\'convert_link\',strip_tags(ps(\"convert_link\")));\n				if (adi_notes_prefs(\'tiny_mce\') == \'none\')\n					$update_ok &= adi_notes_prefs(\'markup\',\'textile\');\n				else\n					$update_ok &= adi_notes_prefs(\'markup\',\'html\');\n				if ($update_ok)\n					$message = adi_notes_gtxt(\'preferences_saved\');\n				else\n					$message = array(adi_notes_gtxt(\'adi_pref_update_fail\'),E_ERROR);\n			}\n		}\n	}\n	else\n		$message = array(adi_notes_gtxt(\'adi_not_installed\'),E_ERROR);\n\n	// generate page\n	pagetop(adi_notes_gtxt(\'adi_notes\').\' \'.gTxt(\'admin\'),$message);\n\n	if ($installed && !$upgrade_required) {\n		// visibility checkboxes\n		$visibility = adi_notes_tab_visibility();\n		$visibility_checkboxes = \'\';\n		foreach ($adi_notes_tab_list as $tab_name => $tab_info)\n			$visibility_checkboxes .= $tab_info[\'title\'].checkbox(\"visibility[\".$tab_name.\"]\", \"1\", $visibility[$tab_name]);\n		// priv checkboxes\n		$current_privs = explode(\',\',adi_notes_prefs(\'note_tab_edit_privs\'));\n		$priv_checkboxes = \'\';\n		foreach ($adi_notes_priv_levels as $priv => $priv_name)\n			$priv_checkboxes .= $priv_name.checkbox(\"note_tab_edit_privs[\".$priv.\"]\", \"1\", in_array($priv,$current_privs));\n\n		$hak_tinymce_installed = safe_row(\"version\",\"txp_plugin\",\"status = 1 AND name=\'hak_tinymce\'\",$adi_notes_debug);\n		if ((adi_notes_prefs(\'tiny_mce\') == \'none\') || (adi_notes_prefs(\'tiny_mce\') == \'hak\'))\n			$hide_dir = \' style=\"display:none\"\';\n		else\n			$hide_dir = \'\';\n		if (adi_notes_prefs(\'tiny_mce\') == \'none\')\n			$hide_convert = \' style=\"display:none\"\';\n		else\n			$hide_convert = \'\';\n\n		// position\n		if ($adi_notes_txp450 && ($prefs[\'theme_name\'] == \'hive\')) // header notes on TXP4.5 Hive are in the hard basket, footer enforced\n			$position = \'\';\n		else\n			$position =\n				tag(adi_notes_gtxt(\'adi_position\'),\"h2\")\n				.graf(\n					adi_notes_gtxt(\'adi_header\')\n					.radio(\'position\',\'header\',(adi_notes_prefs(\'position\') == \'header\'))\n					.adi_notes_gtxt(\'adi_footer\')\n					.radio(\'position\',\'footer\',(adi_notes_prefs(\'position\') == \'footer\'))\n				);\n\n	    echo form(\n			// visibility\n			tag(adi_notes_gtxt(\'adi_note_tabs\'),\'h2\')\n			.graf($visibility_checkboxes)\n			// note tab/public note edit privs\n			.tag(adi_notes_gtxt(\'adi_note_public_edit_privs\'),\"h2\")\n			.graf($priv_checkboxes)\n			// position\n			.$position\n			// style\n			.tag(gTxt(\'style\'),\"h2\")\n			.graf(\n				adi_notes_gtxt(\'adi_yellow\')\n				.radio(\'style\',\'sticky\',(adi_notes_prefs(\'style\') == \'sticky\'))\n				.adi_notes_gtxt(\'adi_red\')\n				.radio(\'style\',\'red\',(adi_notes_prefs(\'style\') == \'red\'))\n				.adi_notes_gtxt(\'adi_minimal\')\n				.radio(\'style\',\'minimal\',(adi_notes_prefs(\'style\') == \'minimal\'))\n				.adi_notes_gtxt(\'adi_custom\')\n				.radio(\'style\',\'custom\',(adi_notes_prefs(\'style\') == \'custom\'))\n				.\'<br/>\'\n				.text_area(\'custom_style\',\'\',\'\',adi_notes_prefs(\'custom_style\'))\n			)\n			// width\n			.tag(adi_notes_gtxt(\'adi_width\'),\"h2\")\n			.graf(\n				finput(\"text\",\'width\',adi_notes_prefs(\'width\'),\'adi_notes_input_width\')\n			)\n			// TinyMCE\n			.tag(adi_notes_gtxt(\'adi_note_markup\'),\"h2\")\n			.graf(\n				gTxt(\'txptextile\')\n				.radio(\'tiny_mce\',\'none\',(adi_notes_prefs(\'tiny_mce\') == \'none\'),\'adi_notes_tiny_mce_none\')\n				.($hak_tinymce_installed ?\n					adi_notes_gtxt(\'adi_tiny_mce_hak\')\n					.radio(\'tiny_mce\',\'hak\',(adi_notes_prefs(\'tiny_mce\') == \'hak\'),\'adi_notes_tiny_mce_hak\')\n				: \'\'\n				)\n				.adi_notes_gtxt(\'adi_tiny_mce_jquery\')\n				.radio(\'tiny_mce\',\'jquery\',(adi_notes_prefs(\'tiny_mce\') == \'jquery\'),\'adi_notes_tiny_mce_jquery\')\n				.adi_notes_gtxt(\'adi_tiny_mce_javascript\')\n				.radio(\'tiny_mce\',\'javascript\',(adi_notes_prefs(\'tiny_mce\') == \'javascript\'),\'adi_notes_tiny_mce_javascript\')\n			)\n			.tag(\n				graf(adi_notes_gtxt(\'adi_tiny_mce_dir_path\').\': \'.finput(\"text\",\'tiny_mce_dir_path\',adi_notes_prefs(\'tiny_mce_dir_path\')))\n				,\'div\',\' class=\"adi_notes_input_dir\"\'.$hide_dir\n			)\n			.tag(\n				graf(adi_notes_gtxt(\'adi_display_convert_option\').checkbox(\'convert_link\',\'1\',adi_notes_prefs(\'convert_link\')))\n				,\'div\',\' class=\"adi_notes_input_convert\"\'.$hide_convert\n			)\n	        .fInput(\'submit\',\'adi_notes_admin_submit\',adi_notes_gtxt(\'adi_update_prefs\'),\"smallerbox\",\"\",\'\').\n	        eInput(\"adi_notes_admin\").sInput(\"update\")\n			,\'\',\'\',\'post\',\'adi_notes_form\'\n		);\n	}\n}\n\nfunction adi_notes_options($event,$step) {\n// display adi_notes options: install/uninstall/upgrade\n	global $adi_notes_debug,$adi_notes_url,$adi_notes_plugin_status;\n\n	$message = \'\';\n	$installed = adi_notes_installed();\n\n	$action = gps(\'action\'); // \"under the counter\" action\n\n	if ($installed) {\n		$upgrade_required = adi_notes_upgrade();\n		if ($upgrade_required) { // upgrade\n			$res = adi_notes_upgrade(TRUE);				// copy notes old -> new\n			if ($res)\n				$message = adi_notes_gtxt(\'adi_upgraded\');\n			else\n				$message = array(adi_notes_gtxt(\'adi_upgrade_fail\'),E_ERROR);\n		}\n		// $stepping out\n		if ($step == \"uninstall\") { // uninstall adi_notes\n			$res = adi_notes_drop(\'adi_notes\');\n			$res = $res && adi_notes_delete_prefs();\n			if ($res)\n	    		$message = adi_notes_gtxt(\'adi_uninstalled\');\n			else\n	    		$message = array(adi_notes_gtxt(\'adi_uninstall_fail\'),E_ERROR);\n		}\n		else if ($step == \'textpack\') {\n			$adi_textpack = file_get_contents($adi_notes_url[\'textpack\']);\n			if ($adi_textpack) {\n				$result = install_textpack($adi_textpack);\n				$message = gTxt(\'textpack_strings_installed\', array(\'{count}\' => $result));\n				$textarray = load_lang(LANG); // load in new strings\n			}\n			else\n				$message = array(adi_notes_gtxt(\'adi_textpack_fail\'),E_ERROR);\n		}\n		// $action man\n		else if ($action == \"downgrade\") { // restore from \'adi_notes_old\'\n			if (adi_notes_installed(\'adi_notes_old\')) {\n				$res = adi_notes_drop(\'adi_notes\');\n				$res = $res && adi_notes_rename(\'adi_notes_old\',\'adi_notes\');\n				if ($res)\n					$message = \"downgraded\";\n				else\n					$message = array(\"downgrade failed\",E_ERROR);\n			}\n			else\n				$message = array(\"downgrade failed, no backup found\",E_ERROR);\n		}\n		else if ($action == \"backup\") { // restore from \'adi_notes_backup\'\n			$res = TRUE;\n			if (adi_notes_installed(\'adi_notes_backup\'))\n				$res = adi_notes_drop(\'adi_notes_backup\');\n			$res = $res && adi_notes_copy(\'adi_notes\',\'adi_notes_backup\');\n			if ($res)\n				$message = \"backed up\";\n			else\n				$message = array(\"backup failed\",E_ERROR);\n		}\n		else if ($action == \"restore\") { // restore from \'adi_notes_backup\'\n			if (adi_notes_installed(\'adi_notes_backup\')) {\n				$res = adi_notes_drop(\'adi_notes\');\n				$res = $res && adi_notes_copy(\'adi_notes_backup\',\'adi_notes\');\n				if ($res)\n					$message = \"restored\";\n				else\n					$message = array(\"restore failed\",E_ERROR);\n			}\n			else\n				$message = array(\"restore failed, no backup found\",E_ERROR);\n		}\n		else if ($action == \"cleanup\") { // delete upgrade backup\n			$res = TRUE;\n			if (adi_notes_installed(\'adi_notes_old\'))\n				$res = adi_notes_drop(\'adi_notes_old\');\n			if ($res) {\n				$message = \"upgrade backup deleted\";\n			}\n			else\n				$message = array(\"unable to delete upgrade backup\",E_ERROR);\n		}\n	}\n	else { // not installed\n		if ($step == \"install\") { // install adi_notes\n			$res = adi_notes_install();\n			if ($res)\n				$message = adi_notes_gtxt(\'adi_installed\');\n			else\n				$message = array(adi_notes_gtxt(\'adi_install_fail\'),E_ERROR);\n		}\n		else\n			$message = array(adi_notes_gtxt(\'adi_not_installed\'),E_ERROR);\n	}\n\n	// generate page\n	pagetop(\'adi_notes - \'.gTxt(\'plugin_prefs\'),$message);\n\n	$install_button =\n		form(\n			fInput(\"submit\", \"adi_notes_options_submit\", gTxt(\'install\'), \"publish\",\"\",\'return verify(\\\'\'.gTxt(\'are_you_sure\').\'\\\')\')\n			.eInput($event).sInput(\"install\")\n			,\'\',\'\',\'post\',\'adi_notes_nstall_button\'\n		);\n	$uninstall_button =\n		form(\n			fInput(\"submit\", \"do_something\", adi_notes_gtxt(\'adi_uninstall\'), \"publish\",\"\",\'return verify(\\\'\'.gTxt(\'are_you_sure\').\'\\\')\')\n			.eInput($event).sInput(\"uninstall\")\n			,\'\',\'\',\'post\',\'adi_notes_nstall_button adi_notes_uninstall_button\'\n		);\n\n	if ($adi_notes_plugin_status) // proper plugin install, so lifecycle takes care of install/uninstall\n		$install_button = $uninstall_button = \'\';\n\n	$installed = adi_notes_installed();\n\n	// options\n	echo tag(\n		tag(\'adi_notes \'.gTxt(\'plugin_prefs\'),\'h2\')\n		.( $installed ?\n			// textpack links\n			graf(href(gTxt(\'install_textpack\'),\'?event=\'.$event.\'&amp;step=textpack\'))\n			.graf(href(adi_notes_gtxt(\'adi_textpack_online\'),$adi_notes_url[\'textpack_download\']))\n			.graf(href(adi_notes_gtxt(\'adi_textpack_feedback\'),$adi_notes_url[\'textpack_feedback\']))\n	    	.$uninstall_button\n			: $install_button\n		)\n		,\'div\'\n		,\' style=\"text-align:center\"\'\n	);\n}\n\nfunction adi_notes_prefs($name,$new_value=\'!return_value_only!\') {\n// set/read preferences\n	global $prefs,$adi_notes_prefs;\n\n	if (empty($new_value)) // reset to default\n		$new_value = $adi_notes_prefs[$name];\n\n	// read current value (either from database or $adi_notes_prefs)\n	isset($prefs[\'adi_notes_\'.$name]) ? $value = $prefs[\'adi_notes_\'.$name] : $value = $adi_notes_prefs[$name];\n\n	if ($new_value == \'!toggle!\') { // toggle boolean\n		$value ? $value = 0 : $value = 1; // toggle debug mode\n		set_pref(\'adi_notes_\'.$name,$value,\'adi_notes_admin\',2);\n		$prefs = get_prefs(); // re-sample $prefs\n	}\n	else if ($new_value == \'!return_value_only!\') // just return value\n		return $value;\n	else { // update pref\n		$res = set_pref(\'adi_notes_\'.$name,doSlash($new_value),\'adi_notes_admin\',2);\n		$prefs = get_prefs(); // re-sample $prefs\n		return $res;\n	}\n}\n\nfunction adi_notes_installed($table=\'adi_notes\') {\n// test if supplied table is present\n	global $adi_notes_debug;\n\n	$found = FALSE;\n	$rs = safe_query(\"SHOW TABLES LIKE \'\".safe_pfx($table).\"\'\",$adi_notes_debug);\n	$a = nextRow($rs);\n	if ($a)\n		$found = TRUE;\n	/* OLD METHOD\n	$rs = safe_query(\"SHOW TABLES\",$adi_notes_debug);\n	while ($a = nextRow($rs)) {\n		extract($a);\n		$found = $found || (current($a) == safe_pfx(\'adi_notes\'));\n	}\n	*/\n	return $found;\n}\n\nfunction adi_notes_upgrade($do_upgrade=FALSE) {\n// check format of adi_notes table / copy from previous version backup table if required\n	global $adi_notes_debug;\n\n	if (adi_notes_installed()) { // find out what needs upgrading\n		// pre-v1.0 - check for presence of \'id\' column\n		$rs = safe_query(\"SHOW COLUMNS FROM \".safe_pfx(\'adi_notes\').\" LIKE \'id\'\",$adi_notes_debug); // \"SHOW COLUMNS WHERE\" no good for MySQL version 4.1\n		$a = nextRow($rs);\n		$pre_v1_0 = empty($a);\n		// v1.0 - look for non-event names - \'comment\',\'user\',\'variables\',\'adi_menu\',\'adi_prefs\' (should be \'discuss\',\'admin\',\'adi_variables_admin\',\'adi_menu_admin\',\'adi_prefs_admin\')\n		$oldies = \"\'comment\',\'user\',\'variables\',\'adi_menu\',\'adi_prefs\'\";\n		$newbies = \"\'discuss\',\'admin\',\'adi_variables_admin\',\'adi_menu_admin\',\'adi_prefs_admin\'\";\n		$v1_0 = safe_rows(\'*\',\'adi_notes\',\"name IN ($oldies)\",$adi_notes_debug); // read data from current table\n\n		$upgrade_required = $pre_v1_0 || $v1_0;\n\n		if ($do_upgrade) {\n			if ($upgrade_required) {\n				$backup_version = \'\';\n				if ($pre_v1_0) $backup_version = \'pre_v1_0\';\n				if ($v1_0) $backup_version = \'v1_0\';\n				if ($adi_notes_debug) echo \'Upgrading from \'.$backup_version;\n				$res = TRUE; // optimistic\n				$rs = safe_rows(\'*\',\'adi_notes\',\"1=1\",$adi_notes_debug); // read data from current table\n				// take backup\n				if (adi_notes_installed(\'adi_notes_old\')) // delete previous \"upgrade\" backup\n					$res = adi_notes_drop(\'adi_notes_old\');\n				$res = $res && adi_notes_copy(\'adi_notes\',\'adi_notes_old\',$backup_version);	// take an \"upgrade\" backup\n				// do upgrade stuff\n				if ($pre_v1_0) {\n					// change table structure\n					$res = $res && adi_notes_drop(\'adi_notes\'); // delete previous version table\n					$res = $res && adi_notes_install(FALSE); // create vanilla new format table\n					foreach ($rs as $name => $row) { // copy note data to new table\n						extract($row);\n						if ($adi_notes_debug) dmp($row);\n						$res = $res && safe_query(\n							\"INSERT INTO \".\n							safe_pfx(\'adi_notes\').\n							\" VALUES (DEFAULT,\'\".$name.\"\',\'tab\',DEFAULT,DEFAULT,\'\".$visible.\"\',\'\".$last_mod.\"\',\'\".$last_mod_ID.\"\',\'\".doSlash($note).\"\')\",$adi_notes_debug\n							);\n					}\n				}\n				if ($v1_0) {\n					// rename non-event names\n					$old_list = explode(\',\',$oldies);\n					$new_list = explode(\',\',$newbies);\n					foreach ($old_list as $index => $name) {\n						$rs = safe_row(\'*\',\'adi_notes\',\"name=$name\",$adi_notes_debug);\n						if ($rs)\n							$res = $res && safe_update(\'adi_notes\',\"name=$new_list[$index]\",\"name=$name\",$adi_notes_debug);\n					}\n					// switch embedded note visibility on (for consistency & possible future use)\n					$res = $res && safe_update(\'adi_notes\',\"visible=1\",\"type=\'embed\'\",$adi_notes_debug);\n				}\n				return $res;\n			}\n			else\n				return FALSE;\n		}\n		else\n			return $upgrade_required;\n	}\n	else\n		return FALSE;\n}\n\nfunction adi_notes_copy($source,$destination,$backup_version=\'\') {\n// copy table: source -> destination\n	global $adi_notes_debug;\n\n	$res = safe_query(\"CREATE TABLE \".safe_pfx($destination).\" LIKE \".safe_pfx($source).\";\",$adi_notes_debug);\n	// can\'t use following because single quotes etc. in $note need to be escaped\n	// $res = $res && safe_query(\"INSERT \".safe_pfx($destination).\" SELECT * FROM \".safe_pfx($source).\";\",$adi_notes_debug);\n	$rs = safe_rows(\'*\',$source,\"1=1\",$adi_notes_debug);\n	foreach ($rs as $index => $row) {\n		extract($row);\n		if ($backup_version == \'pre_v1_0\')\n			$res = $res && safe_query(\n						\"INSERT INTO \".\n						safe_pfx($destination).\n						\" VALUES (\'\".$name.\"\',\'\".$visible.\"\',\'\".$last_mod.\"\',\'\".$last_mod_ID.\"\',\'\".$restricted_privs.\"\',\'\".$restricted_ID.\"\',\'\".doSlash($note).\"\')\",$adi_notes_debug\n						);\n		else\n			$res = $res && safe_query(\n						\"INSERT INTO \".\n						safe_pfx($destination).\n						\" VALUES (DEFAULT,\'\".$name.\"\',\'\".$type.\"\',\'\".$user.\"\',\'\".$privs.\"\',\'\".$visible.\"\',\'\".$last_mod.\"\',\'\".$last_mod_user.\"\',\'\".doSlash($note).\"\')\",$adi_notes_debug\n						);\n	}\n	return $res;\n}\n\nfunction adi_notes_rename($source,$destination) {\n// rename table: source -> destination\n	global $adi_notes_debug;\n\n	return safe_query(\"RENAME TABLE \".safe_pfx($source).\" TO \".safe_pfx($destination),$adi_notes_debug);\n}\n\nfunction adi_notes_drop($db_table) {\n// delete a table\n	global $adi_notes_debug;\n\n	return safe_query(\"DROP TABLE \".safe_pfx($db_table).\";\",$adi_notes_debug);\n}\n\nfunction adi_notes_install($vanilla=TRUE) {\n// create adi_notes table & insert note tabs that are visible by default (i.e. content) - adi_notes_tab_visibility will insert the others\n	global $adi_notes_tab_list,$adi_notes_debug;\n\n	// database table\n	$res = safe_query( // maintain quirk in CREATE TABLE - type maybe should\'ve defaulted to \'tab\'\n		\"CREATE TABLE IF NOT EXISTS \".safe_pfx(\'adi_notes\').\" (\n		`id` INT(11) NOT NULL AUTO_INCREMENT,\n		`name` VARCHAR(64) NOT NULL DEFAULT \'\',\n		`type` VARCHAR(8) NOT NULL DEFAULT \'\',\n		`user` VARCHAR(64) NULL DEFAULT \'\',\n		`privs` VARCHAR(22) NOT NULL DEFAULT \'1,2,3,4,5,6\',\n		`visible` TINYINT(1) NOT NULL DEFAULT \'0\',\n		`last_mod` DATETIME NOT NULL DEFAULT \'0000-00-00 00:00:00\',\n		`last_mod_user` VARCHAR(64) NOT NULL DEFAULT \'\',\n		`note` TEXT NOT NULL DEFAULT \'\',\n		PRIMARY KEY(id)\n		);\"\n		,$adi_notes_debug);\n\n	if ($vanilla) // populate table with empty note tab row(s)\n		foreach ($adi_notes_tab_list as $tab_name => $tab_info)\n			if ($tab_info[\'visible\'])\n				$res = $res &&\n					safe_query(\n						\"INSERT INTO \".\n						safe_pfx(\'adi_notes\').\n						\" VALUES (DEFAULT,\'\".$tab_name.\"\',\'tab\',DEFAULT,DEFAULT,1,DEFAULT,DEFAULT,DEFAULT)\"\n						,$adi_notes_debug);\n	return $res;\n}\n\nfunction adi_notes_delete_prefs() {\n// leave no trace\n	global $adi_notes_prefs,$adi_notes_debug;\n\n	$res = TRUE;\n	foreach ($adi_notes_prefs as $name => $value)\n		if (safe_row(\"*\",\'txp_prefs\',\"name = \'adi_notes_$name\'\",$adi_notes_debug))\n			$res = $res && safe_delete(\'txp_prefs\',\"name = \'adi_notes_$name\'\",$adi_notes_debug);\n	return $res;\n}\n\nfunction adi_notes_lifecycle($event,$step) {\n// a matter of life & death\n// $event:	\"plugin_lifecycle.adi_plugin\"\n// $step:	\"installed\", \"enabled\", disabled\", \"deleted\"\n// TXP 4.5: reinstall/upgrade only triggers \"installed\" event (now have to manually detect whether upgrade required)\n	global $adi_notes_debug,$adi_notes_txp450;\n\n	$result = \'?\';\n	// set upgrade flag if reinstalling in TXP 4.5+\n	$upgrade = (($step == \"installed\") && $adi_notes_txp450 && adi_notes_installed());\n	if ($step == \'enabled\')\n		$result = $upgrade = adi_notes_install();\n	else if ($step == \'deleted\') {\n		$result = adi_notes_drop(\'adi_notes\');\n		$result = $result && adi_notes_delete_prefs();\n	}\n	if ($upgrade)\n		$result = $result && adi_notes_upgrade(TRUE);\n	if ($adi_notes_debug)\n		echo \"Event=$event Step=$step Result=$result Upgrade=$upgrade\";\n}\n\nfunction adi_notes_tab_visibility() {\n// create visibility list array of note tabs from database\n	global $adi_notes_tab_list,$adi_notes_debug;\n\n	$visibility = array();\n	// get current note tab visibility from database (BEWARE user tab event = \"admin\")\n	$rs = safe_rows(\'*\',\'adi_notes\',\"type=\'tab\'\",$adi_notes_debug);\n	foreach ($rs as $index => $row) {\n		extract($row);\n		if (array_key_exists($name,$adi_notes_tab_list))\n			$visibility[$name] = $visible; // create array, indexed by name, of note tab visibility found in database\n	}\n	// compare $adi_notes_tab_list with $visibility & add any missing tabs to array\n	foreach ($adi_notes_tab_list as $tab_name => $tab_info)\n		if (!array_key_exists($tab_name,$visibility))\n			$visibility[$tab_name] = 0;\n	return $visibility;\n}\n\nfunction adi_notes_update_visibility($visibility) {\n// update database with new note tab visibility info (adding any newly visible note tabs to the mix at the same time)\n	global $adi_notes_debug;\n\n	$res = TRUE;\n	// switch all note tab visibility off (BEWARE user tab event = \"admin\")\n	$rs = safe_rows(\'*\',\'adi_notes\',\"type=\'tab\'\",$adi_notes_debug);\n	foreach ($rs as $index => $row) {\n		extract($row);\n		$res = $res && safe_update(\'adi_notes\',\"visible=0\",\"name=\'$name\' AND type = \'tab\'\",$adi_notes_debug);\n	}\n	if ($visibility) {\n		// selectively switch visibility back on (and insert row if missing)\n		foreach ($visibility as $tab_name => $visible) {\n			$found = safe_row(\'name\',\'adi_notes\',\"name=\'$tab_name\' AND type=\'tab\'\",$adi_notes_debug);\n			if ($found)\n				$res = $res && safe_update(\'adi_notes\',\"visible=$visible\",\"name=\'$tab_name\' AND type=\'tab\'\",$adi_notes_debug);\n			else\n				$res = $res && safe_insert(\'adi_notes\',\"name=\'$tab_name\', visible=$visible, type=\'tab\'\",$adi_notes_debug); // set type = \'tab\' coz it\'s not the default (historical quirk in CREATE TABLE)\n		}\n	}\n	return $res;\n}\n\nfunction adi_notes_read($note_name,$type,$note_id,$user) {\n// read specified note from database\n	global $adi_notes_debug;\n\n	$this_note = array();\n	if (empty($note_id)) { // selection of note based on context\n		$where = \"name=\'\".$note_name.\"\' AND type=\'\".$type.\"\'\";\n		$user ?\n			$where .= \" AND user=\'\".$user.\"\'\" :\n			$where .= \" AND user=\'\'\";\n		$this_note = safe_row(\"*\",\'adi_notes\',$where,$adi_notes_debug);\n	}\n	else // specific note id supplied\n		$this_note = safe_row(\"*\",\'adi_notes\',\"id=\'\".$note_id.\"\'\",$adi_notes_debug);\n	if ($this_note) {\n		if (adi_notes_prefs(\'markup\') == \'textile\') {\n			$textile = new Textile;\n			$this_note[\'formatted\'] = $textile->TextileThis($this_note[\'note\']);\n		}\n		else\n			$this_note[\'formatted\'] = $this_note[\'note\'];\n	}\n	return $this_note;\n}\n\nfunction adi_notes_tab($event,$step) {\n// display note tab\n	global $adi_notes_debug,$adi_notes_tab_list,$adi_notes_prefs;\n\n	$message = \'\';\n\n	// style\n	adi_notes_prefs(\'style\') ?\n		$class = \' class=\"adi_notes_\'.adi_notes_prefs(\'style\').\'\"\' :\n		$class = \'\';\n	adi_notes_prefs(\'width\') ?\n		$style = \'width:\'.adi_notes_prefs(\'width\').\';\' :\n		$style = \'\';\n	if (adi_notes_prefs(\'style\') == \'custom\')\n		$style .= adi_notes_prefs(\'custom_style\');\n	if ($style)\n		$style = \' style=\"\'.$style.\'\"\';\n\n	$note_name = substr($event,strlen(\"adi_notes_tab_\")); // strip \"adi_notes_tab_\" from event name\n	if (adi_notes_upgrade()) // upgrade required\n		pagetop($adi_notes_tab_list[$note_name][\'title\'].\' - \'.adi_notes_gtxt(\'adi_notes\'),\'adi_notes: <strong>\'.adi_notes_gtxt(\'adi_upgrade_required\').\'</strong>\');\n	else {\n		$adi_notes_step = gps(\'adi_notes_step\');\n		$adi_notes_id = gps(\'adi_notes_id\');\n		$adi_notes_user = gps(\'adi_notes_user\');\n		$adi_notes_note = gps(\'adi_notes_note\');\n		$adi_notes_convert = gps(\'adi_notes_convert\');\n\n		if ($adi_notes_debug)\n			print \'<p>\'.__FUNCTION__.\": event=$event, step=$step, adi_notes_step=$adi_notes_step, note_name=$note_name, adi_notes_id=$adi_notes_id, adi_notes_user=$adi_notes_user</p>\";\n\n		// one $step at a time\n		if ($adi_notes_step == \'save\') {\n			$res = adi_notes_save($note_name,\'tab\',$adi_notes_id,\'\',$adi_notes_note);\n			if ($adi_notes_note)\n				$res ? $message = adi_notes_gtxt(\'adi_note_saved\') : $message = adi_notes_gtxt(\'adi_note_save_fail\');\n			else\n				$res ? $message = adi_notes_gtxt(\'adi_note_deleted\') : $message = adi_notes_gtxt(\'adi_note_delete_fail\');\n		}\n\n		// decide what to display\n		if ($adi_notes_step == \'edit\')\n			$thing = adi_notes_edit_form($note_name,\'tab\',$adi_notes_id,\'\',$adi_notes_convert);\n		else {\n			$this_note = adi_notes_read($note_name,\'tab\',$adi_notes_id,\'\');\n			$thing = $this_note[\'formatted\'];\n			if ($this_note[\'note\'])\n				$linktext = gTxt(\'edit\');\n			else\n				$linktext = adi_notes_gtxt(\'adi_add_note\');\n		}\n\n		// output page\n		pagetop($adi_notes_tab_list[$note_name][\'title\'].\' - \'.adi_notes_gtxt(\'adi_notes\'),$message);\n		if ($thing)\n			echo tag($thing,\'div\',\' id=\"adi_notes\"\'.$class.$style);\n\n		// display add/edit link\n		if (adi_notes_has_privs(adi_notes_prefs(\'note_tab_edit_privs\')) && !($adi_notes_step == \'edit\'))\n			echo graf(\n				\'[\'.slink($event,\'&amp;adi_notes_step=edit\'.\'&amp;adi_notes_id=\'.$this_note[\'id\'].\'&amp;adi_notes_user=\',$linktext,\'small\').\']\'\n				,\' class=\"adi_notes_tab_link\"\'.$style\n			);\n	}\n}\n\nfunction adi_notes_edit_form($note_name,$type,$note_id,$note_user,$convert=\'\') {\n// display individual note edit form\n	global $event,$step,$txp_user,$timeoffset,$adi_notes_debug;\n\n	$preserve_urlvar = adi_notes_preserve_urlvar();\n	if ($note_id) { // read note from database\n		$this_note = safe_row(\"*\",\'adi_notes\',\"id=\'\".$note_id.\"\'\",$adi_notes_debug);\n		extract($this_note); // $name, $type, $user, $privs, $visible, $last_mod, $last_mod_user, $note\n		$realname = fetch(\'RealName\',\'txp_users\',\'name\',$last_mod_user);\n		$mod_msg = gTxt(\'modified_by\').\" $realname: \".date(\"H:i, d M Y\",strtotime($last_mod) + $timeoffset);\n		if ($convert == \'textile\') {\n			$textile = new Textile;\n			$note = $textile->TextileThis($note);\n		}\n	}\n	else // note doesn\'t exist yet\n		$note = \'\';\n\n	if (strpos($event,\'adi_notes_tab_\') === FALSE) { // don\'t want a footnote on a Notes tab\n		if ($note_user) {\n			$adi_notes_step = \'save_user\';\n			$title = adi_notes_gtxt(\'adi_note_editing_private\').\':\';\n		}\n		else {\n			$submit_button = gTxt(\'save\');\n			$adi_notes_step = \'save\';\n			$title = adi_notes_gtxt(\'adi_note_editing_public\').\':\';\n		}\n	}\n	else {\n		$adi_notes_step = \'save\';\n		$title = \'\';\n	}\n\n	if ($type == \'tab\')\n		$extra_class = \' adi_notes_textarea_tab\';\n	else\n		$extra_class = \'\';\n	if (adi_notes_prefs(\'tiny_mce\') != \'none\')\n		$extra_class .= \' adi_notes_mceEditor\';\n\n	if ($title)\n		$title = tag($title,\'p\',\' class=\"adi_notes_label\"\');\n	$out[] =\n		$title\n		.\'<textarea name=\"adi_notes_note\" class=\"adi_notes_textarea\'.$extra_class.\'\">\'.htmlspecialchars($note).\'</textarea>\'\n		.graf(\n			fInput(\'submit\',\'savenote\',gTxt(\'save\'),\'publish\')\n			.eInput($event)\n			.sInput($step)\n			.($preserve_urlvar ? hInput(adi_notes_preserve_urlvar(\'var\'),adi_notes_preserve_urlvar(\'value\')) : \'\') // pass on edit screen article/image ID/id\n			.hInput(\'adi_notes_step\',$adi_notes_step)\n			.($note_user ? hInput(\'adi_notes_user_note_id\',$note_id) : hInput(\'adi_notes_id\',$note_id))\n			.hInput(\'adi_notes_user\',$txp_user)\n			.(empty($note) ? \'\' : $mod_msg)\n			.(adi_notes_prefs(\'convert_link\') && !empty($note) ?\n				sp.sp.\'[\'.slink($event,\'&amp;adi_notes_step=edit\'.\'&amp;adi_notes_id=\'.$this_note[\'id\'].\'&amp;adi_notes_user=&amp;adi_notes_convert=textile\',adi_notes_gtxt(\'adi_convert_textile\'),\'small\').\']\'\n				: \'\')\n			,\' class=\"adi_notes_save\"\'\n		);\n\n	if ($adi_notes_debug)\n		$note_user ?\n		$out[] = \'<p>\'.__FUNCTION__.\": Event=$event,Step=$step,adi_notes_step=$adi_notes_step,note_name=$note_name,adi_notes_id=$note_id,note_user=$note_user,txp_user=$txp_user</p>\" :\n		$out[] = \'<p>\'.__FUNCTION__.\": Event=$event,Step=$step,adi_notes_step=$adi_notes_step,note_name=$note_name,adi_notes_user_note_id=$note_id,note_user=$note_user,txp_user=$txp_user</p>\";\n\n	if (adi_notes_prefs(\'position\') == \'header\')\n		$anchor = \'\'; // jump back to top of page after edit headnotes\n	else\n		$anchor = \'adi_notes\';\n\n	return form(implode(\'\',$out),\'\',\'\',\'post\',\'\',$anchor);\n}\n\nfunction adi_notes_save($note_name,$type,$note_id,$user,$note) {\n// save note to database\n	global $event,$txp_user,$adi_notes_debug;\n\n	$note_name = doSlash($note_name);\n	$type = doSlash($type);\n	$note_id = doSlash($note_id);\n	$user = doSlash($user);\n	$note = doSlash($note);\n	empty($note_id) ? // new note\n		$note_id = \"DEFAULT\" :\n		$note_id = \"\'\".$note_id.\"\'\";\n	empty($user) ? // blank user = public note\n		$user = \"DEFAULT\" :\n		$user = \"\'\".$user.\"\'\";\n\n	return safe_query(\n		\"REPLACE INTO \".\n		safe_pfx(\'adi_notes\').\n		\" VALUES ($note_id,\'$note_name\',\'$type\',$user,DEFAULT,\'1\',now(),\'$txp_user\',\'$note\')\",$adi_notes_debug\n		);\n}\n\nfunction adi_notes_preserve_urlvar($what=\'\') {\n// get an $event specific URL var & return various value permutations\n	global $event;\n\n	$this_var = array();\n	$var_name = \'\';\n	// define which one\n	if ($event == \'article\')\n		$var_name = \'ID\'; // upper case ID\n	if ($event == \'image\')\n		$var_name = \'id\'; // lower case id\n	if (($event == \'page\') || ($event == \'css\') || ($event == \'form\'))\n		$var_name = \'name\';\n	// get it\n	if ($var_name) {\n		$value = gps($var_name);\n		if ($value) {\n			$this_var[\'var\'] = $var_name;\n			$this_var[\'value\'] = $value;\n		}\n	}\n	// sort out what to return\n	if ($this_var) {\n		if ($what == \'var\')\n			return $this_var[\'var\'];\n		else if ($what == \'value\')\n			return $this_var[\'value\'];\n		else\n			return \'&amp;\'.$this_var[\'var\'].\'=\'.$this_var[\'value\'];\n	}\n	else\n		return \'\';\n}\n\nfunction adi_notes_embed_note($x,$position,$default) {\n// generate markup for embedded notes\n	global $event,$step,$txp_user,$adi_notes_debug,$adi_notes_prefs;\n\n	// bailout\n	if (adi_notes_upgrade()) // upgrade required\n		return \'\';\n	if (strpos($event,\'adi_notes_tab_\') !== FALSE) // don\'t want a embedded note on a Notes tab\n		return \'\';\n	if ($event == \'adi_notes_options\') // don\'t want embedded note on txpdev adi_notes options page\n		return \'\';\n\n	$adi_notes_step = gps(\'adi_notes_step\');\n	$note = gps(\'adi_notes_note\');\n	$note_id = gps(\'adi_notes_id\');\n	$note_name = $event;\n	$note_user = gps(\'adi_notes_user\');\n	$user_note_id = gps(\'adi_notes_user_note_id\');\n\n	// class\n	adi_notes_prefs(\'style\') ?\n		$class = \'adi_notes_\'.adi_notes_prefs(\'style\') :\n		$class = \'\';\n	if ($position == \'header\')\n		$class .= \' adi_notes_embed_headnote\';\n	if ($class)\n		$class = \' class=\"\'.$class.\'\"\';\n	// style\n	adi_notes_prefs(\'width\') ?\n		$style = \'width:\'.adi_notes_prefs(\'width\').\';\' :\n		$style = \'\';\n	if (adi_notes_prefs(\'style\') == \'custom\')\n		$style .= adi_notes_prefs(\'custom_style\');\n	if ($style)\n		$style = \' style=\"\'.$style.\'\"\';\n\n	$admin_note = $user_note = $edit_note = $edit_user_note = \'\';\n\n	$preamble = \'<div id=\"adi_notes\"\'.$class.$style.\'>\';\n	$postamble = \'</div>\';\n\n	if ($adi_notes_debug)\n		$debug = \'<p>\'.__FUNCTION__.\": event=$event, step=$step, adi_notes_step=$adi_notes_step, note_name=$note_name, adi_notes_id=$note_id, adi_notes_user_note_id=$user_note_id,adi_notes_user=$note_user</p>\";\n	else\n		$debug = \'\';\n\n	if ($adi_notes_step == \'edit\')\n		$edit_note = adi_notes_edit_form($note_name,\'embed\',$note_id,\'\');\n	else if ($adi_notes_step == \'save\')\n		adi_notes_save($note_name,\'embed\',$note_id,\'\',$note);\n	else if ($adi_notes_step == \'edit_user\')\n		$edit_user_note = adi_notes_edit_form($note_name,\'embed\',$user_note_id,$note_user);\n	else if ($adi_notes_step == \'save_user\')\n		adi_notes_save($note_name,\'embed\',$user_note_id,$note_user,$note);\n\n	if (!($adi_notes_step == \'edit\')) {\n		$this_note = adi_notes_read($note_name,\'embed\',\'\',\'\');\n		if (!empty($this_note)) {\n			$admin_note = $this_note[\'formatted\'];\n			$note_id = $this_note[\'id\'];\n		}\n	}\n\n	if (!($adi_notes_step == \'edit_user\')) {\n		$this_note = adi_notes_read($note_name,\'embed\',\'\',$txp_user);\n		if (!empty($this_note)) {\n			$user_note = $this_note[\'formatted\'];\n			$user_note_id = $this_note[\'id\'];\n		}\n	}\n\n	// set up what needs to be output\n	$out = $debug;\n	if (($admin_note || $edit_note) && ($user_note || $edit_user_note))\n		$hr = \'<hr class=\"adi_notes_hr\"/>\';\n	else\n		$hr =\'\';\n	if ($admin_note || $edit_note || $user_note || $edit_user_note)\n		$out .= $preamble.$admin_note.$edit_note.$hr.$user_note.$edit_user_note.$postamble;\n\n	if ($position == \'header\')\n		return $default.$out;\n	else\n		return $out; // adi_notes_embed_note_links() sorts out $default (div#end_page)\n}\n\nfunction adi_notes_embed_note_links($x, $y, $default) {\n// create edit/add links for embedded notes\n	global $event,$step,$txp_user,$adi_notes_debug;\n\n	// bailout\n	if (adi_notes_upgrade()) // upgrade required\n		return \'\';\n	if (strpos($event,\'adi_notes_tab_\') !== FALSE) // don\'t want a embedded note on a Notes tab\n		return \'\';\n	if ($event == \'adi_notes_options\') // don\'t want embedded note on txpdev adi_notes options page\n		return \'\';\n\n	// article edit & image edit screens get special treatment\n	$this_step = $step;\n	if (($event != \'article\') && ($event != \'image\'))\n		$this_step = \'\'; // too dangerous to preserve step (in edit/add links) if not article/image edit screen\n	$preserve_urlvar = adi_notes_preserve_urlvar(); // article/image edit tab id/ID\n\n	// token effort for TXP 4.4.1+\n	$txp_token = \'\';\n	if (version_compare(txp_version,\'4.4.1\',\'>=\'))\n		if (($event == \'article\') && ($step == \'create\')) // article create tab only\n			$txp_token = \'&amp;_txp_token=\'.form_token();\n\n	$adi_notes_step = gps(\'adi_notes_step\');\n	$note_name = $event;\n\n	if (adi_notes_prefs(\'position\') == \'header\')\n		$anchor = \'\'; // jump back to top of page after editing headnotes\n	else\n		$anchor = \'#adi_notes\';\n\n	$out = \'\';\n	$admin_link = $user_link = \'\';\n\n	// set up admin link\n	$admin_link = \'\';\n	if (!($adi_notes_step == \'edit\')) {\n		$this_note = adi_notes_read($note_name,\'embed\',\'\',\'\');\n		if (!empty($this_note)) {\n			$admin_note = $this_note[\'formatted\'];\n			$note_id = $this_note[\'id\'];\n		}\n		else {\n			$admin_note = \'\';\n			$note_id = \'\';\n		}\n		if ($admin_note)\n			$link_text = adi_notes_gtxt(\'adi_edit_public_note\');\n		else\n			$link_text = adi_notes_gtxt(\'adi_add_public_note\');\n		if (adi_notes_has_privs(adi_notes_prefs(\'public_note_edit_privs\')))\n			$admin_link = \'[\'.slink($event,$this_step.$preserve_urlvar.$txp_token.\'&amp;adi_notes_step=edit\'.\'&amp;adi_notes_id=\'.$note_id.$anchor,$link_text,\'small\').\']\';\n\n		if ($adi_notes_debug)\n			$out .= \'<p>\'.__FUNCTION__.\": event=$event, step=$step, this_step=$this_step, preserve_urlvar=$preserve_urlvar, txp_token=$txp_token, adi_notes_step=$adi_notes_step, note_name=$note_name, adi_notes_id=$note_id</p>\";\n	}\n\n	// set up user link\n	$user_link = \'\';\n	if (!($adi_notes_step == \'edit_user\')) {\n		$this_note = adi_notes_read($note_name,\'embed\',\'\',$txp_user);\n		if (!empty($this_note)) {\n			$user_note = $this_note[\'formatted\'];\n			$user_note_id = $this_note[\'id\'];\n		}\n		else {\n			$user_note = \'\';\n			$user_note_id = \'\';\n		}\n		if ($user_note) {\n			$link_text = adi_notes_gtxt(\'adi_edit_private_note\');\n			$note_user = $this_note[\'user\'];\n		}\n		else {\n			$link_text = adi_notes_gtxt(\'adi_add_private_note\');\n			$note_user = $txp_user;\n		}\n		$user_link = \' [\'.slink($event,$this_step.$preserve_urlvar.$txp_token.\'&amp;adi_notes_step=edit_user\'.\'&amp;adi_notes_user_note_id=\'.$user_note_id.\'&amp;adi_notes_user=\'.$note_user.$anchor,$link_text,\'small\').\']\';\n\n		if ($adi_notes_debug)\n			$out .= \'<p>\'.__FUNCTION__.\": event=$event, step=$step, this_step=$this_step, preserve_urlvar=$preserve_urlvar, txp_token=$txp_token, adi_notes_step=$adi_notes_step, note_name=$note_name, adi_notes_user_note_id=$user_note_id, adi_notes_user=$note_user</p>\";\n	}\n\n	$out .= graf($admin_link.$user_link,\' class=\"adi_notes_embed_links\"\');\n\n	return $out.$default;\n}\n\nfunction adi_notes_gtxt($phrase,$atts=array()) {\n// will check installed language strings before embedded English strings - to pick up Textpack\n// - for TXP standard strings gTxt() & adi_notes_gtxt() are functionally equivalent\n	global $adi_notes_gtxt;\n\n	if (gTxt($phrase, $atts) == $phrase) // no TXP translation found\n		if (array_key_exists($phrase,$adi_notes_gtxt)) // adi translation found\n			return $adi_notes_gtxt[$phrase];\n		else // last resort\n			return $phrase;\n	else // TXP translation\n		return gTxt($phrase,$atts);\n}\n','af7eaec37f3d8790c09aad60c40330d1',3,5,3);

/*!40000 ALTER TABLE `txp_plugin` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table txp_prefs
# ------------------------------------------------------------

CREATE TABLE `txp_prefs` (
  `prefs_id` int(11) NOT NULL DEFAULT '1',
  `name` varchar(255) NOT NULL DEFAULT '',
  `val` text NOT NULL,
  `type` smallint(5) unsigned NOT NULL DEFAULT '2',
  `event` varchar(12) NOT NULL DEFAULT 'publish',
  `html` varchar(64) NOT NULL DEFAULT 'text_input',
  `position` smallint(5) unsigned NOT NULL DEFAULT '0',
  `user_name` varchar(64) NOT NULL DEFAULT '',
  UNIQUE KEY `prefs_idx` (`prefs_id`,`name`,`user_name`),
  KEY `name` (`name`),
  KEY `user_name` (`user_name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

LOCK TABLES `txp_prefs` WRITE;
/*!40000 ALTER TABLE `txp_prefs` DISABLE KEYS */;

INSERT INTO `txp_prefs` (`prefs_id`, `name`, `val`, `type`, `event`, `html`, `position`, `user_name`)
VALUES
	(1,'prefs_id','1',2,'publish','text_input',0,''),
	(1,'sitename','Memento',0,'publish','text_input',20,''),
	(1,'siteurl','localhost/memento_github/memento',0,'publish','text_input',40,''),
	(1,'site_slogan','Suivi et gestion de projets',0,'publish','text_input',30,''),
	(1,'language','fr-fr',2,'publish','languages',40,''),
	(1,'url_mode','1',2,'publish','text_input',0,''),
	(1,'timeoffset','0',2,'publish','text_input',0,''),
	(1,'comments_on_default','1',0,'comments','yesnoradio',20,''),
	(1,'comments_default_invite','Laisser un commentaire',0,'comments','text_input',40,''),
	(1,'comments_mode','0',0,'comments','commentmode',120,''),
	(1,'comments_disabled_after','0',0,'comments','weeks',80,''),
	(1,'use_textile','1',0,'publish','pref_text',200,''),
	(1,'ping_weblogsdotcom','0',1,'publish','yesnoradio',160,''),
	(1,'rss_how_many','10',1,'feeds','text_input',40,''),
	(1,'logging','all',0,'publish','logging',220,''),
	(1,'use_comments','1',0,'publish','yesnoradio',240,''),
	(1,'use_categories','1',2,'publish','text_input',0,''),
	(1,'use_sections','1',2,'publish','text_input',0,''),
	(1,'send_lastmod','1',1,'publish','yesnoradio',120,''),
	(1,'path_from_root','/',2,'publish','text_input',0,''),
	(1,'lastmod','2016-04-29 15:19:20',2,'publish','text_input',0,''),
	(1,'comments_dateformat','%x %H:%M',0,'comments','dateformats',140,''),
	(1,'dateformat','%e.%m.%y',0,'publish','dateformats',140,''),
	(1,'archive_dateformat','%e.%m.%y',0,'publish','dateformats',160,''),
	(1,'comments_moderate','0',0,'comments','yesnoradio',60,''),
	(1,'img_dir','images',1,'admin','text_input',20,''),
	(1,'comments_disallow_images','0',1,'comments','yesnoradio',120,''),
	(1,'comments_sendmail','1',0,'comments','commentsendmail',180,''),
	(1,'file_max_upload_size','2000000',1,'admin','text_input',60,''),
	(1,'path_to_site','/Applications/MAMP/htdocs/memento_github/memento',2,'publish','text_input',0,''),
	(1,'timezone_key','',2,'publish','textinput',0,''),
	(1,'default_event','article',1,'admin','default_event',150,''),
	(1,'auto_dst','0',0,'publish','yesnoradio',115,''),
	(1,'permlink_mode','id_title',0,'publish','permlinkmodes',180,''),
	(1,'comments_are_ol','1',0,'comments','yesnoradio',160,''),
	(1,'is_dst','0',0,'publish','is_dst',120,''),
	(1,'locale','fr_FR.UTF-8',2,'publish','text_input',0,''),
	(1,'tempdir','/Applications/MAMP/htdocs/memento_github/memento/textpattern/tmp/',1,'admin','text_input',80,''),
	(1,'file_base_path','/Applications/MAMP/htdocs/memento_github/memento/files/',1,'admin','text_input',40,''),
	(1,'blog_uid','5b843b8f62753efbbc5e9858b4281d35',2,'publish','text_input',0,''),
	(1,'blog_mail_uid','thomas@sacripant.fr',2,'publish','text_input',0,''),
	(1,'blog_time_uid','2005',2,'publish','text_input',0,''),
	(1,'allow_page_php_scripting','1',1,'publish','yesnoradio',300,''),
	(1,'allow_article_php_scripting','0',1,'publish','yesnoradio',320,''),
	(1,'default_section','projet',2,'section','text_input',0,''),
	(1,'comments_use_fat_textile','1',1,'comments','yesnoradio',130,''),
	(1,'show_article_category_count','1',2,'category','yesnoradio',0,''),
	(1,'show_comment_count_in_feed','1',1,'feeds','yesnoradio',60,''),
	(1,'syndicate_body_or_excerpt','0',1,'feeds','yesnoradio',20,''),
	(1,'include_email_atom','1',1,'feeds','yesnoradio',80,''),
	(1,'comment_means_site_updated','1',1,'comments','yesnoradio',160,''),
	(1,'never_display_email','0',1,'comments','yesnoradio',60,''),
	(1,'comments_require_name','0',1,'comments','yesnoradio',20,''),
	(1,'comments_require_email','0',1,'comments','yesnoradio',40,''),
	(1,'articles_use_excerpts','0',1,'publish','yesnoradio',40,''),
	(1,'allow_form_override','0',1,'publish','yesnoradio',60,''),
	(1,'attach_titles_to_permalinks','1',1,'publish','yesnoradio',80,''),
	(1,'permalink_title_format','1',1,'publish','yesnoradio',100,''),
	(1,'expire_logs_after','1',1,'publish','text_input',200,''),
	(1,'use_plugins','1',1,'publish','yesnoradio',260,''),
	(1,'custom_1_set','Projet',1,'custom','custom-script',1,''),
	(1,'custom_2_set','Etat',1,'custom','select',2,''),
	(1,'custom_3_set','Temps_prevu',1,'custom','text_input',3,''),
	(1,'custom_4_set','Temps_reel',1,'custom','text_input',4,''),
	(1,'custom_5_set','Taux_horaire',1,'custom','text_input',5,''),
	(1,'custom_6_set','Devise',1,'custom','select',6,''),
	(1,'custom_7_set','repartition',1,'custom','textarea',7,''),
	(1,'custom_8_set','taxe',1,'custom','select',8,''),
	(1,'custom_9_set','Parent',1,'custom','text_input',9,''),
	(1,'custom_10_set','Num-date_Devis',1,'custom','text_input',10,''),
	(1,'ping_textpattern_com','0',1,'publish','yesnoradio',180,''),
	(1,'use_dns','1',1,'publish','yesnoradio',220,''),
	(1,'admin_side_plugins','1',1,'publish','yesnoradio',280,''),
	(1,'comment_nofollow','1',1,'comments','yesnoradio',80,''),
	(1,'use_mail_on_feeds_id','0',1,'feeds','yesnoradio',100,''),
	(1,'max_url_len','200',1,'publish','text_input',240,''),
	(1,'spam_blacklists','',1,'comments','text_input',140,''),
	(1,'override_emailcharset','0',1,'admin','yesnoradio',120,''),
	(1,'production_status','debug',0,'publish','prod_levels',80,''),
	(1,'comments_auto_append','0',0,'comments','yesnoradio',100,''),
	(1,'dbupdatetime','1487346464',2,'publish','text_input',0,''),
	(1,'version','4.5.7',2,'publish','text_input',0,''),
	(1,'gmtoffset','+0',0,'publish','gmtoffset_select',100,''),
	(1,'plugin_cache_dir','',1,'admin','text_input',100,''),
	(1,'textile_updated','1',2,'publish','text_input',0,''),
	(1,'title_no_widow','1',1,'publish','yesnoradio',20,''),
	(1,'lastmod_keepalive','0',1,'publish','yesnoradio',140,''),
	(1,'enable_xmlrpc_server','0',1,'admin','yesnoradio',130,''),
	(1,'smtp_from','',1,'admin','text_input',110,''),
	(1,'theme_name','hive',1,'admin','themename',160,''),
	(1,'publish_expired_articles','1',1,'publish','yesnoradio',130,''),
	(1,'searchable_article_fields','Title, Body',2,'publish','text_input',0,''),
	(1,'admin_sort_column','name',2,'admin','',0,'admin'),
	(1,'admin_sort_dir','asc',2,'admin','',0,'admin'),
	(1,'max_custom_fields','11',2,'publish','text_input',0,''),
	(1,'log_sort_column','time',2,'log','',0,'admin'),
	(1,'log_sort_dir','desc',2,'log','',0,'admin'),
	(1,'article_sort_column','id',2,'list','',0,'admin'),
	(1,'article_sort_dir','desc',2,'list','',0,'admin'),
	(1,'image_sort_column','id',2,'image','',0,'admin'),
	(1,'image_sort_dir','desc',2,'image','',0,'admin'),
	(1,'pane_article_advanced_visible','1',2,'article','yesnoradio',0,'admin'),
	(1,'link_sort_column','name',2,'link','',0,'admin'),
	(1,'link_sort_dir','asc',2,'link','',0,'admin'),
	(1,'file_sort_column','id',2,'file','',0,'admin'),
	(1,'file_sort_dir','asc',2,'file','',0,'admin'),
	(1,'discuss_sort_column','date',2,'discuss','',0,'admin'),
	(1,'discuss_sort_dir','desc',2,'discuss','',0,'admin'),
	(1,'plugin_sort_column','author',2,'plugin','',0,'admin'),
	(1,'plugin_sort_dir','asc',2,'plugin','',0,'admin'),
	(1,'pane_article_image_visible','1',2,'article','yesnoradio',0,'admin'),
	(1,'pane_article_more_visible','1',2,'article','yesnoradio',0,'admin'),
	(1,'values_ordering','custom',10,'glz_custom_f','text_input',0,''),
	(1,'multiselect_size','5',10,'glz_custom_f','text_input',0,''),
	(1,'datepicker_url','http://localhost/memento_github/memento/plugins/glz_custom_fields/jquery.datePicker',10,'glz_custom_f','text_input',0,''),
	(1,'datepicker_format','dd/mm/yyyy',10,'glz_custom_f','text_input',0,''),
	(1,'datepicker_first_day','1',10,'glz_custom_f','text_input',0,''),
	(1,'datepicker_start_date','01/01/1990',10,'glz_custom_f','text_input',0,''),
	(1,'timepicker_url','http://localhost/memento_github/memento/plugins/glz_custom_fields/jquery.timePicker',10,'glz_custom_f','text_input',0,''),
	(1,'timepicker_start_time','00:00',10,'glz_custom_f','text_input',0,''),
	(1,'timepicker_end_time','23:30',10,'glz_custom_f','text_input',0,''),
	(1,'timepicker_step','30',10,'glz_custom_f','text_input',0,''),
	(1,'timepicker_show_24','true',10,'glz_custom_f','text_input',0,''),
	(1,'custom_scripts_path','/Applications/MAMP/htdocs/memento_github/memento/plugins/glz_custom_fields',10,'glz_custom_f','text_input',0,''),
	(1,'livestats','',10,'glz_custom_f','text_input',0,''),
	(1,'pane_article_custom_field_visible','1',2,'article','yesnoradio',0,'admin'),
	(1,'pane_article_meta_visible','1',2,'article','yesnoradio',0,'admin'),
	(1,'pane_article_recent_visible','0',2,'article','yesnoradio',0,'admin'),
	(1,'rah_external_output_version','1.0',2,'rah_exo','',0,''),
	(1,'article_list_pageby','100',2,'list','text_input',0,'admin'),
	(1,'bot_wtc_script','',2,'bot_wtc_','text_input',0,''),
	(1,'bot_wtc_static_sections','printfacture',2,'bot_wtc_','text_input',0,''),
	(1,'smd_bio_meta_sort_column','name',2,'smd_bio','',0,'admin'),
	(1,'smd_bio_meta_sort_dir','asc',2,'smd_bio','',0,'admin'),
	(1,'pane_smd_bio_coltype_visible','1',2,'smd_bio','yesnoradio',0,'admin'),
	(1,'doctype','html5',0,'publish','doctypes',190,''),
	(1,'publisher_email','',1,'admin','text_input',115,''),
	(1,'pane_article_textile_help_visible','0',2,'article','yesnoradio',0,'admin'),
	(1,'pane_article_comments_visible','1',2,'article','yesnoradio',0,'admin'),
	(1,'pane_article_dates_visible','1',2,'article','yesnoradio',0,'admin'),
	(1,'section_sort_column','time',2,'section','',0,'admin'),
	(1,'section_sort_dir','desc',2,'section','',0,'admin'),
	(1,'migrated','1',0,'glz_custom_f','text_input',0,''),
	(1,'smd_wu_look_in','a:2:{i:0;s:5:\"pages\";i:1;s:5:\"forms\";}',2,'smd_wu','text_input',0,''),
	(1,'adi_notes_position','footer',2,'adi_notes_ad','text_input',0,''),
	(1,'adi_notes_note_tab_edit_privs','1,2',2,'adi_notes_ad','text_input',0,''),
	(1,'adi_notes_public_note_edit_privs','1,2',2,'adi_notes_ad','text_input',0,''),
	(1,'adi_notes_style','sticky',2,'adi_notes_ad','text_input',0,''),
	(1,'adi_notes_custom_style','margin:1em auto 0; padding:1em; border:1px solid; border-color:#e3d8c3 #c3b8a3 #c3b8a3 #e3d8c3; background-color:#ffffcc; color:#202020',2,'adi_notes_ad','text_input',0,''),
	(1,'adi_notes_width','width:600px; max-width:600px;',2,'adi_notes_ad','text_input',0,''),
	(1,'adi_notes_tiny_mce','none',2,'adi_notes_ad','text_input',0,''),
	(1,'adi_notes_tiny_mce_dir_path','../scripts/tiny_mce',2,'adi_notes_ad','text_input',0,''),
	(1,'adi_notes_convert_link','0',2,'adi_notes_ad','text_input',0,''),
	(1,'adi_notes_markup','textile',2,'adi_notes_ad','text_input',0,''),
	(1,'custom_11_set','total-HT',1,'custom','text_input',11,''),
	(1,'last_update_check','a:2:{s:3:\"msg\";s:201:\"Une nouvelle version de Textpattern 4.6.2 <a href=\"http://textpattern.com/download\" rel=\"external\" title=\"Accès au téléchargement sur le site Textpattern CMS\">est disponible en téléchargement</a>.\";s:4:\"when\";i:1487346479;}',2,'publish','text_input',0,'');

/*!40000 ALTER TABLE `txp_prefs` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table txp_section
# ------------------------------------------------------------

CREATE TABLE `txp_section` (
  `name` varchar(128) NOT NULL DEFAULT '',
  `page` varchar(128) NOT NULL DEFAULT '',
  `css` varchar(128) NOT NULL DEFAULT '',
  `in_rss` int(2) NOT NULL DEFAULT '1',
  `on_frontpage` int(2) NOT NULL DEFAULT '1',
  `searchable` int(2) NOT NULL DEFAULT '1',
  `title` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 PACK_KEYS=1;

LOCK TABLES `txp_section` WRITE;
/*!40000 ALTER TABLE `txp_section` DISABLE KEYS */;

INSERT INTO `txp_section` (`name`, `page`, `css`, `in_rss`, `on_frontpage`, `searchable`, `title`)
VALUES
	('default','default','default',1,1,1,'default'),
	('projet','default','default',1,1,1,'Projet'),
	('todo','default','default',1,0,1,'ToDo'),
	('printfacture','printfacture','default',0,0,0,'printfacture'),
	('search','default','default',0,0,0,'Search');

/*!40000 ALTER TABLE `txp_section` ENABLE KEYS */;
UNLOCK TABLES;


# Affichage de la table txp_users
# ------------------------------------------------------------

CREATE TABLE `txp_users` (
  `user_id` int(4) NOT NULL AUTO_INCREMENT,
  `name` varchar(64) NOT NULL DEFAULT '',
  `pass` varchar(128) NOT NULL,
  `RealName` varchar(255) NOT NULL DEFAULT '',
  `email` varchar(254) NOT NULL DEFAULT '',
  `privs` tinyint(2) NOT NULL DEFAULT '1',
  `last_access` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `nonce` varchar(64) NOT NULL DEFAULT '',
  PRIMARY KEY (`user_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 PACK_KEYS=1;

LOCK TABLES `txp_users` WRITE;
/*!40000 ALTER TABLE `txp_users` DISABLE KEYS */;

INSERT INTO `txp_users` (`user_id`, `name`, `pass`, `RealName`, `email`, `privs`, `last_access`, `nonce`)
VALUES
	(1,'admin','$P$B/TjLZIewIbPkAYQDMHRDhoL3goiW1/','compte defaut','admin@admin.com',1,'2017-02-17 16:47:44','695e026ce050f06887040eb786a0f8b8'),
	(2,'client','$P$BqvG/9Wp7FVY0fpdH4NurJify2RCwM1','Votre client','client@client.com',0,'0000-00-00 00:00:00','071fae6120558943fd3d41a0ccf0be2b');

/*!40000 ALTER TABLE `txp_users` ENABLE KEYS */;
UNLOCK TABLES;



/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
